{"title":"浅析JS前端逆向","uid":"d000c68c0537d4a38f7fe3b7716c4e6d","slug":"浅析JS前端逆向","date":"2023-11-28T16:20:30.000Z","updated":"2024-02-14T08:09:02.000Z","comments":true,"path":"api/articles/浅析JS前端逆向.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303141525110.png","content":"<h1 id=\"声明\"><a href=\"#声明\" class=\"headerlink\" title=\"声明\"></a>声明</h1><p>文章首发于合天网安实验室<a href=\"https://mp.weixin.qq.com/s/uwjSWtItFn2_Wfi570ThlQ\">https://mp.weixin.qq.com/s/uwjSWtItFn2_Wfi570ThlQ</a></p>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>js逆向一直没有相关了解，虽然目前渗透遇见的不是很多，大多数遇见的要么不加密，要么无法实现其加密流程，不过最近看到了一个较为简单的站点正好能够逆向出来，就做了简单记录。本文旨在介绍js逆向的一些基础思路，希望能对初学js前端逆向的师傅有所帮助。</p>\n<h1 id=\"JS定位\"><a href=\"#JS定位\" class=\"headerlink\" title=\"JS定位\"></a>JS定位</h1><p>在我们寻找JS源代码时，如果直接翻看全部的js文件以来寻找自己想要的一部分，无疑是复杂繁琐的，且工作量巨大，有点类似大海捞针，因此这里我们需要借助一些巧妙的办法来快速定位某标签的js语句，具体方法如下。</p>\n<h2 id=\"元素审查定位\"><a href=\"#元素审查定位\" class=\"headerlink\" title=\"元素审查定位\"></a>元素审查定位</h2><p>当我们不确定某处的js文件位置时，可以使用F12，点击元素审查，然后点击登录处，观察事件监听器</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605007.png\"></p>\n<p>此时可以观察到<code>login.js</code>文件出现，接下来就可以去对应文件下继续深入。</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605559.png\" alt=\"image-20231128234811191\"></p>\n<p>发现check函数，寻找check函数</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605581.png\" alt=\"image-20231128234845796\"></p>\n<p>此时发现加密是<code>secret</code>函数，再继续跟secert函数就可以了解其整体流程。</p>\n<h2 id=\"全局搜索法\"><a href=\"#全局搜索法\" class=\"headerlink\" title=\"全局搜索法\"></a>全局搜索法</h2><p>像我们常见的登录框，他们要提交的加密参数一般名为<code>password</code>，或者加密为<code>Crypto</code>加密，因此我们可以全局搜索此类关键字，进而寻找我们需要找的关键加密js语句，进而实现js逆向。</p>\n<p>具体操作也很简单，这里简单举个例子。</p>\n<p>首先打开F12，随便点击一个元素，而后<code>ctrl+shift+f</code>，接下来全局搜索关键词即可</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605618.png\"></p>\n<p>此时含关键词的语句映入眼帘，像一些css文件中的直接略过即可，而后即可找到真正生成密码的地方</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605747.png\" alt=\"image-20231128235456040\"></p>\n<p>接下来便可以深入<code>secret</code>，了解加密方法。</p>\n<h2 id=\"Onclick定位\"><a href=\"#Onclick定位\" class=\"headerlink\" title=\"Onclick定位\"></a>Onclick定位</h2><p>像一些登录点是存在着<code>onclick</code>属性的，如若该属性值是js函数，那么就极有可能是我们要寻找的js加密函数，而后进行寻找相关函数即可。</p>\n<p>注:图参考自<code>cony1</code>大师傅。</p>\n<p>以<code>cony1</code>大师傅的图为例进行简单讲解</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605547.png\" alt=\"图1-通过onClick属性定位\"></p>\n<p>这里发现<code>ssologin</code>函数，接下来寻找该函数</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605202.png\" alt=\"图2-通过onClick定位到的方法\"></p>\n<p>此时即可发现相关js语句。</p>\n<h1 id=\"实战\"><a href=\"#实战\" class=\"headerlink\" title=\"实战\"></a>实战</h1><h2 id=\"某登录站点js逆向\"><a href=\"#某登录站点js逆向\" class=\"headerlink\" title=\"某登录站点js逆向\"></a>某登录站点js逆向</h2><p>找到一个登录站点，随意输入</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605357.png\" alt=\"image-20231128005329129\"></p>\n<p>发现用户名和密码均被加密，接下来ctrl+shift+f，全局搜索password字段，寻找加密点</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605394.png\" alt=\"image-20231128005449247\"></p>\n<p>第一个这里明显是输入框的password，且是注释，肯定不是这里，接着寻找，后来到</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605442.png\" alt=\"image-20231128005609606\"></p>\n<p>整体代码如下</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">function <span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//这里将用户名，密码加密</span>\n    <span class=\"token keyword\">var</span> code <span class=\"token operator\">=</span> 'letu<span class=\"token annotation punctuation\">@levle</span>'<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> yname <span class=\"token operator\">=</span> $<span class=\"token punctuation\">(</span><span class=\"token string\">\"#yname\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>yname <span class=\"token operator\">==</span> ''<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"用户名不能为空\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> newName <span class=\"token operator\">=</span> <span class=\"token function\">secret</span><span class=\"token punctuation\">(</span>yname<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        $<span class=\"token punctuation\">(</span><span class=\"token string\">\"#xname\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span>newName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">var</span> ypassword <span class=\"token operator\">=</span> $<span class=\"token punctuation\">(</span><span class=\"token string\">\"#ypassword\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ypassword <span class=\"token operator\">==</span> ''<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"密码不能为空\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> newPassword <span class=\"token operator\">=</span> <span class=\"token function\">secret</span><span class=\"token punctuation\">(</span>ypassword<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        $<span class=\"token punctuation\">(</span><span class=\"token string\">\"#xpassword\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">val</span><span class=\"token punctuation\">(</span>newPassword<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>可以看出js代码逻辑并不难，首先提取出<code>ypassword</code>标签下的内容，而后验证其是否为空，若不为空，则对其进行secret函数处理，很明显，这个secret函数就是加密函数，所以我们接下来跟进此加密函数</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605610.png\" alt=\"image-20231128005806351\"></p>\n<p>这里直接给出了iv和key，所以接下来打断点调试就行了，而后打上断点</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605957.png\" alt=\"image-20231128005848675\"></p>\n<p>接下来开始随便输入密码提交，而后来到调试界面</p>\n<p>选中<code>code.substring(16)</code>得到key<code>f3991777154f4bd0</code></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605037.png\" alt=\"image-20231128010001183\"></p>\n<p>选中<code>code.substring(0,16)</code>得到偏移量<code>ace43e65106a77f6</code></p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605190.png\" alt=\"image-20231128010041413\"></p>\n<p>下方也给出了Padding和mode分别是<code>Pkcs7</code>和<code>CBC</code>，所以接下来直接解密即可，在网络中我们可以看到提交后加密的账密</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605339.png\" alt=\"image-20231128010129402\"></p>\n<p>拿去随便找个AES解密网站</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605249.png\" alt=\"image-20231128010305797\"></p>\n<p>与所输入的进行比对</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605507.png\" alt=\"image-20231128010334911\"></p>\n<p>成功得到正确结果</p>\n<p>接下来编写脚本即可，直接将字典的内容全部进行加密，而后放入burp进行爆破</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> base64\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Hash <span class=\"token keyword\">import</span> MD5\n<span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>Padding <span class=\"token keyword\">import</span> pad\n\n<span class=\"token comment\">#填入AES的key和iv</span>\nkey <span class=\"token operator\">=</span> <span class=\"token string\">'f3991777154f4bd0'</span>\niv <span class=\"token operator\">=</span> <span class=\"token string\">'ace43e65106a77f6'</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">AES_Encrypt</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">global</span> key\n    <span class=\"token keyword\">global</span> iv\n    cipher <span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> AES<span class=\"token punctuation\">.</span>MODE_CBC<span class=\"token punctuation\">,</span> iv<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    paddingdata <span class=\"token operator\">=</span> pad<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>AES<span class=\"token punctuation\">.</span>block_size<span class=\"token punctuation\">)</span>\n    encrypted <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span>encrypt<span class=\"token punctuation\">(</span>paddingdata<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">#print(base64.b64encode(encrypted).decode())</span>\n    <span class=\"token keyword\">return</span> base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>encrypted<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\npassword <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'password.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">:</span>\n        password<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'password_aes.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> w<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> password<span class=\"token punctuation\">:</span>\n        data <span class=\"token operator\">=</span> AES_Encrypt<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'\\n'</span>\n        w<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605707.png\" alt=\"image-20231128155605940\"></p>\n<p>数据长度明显与错误时不一致，不过这里也未成功进入后台，有二次验证，Google验证码无从下手，故点到为止。</p>\n<h2 id=\"某道js逆向\"><a href=\"#某道js逆向\" class=\"headerlink\" title=\"某道js逆向\"></a>某道js逆向</h2><p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605803.png\" alt=\"image-20231128211913019\"></p>\n<p>接下来进行抓包</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605854.png\" alt=\"image-20231128212052117\"></p>\n<p>这里我们首先注意一下每次不同点在哪，以此为入口点来进行下去，因此我们多次刷新界面抓包，同样的参数观察包的参数哪个值是不同的</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605901.png\" alt=\"image-20231128213215702\"></p>\n<p>从上图可以看出<code>sign</code>和<code>mysticTime</code>是变化的，因此接下来针对这两个变量进行深入，如果我们能够控制这两个变量，那么我们就可以实现直接脚本请求得到翻译对应的语句。</p>\n<p>所以接下来首先从<code>sign</code>开始，我们首先进行F12，而后输入<code>ctrl+shift+f</code>全局搜索关键词</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605066.png\" alt=\"image-20231128213435952\"></p>\n<p>这里可以发现出现了js中含有<code>sign</code>关键字的，但像这个<code>inpage.js</code>他明显不是我们要找的js语句，因此继续往下寻找(输入<code>sign:</code>更容易找到对应函数)。这里我们找到如下语句</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605181.png\" alt=\"image-20231128213728883\"></p>\n<p>相关代码如下</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> u <span class=\"token operator\">=</span> <span class=\"token string\">\"fanyideskweb\"</span>\n              <span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> <span class=\"token string\">\"webfanyi\"</span>\n              <span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> <span class=\"token string\">\"client,mysticTime,product\"</span>\n              <span class=\"token punctuation\">,</span> p <span class=\"token operator\">=</span> <span class=\"token string\">\"1.0.0\"</span>\n              <span class=\"token punctuation\">,</span> g <span class=\"token operator\">=</span> <span class=\"token string\">\"web\"</span>\n              <span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> <span class=\"token string\">\"fanyi.web\"</span>\n              <span class=\"token punctuation\">,</span> <span class=\"token constant\">A</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n              <span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n              <span class=\"token punctuation\">,</span> f <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n              <span class=\"token punctuation\">,</span> v <span class=\"token operator\">=</span> <span class=\"token string\">\"wifi\"</span>\n              <span class=\"token punctuation\">,</span> <span class=\"token constant\">O</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">function</span> <span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">createHash</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"md5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">function</span> <span class=\"token function\">j</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">createHash</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"md5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">function</span> <span class=\"token function\">k</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">j</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">client=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>u<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;mysticTime=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>e<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;product=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>d<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token string\">&amp;key=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">$&#123;</span>t<span class=\"token interpolation-punctuation punctuation\">&#125;</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">function</span> <span class=\"token constant\">E</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token punctuation\">,</span> t</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">const</span> o <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token literal-property property\">sign</span><span class=\"token operator\">:</span> <span class=\"token function\">k</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">client</span><span class=\"token operator\">:</span> u<span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">product</span><span class=\"token operator\">:</span> d<span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">appVersion</span><span class=\"token operator\">:</span> p<span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">vendor</span><span class=\"token operator\">:</span> g<span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">pointParam</span><span class=\"token operator\">:</span> m<span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">mysticTime</span><span class=\"token operator\">:</span> o<span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">keyfrom</span><span class=\"token operator\">:</span> b<span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">mid</span><span class=\"token operator\">:</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">screen</span><span class=\"token operator\">:</span> h<span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">model</span><span class=\"token operator\">:</span> f<span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">network</span><span class=\"token operator\">:</span> v<span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">abtest</span><span class=\"token operator\">:</span> <span class=\"token constant\">O</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token literal-property property\">yduuid</span><span class=\"token operator\">:</span> t <span class=\"token operator\">||</span> <span class=\"token string\">\"abcdefg\"</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里可以看到<code>sign</code>是由函数<code>k</code>构成的，同时注意到这里也给出了k的参数，k是由<code>client=fanyideskweb&amp;mysticTime=$&#123;e&#125;&amp;product=webfanyi&amp;key=$&#123;t&#125;</code>所组成的，此时再看函数E，o是时间戳，e这里未知，这时候该怎么办呢，先看看他是不是固定值，当自己不确定在哪下断点调试时，就在附近的几个可疑点都打下断点，观察e的值即可</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605385.png\" alt=\"image-20231128232434494\">经观察，这里的e值是固定的，即<code>fsdsogkndfokasodnaso</code>，此时<code>k(o,e)</code>中的参数我们都了解了，但我们注意到k函数中是有<code>j</code>在外包裹的，因此我们需要对j函数进行相关了解</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">j</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">createHash</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"md5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hex\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>明显的md5加密，因此到这里也就都清楚了。</p>\n<p>当我们进行请求时，首先获取当前的时间戳，此作为参数之一，同时与client等参数值组合，进行md5加密，就组成了sign的值。对于<code>mysticTime</code>这个参数，我们从<code>k</code>函数也了解到它其实就是时间戳，因此两个变化的参数到目前就都了解其生成过程了。</p>\n<p>接下来尝试写python脚本</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> hashlib\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> requests\n\nrequests<span class=\"token punctuation\">.</span>packages<span class=\"token punctuation\">.</span>urllib3<span class=\"token punctuation\">.</span>disable_warnings<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nheaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"Content-Length\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"312\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Pragma\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"no-cache\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Cache-Control\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"no-cache\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Sec-Ch-Ua\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\\\"Google Chrome\\\";v=\\\"119\\\", \\\"Chromium\\\";v=\\\"119\\\", \\\"Not?A_Brand\\\";v=\\\"24\\\"\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Accept\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"application/json, text/plain, */*\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"application/x-www-form-urlencoded\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Sec-Ch-Ua-Mobile\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"?0\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"User-Agent\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Sec-Ch-Ua-Platform\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\\\"Windows\\\"\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Origin\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://fanyi.youdao.com\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Sec-Fetch-Site\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"same-site\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Sec-Fetch-Mode\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"cors\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Sec-Fetch-Dest\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"empty\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Referer\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://fanyi.youdao.com/\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"Accept-Encoding\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"gzip, deflate\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\nCookie <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token string\">\"OUTFOX_SEARCH_USER_ID\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"239978291@10.130.108.41\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">\"OUTFOX_SEARCH_USER_ID_NCOO\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"520521807.43848985\"</span>\n<span class=\"token punctuation\">&#125;</span>\nurl <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\nword <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请输入翻译内容:\"</span><span class=\"token punctuation\">)</span>\nlocaltime <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ncanshu <span class=\"token operator\">=</span> <span class=\"token string\">\"client=fanyideskweb&amp;mysticTime=&#123;&#125;&amp;product=webfanyi&amp;key=fsdsogkndfokasodnaso\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>localtime<span class=\"token punctuation\">)</span>\nsign <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span>canshu<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"i\"</span><span class=\"token punctuation\">:</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>word<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"from\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"auto\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"to\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"dictResult\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"true\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"keyid\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"webfanyi\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"sign\"</span><span class=\"token punctuation\">:</span> sign<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"client\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"fanyideskweb\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"product\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"webfanyi\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"appVersion\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"vendor\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"web\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"pointParam\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"client,mysticTime,product\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"mysticTime\"</span><span class=\"token punctuation\">:</span> localtime<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"keyfrom\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"fanyi.web\"</span>\n<span class=\"token punctuation\">&#125;</span>\nres <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span>headers<span class=\"token operator\">=</span>headers<span class=\"token punctuation\">,</span>cookies<span class=\"token operator\">=</span>Cookie<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span>verify<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141605412.png\" alt=\"image-20231128232510212\"></p>\n<p>此时便得到了加密数据，解密同理，不再阐述。</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://www.freebuf.com/articles/web/381666.html\">https://www.freebuf.com/articles/web/381666.html</a></p>\n<p><a href=\"https://gv7.me/articles/2018/fast-locate-the-front-end-encryption-method/\">https://gv7.me/articles/2018/fast-locate-the-front-end-encryption-method/</a></p>\n<p><a href=\"https://www.cnblogs.com/wxd501/p/17070184.html\">https://www.cnblogs.com/wxd501/p/17070184.html</a></p>\n","feature":true,"text":"声明文章首发于合天网安实验室https://mp.weixin.qq.com/s/uwjSWtItFn2_Wfi570ThlQ 前言js逆向一直没有相关了解，虽然目前渗透遇见的不是很多，大多数遇见的要么不加密，要么无法实现其加密流程，不过最近看到了一个较为简单的站点正好能够逆向出...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"前端逆向","slug":"前端逆向","count":1,"path":"api/categories/前端逆向.json"}],"tags":[{"name":"JS","slug":"JS","count":1,"path":"api/tags/JS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">声明</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#JS%E5%AE%9A%E4%BD%8D\"><span class=\"toc-text\">JS定位</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%83%E7%B4%A0%E5%AE%A1%E6%9F%A5%E5%AE%9A%E4%BD%8D\"><span class=\"toc-text\">元素审查定位</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2%E6%B3%95\"><span class=\"toc-text\">全局搜索法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Onclick%E5%AE%9A%E4%BD%8D\"><span class=\"toc-text\">Onclick定位</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9F%90%E7%99%BB%E5%BD%95%E7%AB%99%E7%82%B9js%E9%80%86%E5%90%91\"><span class=\"toc-text\">某登录站点js逆向</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9F%90%E9%81%93js%E9%80%86%E5%90%91\"><span class=\"toc-text\">某道js逆向</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"内网渗透 | Kerberos协议及其部分攻击手法","uid":"72bf6b540e0d547f829840c591e595f8","slug":"Kerberos协议浅析","date":"2023-11-21T13:19:34.000Z","updated":"2024-02-14T08:24:02.000Z","comments":true,"path":"api/articles/Kerberos协议浅析.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141623710.jpeg","text":" 780cf0cc332a020e95e1fb72441b207585c88930c24e933554e9328496cc4ead53a32218c8e435331c1d3cd986c27223f7791998edeafa04179b730715c4a2c400b6bd38752...","link":"","photos":[],"count_time":{"symbolsCount":"147k","symbolsTime":"2:13"},"categories":[{"name":"内网","slug":"内网","count":12,"path":"api/categories/内网.json"}],"tags":[{"name":"内网","slug":"内网","count":13,"path":"api/tags/内网.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}